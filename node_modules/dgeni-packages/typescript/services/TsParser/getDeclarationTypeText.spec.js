"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var _1 = require(".");
var getDeclarationTypeText_1 = require("./getDeclarationTypeText");
var path = require('canonical-path');
describe('getDeclarationTypeText', function () {
    var parser;
    var basePath;
    beforeEach(function () {
        parser = new _1.TsParser(require('dgeni/lib/mocks/log')(false));
        basePath = path.resolve(__dirname, '../../mocks');
    });
    it('should return a textual representation of the type the declaration', function () {
        var parseInfo = parser.parse(['tsParser/getDeclarationTypeText.test.ts'], basePath);
        var moduleExports = parseInfo.moduleSymbols[0].exportArray;
        expect(getDeclarationTypeText_1.getDeclarationTypeText(moduleExports[0].getDeclarations()[0])).toEqual('42');
        var testFunction = moduleExports[1].getDeclarations()[0];
        expect(getDeclarationTypeText_1.getDeclarationTypeText(testFunction)).toEqual('number');
        expect(getDeclarationTypeText_1.getDeclarationTypeText(testFunction.parameters[0])).toEqual('T[]');
        expect(getDeclarationTypeText_1.getDeclarationTypeText(testFunction.typeParameters[0])).toEqual('T');
        var testClass = moduleExports[2];
        expect(getDeclarationTypeText_1.getDeclarationTypeText(testClass.members.get('property').getDeclarations()[0])).toEqual('T[]');
        expect(getDeclarationTypeText_1.getDeclarationTypeText(testClass.members.get('method').getDeclarations()[0])).toEqual('T');
    });
});
//# sourceMappingURL=getDeclarationTypeText.spec.js.map