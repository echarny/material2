import { Declaration, Symbol, TypeChecker } from 'typescript';
import { FileInfo } from '../services/TsParser/FileInfo';
import { ModuleDoc } from './ModuleDoc';
export interface ApiDoc {
    docType: string;
    name: string;
    id: string;
    aliases: string[];
    path: string;
    outputPath: string;
    content: string;
    symbol: Symbol;
    declaration: Declaration;
    fileInfo: FileInfo;
    startingLine: number;
    endingLine: number;
}
export declare abstract class BaseApiDoc implements ApiDoc {
    moduleDoc: ModuleDoc;
    symbol: Symbol;
    declaration: Declaration;
    aliasSymbol: Symbol | undefined;
    abstract docType: string;
    name: string;
    aliases: string[];
    id: string;
    basePath: string;
    fileInfo: FileInfo;
    startingLine: number;
    endingLine: number;
    content: string;
    path: string;
    outputPath: string;
    originalModule: any;
    typeChecker: TypeChecker;
    constructor(moduleDoc: ModuleDoc, symbol: Symbol, declaration: Declaration, aliasSymbol?: Symbol | undefined);
}
