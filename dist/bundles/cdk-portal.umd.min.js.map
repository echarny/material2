{"version":3,"file":"cdk-portal.umd.min.js","sources":["../../node_modules/tslib/tslib.es6.js","../../src/cdk/portal/portal-errors.ts","../../src/cdk/portal/portal.ts","../../src/cdk/portal/dom-portal-outlet.ts","../../src/cdk/portal/portal-directives.ts","../../src/cdk/portal/portal-injector.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n/**\r\n * Throws an exception when attempting to attach a null portal to a host.\r\n * @docs-private\r\n */\r\nexport function throwNullPortalError() {\r\n  throw Error('Must provide a portal to attach');\r\n}\r\n\r\n/**\r\n * Throws an exception when attempting to attach a portal to a host that is already attached.\r\n * @docs-private\r\n */\r\nexport function throwPortalAlreadyAttachedError() {\r\n  throw Error('Host already has a portal attached');\r\n}\r\n\r\n/**\r\n * Throws an exception when attempting to attach a portal to an already-disposed host.\r\n * @docs-private\r\n */\r\nexport function throwPortalOutletAlreadyDisposedError() {\r\n  throw Error('This PortalOutlet has already been disposed');\r\n}\r\n\r\n/**\r\n * Throws an exception when attempting to attach an unknown portal type.\r\n * @docs-private\r\n */\r\nexport function throwUnknownPortalTypeError() {\r\n  throw Error('Attempting to attach an unknown Portal type. BasePortalOutlet accepts either ' +\r\n              'a ComponentPortal or a TemplatePortal.');\r\n}\r\n\r\n/**\r\n * Throws an exception when attempting to attach a portal to a null host.\r\n * @docs-private\r\n */\r\nexport function throwNullPortalOutletError() {\r\n  throw Error('Attempting to attach a portal to a null PortalOutlet');\r\n}\r\n\r\n/**\r\n * Throws an exception when attempting to detach a portal that is not attached.\r\n * @docs-private\r\n */\r\nexport function throwNoPortalAttachedError() {\r\n  throw Error('Attempting to detach a portal that is not attached to a host');\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {\r\n    TemplateRef,\r\n    ViewContainerRef,\r\n    ElementRef,\r\n    ComponentRef,\r\n    EmbeddedViewRef,\r\n    Injector\r\n} from '@angular/core';\r\nimport {\r\n    throwNullPortalOutletError,\r\n    throwPortalAlreadyAttachedError,\r\n    throwNoPortalAttachedError,\r\n    throwNullPortalError,\r\n    throwPortalOutletAlreadyDisposedError,\r\n    throwUnknownPortalTypeError\r\n} from './portal-errors';\r\n\r\n/** Interface that can be used to generically type a class. */\r\nexport interface ComponentType<T> {\r\n  new (...args: any[]): T;\r\n}\r\n\r\n/**\r\n * A `Portal` is something that you want to render somewhere else.\r\n * It can be attach to / detached from a `PortalOutlet`.\r\n */\r\nexport abstract class Portal<T> {\r\n  private _attachedHost: PortalOutlet | null;\r\n\r\n  /** Attach this portal to a host. */\r\n  attach(host: PortalOutlet): T {\r\n    if (host == null) {\r\n      throwNullPortalOutletError();\r\n    }\r\n\r\n    if (host.hasAttached()) {\r\n      throwPortalAlreadyAttachedError();\r\n    }\r\n\r\n    this._attachedHost = host;\r\n    return <T> host.attach(this);\r\n  }\r\n\r\n  /** Detach this portal from its host */\r\n  detach(): void {\r\n    let host = this._attachedHost;\r\n\r\n    if (host == null) {\r\n      throwNoPortalAttachedError();\r\n    } else {\r\n      this._attachedHost = null;\r\n      host.detach();\r\n    }\r\n  }\r\n\r\n  /** Whether this portal is attached to a host. */\r\n  get isAttached(): boolean {\r\n    return this._attachedHost != null;\r\n  }\r\n\r\n  /**\r\n   * Sets the PortalOutlet reference without performing `attach()`. This is used directly by\r\n   * the PortalOutlet when it is performing an `attach()` or `detach()`.\r\n   */\r\n  setAttachedHost(host: PortalOutlet | null) {\r\n    this._attachedHost = host;\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * A `ComponentPortal` is a portal that instantiates some Component upon attachment.\r\n */\r\nexport class ComponentPortal<T> extends Portal<ComponentRef<T>> {\r\n  /** The type of the component that will be instantiated for attachment. */\r\n  component: ComponentType<T>;\r\n\r\n  /**\r\n   * [Optional] Where the attached component should live in Angular's *logical* component tree.\r\n   * This is different from where the component *renders*, which is determined by the PortalOutlet.\r\n   * The origin is necessary when the host is outside of the Angular application context.\r\n   */\r\n  viewContainerRef?: ViewContainerRef | null;\r\n\r\n  /** [Optional] Injector used for the instantiation of the component. */\r\n  injector?: Injector | null;\r\n\r\n  constructor(\r\n      component: ComponentType<T>,\r\n      viewContainerRef?: ViewContainerRef | null,\r\n      injector?: Injector | null) {\r\n    super();\r\n    this.component = component;\r\n    this.viewContainerRef = viewContainerRef;\r\n    this.injector = injector;\r\n  }\r\n}\r\n\r\n/**\r\n * A `TemplatePortal` is a portal that represents some embedded template (TemplateRef).\r\n */\r\nexport class TemplatePortal<C = any> extends Portal<C> {\r\n  /** The embedded template that will be used to instantiate an embedded View in the host. */\r\n  templateRef: TemplateRef<C>;\r\n\r\n  /** Reference to the ViewContainer into which the template will be stamped out. */\r\n  viewContainerRef: ViewContainerRef;\r\n\r\n  /** Contextual data to be passed in to the embedded view. */\r\n  context: C | undefined;\r\n\r\n  constructor(template: TemplateRef<C>, viewContainerRef: ViewContainerRef, context?: C) {\r\n    super();\r\n    this.templateRef = template;\r\n    this.viewContainerRef = viewContainerRef;\r\n    this.context = context;\r\n  }\r\n\r\n  get origin(): ElementRef {\r\n    return this.templateRef.elementRef;\r\n  }\r\n\r\n  /**\r\n   * Attach the the portal to the provided `PortalOutlet`.\r\n   * When a context is provided it will override the `context` property of the `TemplatePortal`\r\n   * instance.\r\n   */\r\n  attach(host: PortalOutlet, context: C | undefined = this.context): C {\r\n    this.context = context;\r\n    return super.attach(host);\r\n  }\r\n\r\n  detach(): void {\r\n    this.context = undefined;\r\n    return super.detach();\r\n  }\r\n}\r\n\r\n\r\n/** A `PortalOutlet` is an space that can contain a single `Portal`. */\r\nexport interface PortalOutlet {\r\n  /** Attaches a portal to this outlet. */\r\n  attach(portal: Portal<any>): any;\r\n\r\n  /** Detaches the currently attached portal from this outlet. */\r\n  detach(): any;\r\n\r\n  /** Performs cleanup before the outlet is destroyed. */\r\n  dispose(): void;\r\n\r\n  /** Whether there is currently a portal attached to this outlet. */\r\n  hasAttached(): boolean;\r\n}\r\n\r\n\r\n/**\r\n * Partial implementation of PortalOutlet that handles attaching\r\n * ComponentPortal and TemplatePortal.\r\n */\r\nexport abstract class BasePortalOutlet implements PortalOutlet {\r\n  /** The portal currently attached to the host. */\r\n  protected _attachedPortal: Portal<any> | null;\r\n\r\n  /** A function that will permanently dispose this host. */\r\n  private _disposeFn: (() => void) | null;\r\n\r\n  /** Whether this host has already been permanently disposed. */\r\n  private _isDisposed: boolean = false;\r\n\r\n  /** Whether this host has an attached portal. */\r\n  hasAttached(): boolean {\r\n    return !!this._attachedPortal;\r\n  }\r\n\r\n  attach<T>(portal: ComponentPortal<T>): ComponentRef<T>;\r\n  attach<T>(portal: TemplatePortal<T>): EmbeddedViewRef<T>;\r\n  attach(portal: any): any;\r\n\r\n  /** Attaches a portal. */\r\n  attach(portal: Portal<any>): any {\r\n    if (!portal) {\r\n      throwNullPortalError();\r\n    }\r\n\r\n    if (this.hasAttached()) {\r\n      throwPortalAlreadyAttachedError();\r\n    }\r\n\r\n    if (this._isDisposed) {\r\n      throwPortalOutletAlreadyDisposedError();\r\n    }\r\n\r\n    if (portal instanceof ComponentPortal) {\r\n      this._attachedPortal = portal;\r\n      return this.attachComponentPortal(portal);\r\n    } else if (portal instanceof TemplatePortal) {\r\n      this._attachedPortal = portal;\r\n      return this.attachTemplatePortal(portal);\r\n    }\r\n\r\n    throwUnknownPortalTypeError();\r\n  }\r\n\r\n  abstract attachComponentPortal<T>(portal: ComponentPortal<T>): ComponentRef<T>;\r\n\r\n  abstract attachTemplatePortal<C>(portal: TemplatePortal<C>): EmbeddedViewRef<C>;\r\n\r\n  /** Detaches a previously attached portal. */\r\n  detach(): void {\r\n    if (this._attachedPortal) {\r\n      this._attachedPortal.setAttachedHost(null);\r\n      this._attachedPortal = null;\r\n    }\r\n\r\n    this._invokeDisposeFn();\r\n  }\r\n\r\n  /** Permanently dispose of this portal host. */\r\n  dispose(): void {\r\n    if (this.hasAttached()) {\r\n      this.detach();\r\n    }\r\n\r\n    this._invokeDisposeFn();\r\n    this._isDisposed = true;\r\n  }\r\n\r\n  /** @docs-private */\r\n  setDisposeFn(fn: () => void) {\r\n    this._disposeFn = fn;\r\n  }\r\n\r\n  private _invokeDisposeFn() {\r\n    if (this._disposeFn) {\r\n      this._disposeFn();\r\n      this._disposeFn = null;\r\n    }\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {\r\n  ComponentFactoryResolver,\r\n  ComponentRef,\r\n  EmbeddedViewRef,\r\n  ApplicationRef,\r\n  Injector,\r\n} from '@angular/core';\r\nimport {BasePortalOutlet, ComponentPortal, TemplatePortal} from './portal';\r\n\r\n\r\n/**\r\n * A PortalOutlet for attaching portals to an arbitrary DOM element outside of the Angular\r\n * application context.\r\n */\r\nexport class DomPortalOutlet extends BasePortalOutlet {\r\n  constructor(\r\n      /** Element into which the content is projected. */\r\n      public outletElement: Element,\r\n      private _componentFactoryResolver: ComponentFactoryResolver,\r\n      private _appRef: ApplicationRef,\r\n      private _defaultInjector: Injector) {\r\n    super();\r\n  }\r\n\r\n  /**\r\n   * Attach the given ComponentPortal to DOM element using the ComponentFactoryResolver.\r\n   * @param portal Portal to be attached\r\n   * @returns Reference to the created component.\r\n   */\r\n  attachComponentPortal<T>(portal: ComponentPortal<T>): ComponentRef<T> {\r\n    let componentFactory = this._componentFactoryResolver.resolveComponentFactory(portal.component);\r\n    let componentRef: ComponentRef<T>;\r\n\r\n    // If the portal specifies a ViewContainerRef, we will use that as the attachment point\r\n    // for the component (in terms of Angular's component tree, not rendering).\r\n    // When the ViewContainerRef is missing, we use the factory to create the component directly\r\n    // and then manually attach the view to the application.\r\n    if (portal.viewContainerRef) {\r\n      componentRef = portal.viewContainerRef.createComponent(\r\n          componentFactory,\r\n          portal.viewContainerRef.length,\r\n          portal.injector || portal.viewContainerRef.parentInjector);\r\n\r\n      this.setDisposeFn(() => componentRef.destroy());\r\n    } else {\r\n      componentRef = componentFactory.create(portal.injector || this._defaultInjector);\r\n      this._appRef.attachView(componentRef.hostView);\r\n      this.setDisposeFn(() => {\r\n        this._appRef.detachView(componentRef.hostView);\r\n        componentRef.destroy();\r\n      });\r\n    }\r\n    // At this point the component has been instantiated, so we move it to the location in the DOM\r\n    // where we want it to be rendered.\r\n    this.outletElement.appendChild(this._getComponentRootNode(componentRef));\r\n\r\n    return componentRef;\r\n  }\r\n\r\n  /**\r\n   * Attaches a template portal to the DOM as an embedded view.\r\n   * @param portal Portal to be attached.\r\n   * @returns Reference to the created embedded view.\r\n   */\r\n  attachTemplatePortal<C>(portal: TemplatePortal<C>): EmbeddedViewRef<C> {\r\n    let viewContainer = portal.viewContainerRef;\r\n    let viewRef = viewContainer.createEmbeddedView(portal.templateRef, portal.context);\r\n    viewRef.detectChanges();\r\n\r\n    // The method `createEmbeddedView` will add the view as a child of the viewContainer.\r\n    // But for the DomPortalOutlet the view can be added everywhere in the DOM\r\n    // (e.g Overlay Container) To move the view to the specified host element. We just\r\n    // re-append the existing root nodes.\r\n    viewRef.rootNodes.forEach(rootNode => this.outletElement.appendChild(rootNode));\r\n\r\n    this.setDisposeFn((() => {\r\n      let index = viewContainer.indexOf(viewRef);\r\n      if (index !== -1) {\r\n        viewContainer.remove(index);\r\n      }\r\n    }));\r\n\r\n    // TODO(jelbourn): Return locals from view.\r\n    return viewRef;\r\n  }\r\n\r\n  /**\r\n   * Clears out a portal from the DOM.\r\n   */\r\n  dispose(): void {\r\n    super.dispose();\r\n    if (this.outletElement.parentNode != null) {\r\n      this.outletElement.parentNode.removeChild(this.outletElement);\r\n    }\r\n  }\r\n\r\n  /** Gets the root HTMLElement for an instantiated component. */\r\n  private _getComponentRootNode(componentRef: ComponentRef<any>): HTMLElement {\r\n    return (componentRef.hostView as EmbeddedViewRef<any>).rootNodes[0] as HTMLElement;\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {\r\n  ComponentFactoryResolver,\r\n  ComponentRef,\r\n  Directive,\r\n  EmbeddedViewRef,\r\n  EventEmitter,\r\n  NgModule,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  TemplateRef,\r\n  ViewContainerRef,\r\n} from '@angular/core';\r\nimport {BasePortalOutlet, ComponentPortal, Portal, TemplatePortal} from './portal';\r\n\r\n\r\n/**\r\n * Directive version of a `TemplatePortal`. Because the directive *is* a TemplatePortal,\r\n * the directive instance itself can be attached to a host, enabling declarative use of portals.\r\n */\r\n@Directive({\r\n  selector: '[cdk-portal], [cdkPortal], [portal]',\r\n  exportAs: 'cdkPortal',\r\n})\r\nexport class CdkPortal extends TemplatePortal {\r\n  constructor(templateRef: TemplateRef<any>, viewContainerRef: ViewContainerRef) {\r\n    super(templateRef, viewContainerRef);\r\n  }\r\n}\r\n\r\n/**\r\n * Possible attached references to the CdkPortalOutlet.\r\n */\r\nexport type CdkPortalOutletAttachedRef = ComponentRef<any> | EmbeddedViewRef<any> | null;\r\n\r\n\r\n/**\r\n * Directive version of a PortalOutlet. Because the directive *is* a PortalOutlet, portals can be\r\n * directly attached to it, enabling declarative use.\r\n *\r\n * Usage:\r\n * `<ng-template [cdkPortalOutlet]=\"greeting\"></ng-template>`\r\n */\r\n@Directive({\r\n  selector: '[cdkPortalOutlet], [cdkPortalHost], [portalHost]',\r\n  exportAs: 'cdkPortalOutlet, cdkPortalHost',\r\n  inputs: ['portal: cdkPortalOutlet']\r\n})\r\nexport class CdkPortalOutlet extends BasePortalOutlet implements OnInit, OnDestroy {\r\n  /** Whether the portal component is initialized. */\r\n  private _isInitialized = false;\r\n\r\n  /** Reference to the currently-attached component/view ref. */\r\n  private _attachedRef: CdkPortalOutletAttachedRef;\r\n\r\n  constructor(\r\n      private _componentFactoryResolver: ComponentFactoryResolver,\r\n      private _viewContainerRef: ViewContainerRef) {\r\n    super();\r\n  }\r\n\r\n  /** Portal associated with the Portal outlet. */\r\n  get portal(): Portal<any> | null {\r\n    return this._attachedPortal;\r\n  }\r\n\r\n  set portal(portal: Portal<any> | null) {\r\n    // Ignore the cases where the `portal` is set to a falsy value before the lifecycle hooks have\r\n    // run. This handles the cases where the user might do something like `<div cdkPortalOutlet>`\r\n    // and attach a portal programmatically in the parent component. When Angular does the first CD\r\n    // round, it will fire the setter with empty string, causing the user's content to be cleared.\r\n    if (this.hasAttached() && !portal && !this._isInitialized) {\r\n      return;\r\n    }\r\n\r\n    if (this.hasAttached()) {\r\n      super.detach();\r\n    }\r\n\r\n    if (portal) {\r\n      super.attach(portal);\r\n    }\r\n\r\n    this._attachedPortal = portal;\r\n  }\r\n\r\n  @Output() attached: EventEmitter<CdkPortalOutletAttachedRef> =\r\n      new EventEmitter<CdkPortalOutletAttachedRef>();\r\n\r\n  /** Component or view reference that is attached to the portal. */\r\n  get attachedRef(): CdkPortalOutletAttachedRef {\r\n    return this._attachedRef;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this._isInitialized = true;\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    super.dispose();\r\n    this._attachedPortal = null;\r\n    this._attachedRef = null;\r\n  }\r\n\r\n  /**\r\n   * Attach the given ComponentPortal to this PortalOutlet using the ComponentFactoryResolver.\r\n   *\r\n   * @param portal Portal to be attached to the portal outlet.\r\n   * @returns Reference to the created component.\r\n   */\r\n  attachComponentPortal<T>(portal: ComponentPortal<T>): ComponentRef<T> {\r\n    portal.setAttachedHost(this);\r\n\r\n    // If the portal specifies an origin, use that as the logical location of the component\r\n    // in the application tree. Otherwise use the location of this PortalOutlet.\r\n    const viewContainerRef = portal.viewContainerRef != null ?\r\n        portal.viewContainerRef :\r\n        this._viewContainerRef;\r\n\r\n    const componentFactory =\r\n        this._componentFactoryResolver.resolveComponentFactory(portal.component);\r\n    const ref = viewContainerRef.createComponent(\r\n        componentFactory, viewContainerRef.length,\r\n        portal.injector || viewContainerRef.parentInjector);\r\n\r\n    super.setDisposeFn(() => ref.destroy());\r\n    this._attachedPortal = portal;\r\n    this._attachedRef = ref;\r\n    this.attached.emit(ref);\r\n\r\n    return ref;\r\n  }\r\n\r\n  /**\r\n   * Attach the given TemplatePortal to this PortlHost as an embedded View.\r\n   * @param portal Portal to be attached.\r\n   * @returns Reference to the created embedded view.\r\n   */\r\n  attachTemplatePortal<C>(portal: TemplatePortal<C>): EmbeddedViewRef<C> {\r\n    portal.setAttachedHost(this);\r\n    const viewRef = this._viewContainerRef.createEmbeddedView(portal.templateRef, portal.context);\r\n    super.setDisposeFn(() => this._viewContainerRef.clear());\r\n\r\n    this._attachedPortal = portal;\r\n    this._attachedRef = viewRef;\r\n    this.attached.emit(viewRef);\r\n\r\n    return viewRef;\r\n  }\r\n}\r\n\r\n\r\n@NgModule({\r\n  exports: [CdkPortal, CdkPortalOutlet],\r\n  declarations: [CdkPortal, CdkPortalOutlet],\r\n})\r\nexport class PortalModule {}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {Injector} from '@angular/core';\r\n\r\n/**\r\n * Custom injector to be used when providing custom\r\n * injection tokens to components inside a portal.\r\n * @docs-private\r\n */\r\nexport class PortalInjector implements Injector {\r\n  constructor(\r\n    private _parentInjector: Injector,\r\n    private _customTokens: WeakMap<any, any>) { }\r\n\r\n  get(token: any, notFoundValue?: any): any {\r\n    const value = this._customTokens.get(token);\r\n\r\n    if (typeof value !== 'undefined') {\r\n      return value;\r\n    }\r\n\r\n    return this._parentInjector.get<any>(token, notFoundValue);\r\n  }\r\n}\r\n"],"names":["__extends","d","b","__","this","constructor","extendStatics","prototype","Object","create","throwNullPortalError","Error","throwPortalAlreadyAttachedError","throwPortalOutletAlreadyDisposedError","throwUnknownPortalTypeError","throwNullPortalOutletError","throwNoPortalAttachedError","setPrototypeOf","__proto__","Array","p","hasOwnProperty","Portal","attach","host","hasAttached","_attachedHost","detach","defineProperty","setAttachedHost","ComponentPortal","_super","component","viewContainerRef","injector","_this","call","tslib_1.__extends","TemplatePortal","template","context","templateRef","elementRef","undefined","BasePortalOutlet","_isDisposed","_attachedPortal","portal","attachComponentPortal","attachTemplatePortal","_invokeDisposeFn","dispose","setDisposeFn","fn","_disposeFn","DomPortalOutlet","outletElement","_componentFactoryResolver","_appRef","_defaultInjector","componentRef","componentFactory","resolveComponentFactory","createComponent","length","parentInjector","destroy","attachView","hostView","detachView","appendChild","_getComponentRootNode","viewContainer","viewRef","createEmbeddedView","detectChanges","rootNodes","forEach","rootNode","index","indexOf","remove","parentNode","removeChild","CdkPortal","type","Directive","args","selector","exportAs","TemplateRef","ViewContainerRef","CdkPortalOutlet","_viewContainerRef","_isInitialized","attached","EventEmitter","_attachedRef","ngOnInit","ngOnDestroy","ref","emit","clear","inputs","ComponentFactoryResolver","Output","PortalModule","NgModule","exports","declarations","PortalInjector","_parentInjector","_customTokens","get","token","notFoundValue","value"],"mappings":";;;;;;;gTAuBA,SAAgBA,GAAUC,EAAGC,GAEzB,QAASC,KAAOC,KAAKC,YAAcJ,EADnCK,EAAcL,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAaM,OAAOC,OAAOP,IAAMC,EAAGI,UAAYL,EAAEK,UAAW,GAAIJ,ICdnF,QAAAO,KACE,KAAMC,OAAM,mCAOd,QAAAC,KACE,KAAMD,OAAM,sCAOd,QAAAE,KACE,KAAMF,OAAM,+CAOd,QAAAG,KACE,KAAMH,OAAM,uHAQd,QAAAI,KACE,KAAMJ,OAAM,wDAOd,QAAAK,KACE,KAAML,OAAM,gEDtCd,GAAIL,GAAgB,SAASL,EAAGC,GAI5B,OAHAI,EAAgBE,OAAOS,iBAChBC,uBAA2BC,QAAS,SAAUlB,EAAGC,GAAKD,EAAEiB,UAAYhB,IACvE,SAAUD,EAAGC,GAAK,IAAK,GAAIkB,KAAKlB,GAAOA,EAAEmB,eAAeD,KAAInB,EAAEmB,GAAKlB,EAAEkB,MACpDnB,EAAGC,IEc5BoB,EAAA,yBAlCA,MAsCEA,GAAFf,UAAAgB,OAAE,SAAOC,GAUL,MATY,OAARA,GACFT,IAGES,EAAKC,eACPb,IAGFR,KAAKsB,cAAgBF,EACVA,EAAKD,OAAOnB,OAIzBkB,EAAFf,UAAAoB,OAAE,WACE,GAAIH,GAAOpB,KAAKsB,aAEJ,OAARF,EACFR,KAEAZ,KAAKsB,cAAgB,KACrBF,EAAKG,WAKTnB,OAAFoB,eAAMN,EAANf,UAAA,kBAAE,WACE,MAA6B,OAAtBH,KAAKsB,+CAOdJ,EAAFf,UAAAsB,gBAAE,SAAgBL,GACdpB,KAAKsB,cAAgBF,GAzEzBF,KAiFAQ,EAAA,SAAAC,GAcE,QAAFD,GACME,EACAC,EACAC,GAHJ,GAAFC,GAIIJ,EAJJK,KAAAhC,OAAAA,WAKI+B,GAAKH,UAAYA,EACjBG,EAAKF,iBAAmBA,EACxBE,EAAKD,SAAWA,IAtGpB,MAiFwCG,GAAxCP,EAAAC,GAjFAD,GAiFwCR,GA4BxCgB,EAAA,SAAAP,GAUE,QAAFO,GAAcC,EAA0BN,EAAoCO,GAA1E,GAAFL,GACIJ,EADJK,KAAAhC,OAAAA,WAEI+B,GAAKM,YAAcF,EACnBJ,EAAKF,iBAAmBA,EACxBE,EAAKK,QAAUA,IA3HnB,MA6G6CH,GAA7CC,EAAAP,GAiBEvB,OAAFoB,eAAMU,EAAN/B,UAAA,cAAE,WACE,MAAOH,MAAKqC,YAAYC,4CAQ1BJ,EAAF/B,UAAAgB,OAAE,SAAOC,EAAoBgB,GAEzB,WAFJ,KAAAA,IAA6BA,EAAyBpC,KAAKoC,SACvDpC,KAAKoC,QAAUA,EACRT,EAAXxB,UAAiBgB,OAAjBa,KAAAhC,KAAwBoB,IAGtBc,EAAF/B,UAAAoB,OAAE,WAEE,MADAvB,MAAKoC,YAAUG,GACRZ,EAAXxB,UAAiBoB,OAAjBS,KAAAhC,OA9IAkC,GA6G6ChB,GA0D7CsB,EAAA,wBAQAxC,KAAAyC,aAAiC,EA/KjC,MAkLED,GAAFrC,UAAAkB,YAAE,WACE,QAASrB,KAAK0C,iBAQhBF,EAAFrC,UAAAgB,OAAE,SAAOwB,GAaL,MAZKA,IACHrC,IAGEN,KAAKqB,eACPb,IAGER,KAAKyC,aACPhC,IAGEkC,YAAkBjB,IACpB1B,KAAK0C,gBAAkBC,EAChB3C,KAAK4C,sBAAsBD,IACzBA,YAAkBT,IAC3BlC,KAAK0C,gBAAkBC,EAChB3C,KAAK6C,qBAAqBF,QAGnCjC,MAQF8B,EAAFrC,UAAAoB,OAAE,WACMvB,KAAK0C,kBACP1C,KAAK0C,gBAAgBjB,gBAAgB,MACrCzB,KAAK0C,gBAAkB,MAGzB1C,KAAK8C,oBAIPN,EAAFrC,UAAA4C,QAAE,WACM/C,KAAKqB,eACPrB,KAAKuB,SAGPvB,KAAK8C,mBACL9C,KAAKyC,aAAc,GAIrBD,EAAFrC,UAAA6C,aAAE,SAAaC,GACXjD,KAAKkD,WAAaD,GAGZT,EAAVrC,UAAA2C,4BACQ9C,KAAKkD,aACPlD,KAAKkD,aACLlD,KAAKkD,WAAa,OAnPxBV,KCsBAW,EAAA,SAAAxB,GACE,QAAFwB,GAEaC,EACCC,EACAC,EACAC,GALZ,GAAFxB,GAMIJ,EANJK,KAAAhC,OAAAA,WAEa+B,GAAbqB,cAAaA,EACCrB,EAAdsB,0BAAcA,EACAtB,EAAduB,QAAcA,EACAvB,EAAdwB,iBAAcA,IA5Bd,MAsBqCtB,GAArCkB,EAAAxB,GAeEwB,EAAFhD,UAAAyC,sBAAE,SAAyBD,GAAzB,GAEMa,GAFRzB,EAAA/B,KACQyD,EAAmBzD,KAAKqD,0BAA0BK,wBAAwBf,EAAOf,UA0BrF,OAnBIe,GAAOd,kBACT2B,EAAeb,EAAOd,iBAAiB8B,gBACnCF,EACAd,EAAOd,iBAAiB+B,OACxBjB,EAAOb,UAAYa,EAAOd,iBAAiBgC,gBAE/C7D,KAAKgD,aAAa,WAAM,MAAAQ,GAAaM,cAErCN,EAAeC,EAAiBpD,OAAOsC,EAAOb,UAAY9B,KAAKuD,kBAC/DvD,KAAKsD,QAAQS,WAAWP,EAAaQ,UACrChE,KAAKgD,aAAa,WAChBjB,EAAKuB,QAAQW,WAAWT,EAAaQ,UACrCR,EAAaM,aAKjB9D,KAAKoD,cAAcc,YAAYlE,KAAKmE,sBAAsBX,IAEnDA,GAQTL,EAAFhD,UAAA0C,qBAAE,SAAwBF,GAAxB,GAAFZ,GAAA/B,KACQoE,EAAgBzB,EAAOd,iBACvBwC,EAAUD,EAAcE,mBAAmB3B,EAAON,YAAaM,EAAOP,QAiB1E,OAhBAiC,GAAQE,gBAMRF,EAAQG,UAAUC,QAAQ,SAAAC,GAAY,MAAA3C,GAAKqB,cAAcc,YAAYQ,KAErE1E,KAAKgD,aAAY,WACf,GAAI2B,GAAQP,EAAcQ,QAAQP,IACnB,IAAXM,GACFP,EAAcS,OAAOF,KAKlBN,GAMTlB,EAAFhD,UAAA4C,QAAE,WACEpB,EAAJxB,UAAU4C,QAAVf,KAAAhC,MACyC,MAAjCA,KAAKoD,cAAc0B,YACrB9E,KAAKoD,cAAc0B,WAAWC,YAAY/E,KAAKoD,gBAK3CD,EAAVhD,UAAAgE,sBAAA,SAAgCX,GAC5B,MAAQA,GAA6C,SAAEgB,UAAU,IA1GrErB,GAsBqCX,iBCWnC,QAAFwC,GAAc3C,EAA+BR,GAC7C,MAAIF,GAAJK,KAAAhC,KAAUqC,EAAaR,IAAvB7B,KAlCA,MAgC+BiC,GAA/B+C,EAAArD,kBAJAsD,KAACC,EAAAA,UAADC,OACEC,SAAU,sCACVC,SAAU,oDAZZJ,KAAEK,EAAAA,cACFL,KAAEM,EAAAA,oBAnBFP,GAgC+B9C,iBA+B7B,QAAFsD,GACcnC,EACAoC,GAFZ,GAAF1D,GAGIJ,EAHJK,KAAAhC,OAAAA,WACc+B,GAAdsB,0BAAcA,EACAtB,EAAd0D,kBAAcA,EAPd1D,EAAA2D,gBAA2B,EAqC3B3D,EAAA4D,SAAM,GAAIC,GAAAA,eA/FV,MAwDqC3D,GAArCuD,EAAA7D,GAcEvB,OAAFoB,eAAMgE,EAANrF,UAAA,cAAE,WACE,MAAOH,MAAK0C,qBAGd,SAAWC,KAKL3C,KAAKqB,eAAkBsB,GAAW3C,KAAK0F,kBAIvC1F,KAAKqB,eACPM,EAANxB,UAAYoB,OAAZS,KAAAhC,MAGQ2C,GACFhB,EAANxB,UAAYgB,OAAZa,KAAAhC,KAAmB2C,GAGf3C,KAAK0C,gBAAkBC,oCAOzBvC,OAAFoB,eAAMgE,EAANrF,UAAA,mBAAE,WACE,MAAOH,MAAK6F,8CAGdL,EAAFrF,UAAA2F,SAAE,WACE9F,KAAK0F,gBAAiB,GAGxBF,EAAFrF,UAAA4F,YAAE,WACEpE,EAAJxB,UAAU4C,QAAVf,KAAAhC,MACIA,KAAK0C,gBAAkB,KACvB1C,KAAK6F,aAAe,MAStBL,EAAFrF,UAAAyC,sBAAE,SAAyBD,GACvBA,EAAOlB,gBAAgBzB,KAIvB,IAAM6B,GAA8C,MAA3Bc,EAAOd,iBAC5Bc,EAAOd,iBACP7B,KAAKyF,kBAEHhC,EACFzD,KAAKqD,0BAA0BK,wBAAwBf,EAAOf,WAC5DoE,EAAMnE,EAAiB8B,gBACzBF,EAAkB5B,EAAiB+B,OACnCjB,EAAOb,UAAYD,EAAiBgC,eAOxC,OALAlC,GAAJxB,UAAU6C,aAAVhB,KAAAhC,KAAuB,WAAM,MAAAgG,GAAIlC,YAC7B9D,KAAK0C,gBAAkBC,EACvB3C,KAAK6F,aAAeG,EACpBhG,KAAK2F,SAASM,KAAKD,GAEZA,GAQTR,EAAFrF,UAAA0C,qBAAE,SAAwBF,GAAxB,GAAFZ,GAAA/B,IACI2C,GAAOlB,gBAAgBzB,KACvB,IAAMqE,GAAUrE,KAAKyF,kBAAkBnB,mBAAmB3B,EAAON,YAAaM,EAAOP,QAOrF,OANAT,GAAJxB,UAAU6C,aAAVhB,KAAAhC,KAAuB,WAAM,MAAA+B,GAAK0D,kBAAkBS,UAEhDlG,KAAK0C,gBAAkBC,EACvB3C,KAAK6F,aAAexB,EACpBrE,KAAK2F,SAASM,KAAK5B,GAEZA,kBAxGXY,KAACC,EAAAA,UAADC,OACEC,SAAU,mDACVC,SAAU,iCACVc,QAAS,mEA7CXlB,KAAEmB,EAAAA,2BAUFnB,KAAEM,EAAAA,sCA2EFI,WAAAV,KAAGoB,EAAAA,UA9FHb,GAwDqChD,GAArC8D,EAAA,yBAxDA,sBAgKArB,KAACsB,EAAAA,SAADpB,OACEqB,SAAUxB,EAAWQ,GACrBiB,cAAezB,EAAWQ,OAlK5Bc,KCeAI,EAAA,WACE,QAAFA,GACYC,EACAC,GADA5G,KAAZ2G,gBAAYA,EACA3G,KAAZ4G,cAAYA,EAlBZ,MAoBEF,GAAFvG,UAAA0G,IAAE,SAAIC,EAAYC,GACd,GAAMC,GAAQhH,KAAK4G,cAAcC,IAAIC,EAErC,YAAqB,KAAVE,EACFA,EAGFhH,KAAK2G,gBAAgBE,IAASC,EAAOC,IA3BhDL"}