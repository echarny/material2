{"version":3,"file":"core.js","sources":["../../../src/lib/core/testing/month-constants.ts","../../../src/lib/core/label/label-options.ts","../../../src/lib/core/option/index.ts","../../../src/lib/core/option/option.ts","../../../src/lib/core/option/optgroup.ts","../../../src/lib/core/selection/index.ts","../../../src/lib/core/selection/pseudo-checkbox/pseudo-checkbox.ts","../../../src/lib/core/ripple/index.ts","../../../src/lib/core/ripple/ripple.ts","../../../src/lib/core/ripple/ripple-renderer.ts","../../../src/lib/core/ripple/ripple-ref.ts","../../../src/lib/core/line/line.ts","../../../src/lib/core/gestures/gesture-config.ts","../../../src/lib/core/error/error-options.ts","../../../src/lib/core/datetime/index.ts","../../../src/lib/core/datetime/native-date-formats.ts","../../../src/lib/core/datetime/native-date-adapter.ts","../../../src/lib/core/datetime/date-formats.ts","../../../src/lib/core/datetime/date-adapter.ts","../../../src/lib/core/common-behaviors/initialized.ts","../../../src/lib/core/common-behaviors/error-state.ts","../../../src/lib/core/common-behaviors/tabindex.ts","../../../src/lib/core/common-behaviors/disable-ripple.ts","../../../src/lib/core/common-behaviors/color.ts","../../../src/lib/core/common-behaviors/disabled.ts","../../../src/lib/core/common-behaviors/common-module.ts","../../../src/lib/core/animation/animation.ts"],"sourcesContent":["/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n/**\r\n * When constructing a Date, the month is zero-based. This can be confusing, since people are\r\n * used to seeing them one-based. So we create these aliases to make writing the tests easier.\r\n */\r\nexport const JAN = 0, FEB = 1, MAR = 2, APR = 3, MAY = 4, JUN = 5, JUL = 6, AUG = 7, SEP = 8,\r\n    OCT = 9, NOV = 10, DEC = 11;\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {InjectionToken} from '@angular/core';\r\n\r\n/** InjectionToken that can be used to specify the global label options. */\r\nexport const MAT_LABEL_GLOBAL_OPTIONS =\r\n  new InjectionToken<LabelOptions>('mat-label-global-options');\r\n\r\n/** Type for the available floatLabel values. */\r\nexport type FloatLabelType = 'always' | 'never' | 'auto';\r\n\r\n/** Configurable options for floating labels. */\r\nexport interface LabelOptions {\r\n  /**\r\n   * Whether the label should float `always`, `never`, or `auto` (only when necessary).\r\n   * Default behavior is assumed to be `auto`.\r\n   */\r\n  float?: FloatLabelType;\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {MatRippleModule} from '../ripple/index';\r\nimport {MatPseudoCheckboxModule} from '../selection/index';\r\nimport {MatOption} from './option';\r\nimport {MatOptgroup} from './optgroup';\r\n\r\n\r\n@NgModule({\r\n  imports: [MatRippleModule, CommonModule, MatPseudoCheckboxModule],\r\n  exports: [MatOption, MatOptgroup],\r\n  declarations: [MatOption, MatOptgroup]\r\n})\r\nexport class MatOptionModule {}\r\n\r\n\r\nexport * from './option';\r\nexport * from './optgroup';\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\r\nimport {ENTER, SPACE} from '@angular/cdk/keycodes';\r\nimport {\r\n  AfterViewChecked,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Inject,\r\n  InjectionToken,\r\n  Input,\r\n  OnDestroy,\r\n  Optional,\r\n  Output,\r\n  QueryList,\r\n  ViewEncapsulation,\r\n} from '@angular/core';\r\nimport {Subject} from 'rxjs';\r\nimport {MatOptgroup} from './optgroup';\r\n\r\n/**\r\n * Option IDs need to be unique across components, so this counter exists outside of\r\n * the component definition.\r\n */\r\nlet _uniqueIdCounter = 0;\r\n\r\n/** Event object emitted by MatOption when selected or deselected. */\r\nexport class MatOptionSelectionChange {\r\n  constructor(\r\n    /** Reference to the option that emitted the event. */\r\n    public source: MatOption,\r\n    /** Whether the change in the option's value was a result of a user action. */\r\n    public isUserInput = false) { }\r\n}\r\n\r\n/**\r\n * Describes a parent component that manages a list of options.\r\n * Contains properties that the options can inherit.\r\n * @docs-private\r\n */\r\nexport interface MatOptionParentComponent {\r\n  disableRipple?: boolean;\r\n  multiple?: boolean;\r\n}\r\n\r\n/**\r\n * Injection token used to provide the parent component to options.\r\n */\r\nexport const MAT_OPTION_PARENT_COMPONENT =\r\n    new InjectionToken<MatOptionParentComponent>('MAT_OPTION_PARENT_COMPONENT');\r\n\r\n/**\r\n * Single option inside of a `<mat-select>` element.\r\n */\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'mat-option',\r\n  exportAs: 'matOption',\r\n  host: {\r\n    'role': 'option',\r\n    '[attr.tabindex]': '_getTabIndex()',\r\n    '[class.mat-selected]': 'selected',\r\n    '[class.mat-option-multiple]': 'multiple',\r\n    '[class.mat-active]': 'active',\r\n    '[id]': 'id',\r\n    '[attr.aria-selected]': 'selected.toString()',\r\n    '[attr.aria-disabled]': 'disabled.toString()',\r\n    '[class.mat-option-disabled]': 'disabled',\r\n    '(click)': '_selectViaInteraction()',\r\n    '(keydown)': '_handleKeydown($event)',\r\n    'class': 'mat-option',\r\n  },\r\n  styleUrls: ['option.css'],\r\n  templateUrl: 'option.html',\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MatOption implements AfterViewChecked, OnDestroy {\r\n  private _selected = false;\r\n  private _active = false;\r\n  private _disabled = false;\r\n  private _id = `mat-option-${_uniqueIdCounter++}`;\r\n  private _mostRecentViewValue = '';\r\n\r\n  /** Whether the wrapping component is in multiple selection mode. */\r\n  get multiple() { return this._parent && this._parent.multiple; }\r\n\r\n  /** The unique ID of the option. */\r\n  get id(): string { return this._id; }\r\n\r\n  /** Whether or not the option is currently selected. */\r\n  get selected(): boolean { return this._selected; }\r\n\r\n  /** The form value of the option. */\r\n  @Input() value: any;\r\n\r\n  /** Whether the option is disabled. */\r\n  @Input()\r\n  get disabled() { return (this.group && this.group.disabled) || this._disabled; }\r\n  set disabled(value: any) { this._disabled = coerceBooleanProperty(value); }\r\n\r\n  /** Whether ripples for the option are disabled. */\r\n  get disableRipple() { return this._parent && this._parent.disableRipple; }\r\n\r\n  /** Event emitted when the option is selected or deselected. */\r\n  // tslint:disable-next-line:no-output-on-prefix\r\n  @Output() readonly onSelectionChange = new EventEmitter<MatOptionSelectionChange>();\r\n\r\n  /** Emits when the state of the option changes and any parents have to be notified. */\r\n  readonly _stateChanges = new Subject<void>();\r\n\r\n  constructor(\r\n    private _element: ElementRef,\r\n    private _changeDetectorRef: ChangeDetectorRef,\r\n    @Optional() @Inject(MAT_OPTION_PARENT_COMPONENT) private _parent: MatOptionParentComponent,\r\n    @Optional() readonly group: MatOptgroup) {}\r\n\r\n  /**\r\n   * Whether or not the option is currently active and ready to be selected.\r\n   * An active option displays styles as if it is focused, but the\r\n   * focus is actually retained somewhere else. This comes in handy\r\n   * for components like autocomplete where focus must remain on the input.\r\n   */\r\n  get active(): boolean {\r\n    return this._active;\r\n  }\r\n\r\n  /**\r\n   * The displayed value of the option. It is necessary to show the selected option in the\r\n   * select's trigger.\r\n   */\r\n  get viewValue(): string {\r\n    // TODO(kara): Add input property alternative for node envs.\r\n    return (this._getHostElement().textContent || '').trim();\r\n  }\r\n\r\n  /** Selects the option. */\r\n  select(): void {\r\n    if (!this._selected) {\r\n      this._selected = true;\r\n      this._changeDetectorRef.markForCheck();\r\n      this._emitSelectionChangeEvent();\r\n    }\r\n  }\r\n\r\n  /** Deselects the option. */\r\n  deselect(): void {\r\n    if (this._selected) {\r\n      this._selected = false;\r\n      this._changeDetectorRef.markForCheck();\r\n      this._emitSelectionChangeEvent();\r\n    }\r\n  }\r\n\r\n  /** Sets focus onto this option. */\r\n  focus(): void {\r\n    const element = this._getHostElement();\r\n\r\n    if (typeof element.focus === 'function') {\r\n      element.focus();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This method sets display styles on the option to make it appear\r\n   * active. This is used by the ActiveDescendantKeyManager so key\r\n   * events will display the proper options as active on arrow key events.\r\n   */\r\n  setActiveStyles(): void {\r\n    if (!this._active) {\r\n      this._active = true;\r\n      this._changeDetectorRef.markForCheck();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This method removes display styles on the option that made it appear\r\n   * active. This is used by the ActiveDescendantKeyManager so key\r\n   * events will display the proper options as active on arrow key events.\r\n   */\r\n  setInactiveStyles(): void {\r\n    if (this._active) {\r\n      this._active = false;\r\n      this._changeDetectorRef.markForCheck();\r\n    }\r\n  }\r\n\r\n  /** Gets the label to be used when determining whether the option should be focused. */\r\n  getLabel(): string {\r\n    return this.viewValue;\r\n  }\r\n\r\n  /** Ensures the option is selected when activated from the keyboard. */\r\n  _handleKeydown(event: KeyboardEvent): void {\r\n    if (event.keyCode === ENTER || event.keyCode === SPACE) {\r\n      this._selectViaInteraction();\r\n\r\n      // Prevent the page from scrolling down and form submits.\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * `Selects the option while indicating the selection came from the user. Used to\r\n   * determine if the select's view -> model callback should be invoked.`\r\n   */\r\n  _selectViaInteraction(): void {\r\n    if (!this.disabled) {\r\n      this._selected = this.multiple ? !this._selected : true;\r\n      this._changeDetectorRef.markForCheck();\r\n      this._emitSelectionChangeEvent(true);\r\n    }\r\n  }\r\n\r\n  /** Returns the correct tabindex for the option depending on disabled state. */\r\n  _getTabIndex(): string {\r\n    return this.disabled ? '-1' : '0';\r\n  }\r\n\r\n  /** Gets the host DOM element. */\r\n  _getHostElement(): HTMLElement {\r\n    return this._element.nativeElement;\r\n  }\r\n\r\n  ngAfterViewChecked() {\r\n    // Since parent components could be using the option's label to display the selected values\r\n    // (e.g. `mat-select`) and they don't have a way of knowing if the option's label has changed\r\n    // we have to check for changes in the DOM ourselves and dispatch an event. These checks are\r\n    // relatively cheap, however we still limit them only to selected options in order to avoid\r\n    // hitting the DOM too often.\r\n    if (this._selected) {\r\n      const viewValue = this.viewValue;\r\n\r\n      if (viewValue !== this._mostRecentViewValue) {\r\n        this._mostRecentViewValue = viewValue;\r\n        this._stateChanges.next();\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._stateChanges.complete();\r\n  }\r\n\r\n  /** Emits the selection change event. */\r\n  private _emitSelectionChangeEvent(isUserInput = false): void {\r\n    this.onSelectionChange.emit(new MatOptionSelectionChange(this, isUserInput));\r\n  }\r\n}\r\n\r\n/**\r\n * Counts the amount of option group labels that precede the specified option.\r\n * @param optionIndex Index of the option at which to start counting.\r\n * @param options Flat list of all of the options.\r\n * @param optionGroups Flat list of all of the option groups.\r\n * @docs-private\r\n */\r\nexport function _countGroupLabelsBeforeOption(optionIndex: number, options: QueryList<MatOption>,\r\n  optionGroups: QueryList<MatOptgroup>): number {\r\n\r\n  if (optionGroups.length) {\r\n    let optionsArray = options.toArray();\r\n    let groups = optionGroups.toArray();\r\n    let groupCounter = 0;\r\n\r\n    for (let i = 0; i < optionIndex + 1; i++) {\r\n      if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {\r\n        groupCounter++;\r\n      }\r\n    }\r\n\r\n    return groupCounter;\r\n  }\r\n\r\n  return 0;\r\n}\r\n\r\n/**\r\n * Determines the position to which to scroll a panel in order for an option to be into view.\r\n * @param optionIndex Index of the option to be scrolled into the view.\r\n * @param optionHeight Height of the options.\r\n * @param currentScrollPosition Current scroll position of the panel.\r\n * @param panelHeight Height of the panel.\r\n * @docs-private\r\n */\r\nexport function _getOptionScrollPosition(optionIndex: number, optionHeight: number,\r\n    currentScrollPosition: number, panelHeight: number): number {\r\n  const optionOffset = optionIndex * optionHeight;\r\n\r\n  if (optionOffset < currentScrollPosition) {\r\n    return optionOffset;\r\n  }\r\n\r\n  if (optionOffset + optionHeight > currentScrollPosition + panelHeight) {\r\n    return Math.max(0, optionOffset - panelHeight + optionHeight);\r\n  }\r\n\r\n  return currentScrollPosition;\r\n}\r\n\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {Component, ViewEncapsulation, Input, ChangeDetectionStrategy} from '@angular/core';\r\nimport {mixinDisabled, CanDisable} from '../common-behaviors/disabled';\r\n\r\n// Boilerplate for applying mixins to MatOptgroup.\r\n/** @docs-private */\r\nexport class MatOptgroupBase { }\r\nexport const _MatOptgroupMixinBase = mixinDisabled(MatOptgroupBase);\r\n\r\n// Counter for unique group ids.\r\nlet _uniqueOptgroupIdCounter = 0;\r\n\r\n/**\r\n * Component that is used to group instances of `mat-option`.\r\n */\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'mat-optgroup',\r\n  exportAs: 'matOptgroup',\r\n  templateUrl: 'optgroup.html',\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  inputs: ['disabled'],\r\n  styleUrls: ['optgroup.css'],\r\n  host: {\r\n    'class': 'mat-optgroup',\r\n    'role': 'group',\r\n    '[class.mat-optgroup-disabled]': 'disabled',\r\n    '[attr.aria-disabled]': 'disabled.toString()',\r\n    '[attr.aria-labelledby]': '_labelId',\r\n  }\r\n})\r\nexport class MatOptgroup extends _MatOptgroupMixinBase implements CanDisable {\r\n  /** Label for the option group. */\r\n  @Input() label: string;\r\n\r\n  /** Unique id for the underlying label. */\r\n  _labelId: string = `mat-optgroup-label-${_uniqueOptgroupIdCounter++}`;\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {NgModule} from '@angular/core';\r\nimport {MatPseudoCheckbox} from './pseudo-checkbox/pseudo-checkbox';\r\n\r\n\r\n@NgModule({\r\n  exports: [MatPseudoCheckbox],\r\n  declarations: [MatPseudoCheckbox]\r\n})\r\nexport class MatPseudoCheckboxModule { }\r\n\r\n\r\nexport * from './pseudo-checkbox/pseudo-checkbox';\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {\r\n  Component,\r\n  ViewEncapsulation,\r\n  Input,\r\n  ChangeDetectionStrategy,\r\n  Inject,\r\n  Optional,\r\n} from '@angular/core';\r\nimport {ANIMATION_MODULE_TYPE} from '@angular/platform-browser/animations';\r\n\r\n/**\r\n * Possible states for a pseudo checkbox.\r\n * @docs-private\r\n */\r\nexport type MatPseudoCheckboxState = 'unchecked' | 'checked' | 'indeterminate';\r\n\r\n/**\r\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\r\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\r\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\r\n * Note that theming is meant to be handled by the parent element, e.g.\r\n * `mat-primary .mat-pseudo-checkbox`.\r\n *\r\n * Note that this component will be completely invisible to screen-reader users. This is *not*\r\n * interchangeable with `<mat-checkbox>` and should *not* be used if the user would directly\r\n * interact with the checkbox. The pseudo-checkbox should only be used as an implementation detail\r\n * of more complex components that appropriately handle selected / checked state.\r\n * @docs-private\r\n */\r\n@Component({\r\n  moduleId: module.id,\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  selector: 'mat-pseudo-checkbox',\r\n  styleUrls: ['pseudo-checkbox.css'],\r\n  template: '',\r\n  host: {\r\n    'class': 'mat-pseudo-checkbox',\r\n    '[class.mat-pseudo-checkbox-indeterminate]': 'state === \"indeterminate\"',\r\n    '[class.mat-pseudo-checkbox-checked]': 'state === \"checked\"',\r\n    '[class.mat-pseudo-checkbox-disabled]': 'disabled',\r\n    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\r\n  },\r\n})\r\nexport class MatPseudoCheckbox {\r\n  /** Display state of the checkbox. */\r\n  @Input() state: MatPseudoCheckboxState = 'unchecked';\r\n\r\n  /** Whether the checkbox is disabled. */\r\n  @Input() disabled: boolean = false;\r\n\r\n  constructor(@Optional() @Inject(ANIMATION_MODULE_TYPE) public _animationMode?: string) { }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {NgModule} from '@angular/core';\r\nimport {PlatformModule} from '@angular/cdk/platform';\r\nimport {MatCommonModule} from '../common-behaviors/common-module';\r\nimport {MatRipple} from './ripple';\r\n\r\nexport * from './ripple';\r\nexport * from './ripple-ref';\r\nexport * from './ripple-renderer';\r\n\r\n@NgModule({\r\n  imports: [MatCommonModule, PlatformModule],\r\n  exports: [MatRipple, MatCommonModule],\r\n  declarations: [MatRipple],\r\n})\r\nexport class MatRippleModule {}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {Platform} from '@angular/cdk/platform';\r\nimport {\r\n  Directive,\r\n  ElementRef,\r\n  Inject,\r\n  InjectionToken,\r\n  Input,\r\n  NgZone,\r\n  OnDestroy,\r\n  OnInit,\r\n  Optional,\r\n} from '@angular/core';\r\nimport {RippleRef} from './ripple-ref';\r\nimport {RippleAnimationConfig, RippleConfig, RippleRenderer, RippleTarget} from './ripple-renderer';\r\nimport {ANIMATION_MODULE_TYPE} from '@angular/platform-browser/animations';\r\n\r\n/** Configurable options for `matRipple`. */\r\nexport interface RippleGlobalOptions {\r\n  /**\r\n   * Whether ripples should be disabled. Ripples can be still launched manually by using\r\n   * the `launch()` method. Therefore focus indicators will still show up.\r\n   */\r\n  disabled?: boolean;\r\n\r\n  /**\r\n   * Configuration for the animation duration of the ripples. There are two phases with different\r\n   * durations for the ripples. The animation durations will be overwritten if the\r\n   * `NoopAnimationsModule` is being used.\r\n   */\r\n  animation?: RippleAnimationConfig;\r\n\r\n  /**\r\n   * If set, the default duration of the fade-in animation is divided by this value. For example,\r\n   * setting it to 0.5 will cause the ripple fade-in animation to take twice as long.\r\n   * A changed speedFactor will not affect the fade-out duration of the ripples.\r\n   * @deprecated Use the `animation` global option instead.\r\n   * @breaking-change 7.0.0\r\n   */\r\n  baseSpeedFactor?: number;\r\n\r\n  /**\r\n   * Whether ripples should start fading out immediately after the mouse our touch is released. By\r\n   * default, ripples will wait for the enter animation to complete and for mouse or touch release.\r\n   */\r\n  terminateOnPointerUp?: boolean;\r\n}\r\n\r\n/** Injection token that can be used to specify the global ripple options. */\r\nexport const MAT_RIPPLE_GLOBAL_OPTIONS =\r\n    new InjectionToken<RippleGlobalOptions>('mat-ripple-global-options');\r\n\r\n@Directive({\r\n  selector: '[mat-ripple], [matRipple]',\r\n  exportAs: 'matRipple',\r\n  host: {\r\n    'class': 'mat-ripple',\r\n    '[class.mat-ripple-unbounded]': 'unbounded'\r\n  }\r\n})\r\nexport class MatRipple implements OnInit, OnDestroy, RippleTarget {\r\n\r\n  /** Custom color for all ripples. */\r\n  @Input('matRippleColor') color: string;\r\n\r\n  /** Whether the ripples should be visible outside the component's bounds. */\r\n  @Input('matRippleUnbounded') unbounded: boolean;\r\n\r\n  /**\r\n   * Whether the ripple always originates from the center of the host element's bounds, rather\r\n   * than originating from the location of the click event.\r\n   */\r\n  @Input('matRippleCentered') centered: boolean;\r\n\r\n  /**\r\n   * If set, the radius in pixels of foreground ripples when fully expanded. If unset, the radius\r\n   * will be the distance from the center of the ripple to the furthest corner of the host element's\r\n   * bounding rectangle.\r\n   */\r\n  @Input('matRippleRadius') radius: number = 0;\r\n\r\n  /**\r\n   * If set, the normal duration of ripple animations is divided by this value. For example,\r\n   * setting it to 0.5 will cause the animations to take twice as long.\r\n   * A changed speedFactor will not modify the fade-out duration of the ripples.\r\n   * @deprecated Use the [matRippleAnimation] binding instead.\r\n   * @breaking-change 7.0.0\r\n   */\r\n  @Input('matRippleSpeedFactor') speedFactor: number = 1;\r\n\r\n  /**\r\n   * Configuration for the ripple animation. Allows modifying the enter and exit animation\r\n   * duration of the ripples. The animation durations will be overwritten if the\r\n   * `NoopAnimationsModule` is being used.\r\n   */\r\n  @Input('matRippleAnimation') animation: RippleAnimationConfig;\r\n\r\n  /**\r\n   * Whether click events will not trigger the ripple. Ripples can be still launched manually\r\n   * by using the `launch()` method.\r\n   */\r\n  @Input('matRippleDisabled')\r\n  get disabled() { return this._disabled; }\r\n  set disabled(value: boolean) {\r\n    this._disabled = value;\r\n    this._setupTriggerEventsIfEnabled();\r\n  }\r\n  private _disabled: boolean = false;\r\n\r\n  /**\r\n   * The element that triggers the ripple when click events are received.\r\n   * Defaults to the directive's host element.\r\n   */\r\n  @Input('matRippleTrigger')\r\n  get trigger() { return this._trigger || this._elementRef.nativeElement; }\r\n  set trigger(trigger: HTMLElement) {\r\n    this._trigger = trigger;\r\n    this._setupTriggerEventsIfEnabled();\r\n  }\r\n  private _trigger: HTMLElement;\r\n\r\n  /** Renderer for the ripple DOM manipulations. */\r\n  private _rippleRenderer: RippleRenderer;\r\n\r\n  /** Options that are set globally for all ripples. */\r\n  private _globalOptions: RippleGlobalOptions;\r\n\r\n  /** Whether ripple directive is initialized and the input bindings are set. */\r\n  private _isInitialized: boolean = false;\r\n\r\n  constructor(private _elementRef: ElementRef,\r\n              ngZone: NgZone,\r\n              platform: Platform,\r\n              @Optional() @Inject(MAT_RIPPLE_GLOBAL_OPTIONS) globalOptions: RippleGlobalOptions,\r\n              @Optional() @Inject(ANIMATION_MODULE_TYPE) animationMode?: string) {\r\n\r\n    this._globalOptions = globalOptions || {};\r\n    this._rippleRenderer = new RippleRenderer(this, ngZone, _elementRef, platform);\r\n\r\n    if (animationMode === 'NoopAnimations') {\r\n      this._globalOptions.animation = {enterDuration: 0, exitDuration: 0};\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this._isInitialized = true;\r\n    this._setupTriggerEventsIfEnabled();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._rippleRenderer._removeTriggerEvents();\r\n  }\r\n\r\n  /** Fades out all currently showing ripple elements. */\r\n  fadeOutAll() {\r\n    this._rippleRenderer.fadeOutAll();\r\n  }\r\n\r\n  /**\r\n   * Ripple configuration from the directive's input values.\r\n   * @docs-private Implemented as part of RippleTarget\r\n   */\r\n  get rippleConfig(): RippleConfig {\r\n    return {\r\n      centered: this.centered,\r\n      radius: this.radius,\r\n      color: this.color,\r\n      animation: {...this._globalOptions.animation, ...this.animation},\r\n      terminateOnPointerUp: this._globalOptions.terminateOnPointerUp,\r\n      speedFactor: this.speedFactor * (this._globalOptions.baseSpeedFactor || 1),\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Whether ripples on pointer-down are disabled or not.\r\n   * @docs-private Implemented as part of RippleTarget\r\n   */\r\n  get rippleDisabled(): boolean {\r\n    return this.disabled || !!this._globalOptions.disabled;\r\n  }\r\n\r\n  /** Sets up the the trigger event listeners if ripples are enabled. */\r\n  private _setupTriggerEventsIfEnabled() {\r\n    if (!this.disabled && this._isInitialized) {\r\n      this._rippleRenderer.setupTriggerEvents(this.trigger);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Launches a manual ripple using the specified ripple configuration.\r\n   * @param config Configuration for the manual ripple.\r\n   */\r\n  launch(config: RippleConfig): RippleRef;\r\n\r\n  /**\r\n   * Launches a manual ripple at the specified coordinates within the element.\r\n   * @param x Coordinate within the element, along the X axis at which to fade-in the ripple.\r\n   * @param y Coordinate within the element, along the Y axis at which to fade-in the ripple.\r\n   * @param config Optional ripple configuration for the manual ripple.\r\n   */\r\n  launch(x: number, y: number, config?: RippleConfig): RippleRef;\r\n\r\n  /** Launches a manual ripple at the specified coordinated or just by the ripple config. */\r\n  launch(configOrX: number | RippleConfig, y: number = 0, config?: RippleConfig): RippleRef {\r\n    if (typeof configOrX === 'number') {\r\n      return this._rippleRenderer.fadeInRipple(configOrX, y, {...this.rippleConfig, ...config});\r\n    } else {\r\n      return this._rippleRenderer.fadeInRipple(0, 0, {...this.rippleConfig, ...configOrX});\r\n    }\r\n  }\r\n}\r\n\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nimport {ElementRef, NgZone} from '@angular/core';\r\nimport {Platform, supportsPassiveEventListeners} from '@angular/cdk/platform';\r\nimport {RippleRef, RippleState} from './ripple-ref';\r\n\r\nexport type RippleConfig = {\r\n  color?: string;\r\n  centered?: boolean;\r\n  radius?: number;\r\n  persistent?: boolean;\r\n  animation?: RippleAnimationConfig;\r\n  terminateOnPointerUp?: boolean;\r\n  /**\r\n   * @deprecated Use the `animation` property instead.\r\n   * @breaking-change 7.0.0\r\n   */\r\n  speedFactor?: number;\r\n};\r\n\r\n/**\r\n * Interface that describes the configuration for the animation of a ripple.\r\n * There are two animation phases with different durations for the ripples.\r\n */\r\nexport interface RippleAnimationConfig {\r\n  /** Duration in milliseconds for the enter animation (expansion from point of contact). */\r\n  enterDuration?: number;\r\n  /** Duration in milliseconds for the exit animation (fade-out). */\r\n  exitDuration?: number;\r\n}\r\n\r\n/**\r\n * Interface that describes the target for launching ripples.\r\n * It defines the ripple configuration and disabled state for interaction ripples.\r\n * @docs-private\r\n */\r\nexport interface RippleTarget {\r\n  /** Configuration for ripples that are launched on pointer down. */\r\n  rippleConfig: RippleConfig;\r\n  /** Whether ripples on pointer down should be disabled. */\r\n  rippleDisabled: boolean;\r\n}\r\n\r\n/**\r\n * Default ripple animation configuration for ripples without an explicit\r\n * animation config specified.\r\n */\r\nexport const defaultRippleAnimationConfig = {\r\n  enterDuration: 450,\r\n  exitDuration: 400\r\n};\r\n\r\n/**\r\n * Timeout for ignoring mouse events. Mouse events will be temporary ignored after touch\r\n * events to avoid synthetic mouse events.\r\n */\r\nconst ignoreMouseEventsTimeout = 800;\r\n\r\n/**\r\n * Helper service that performs DOM manipulations. Not intended to be used outside this module.\r\n * The constructor takes a reference to the ripple directive's host element and a map of DOM\r\n * event handlers to be installed on the element that triggers ripple animations.\r\n * This will eventually become a custom renderer once Angular support exists.\r\n * @docs-private\r\n */\r\nexport class RippleRenderer {\r\n  /** Element where the ripples are being added to. */\r\n  private _containerElement: HTMLElement;\r\n\r\n  /** Element which triggers the ripple elements on mouse events. */\r\n  private _triggerElement: HTMLElement | null;\r\n\r\n  /** Whether the pointer is currently down or not. */\r\n  private _isPointerDown = false;\r\n\r\n  /** Events to be registered on the trigger element. */\r\n  private _triggerEvents = new Map<string, any>();\r\n\r\n  /** Set of currently active ripple references. */\r\n  private _activeRipples = new Set<RippleRef>();\r\n\r\n  /** Latest non-persistent ripple that was triggered. */\r\n  private _mostRecentTransientRipple: RippleRef | null;\r\n\r\n  /** Time in milliseconds when the last touchstart event happened. */\r\n  private _lastTouchStartEvent: number;\r\n\r\n  /** Options that apply to all the event listeners that are bound by the renderer. */\r\n  private _eventOptions = supportsPassiveEventListeners() ? ({passive: true} as any) : false;\r\n\r\n  /**\r\n   * Cached dimensions of the ripple container. Set when the first\r\n   * ripple is shown and cleared once no more ripples are visible.\r\n   */\r\n  private _containerRect: ClientRect | null;\r\n\r\n  constructor(private _target: RippleTarget,\r\n              private _ngZone: NgZone,\r\n              elementRef: ElementRef,\r\n              platform: Platform) {\r\n\r\n    // Only do anything if we're on the browser.\r\n    if (platform.isBrowser) {\r\n      this._containerElement = elementRef.nativeElement;\r\n\r\n      // Specify events which need to be registered on the trigger.\r\n      this._triggerEvents.set('mousedown', this.onMousedown);\r\n      this._triggerEvents.set('mouseup', this.onPointerUp);\r\n      this._triggerEvents.set('mouseleave', this.onPointerUp);\r\n\r\n      this._triggerEvents.set('touchstart', this.onTouchStart);\r\n      this._triggerEvents.set('touchend', this.onPointerUp);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Fades in a ripple at the given coordinates.\r\n   * @param x Coordinate within the element, along the X axis at which to start the ripple.\r\n   * @param y Coordinate within the element, along the Y axis at which to start the ripple.\r\n   * @param config Extra ripple options.\r\n   */\r\n  fadeInRipple(x: number, y: number, config: RippleConfig = {}): RippleRef {\r\n    const containerRect = this._containerRect =\r\n                          this._containerRect || this._containerElement.getBoundingClientRect();\r\n    const animationConfig = {...defaultRippleAnimationConfig, ...config.animation};\r\n\r\n    if (config.centered) {\r\n      x = containerRect.left + containerRect.width / 2;\r\n      y = containerRect.top + containerRect.height / 2;\r\n    }\r\n\r\n    const radius = config.radius || distanceToFurthestCorner(x, y, containerRect);\r\n    const offsetX = x - containerRect.left;\r\n    const offsetY = y - containerRect.top;\r\n    const duration = animationConfig.enterDuration / (config.speedFactor || 1);\r\n\r\n    const ripple = document.createElement('div');\r\n    ripple.classList.add('mat-ripple-element');\r\n\r\n    ripple.style.left = `${offsetX - radius}px`;\r\n    ripple.style.top = `${offsetY - radius}px`;\r\n    ripple.style.height = `${radius * 2}px`;\r\n    ripple.style.width = `${radius * 2}px`;\r\n\r\n    // If the color is not set, the default CSS color will be used.\r\n    ripple.style.backgroundColor = config.color || null;\r\n    ripple.style.transitionDuration = `${duration}ms`;\r\n\r\n    this._containerElement.appendChild(ripple);\r\n\r\n    // By default the browser does not recalculate the styles of dynamically created\r\n    // ripple elements. This is critical because then the `scale` would not animate properly.\r\n    enforceStyleRecalculation(ripple);\r\n\r\n    ripple.style.transform = 'scale(1)';\r\n\r\n    // Exposed reference to the ripple that will be returned.\r\n    const rippleRef = new RippleRef(this, ripple, config);\r\n\r\n    rippleRef.state = RippleState.FADING_IN;\r\n\r\n    // Add the ripple reference to the list of all active ripples.\r\n    this._activeRipples.add(rippleRef);\r\n\r\n    if (!config.persistent) {\r\n      this._mostRecentTransientRipple = rippleRef;\r\n    }\r\n\r\n    // Wait for the ripple element to be completely faded in.\r\n    // Once it's faded in, the ripple can be hidden immediately if the mouse is released.\r\n    this.runTimeoutOutsideZone(() => {\r\n      const isMostRecentTransientRipple = rippleRef === this._mostRecentTransientRipple;\r\n\r\n      rippleRef.state = RippleState.VISIBLE;\r\n\r\n      // When the timer runs out while the user has kept their pointer down, we want to\r\n      // keep only the persistent ripples and the latest transient ripple. We do this,\r\n      // because we don't want stacked transient ripples to appear after their enter\r\n      // animation has finished.\r\n      if (!config.persistent && (!isMostRecentTransientRipple || !this._isPointerDown)) {\r\n        rippleRef.fadeOut();\r\n      }\r\n    }, duration);\r\n\r\n    return rippleRef;\r\n  }\r\n\r\n  /** Fades out a ripple reference. */\r\n  fadeOutRipple(rippleRef: RippleRef) {\r\n    const wasActive = this._activeRipples.delete(rippleRef);\r\n\r\n    if (rippleRef === this._mostRecentTransientRipple) {\r\n      this._mostRecentTransientRipple = null;\r\n    }\r\n\r\n    // Clear out the cached bounding rect if we have no more ripples.\r\n    if (!this._activeRipples.size) {\r\n      this._containerRect = null;\r\n    }\r\n\r\n    // For ripples that are not active anymore, don't re-un the fade-out animation.\r\n    if (!wasActive) {\r\n      return;\r\n    }\r\n\r\n    const rippleEl = rippleRef.element;\r\n    const animationConfig = {...defaultRippleAnimationConfig, ...rippleRef.config.animation};\r\n\r\n    rippleEl.style.transitionDuration = `${animationConfig.exitDuration}ms`;\r\n    rippleEl.style.opacity = '0';\r\n    rippleRef.state = RippleState.FADING_OUT;\r\n\r\n    // Once the ripple faded out, the ripple can be safely removed from the DOM.\r\n    this.runTimeoutOutsideZone(() => {\r\n      rippleRef.state = RippleState.HIDDEN;\r\n      rippleEl.parentNode!.removeChild(rippleEl);\r\n    }, animationConfig.exitDuration);\r\n  }\r\n\r\n  /** Fades out all currently active ripples. */\r\n  fadeOutAll() {\r\n    this._activeRipples.forEach(ripple => ripple.fadeOut());\r\n  }\r\n\r\n  /** Sets up the trigger event listeners */\r\n  setupTriggerEvents(element: HTMLElement) {\r\n    if (!element || element === this._triggerElement) {\r\n      return;\r\n    }\r\n\r\n    // Remove all previously registered event listeners from the trigger element.\r\n    this._removeTriggerEvents();\r\n\r\n    this._ngZone.runOutsideAngular(() => {\r\n      this._triggerEvents.forEach((fn, type) =>\r\n          element.addEventListener(type, fn, this._eventOptions));\r\n    });\r\n\r\n    this._triggerElement = element;\r\n  }\r\n\r\n  /** Function being called whenever the trigger is being pressed using mouse. */\r\n  private onMousedown = (event: MouseEvent) => {\r\n    const isSyntheticEvent = this._lastTouchStartEvent &&\r\n        Date.now() < this._lastTouchStartEvent + ignoreMouseEventsTimeout;\r\n\r\n    if (!this._target.rippleDisabled && !isSyntheticEvent) {\r\n      this._isPointerDown = true;\r\n      this.fadeInRipple(event.clientX, event.clientY, this._target.rippleConfig);\r\n    }\r\n  }\r\n\r\n  /** Function being called whenever the trigger is being pressed using touch. */\r\n  private onTouchStart = (event: TouchEvent) => {\r\n    if (!this._target.rippleDisabled) {\r\n      // Some browsers fire mouse events after a `touchstart` event. Those synthetic mouse\r\n      // events will launch a second ripple if we don't ignore mouse events for a specific\r\n      // time after a touchstart event.\r\n      this._lastTouchStartEvent = Date.now();\r\n      this._isPointerDown = true;\r\n\r\n      this.fadeInRipple(\r\n          event.touches[0].clientX, event.touches[0].clientY, this._target.rippleConfig);\r\n    }\r\n  }\r\n\r\n  /** Function being called whenever the trigger is being released. */\r\n  private onPointerUp = () => {\r\n    if (!this._isPointerDown) {\r\n      return;\r\n    }\r\n\r\n    this._isPointerDown = false;\r\n\r\n    // Fade-out all ripples that are visible and not persistent.\r\n    this._activeRipples.forEach(ripple => {\r\n      // By default, only ripples that are completely visible will fade out on pointer release.\r\n      // If the `terminateOnPointerUp` option is set, ripples that still fade in will also fade out.\r\n      const isVisible = ripple.state === RippleState.VISIBLE ||\r\n        ripple.config.terminateOnPointerUp && ripple.state === RippleState.FADING_IN;\r\n\r\n      if (!ripple.config.persistent && isVisible) {\r\n        ripple.fadeOut();\r\n      }\r\n    });\r\n  }\r\n\r\n  /** Runs a timeout outside of the Angular zone to avoid triggering the change detection. */\r\n  private runTimeoutOutsideZone(fn: Function, delay = 0) {\r\n    this._ngZone.runOutsideAngular(() => setTimeout(fn, delay));\r\n  }\r\n\r\n  /** Removes previously registered event listeners from the trigger element. */\r\n  _removeTriggerEvents() {\r\n    if (this._triggerElement) {\r\n      this._triggerEvents.forEach((fn, type) => {\r\n        this._triggerElement!.removeEventListener(type, fn, this._eventOptions);\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\n/** Enforces a style recalculation of a DOM element by computing its styles. */\r\nfunction enforceStyleRecalculation(element: HTMLElement) {\r\n  // Enforce a style recalculation by calling `getComputedStyle` and accessing any property.\r\n  // Calling `getPropertyValue` is important to let optimizers know that this is not a noop.\r\n  // See: https://gist.github.com/paulirish/5d52fb081b3570c81e3a\r\n  window.getComputedStyle(element).getPropertyValue('opacity');\r\n}\r\n\r\n/**\r\n * Returns the distance from the point (x, y) to the furthest corner of a rectangle.\r\n */\r\nfunction distanceToFurthestCorner(x: number, y: number, rect: ClientRect) {\r\n  const distX = Math.max(Math.abs(x - rect.left), Math.abs(x - rect.right));\r\n  const distY = Math.max(Math.abs(y - rect.top), Math.abs(y - rect.bottom));\r\n  return Math.sqrt(distX * distX + distY * distY);\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {RippleConfig, RippleRenderer} from './ripple-renderer';\r\n\r\n/** Possible states for a ripple element. */\r\nexport enum RippleState {\r\n  FADING_IN, VISIBLE, FADING_OUT, HIDDEN\r\n}\r\n\r\n/**\r\n * Reference to a previously launched ripple element.\r\n */\r\nexport class RippleRef {\r\n\r\n  /** Current state of the ripple. */\r\n  state: RippleState = RippleState.HIDDEN;\r\n\r\n  constructor(\r\n    private _renderer: RippleRenderer,\r\n    /** Reference to the ripple HTML element. */\r\n    public element: HTMLElement,\r\n    /** Ripple configuration used for the ripple. */\r\n    public config: RippleConfig) {\r\n  }\r\n\r\n  /** Fades out the ripple element. */\r\n  fadeOut() {\r\n    this._renderer.fadeOutRipple(this);\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {\r\n  NgModule,\r\n  Directive,\r\n  ElementRef,\r\n  QueryList,\r\n} from '@angular/core';\r\nimport {MatCommonModule} from '../common-behaviors/common-module';\r\n\r\n\r\n/**\r\n * Shared directive to count lines inside a text area, such as a list item.\r\n * Line elements can be extracted with a @ContentChildren(MatLine) query, then\r\n * counted by checking the query list's length.\r\n */\r\n@Directive({\r\n  selector: '[mat-line], [matLine]',\r\n  host: {'class': 'mat-line'}\r\n})\r\nexport class MatLine {}\r\n\r\n/**\r\n * Helper that takes a query list of lines and sets the correct class on the host.\r\n * @docs-private\r\n */\r\nexport class MatLineSetter {\r\n  constructor(private _lines: QueryList<MatLine>, private _element: ElementRef) {\r\n    this._setLineClass(this._lines.length);\r\n\r\n    this._lines.changes.subscribe(() => {\r\n      this._setLineClass(this._lines.length);\r\n    });\r\n  }\r\n\r\n  private _setLineClass(count: number): void {\r\n    this._resetClasses();\r\n    if (count === 2 || count === 3) {\r\n      this._setClass(`mat-${count}-line`, true);\r\n    } else if (count > 3) {\r\n      this._setClass(`mat-multi-line`, true);\r\n    }\r\n  }\r\n\r\n  private _resetClasses(): void {\r\n    this._setClass('mat-2-line', false);\r\n    this._setClass('mat-3-line', false);\r\n    this._setClass('mat-multi-line', false);\r\n  }\r\n\r\n  private _setClass(className: string, isAdd: boolean): void {\r\n    if (isAdd) {\r\n      this._element.nativeElement.classList.add(className);\r\n    } else {\r\n      this._element.nativeElement.classList.remove(className);\r\n    }\r\n  }\r\n\r\n}\r\n\r\n@NgModule({\r\n  imports: [MatCommonModule],\r\n  exports: [MatLine, MatCommonModule],\r\n  declarations: [MatLine],\r\n})\r\nexport class MatLineModule { }\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {Injectable, InjectionToken, Inject, Optional} from '@angular/core';\r\nimport {HammerGestureConfig} from '@angular/platform-browser';\r\nimport {MatCommonModule} from '../common-behaviors/common-module';\r\nimport {\r\n  HammerStatic,\r\n  HammerInstance,\r\n  Recognizer,\r\n  RecognizerStatic,\r\n  HammerOptions,\r\n} from './gesture-annotations';\r\n\r\n/**\r\n * Injection token that can be used to provide options to the Hammerjs instance.\r\n * More info at http://hammerjs.github.io/api/.\r\n */\r\nexport const MAT_HAMMER_OPTIONS = new InjectionToken<HammerOptions>('MAT_HAMMER_OPTIONS');\r\n\r\nconst ANGULAR_MATERIAL_SUPPORTED_HAMMER_GESTURES = [\r\n  'longpress',\r\n  'slide',\r\n  'slidestart',\r\n  'slideend',\r\n  'slideright',\r\n  'slideleft'\r\n];\r\n\r\n/**\r\n * Fake HammerInstance that is used when a Hammer instance is requested when HammerJS has not\r\n * been loaded on the page.\r\n */\r\nconst noopHammerInstance: HammerInstance = {\r\n  on: () => {},\r\n  off: () => {},\r\n};\r\n\r\n/** Adjusts configuration of our gesture library, Hammer. */\r\n@Injectable()\r\nexport class GestureConfig extends HammerGestureConfig {\r\n  /** List of new event names to add to the gesture support list */\r\n  events = ANGULAR_MATERIAL_SUPPORTED_HAMMER_GESTURES;\r\n\r\n  constructor(\r\n    @Optional() @Inject(MAT_HAMMER_OPTIONS) private _hammerOptions?: HammerOptions,\r\n    @Optional() commonModule?: MatCommonModule) {\r\n    super();\r\n    if (commonModule) {\r\n      commonModule._checkHammerIsAvailable();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Builds Hammer instance manually to add custom recognizers that match the Material Design spec.\r\n   *\r\n   * Our gesture names come from the Material Design gestures spec:\r\n   * https://material.io/design/#gestures-touch-mechanics\r\n   *\r\n   * More information on default recognizers can be found in Hammer docs:\r\n   * http://hammerjs.github.io/recognizer-pan/\r\n   * http://hammerjs.github.io/recognizer-press/\r\n   *\r\n   * @param element Element to which to assign the new HammerJS gestures.\r\n   * @returns Newly-created HammerJS instance.\r\n   */\r\n  buildHammer(element: HTMLElement): HammerInstance {\r\n    const hammer: HammerStatic = typeof window !== 'undefined' ? (window as any).Hammer : null;\r\n\r\n    if (!hammer) {\r\n      // If HammerJS is not loaded here, return the noop HammerInstance. This is necessary to\r\n      // ensure that omitting HammerJS completely will not cause any errors while *also* supporting\r\n      // the lazy-loading of HammerJS via the HAMMER_LOADER token introduced in Angular 6.1.\r\n      // Because we can't depend on HAMMER_LOADER's existance until 7.0, we have to always set\r\n      // `this.events` to the set we support, instead of conditionally setting it to `[]` if\r\n      // `HAMMER_LOADER` is present (and then throwing an Error here if `window.Hammer` is\r\n      // undefined).\r\n      // @breaking-change 7.0.0\r\n      return noopHammerInstance;\r\n    }\r\n\r\n    const mc = new hammer(element, this._hammerOptions || undefined);\r\n\r\n    // Default Hammer Recognizers.\r\n    const pan = new hammer.Pan();\r\n    const swipe = new hammer.Swipe();\r\n    const press = new hammer.Press();\r\n\r\n    // Notice that a HammerJS recognizer can only depend on one other recognizer once.\r\n    // Otherwise the previous `recognizeWith` will be dropped.\r\n    // TODO: Confirm threshold numbers with Material Design UX Team\r\n    const slide = this._createRecognizer(pan, {event: 'slide', threshold: 0}, swipe);\r\n    const longpress = this._createRecognizer(press, {event: 'longpress', time: 500});\r\n\r\n    // Overwrite the default `pan` event to use the swipe event.\r\n    pan.recognizeWith(swipe);\r\n\r\n    // Add customized gestures to Hammer manager\r\n    mc.add([swipe, press, pan, slide, longpress]);\r\n\r\n    return mc as HammerInstance;\r\n  }\r\n\r\n  /** Creates a new recognizer, without affecting the default recognizers of HammerJS */\r\n  private _createRecognizer(base: Recognizer, options: any, ...inheritances: Recognizer[]) {\r\n    let recognizer = new (base.constructor as RecognizerStatic)(options);\r\n\r\n    inheritances.push(base);\r\n    inheritances.forEach(item => recognizer.recognizeWith(item));\r\n\r\n    return recognizer;\r\n  }\r\n\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {Injectable} from '@angular/core';\r\nimport {FormGroupDirective, NgForm, FormControl} from '@angular/forms';\r\n\r\n/** Error state matcher that matches when a control is invalid and dirty. */\r\n@Injectable()\r\nexport class ShowOnDirtyErrorStateMatcher implements ErrorStateMatcher {\r\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\r\n    return !!(control && control.invalid && (control.dirty || (form && form.submitted)));\r\n  }\r\n}\r\n\r\n/** Provider that defines how form controls behave with regards to displaying error messages. */\r\n@Injectable({providedIn: 'root'})\r\nexport class ErrorStateMatcher {\r\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\r\n    return !!(control && control.invalid && (control.touched || (form && form.submitted)));\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {PlatformModule} from '@angular/cdk/platform';\r\nimport {NgModule} from '@angular/core';\r\nimport {DateAdapter} from './date-adapter';\r\nimport {MAT_DATE_FORMATS} from './date-formats';\r\nimport {NativeDateAdapter} from './native-date-adapter';\r\nimport {MAT_NATIVE_DATE_FORMATS} from './native-date-formats';\r\n\r\nexport * from './date-adapter';\r\nexport * from './date-formats';\r\nexport * from './native-date-adapter';\r\nexport * from './native-date-formats';\r\n\r\n\r\n@NgModule({\r\n  imports: [PlatformModule],\r\n  providers: [\r\n    {provide: DateAdapter, useClass: NativeDateAdapter},\r\n  ],\r\n})\r\nexport class NativeDateModule {}\r\n\r\n\r\n@NgModule({\r\n  imports: [NativeDateModule],\r\n  providers: [{provide: MAT_DATE_FORMATS, useValue: MAT_NATIVE_DATE_FORMATS}],\r\n})\r\nexport class MatNativeDateModule {}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {MatDateFormats} from './date-formats';\r\n\r\n\r\nexport const MAT_NATIVE_DATE_FORMATS: MatDateFormats = {\r\n  parse: {\r\n    dateInput: null,\r\n  },\r\n  display: {\r\n    dateInput: {year: 'numeric', month: 'numeric', day: 'numeric'},\r\n    monthYearLabel: {year: 'numeric', month: 'short'},\r\n    dateA11yLabel: {year: 'numeric', month: 'long', day: 'numeric'},\r\n    monthYearA11yLabel: {year: 'numeric', month: 'long'},\r\n  }\r\n};\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {Platform} from '@angular/cdk/platform';\r\nimport {Inject, Injectable, Optional} from '@angular/core';\r\nimport {DateAdapter, MAT_DATE_LOCALE} from './date-adapter';\r\n\r\n// TODO(mmalerba): Remove when we no longer support safari 9.\r\n/** Whether the browser supports the Intl API. */\r\nconst SUPPORTS_INTL_API = typeof Intl != 'undefined';\r\n\r\n\r\n/** The default month names to use if Intl API is not available. */\r\nconst DEFAULT_MONTH_NAMES = {\r\n  'long': [\r\n    'January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September',\r\n    'October', 'November', 'December'\r\n  ],\r\n  'short': ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\r\n  'narrow': ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D']\r\n};\r\n\r\n\r\n/** The default date names to use if Intl API is not available. */\r\nconst DEFAULT_DATE_NAMES = range(31, i => String(i + 1));\r\n\r\n\r\n/** The default day of the week names to use if Intl API is not available. */\r\nconst DEFAULT_DAY_OF_WEEK_NAMES = {\r\n  'long': ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\r\n  'short': ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\r\n  'narrow': ['S', 'M', 'T', 'W', 'T', 'F', 'S']\r\n};\r\n\r\n\r\n/**\r\n * Matches strings that have the form of a valid RFC 3339 string\r\n * (https://tools.ietf.org/html/rfc3339). Note that the string may not actually be a valid date\r\n * because the regex will match strings an with out of bounds month, date, etc.\r\n */\r\nconst ISO_8601_REGEX =\r\n    /^\\d{4}-\\d{2}-\\d{2}(?:T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|(?:(?:\\+|-)\\d{2}:\\d{2}))?)?$/;\r\n\r\n\r\n/** Creates an array and fills it with values. */\r\nfunction range<T>(length: number, valueFunction: (index: number) => T): T[] {\r\n  const valuesArray = Array(length);\r\n  for (let i = 0; i < length; i++) {\r\n    valuesArray[i] = valueFunction(i);\r\n  }\r\n  return valuesArray;\r\n}\r\n\r\n/** Adapts the native JS Date for use with cdk-based components that work with dates. */\r\n@Injectable()\r\nexport class NativeDateAdapter extends DateAdapter<Date> {\r\n  /** Whether to clamp the date between 1 and 9999 to avoid IE and Edge errors. */\r\n  private readonly _clampDate: boolean;\r\n\r\n  /**\r\n   * Whether to use `timeZone: 'utc'` with `Intl.DateTimeFormat` when formatting dates.\r\n   * Without this `Intl.DateTimeFormat` sometimes chooses the wrong timeZone, which can throw off\r\n   * the result. (e.g. in the en-US locale `new Date(1800, 7, 14).toLocaleDateString()`\r\n   * will produce `'8/13/1800'`.\r\n   *\r\n   * TODO(mmalerba): drop this variable. It's not being used in the code right now. We're now\r\n   * getting the string representation of a Date object from it's utc representation. We're keeping\r\n   * it here for sometime, just for precaution, in case we decide to revert some of these changes\r\n   * though.\r\n   */\r\n  useUtcForDisplay: boolean = true;\r\n\r\n  constructor(@Optional() @Inject(MAT_DATE_LOCALE) matDateLocale: string, platform: Platform) {\r\n    super();\r\n    super.setLocale(matDateLocale);\r\n\r\n    // IE does its own time zone correction, so we disable this on IE.\r\n    this.useUtcForDisplay = !platform.TRIDENT;\r\n    this._clampDate = platform.TRIDENT || platform.EDGE;\r\n  }\r\n\r\n  getYear(date: Date): number {\r\n    return date.getFullYear();\r\n  }\r\n\r\n  getMonth(date: Date): number {\r\n    return date.getMonth();\r\n  }\r\n\r\n  getDate(date: Date): number {\r\n    return date.getDate();\r\n  }\r\n\r\n  getDayOfWeek(date: Date): number {\r\n    return date.getDay();\r\n  }\r\n\r\n  getMonthNames(style: 'long' | 'short' | 'narrow'): string[] {\r\n    if (SUPPORTS_INTL_API) {\r\n      const dtf = new Intl.DateTimeFormat(this.locale, {month: style, timeZone: 'utc'});\r\n      return range(12, i =>\r\n          this._stripDirectionalityCharacters(this._format(dtf, new Date(2017, i, 1))));\r\n    }\r\n    return DEFAULT_MONTH_NAMES[style];\r\n  }\r\n\r\n  getDateNames(): string[] {\r\n    if (SUPPORTS_INTL_API) {\r\n      const dtf = new Intl.DateTimeFormat(this.locale, {day: 'numeric', timeZone: 'utc'});\r\n      return range(31, i => this._stripDirectionalityCharacters(\r\n          this._format(dtf, new Date(2017, 0, i + 1))));\r\n    }\r\n    return DEFAULT_DATE_NAMES;\r\n  }\r\n\r\n  getDayOfWeekNames(style: 'long' | 'short' | 'narrow'): string[] {\r\n    if (SUPPORTS_INTL_API) {\r\n      const dtf = new Intl.DateTimeFormat(this.locale, {weekday: style, timeZone: 'utc'});\r\n      return range(7, i => this._stripDirectionalityCharacters(\r\n          this._format(dtf, new Date(2017, 0, i + 1))));\r\n    }\r\n    return DEFAULT_DAY_OF_WEEK_NAMES[style];\r\n  }\r\n\r\n  getYearName(date: Date): string {\r\n    if (SUPPORTS_INTL_API) {\r\n      const dtf = new Intl.DateTimeFormat(this.locale, {year: 'numeric', timeZone: 'utc'});\r\n      return this._stripDirectionalityCharacters(this._format(dtf, date));\r\n    }\r\n    return String(this.getYear(date));\r\n  }\r\n\r\n  getFirstDayOfWeek(): number {\r\n    // We can't tell using native JS Date what the first day of the week is, we default to Sunday.\r\n    return 0;\r\n  }\r\n\r\n  getNumDaysInMonth(date: Date): number {\r\n    return this.getDate(this._createDateWithOverflow(\r\n        this.getYear(date), this.getMonth(date) + 1, 0));\r\n  }\r\n\r\n  clone(date: Date): Date {\r\n    return this.createDate(this.getYear(date), this.getMonth(date), this.getDate(date));\r\n  }\r\n\r\n  createDate(year: number, month: number, date: number): Date {\r\n    // Check for invalid month and date (except upper bound on date which we have to check after\r\n    // creating the Date).\r\n    if (month < 0 || month > 11) {\r\n      throw Error(`Invalid month index \"${month}\". Month index has to be between 0 and 11.`);\r\n    }\r\n\r\n    if (date < 1) {\r\n      throw Error(`Invalid date \"${date}\". Date has to be greater than 0.`);\r\n    }\r\n\r\n    let result = this._createDateWithOverflow(year, month, date);\r\n    // Check that the date wasn't above the upper bound for the month, causing the month to overflow\r\n    if (result.getMonth() != month) {\r\n      throw Error(`Invalid date \"${date}\" for month with index \"${month}\".`);\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  today(): Date {\r\n    return new Date();\r\n  }\r\n\r\n  parse(value: any): Date | null {\r\n    // We have no way using the native JS Date to set the parse format or locale, so we ignore these\r\n    // parameters.\r\n    if (typeof value == 'number') {\r\n      return new Date(value);\r\n    }\r\n    return value ? new Date(Date.parse(value)) : null;\r\n  }\r\n\r\n  format(date: Date, displayFormat: Object): string {\r\n    if (!this.isValid(date)) {\r\n      throw Error('NativeDateAdapter: Cannot format invalid date.');\r\n    }\r\n\r\n    if (SUPPORTS_INTL_API) {\r\n      // On IE and Edge the i18n API will throw a hard error that can crash the entire app\r\n      // if we attempt to format a date whose year is less than 1 or greater than 9999.\r\n      if (this._clampDate && (date.getFullYear() < 1 || date.getFullYear() > 9999)) {\r\n        date = this.clone(date);\r\n        date.setFullYear(Math.max(1, Math.min(9999, date.getFullYear())));\r\n      }\r\n\r\n      displayFormat = {...displayFormat, timeZone: 'utc'};\r\n\r\n      const dtf = new Intl.DateTimeFormat(this.locale, displayFormat);\r\n      return this._stripDirectionalityCharacters(this._format(dtf, date));\r\n    }\r\n    return this._stripDirectionalityCharacters(date.toDateString());\r\n  }\r\n\r\n  addCalendarYears(date: Date, years: number): Date {\r\n    return this.addCalendarMonths(date, years * 12);\r\n  }\r\n\r\n  addCalendarMonths(date: Date, months: number): Date {\r\n    let newDate = this._createDateWithOverflow(\r\n        this.getYear(date), this.getMonth(date) + months, this.getDate(date));\r\n\r\n    // It's possible to wind up in the wrong month if the original month has more days than the new\r\n    // month. In this case we want to go to the last day of the desired month.\r\n    // Note: the additional + 12 % 12 ensures we end up with a positive number, since JS % doesn't\r\n    // guarantee this.\r\n    if (this.getMonth(newDate) != ((this.getMonth(date) + months) % 12 + 12) % 12) {\r\n      newDate = this._createDateWithOverflow(this.getYear(newDate), this.getMonth(newDate), 0);\r\n    }\r\n\r\n    return newDate;\r\n  }\r\n\r\n  addCalendarDays(date: Date, days: number): Date {\r\n    return this._createDateWithOverflow(\r\n        this.getYear(date), this.getMonth(date), this.getDate(date) + days);\r\n  }\r\n\r\n  toIso8601(date: Date): string {\r\n    return [\r\n      date.getUTCFullYear(),\r\n      this._2digit(date.getUTCMonth() + 1),\r\n      this._2digit(date.getUTCDate())\r\n    ].join('-');\r\n  }\r\n\r\n  /**\r\n   * Returns the given value if given a valid Date or null. Deserializes valid ISO 8601 strings\r\n   * (https://www.ietf.org/rfc/rfc3339.txt) into valid Dates and empty string into null. Returns an\r\n   * invalid date for all other values.\r\n   */\r\n  deserialize(value: any): Date | null {\r\n    if (typeof value === 'string') {\r\n      if (!value) {\r\n        return null;\r\n      }\r\n      // The `Date` constructor accepts formats other than ISO 8601, so we need to make sure the\r\n      // string is the right format first.\r\n      if (ISO_8601_REGEX.test(value)) {\r\n        let date = new Date(value);\r\n        if (this.isValid(date)) {\r\n          return date;\r\n        }\r\n      }\r\n    }\r\n    return super.deserialize(value);\r\n  }\r\n\r\n  isDateInstance(obj: any) {\r\n    return obj instanceof Date;\r\n  }\r\n\r\n  isValid(date: Date) {\r\n    return !isNaN(date.getTime());\r\n  }\r\n\r\n  invalid(): Date {\r\n    return new Date(NaN);\r\n  }\r\n\r\n  /** Creates a date but allows the month and date to overflow. */\r\n  private _createDateWithOverflow(year: number, month: number, date: number) {\r\n    const result = new Date(year, month, date);\r\n\r\n    // We need to correct for the fact that JS native Date treats years in range [0, 99] as\r\n    // abbreviations for 19xx.\r\n    if (year >= 0 && year < 100) {\r\n      result.setFullYear(this.getYear(result) - 1900);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Pads a number to make it two digits.\r\n   * @param n The number to pad.\r\n   * @returns The padded number.\r\n   */\r\n  private _2digit(n: number) {\r\n    return ('00' + n).slice(-2);\r\n  }\r\n\r\n  /**\r\n   * Strip out unicode LTR and RTL characters. Edge and IE insert these into formatted dates while\r\n   * other browsers do not. We remove them to make output consistent and because they interfere with\r\n   * date parsing.\r\n   * @param str The string to strip direction characters from.\r\n   * @returns The stripped string.\r\n   */\r\n  private _stripDirectionalityCharacters(str: string) {\r\n    return str.replace(/[\\u200e\\u200f]/g, '');\r\n  }\r\n\r\n  /**\r\n   * When converting Date object to string, javascript built-in functions may return wrong\r\n   * results because it applies its internal DST rules. The DST rules around the world change\r\n   * very frequently, and the current valid rule is not always valid in previous years though.\r\n   * We work around this problem building a new Date object which has its internal UTC\r\n   * representation with the local date and time.\r\n   * @param dtf Intl.DateTimeFormat object, containg the desired string format. It must have\r\n   *    timeZone set to 'utc' to work fine.\r\n   * @param date Date from which we want to get the string representation according to dtf\r\n   * @returns A Date object with its UTC representation based on the passed in date info\r\n   */\r\n  private _format(dtf: Intl.DateTimeFormat, date: Date) {\r\n    const d = new Date(Date.UTC(\r\n        date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(),\r\n        date.getMinutes(), date.getSeconds(), date.getMilliseconds()));\r\n    return dtf.format(d);\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {InjectionToken} from '@angular/core';\r\n\r\n\r\nexport type MatDateFormats = {\r\n  parse: {\r\n    dateInput: any\r\n  },\r\n  display: {\r\n    dateInput: any,\r\n    monthYearLabel: any,\r\n    dateA11yLabel: any,\r\n    monthYearA11yLabel: any,\r\n  }\r\n};\r\n\r\n\r\nexport const MAT_DATE_FORMATS = new InjectionToken<MatDateFormats>('mat-date-formats');\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {inject, InjectionToken, LOCALE_ID} from '@angular/core';\r\nimport {Observable, Subject} from 'rxjs';\r\n\r\n/** InjectionToken for datepicker that can be used to override default locale code. */\r\nexport const MAT_DATE_LOCALE = new InjectionToken<string>('MAT_DATE_LOCALE', {\r\n  providedIn: 'root',\r\n  factory: MAT_DATE_LOCALE_FACTORY,\r\n});\r\n\r\n/** @docs-private */\r\nexport function MAT_DATE_LOCALE_FACTORY(): string {\r\n  return inject(LOCALE_ID);\r\n}\r\n\r\n/**\r\n * No longer needed since MAT_DATE_LOCALE has been changed to a scoped injectable.\r\n * If you are importing and providing this in your code you can simply remove it.\r\n * @deprecated\r\n * @breaking-change 7.0.0\r\n */\r\nexport const MAT_DATE_LOCALE_PROVIDER = {provide: MAT_DATE_LOCALE, useExisting: LOCALE_ID};\r\n\r\n/** Adapts type `D` to be usable as a date by cdk-based components that work with dates. */\r\nexport abstract class DateAdapter<D> {\r\n  /** The locale to use for all dates. */\r\n  protected locale: any;\r\n\r\n  /** A stream that emits when the locale changes. */\r\n  get localeChanges(): Observable<void> { return this._localeChanges; }\r\n  protected _localeChanges = new Subject<void>();\r\n\r\n  /**\r\n   * Gets the year component of the given date.\r\n   * @param date The date to extract the year from.\r\n   * @returns The year component.\r\n   */\r\n  abstract getYear(date: D): number;\r\n\r\n  /**\r\n   * Gets the month component of the given date.\r\n   * @param date The date to extract the month from.\r\n   * @returns The month component (0-indexed, 0 = January).\r\n   */\r\n  abstract getMonth(date: D): number;\r\n\r\n  /**\r\n   * Gets the date of the month component of the given date.\r\n   * @param date The date to extract the date of the month from.\r\n   * @returns The month component (1-indexed, 1 = first of month).\r\n   */\r\n  abstract getDate(date: D): number;\r\n\r\n  /**\r\n   * Gets the day of the week component of the given date.\r\n   * @param date The date to extract the day of the week from.\r\n   * @returns The month component (0-indexed, 0 = Sunday).\r\n   */\r\n  abstract getDayOfWeek(date: D): number;\r\n\r\n  /**\r\n   * Gets a list of names for the months.\r\n   * @param style The naming style (e.g. long = 'January', short = 'Jan', narrow = 'J').\r\n   * @returns An ordered list of all month names, starting with January.\r\n   */\r\n  abstract getMonthNames(style: 'long' | 'short' | 'narrow'): string[];\r\n\r\n  /**\r\n   * Gets a list of names for the dates of the month.\r\n   * @returns An ordered list of all date of the month names, starting with '1'.\r\n   */\r\n  abstract getDateNames(): string[];\r\n\r\n  /**\r\n   * Gets a list of names for the days of the week.\r\n   * @param style The naming style (e.g. long = 'Sunday', short = 'Sun', narrow = 'S').\r\n   * @returns An ordered list of all weekday names, starting with Sunday.\r\n   */\r\n  abstract getDayOfWeekNames(style: 'long' | 'short' | 'narrow'): string[];\r\n\r\n  /**\r\n   * Gets the name for the year of the given date.\r\n   * @param date The date to get the year name for.\r\n   * @returns The name of the given year (e.g. '2017').\r\n   */\r\n  abstract getYearName(date: D): string;\r\n\r\n  /**\r\n   * Gets the first day of the week.\r\n   * @returns The first day of the week (0-indexed, 0 = Sunday).\r\n   */\r\n  abstract getFirstDayOfWeek(): number;\r\n\r\n  /**\r\n   * Gets the number of days in the month of the given date.\r\n   * @param date The date whose month should be checked.\r\n   * @returns The number of days in the month of the given date.\r\n   */\r\n  abstract getNumDaysInMonth(date: D): number;\r\n\r\n  /**\r\n   * Clones the given date.\r\n   * @param date The date to clone\r\n   * @returns A new date equal to the given date.\r\n   */\r\n  abstract clone(date: D): D;\r\n\r\n  /**\r\n   * Creates a date with the given year, month, and date. Does not allow over/under-flow of the\r\n   * month and date.\r\n   * @param year The full year of the date. (e.g. 89 means the year 89, not the year 1989).\r\n   * @param month The month of the date (0-indexed, 0 = January). Must be an integer 0 - 11.\r\n   * @param date The date of month of the date. Must be an integer 1 - length of the given month.\r\n   * @returns The new date, or null if invalid.\r\n   */\r\n  abstract createDate(year: number, month: number, date: number): D;\r\n\r\n  /**\r\n   * Gets today's date.\r\n   * @returns Today's date.\r\n   */\r\n  abstract today(): D;\r\n\r\n  /**\r\n   * Parses a date from a user-provided value.\r\n   * @param value The value to parse.\r\n   * @param parseFormat The expected format of the value being parsed\r\n   *     (type is implementation-dependent).\r\n   * @returns The parsed date.\r\n   */\r\n  abstract parse(value: any, parseFormat: any): D | null;\r\n\r\n  /**\r\n   * Formats a date as a string according to the given format.\r\n   * @param date The value to format.\r\n   * @param displayFormat The format to use to display the date as a string.\r\n   * @returns The formatted date string.\r\n   */\r\n  abstract format(date: D, displayFormat: any): string;\r\n\r\n  /**\r\n   * Adds the given number of years to the date. Years are counted as if flipping 12 pages on the\r\n   * calendar for each year and then finding the closest date in the new month. For example when\r\n   * adding 1 year to Feb 29, 2016, the resulting date will be Feb 28, 2017.\r\n   * @param date The date to add years to.\r\n   * @param years The number of years to add (may be negative).\r\n   * @returns A new date equal to the given one with the specified number of years added.\r\n   */\r\n  abstract addCalendarYears(date: D, years: number): D;\r\n\r\n  /**\r\n   * Adds the given number of months to the date. Months are counted as if flipping a page on the\r\n   * calendar for each month and then finding the closest date in the new month. For example when\r\n   * adding 1 month to Jan 31, 2017, the resulting date will be Feb 28, 2017.\r\n   * @param date The date to add months to.\r\n   * @param months The number of months to add (may be negative).\r\n   * @returns A new date equal to the given one with the specified number of months added.\r\n   */\r\n  abstract addCalendarMonths(date: D, months: number): D;\r\n\r\n  /**\r\n   * Adds the given number of days to the date. Days are counted as if moving one cell on the\r\n   * calendar for each day.\r\n   * @param date The date to add days to.\r\n   * @param days The number of days to add (may be negative).\r\n   * @returns A new date equal to the given one with the specified number of days added.\r\n   */\r\n  abstract addCalendarDays(date: D, days: number): D;\r\n\r\n  /**\r\n   * Gets the RFC 3339 compatible string (https://tools.ietf.org/html/rfc3339) for the given date.\r\n   * This method is used to generate date strings that are compatible with native HTML attributes\r\n   * such as the `min` or `max` attribute of an `<input>`.\r\n   * @param date The date to get the ISO date string for.\r\n   * @returns The ISO date string date string.\r\n   */\r\n  abstract toIso8601(date: D): string;\r\n\r\n  /**\r\n   * Checks whether the given object is considered a date instance by this DateAdapter.\r\n   * @param obj The object to check\r\n   * @returns Whether the object is a date instance.\r\n   */\r\n  abstract isDateInstance(obj: any): boolean;\r\n\r\n  /**\r\n   * Checks whether the given date is valid.\r\n   * @param date The date to check.\r\n   * @returns Whether the date is valid.\r\n   */\r\n  abstract isValid(date: D): boolean;\r\n\r\n  /**\r\n   * Gets date instance that is not valid.\r\n   * @returns An invalid date.\r\n   */\r\n  abstract invalid(): D;\r\n\r\n  /**\r\n   * Attempts to deserialize a value to a valid date object. This is different from parsing in that\r\n   * deserialize should only accept non-ambiguous, locale-independent formats (e.g. a ISO 8601\r\n   * string). The default implementation does not allow any deserialization, it simply checks that\r\n   * the given value is already a valid date object or null. The `<mat-datepicker>` will call this\r\n   * method on all of it's `@Input()` properties that accept dates. It is therefore possible to\r\n   * support passing values from your backend directly to these properties by overriding this method\r\n   * to also deserialize the format used by your backend.\r\n   * @param value The value to be deserialized into a date object.\r\n   * @returns The deserialized date object, either a valid date, null if the value can be\r\n   *     deserialized into a null date (e.g. the empty string), or an invalid date.\r\n   */\r\n  deserialize(value: any): D | null {\r\n    if (value == null || this.isDateInstance(value) && this.isValid(value)) {\r\n      return value;\r\n    }\r\n    return this.invalid();\r\n  }\r\n\r\n  /**\r\n   * Sets the locale used for all dates.\r\n   * @param locale The new locale.\r\n   */\r\n  setLocale(locale: any) {\r\n    this.locale = locale;\r\n    this._localeChanges.next();\r\n  }\r\n\r\n  /**\r\n   * Compares two dates.\r\n   * @param first The first date to compare.\r\n   * @param second The second date to compare.\r\n   * @returns 0 if the dates are equal, a number less than 0 if the first date is earlier,\r\n   *     a number greater than 0 if the first date is later.\r\n   */\r\n  compareDate(first: D, second: D): number {\r\n    return this.getYear(first) - this.getYear(second) ||\r\n        this.getMonth(first) - this.getMonth(second) ||\r\n        this.getDate(first) - this.getDate(second);\r\n  }\r\n\r\n  /**\r\n   * Checks if two dates are equal.\r\n   * @param first The first date to check.\r\n   * @param second The second date to check.\r\n   * @returns Whether the two dates are equal.\r\n   *     Null dates are considered equal to other null dates.\r\n   */\r\n  sameDate(first: D | null, second: D | null): boolean {\r\n    if (first && second) {\r\n      let firstValid = this.isValid(first);\r\n      let secondValid = this.isValid(second);\r\n      if (firstValid && secondValid) {\r\n        return !this.compareDate(first, second);\r\n      }\r\n      return firstValid == secondValid;\r\n    }\r\n    return first == second;\r\n  }\r\n\r\n  /**\r\n   * Clamp the given date between min and max dates.\r\n   * @param date The date to clamp.\r\n   * @param min The minimum value to allow. If null or omitted no min is enforced.\r\n   * @param max The maximum value to allow. If null or omitted no max is enforced.\r\n   * @returns `min` if `date` is less than `min`, `max` if date is greater than `max`,\r\n   *     otherwise `date`.\r\n   */\r\n  clampDate(date: D, min?: D | null, max?: D | null): D {\r\n    if (min && this.compareDate(date, min) < 0) {\r\n      return min;\r\n    }\r\n    if (max && this.compareDate(date, max) > 0) {\r\n      return max;\r\n    }\r\n    return date;\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {Observable, Subscriber} from 'rxjs';\r\nimport {Constructor} from './constructor';\r\n\r\n\r\n/**\r\n * Mixin that adds an initialized property to a directive which, when subscribed to, will emit a\r\n * value once markInitialized has been called, which should be done during the ngOnInit function.\r\n * If the subscription is made after it has already been marked as initialized, then it will trigger\r\n * an emit immediately.\r\n * @docs-private\r\n */\r\nexport interface HasInitialized {\r\n  /** Stream that emits once during the directive/component's ngOnInit. */\r\n  initialized: Observable<void>;\r\n\r\n  /**\r\n   * Sets the state as initialized and must be called during ngOnInit to notify subscribers that\r\n   * the directive has been initialized.\r\n   * @docs-private\r\n   */\r\n  _markInitialized: () => void;\r\n}\r\n\r\n/** Mixin to augment a directive with an initialized property that will emits when ngOnInit ends. */\r\nexport function mixinInitialized<T extends Constructor<{}>>(base: T):\r\n    Constructor<HasInitialized> & T {\r\n  return class extends base {\r\n    /** Whether this directive has been marked as initialized. */\r\n    _isInitialized = false;\r\n\r\n    /**\r\n     * List of subscribers that subscribed before the directive was initialized. Should be notified\r\n     * during _markInitialized. Set to null after pending subscribers are notified, and should\r\n     * not expect to be populated after.\r\n     */\r\n    _pendingSubscribers: Subscriber<void>[] | null = [];\r\n\r\n    /**\r\n     * Observable stream that emits when the directive initializes. If already initialized, the\r\n     * subscriber is stored to be notified once _markInitialized is called.\r\n     */\r\n    initialized = new Observable<void>(subscriber => {\r\n      // If initialized, immediately notify the subscriber. Otherwise store the subscriber to notify\r\n      // when _markInitialized is called.\r\n      if (this._isInitialized) {\r\n        this._notifySubscriber(subscriber);\r\n      } else {\r\n        this._pendingSubscribers!.push(subscriber);\r\n      }\r\n    });\r\n\r\n    constructor(...args: any[]) { super(...args); }\r\n\r\n    /**\r\n     * Marks the state as initialized and notifies pending subscribers. Should be called at the end\r\n     * of ngOnInit.\r\n     * @docs-private\r\n     */\r\n    _markInitialized(): void {\r\n      if (this._isInitialized) {\r\n        throw Error('This directive has already been marked as initialized and ' +\r\n            'should not be called twice.');\r\n      }\r\n\r\n      this._isInitialized = true;\r\n\r\n      this._pendingSubscribers!.forEach(this._notifySubscriber);\r\n      this._pendingSubscribers = null;\r\n    }\r\n\r\n    /** Emits and completes the subscriber stream (should only emit once). */\r\n    _notifySubscriber(subscriber: Subscriber<void>): void {\r\n      subscriber.next();\r\n      subscriber.complete();\r\n    }\r\n  };\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {Constructor} from './constructor';\r\nimport {ErrorStateMatcher} from '../error/error-options';\r\nimport {FormControl, FormGroupDirective, NgControl, NgForm} from '@angular/forms';\r\nimport {Subject} from 'rxjs';\r\n\r\n/** @docs-private */\r\nexport interface CanUpdateErrorState {\r\n  updateErrorState();\r\n  readonly stateChanges: Subject<void>;\r\n  errorState: boolean;\r\n  errorStateMatcher: ErrorStateMatcher;\r\n}\r\n\r\n/** @docs-private */\r\nexport interface HasErrorState {\r\n  _parentFormGroup: FormGroupDirective;\r\n  _parentForm: NgForm;\r\n  _defaultErrorStateMatcher: ErrorStateMatcher;\r\n  ngControl: NgControl;\r\n}\r\n\r\n/**\r\n * Mixin to augment a directive with updateErrorState method.\r\n * For component with `errorState` and need to update `errorState`.\r\n */\r\nexport function mixinErrorState<T extends Constructor<HasErrorState>>(base: T)\r\n: Constructor<CanUpdateErrorState> & T {\r\n  return class extends base {\r\n    /** Whether the component is in an error state. */\r\n    errorState: boolean = false;\r\n\r\n    /**\r\n     * Stream that emits whenever the state of the input changes such that the wrapping\r\n     * `MatFormField` needs to run change detection.\r\n     */\r\n    readonly stateChanges = new Subject<void>();\r\n\r\n    errorStateMatcher: ErrorStateMatcher;\r\n\r\n    updateErrorState() {\r\n      const oldState = this.errorState;\r\n      const parent = this._parentFormGroup || this._parentForm;\r\n      const matcher = this.errorStateMatcher || this._defaultErrorStateMatcher;\r\n      const control = this.ngControl ? this.ngControl.control as FormControl : null;\r\n      const newState = matcher.isErrorState(control, parent);\r\n\r\n      if (newState !== oldState) {\r\n        this.errorState = newState;\r\n        this.stateChanges.next();\r\n      }\r\n    }\r\n\r\n    constructor(...args: any[]) {\r\n      super(...args);\r\n    }\r\n  };\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {Constructor} from './constructor';\r\nimport {CanDisable} from './disabled';\r\n\r\n/** @docs-private */\r\nexport interface HasTabIndex {\r\n  /** Tabindex of the component. */\r\n  tabIndex: number;\r\n}\r\n\r\n/** Mixin to augment a directive with a `tabIndex` property. */\r\nexport function mixinTabIndex<T extends Constructor<CanDisable>>(base: T, defaultTabIndex = 0)\r\n    : Constructor<HasTabIndex> & T {\r\n  return class extends base {\r\n    private _tabIndex: number = defaultTabIndex;\r\n\r\n    get tabIndex(): number { return this.disabled ? -1 : this._tabIndex; }\r\n    set tabIndex(value: number) {\r\n      // If the specified tabIndex value is null or undefined, fall back to the default value.\r\n      this._tabIndex = value != null ? value : defaultTabIndex;\r\n    }\r\n\r\n    constructor(...args: any[]) {\r\n      super(...args);\r\n    }\r\n  };\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\r\nimport {Constructor} from './constructor';\r\n\r\n/** @docs-private */\r\nexport interface CanDisableRipple {\r\n  /** Whether ripples are disabled. */\r\n  disableRipple: boolean;\r\n}\r\n\r\n/** Mixin to augment a directive with a `disableRipple` property. */\r\nexport function mixinDisableRipple<T extends Constructor<{}>>(base: T)\r\n    : Constructor<CanDisableRipple> & T {\r\n  return class extends base {\r\n    private _disableRipple: boolean = false;\r\n\r\n    /** Whether the ripple effect is disabled or not. */\r\n    get disableRipple() { return this._disableRipple; }\r\n    set disableRipple(value: any) { this._disableRipple = coerceBooleanProperty(value); }\r\n\r\n    constructor(...args: any[]) { super(...args); }\r\n  };\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {Constructor} from './constructor';\r\nimport {ElementRef} from '@angular/core';\r\n\r\n/** @docs-private */\r\nexport interface CanColor {\r\n  /** Theme color palette for the component. */\r\n  color: ThemePalette;\r\n}\r\n\r\n/** @docs-private */\r\nexport interface HasElementRef {\r\n  _elementRef: ElementRef;\r\n}\r\n\r\n/** Possible color palette values. */\r\nexport type ThemePalette = 'primary' | 'accent' | 'warn' | undefined;\r\n\r\n/** Mixin to augment a directive with a `color` property. */\r\nexport function mixinColor<T extends Constructor<HasElementRef>>(base: T,\r\n    defaultColor?: ThemePalette): Constructor<CanColor> & T {\r\n  return class extends base {\r\n    private _color: ThemePalette;\r\n\r\n    get color(): ThemePalette { return this._color; }\r\n    set color(value: ThemePalette) {\r\n      const colorPalette = value || defaultColor;\r\n\r\n      if (colorPalette !== this._color) {\r\n        if (this._color) {\r\n          this._elementRef.nativeElement.classList.remove(`mat-${this._color}`);\r\n        }\r\n        if (colorPalette) {\r\n          this._elementRef.nativeElement.classList.add(`mat-${colorPalette}`);\r\n        }\r\n\r\n        this._color = colorPalette;\r\n      }\r\n    }\r\n\r\n    constructor(...args: any[]) {\r\n      super(...args);\r\n\r\n      // Set the default color that can be specified from the mixin.\r\n      this.color = defaultColor;\r\n    }\r\n  };\r\n}\r\n\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\r\nimport {Constructor} from './constructor';\r\n\r\n/** @docs-private */\r\nexport interface CanDisable {\r\n  /** Whether the component is disabled. */\r\n  disabled: boolean;\r\n}\r\n\r\n/** Mixin to augment a directive with a `disabled` property. */\r\nexport function mixinDisabled<T extends Constructor<{}>>(base: T): Constructor<CanDisable> & T {\r\n  return class extends base {\r\n    private _disabled: boolean = false;\r\n\r\n    get disabled() { return this._disabled; }\r\n    set disabled(value: any) { this._disabled = coerceBooleanProperty(value); }\r\n\r\n    constructor(...args: any[]) { super(...args); }\r\n  };\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {NgModule, InjectionToken, Optional, Inject, isDevMode} from '@angular/core';\r\nimport {BidiModule} from '@angular/cdk/bidi';\r\n\r\n\r\n/** Injection token that configures whether the Material sanity checks are enabled. */\r\nexport const MATERIAL_SANITY_CHECKS = new InjectionToken<boolean>('mat-sanity-checks', {\r\n  providedIn: 'root',\r\n  factory: MATERIAL_SANITY_CHECKS_FACTORY,\r\n});\r\n\r\n/** @docs-private */\r\nexport function MATERIAL_SANITY_CHECKS_FACTORY(): boolean {\r\n  return true;\r\n}\r\n\r\n/**\r\n * Module that captures anything that should be loaded and/or run for *all* Angular Material\r\n * components. This includes Bidi, etc.\r\n *\r\n * This module should be imported to each top-level component module (e.g., MatTabsModule).\r\n */\r\n@NgModule({\r\n  imports: [BidiModule],\r\n  exports: [BidiModule],\r\n})\r\nexport class MatCommonModule {\r\n  /** Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype). */\r\n  private _hasDoneGlobalChecks = false;\r\n\r\n  /** Whether we've already checked for HammerJs availability. */\r\n  private _hasCheckedHammer = false;\r\n\r\n  /** Reference to the global `document` object. */\r\n  private _document = typeof document === 'object' && document ? document : null;\r\n\r\n  /** Reference to the global 'window' object. */\r\n  private _window = typeof window === 'object' && window ? window : null;\r\n\r\n  constructor(@Optional() @Inject(MATERIAL_SANITY_CHECKS) private _sanityChecksEnabled: boolean) {\r\n    if (this._areChecksEnabled() && !this._hasDoneGlobalChecks) {\r\n      this._checkDoctypeIsDefined();\r\n      this._checkThemeIsPresent();\r\n      this._hasDoneGlobalChecks = true;\r\n    }\r\n  }\r\n\r\n  /** Whether any sanity checks are enabled */\r\n  private _areChecksEnabled(): boolean {\r\n    return this._sanityChecksEnabled && isDevMode() && !this._isTestEnv();\r\n  }\r\n\r\n  /** Whether the code is running in tests. */\r\n  private _isTestEnv() {\r\n    return this._window && (this._window['__karma__'] || this._window['jasmine']);\r\n  }\r\n\r\n  private _checkDoctypeIsDefined(): void {\r\n    if (this._document && !this._document.doctype) {\r\n      console.warn(\r\n        'Current document does not have a doctype. This may cause ' +\r\n        'some Angular Material components not to behave as expected.'\r\n      );\r\n    }\r\n  }\r\n\r\n  private _checkThemeIsPresent(): void {\r\n    // We need to assert that the `body` is defined, because these checks run very early\r\n    // and the `body` won't be defined if the consumer put their scripts in the `head`.\r\n    if (this._document && this._document.body && typeof getComputedStyle === 'function') {\r\n      const testElement = this._document.createElement('div');\r\n\r\n      testElement.classList.add('mat-theme-loaded-marker');\r\n      this._document.body.appendChild(testElement);\r\n\r\n      const computedStyle = getComputedStyle(testElement);\r\n\r\n      // In some situations the computed style of the test element can be null. For example in\r\n      // Firefox, the computed style is null if an application is running inside of a hidden iframe.\r\n      // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\r\n      if (computedStyle && computedStyle.display !== 'none') {\r\n        console.warn(\r\n          'Could not find Angular Material core theme. Most Material ' +\r\n          'components may not work as expected. For more info refer ' +\r\n          'to the theming guide: https://material.angular.io/guide/theming'\r\n        );\r\n      }\r\n\r\n      this._document.body.removeChild(testElement);\r\n    }\r\n  }\r\n\r\n  /** Checks whether HammerJS is available. */\r\n  _checkHammerIsAvailable(): void {\r\n    if (this._hasCheckedHammer || !this._window) {\r\n      return;\r\n    }\r\n\r\n    if (this._areChecksEnabled() && !this._window['Hammer']) {\r\n      console.warn(\r\n        'Could not find HammerJS. Certain Angular Material components may not work correctly.');\r\n    }\r\n    this._hasCheckedHammer = true;\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n/** @docs-private */\r\nexport class AnimationCurves {\r\n  static STANDARD_CURVE = 'cubic-bezier(0.4,0.0,0.2,1)';\r\n  static DECELERATION_CURVE = 'cubic-bezier(0.0,0.0,0.2,1)';\r\n  static ACCELERATION_CURVE = 'cubic-bezier(0.4,0.0,1,1)';\r\n  static SHARP_CURVE = 'cubic-bezier(0.4,0.0,0.6,1)';\r\n}\r\n\r\n\r\n/** @docs-private */\r\nexport class AnimationDurations {\r\n  static COMPLEX = '375ms';\r\n  static ENTERING = '225ms';\r\n  static EXITING = '195ms';\r\n}\r\n"],"names":["ɵ0"],"mappings":"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"}