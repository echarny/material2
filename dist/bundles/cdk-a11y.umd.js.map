{"version":3,"file":"cdk-a11y.umd.js","sources":["../../src/cdk/a11y/a11y-module.ts","../../src/cdk/a11y/fake-mousedown.ts","../../src/cdk/a11y/focus-monitor/focus-monitor.ts","../../src/cdk/a11y/live-announcer/live-announcer.ts","../../src/cdk/a11y/live-announcer/live-announcer-token.ts","../../src/cdk/a11y/focus-trap/focus-trap.ts","../../src/cdk/a11y/interactivity-checker/interactivity-checker.ts","../../src/cdk/a11y/key-manager/focus-key-manager.ts","../../src/cdk/a11y/key-manager/activedescendant-key-manager.ts","../../src/cdk/a11y/key-manager/list-key-manager.ts","../../src/cdk/a11y/aria-describer/aria-describer.ts","../../src/cdk/a11y/aria-describer/aria-reference.ts","../../node_modules/tslib/tslib.es6.js"],"sourcesContent":["/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {ObserversModule} from '@angular/cdk/observers';\r\nimport {PlatformModule} from '@angular/cdk/platform';\r\nimport {CommonModule} from '@angular/common';\r\nimport {NgModule} from '@angular/core';\r\nimport {CdkMonitorFocus} from './focus-monitor/focus-monitor';\r\nimport {CdkTrapFocus} from './focus-trap/focus-trap';\r\nimport {CdkAriaLive} from './live-announcer/live-announcer';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, PlatformModule, ObserversModule],\r\n  declarations: [CdkAriaLive, CdkTrapFocus, CdkMonitorFocus],\r\n  exports: [CdkAriaLive, CdkTrapFocus, CdkMonitorFocus],\r\n})\r\nexport class A11yModule {}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n/**\r\n * Screenreaders will often fire fake mousedown events when a focusable element\r\n * is activated using the keyboard. We can typically distinguish between these faked\r\n * mousedown events and real mousedown events using the \"buttons\" property. While\r\n * real mousedowns will indicate the mouse button that was pressed (e.g. \"1\" for\r\n * the left mouse button), faked mousedowns will usually set the property value to 0.\r\n */\r\nexport function isFakeMousedownFromScreenReader(event: MouseEvent): boolean {\r\n  return event.buttons === 0;\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {Platform, supportsPassiveEventListeners} from '@angular/cdk/platform';\r\nimport {\r\n  Directive,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Injectable,\r\n  NgZone,\r\n  OnDestroy,\r\n  Optional,\r\n  Output,\r\n  SkipSelf,\r\n} from '@angular/core';\r\nimport {Observable, of as observableOf, Subject, Subscription} from 'rxjs';\r\n\r\n\r\n// This is the value used by AngularJS Material. Through trial and error (on iPhone 6S) they found\r\n// that a value of around 650ms seems appropriate.\r\nexport const TOUCH_BUFFER_MS = 650;\r\n\r\n\r\nexport type FocusOrigin = 'touch' | 'mouse' | 'keyboard' | 'program' | null;\r\n\r\n\r\n/**\r\n * Corresponds to the options that can be passed to the native `focus` event.\r\n * via https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/focus\r\n */\r\nexport interface FocusOptions {\r\n  /** Whether the browser should scroll to the element when it is focused. */\r\n  preventScroll?: boolean;\r\n}\r\n\r\n\r\ntype MonitoredElementInfo = {\r\n  unlisten: Function,\r\n  checkChildren: boolean,\r\n  subject: Subject<FocusOrigin>\r\n};\r\n\r\n\r\n/** Monitors mouse and keyboard events to determine the cause of focus events. */\r\n@Injectable({providedIn: 'root'})\r\nexport class FocusMonitor implements OnDestroy {\r\n  /** The focus origin that the next focus event is a result of. */\r\n  private _origin: FocusOrigin = null;\r\n\r\n  /** The FocusOrigin of the last focus event tracked by the FocusMonitor. */\r\n  private _lastFocusOrigin: FocusOrigin;\r\n\r\n  /** Whether the window has just been focused. */\r\n  private _windowFocused = false;\r\n\r\n  /** The target of the last touch event. */\r\n  private _lastTouchTarget: EventTarget | null;\r\n\r\n  /** The timeout id of the touch timeout, used to cancel timeout later. */\r\n  private _touchTimeoutId: number;\r\n\r\n  /** The timeout id of the window focus timeout. */\r\n  private _windowFocusTimeoutId: number;\r\n\r\n  /** The timeout id of the origin clearing timeout. */\r\n  private _originTimeoutId: number;\r\n\r\n  /** Map of elements being monitored to their info. */\r\n  private _elementInfo = new Map<HTMLElement, MonitoredElementInfo>();\r\n\r\n  /** A map of global objects to lists of current listeners. */\r\n  private _unregisterGlobalListeners = () => {};\r\n\r\n  /** The number of elements currently being monitored. */\r\n  private _monitoredElementCount = 0;\r\n\r\n  constructor(private _ngZone: NgZone, private _platform: Platform) {}\r\n\r\n  /**\r\n   * Monitors focus on an element and applies appropriate CSS classes.\r\n   * @param element The element to monitor\r\n   * @param checkChildren Whether to count the element as focused when its children are focused.\r\n   * @returns An observable that emits when the focus state of the element changes.\r\n   *     When the element is blurred, null will be emitted.\r\n   */\r\n  monitor(element: HTMLElement, checkChildren: boolean = false): Observable<FocusOrigin> {\r\n    // Do nothing if we're not on the browser platform.\r\n    if (!this._platform.isBrowser) {\r\n      return observableOf(null);\r\n    }\r\n    // Check if we're already monitoring this element.\r\n    if (this._elementInfo.has(element)) {\r\n      let cachedInfo = this._elementInfo.get(element);\r\n      cachedInfo!.checkChildren = checkChildren;\r\n      return cachedInfo!.subject.asObservable();\r\n    }\r\n\r\n    // Create monitored element info.\r\n    let info: MonitoredElementInfo = {\r\n      unlisten: () => {},\r\n      checkChildren: checkChildren,\r\n      subject: new Subject<FocusOrigin>()\r\n    };\r\n    this._elementInfo.set(element, info);\r\n    this._incrementMonitoredElementCount();\r\n\r\n    // Start listening. We need to listen in capture phase since focus events don't bubble.\r\n    let focusListener = (event: FocusEvent) => this._onFocus(event, element);\r\n    let blurListener = (event: FocusEvent) => this._onBlur(event, element);\r\n    this._ngZone.runOutsideAngular(() => {\r\n      element.addEventListener('focus', focusListener, true);\r\n      element.addEventListener('blur', blurListener, true);\r\n    });\r\n\r\n    // Create an unlisten function for later.\r\n    info.unlisten = () => {\r\n      element.removeEventListener('focus', focusListener, true);\r\n      element.removeEventListener('blur', blurListener, true);\r\n    };\r\n\r\n    return info.subject.asObservable();\r\n  }\r\n\r\n  /**\r\n   * Stops monitoring an element and removes all focus classes.\r\n   * @param element The element to stop monitoring.\r\n   */\r\n  stopMonitoring(element: HTMLElement): void {\r\n    const elementInfo = this._elementInfo.get(element);\r\n\r\n    if (elementInfo) {\r\n      elementInfo.unlisten();\r\n      elementInfo.subject.complete();\r\n\r\n      this._setClasses(element);\r\n      this._elementInfo.delete(element);\r\n      this._decrementMonitoredElementCount();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Focuses the element via the specified focus origin.\r\n   * @param element Element to focus.\r\n   * @param origin Focus origin.\r\n   * @param options Options that can be used to configure the focus behavior.\r\n   */\r\n  focusVia(element: HTMLElement, origin: FocusOrigin, options?: FocusOptions): void {\r\n    this._setOriginForCurrentEventQueue(origin);\r\n\r\n    // `focus` isn't available on the server\r\n    if (typeof element.focus === 'function') {\r\n      // Cast the element to `any`, because the TS typings don't have the `options` parameter yet.\r\n      (element as any).focus(options);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._elementInfo.forEach((_info, element) => this.stopMonitoring(element));\r\n  }\r\n\r\n  /** Register necessary event listeners on the document and window. */\r\n  private _registerGlobalListeners() {\r\n    // Do nothing if we're not on the browser platform.\r\n    if (!this._platform.isBrowser) {\r\n      return;\r\n    }\r\n\r\n    // On keydown record the origin and clear any touch event that may be in progress.\r\n    let documentKeydownListener = () => {\r\n      this._lastTouchTarget = null;\r\n      this._setOriginForCurrentEventQueue('keyboard');\r\n    };\r\n\r\n    // On mousedown record the origin only if there is not touch target, since a mousedown can\r\n    // happen as a result of a touch event.\r\n    let documentMousedownListener = () => {\r\n      if (!this._lastTouchTarget) {\r\n        this._setOriginForCurrentEventQueue('mouse');\r\n      }\r\n    };\r\n\r\n    // When the touchstart event fires the focus event is not yet in the event queue. This means\r\n    // we can't rely on the trick used above (setting timeout of 1ms). Instead we wait 650ms to\r\n    // see if a focus happens.\r\n    let documentTouchstartListener = (event: TouchEvent) => {\r\n      if (this._touchTimeoutId != null) {\r\n        clearTimeout(this._touchTimeoutId);\r\n      }\r\n      this._lastTouchTarget = event.target;\r\n      this._touchTimeoutId = setTimeout(() => this._lastTouchTarget = null, TOUCH_BUFFER_MS);\r\n    };\r\n\r\n    // Make a note of when the window regains focus, so we can restore the origin info for the\r\n    // focused element.\r\n    let windowFocusListener = () => {\r\n      this._windowFocused = true;\r\n      this._windowFocusTimeoutId = setTimeout(() => this._windowFocused = false);\r\n    };\r\n\r\n    // Note: we listen to events in the capture phase so we can detect them even if the user stops\r\n    // propagation.\r\n    this._ngZone.runOutsideAngular(() => {\r\n      document.addEventListener('keydown', documentKeydownListener, true);\r\n      document.addEventListener('mousedown', documentMousedownListener, true);\r\n      document.addEventListener('touchstart', documentTouchstartListener,\r\n          supportsPassiveEventListeners() ? ({passive: true, capture: true} as any) : true);\r\n      window.addEventListener('focus', windowFocusListener);\r\n    });\r\n\r\n    this._unregisterGlobalListeners = () => {\r\n      document.removeEventListener('keydown', documentKeydownListener, true);\r\n      document.removeEventListener('mousedown', documentMousedownListener, true);\r\n      document.removeEventListener('touchstart', documentTouchstartListener,\r\n          supportsPassiveEventListeners() ? ({passive: true, capture: true} as any) : true);\r\n      window.removeEventListener('focus', windowFocusListener);\r\n\r\n      // Clear timeouts for all potentially pending timeouts to prevent the leaks.\r\n      clearTimeout(this._windowFocusTimeoutId);\r\n      clearTimeout(this._touchTimeoutId);\r\n      clearTimeout(this._originTimeoutId);\r\n    };\r\n  }\r\n\r\n  private _toggleClass(element: Element, className: string, shouldSet: boolean) {\r\n    if (shouldSet) {\r\n      element.classList.add(className);\r\n    } else {\r\n      element.classList.remove(className);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sets the focus classes on the element based on the given focus origin.\r\n   * @param element The element to update the classes on.\r\n   * @param origin The focus origin.\r\n   */\r\n  private _setClasses(element: HTMLElement, origin?: FocusOrigin): void {\r\n    const elementInfo = this._elementInfo.get(element);\r\n\r\n    if (elementInfo) {\r\n      this._toggleClass(element, 'cdk-focused', !!origin);\r\n      this._toggleClass(element, 'cdk-touch-focused', origin === 'touch');\r\n      this._toggleClass(element, 'cdk-keyboard-focused', origin === 'keyboard');\r\n      this._toggleClass(element, 'cdk-mouse-focused', origin === 'mouse');\r\n      this._toggleClass(element, 'cdk-program-focused', origin === 'program');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sets the origin and schedules an async function to clear it at the end of the event queue.\r\n   * @param origin The origin to set.\r\n   */\r\n  private _setOriginForCurrentEventQueue(origin: FocusOrigin): void {\r\n    this._ngZone.runOutsideAngular(() => {\r\n      this._origin = origin;\r\n      // Sometimes the focus origin won't be valid in Firefox because Firefox seems to focus *one*\r\n      // tick after the interaction event fired. To ensure the focus origin is always correct,\r\n      // the focus origin will be determined at the beginning of the next tick.\r\n      this._originTimeoutId = setTimeout(() => this._origin = null, 1);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Checks whether the given focus event was caused by a touchstart event.\r\n   * @param event The focus event to check.\r\n   * @returns Whether the event was caused by a touch.\r\n   */\r\n  private _wasCausedByTouch(event: FocusEvent): boolean {\r\n    // Note(mmalerba): This implementation is not quite perfect, there is a small edge case.\r\n    // Consider the following dom structure:\r\n    //\r\n    // <div #parent tabindex=\"0\" cdkFocusClasses>\r\n    //   <div #child (click)=\"#parent.focus()\"></div>\r\n    // </div>\r\n    //\r\n    // If the user touches the #child element and the #parent is programmatically focused as a\r\n    // result, this code will still consider it to have been caused by the touch event and will\r\n    // apply the cdk-touch-focused class rather than the cdk-program-focused class. This is a\r\n    // relatively small edge-case that can be worked around by using\r\n    // focusVia(parentEl, 'program') to focus the parent element.\r\n    //\r\n    // If we decide that we absolutely must handle this case correctly, we can do so by listening\r\n    // for the first focus event after the touchstart, and then the first blur event after that\r\n    // focus event. When that blur event fires we know that whatever follows is not a result of the\r\n    // touchstart.\r\n    let focusTarget = event.target;\r\n    return this._lastTouchTarget instanceof Node && focusTarget instanceof Node &&\r\n        (focusTarget === this._lastTouchTarget || focusTarget.contains(this._lastTouchTarget));\r\n  }\r\n\r\n  /**\r\n   * Handles focus events on a registered element.\r\n   * @param event The focus event.\r\n   * @param element The monitored element.\r\n   */\r\n  private _onFocus(event: FocusEvent, element: HTMLElement) {\r\n    // NOTE(mmalerba): We currently set the classes based on the focus origin of the most recent\r\n    // focus event affecting the monitored element. If we want to use the origin of the first event\r\n    // instead we should check for the cdk-focused class here and return if the element already has\r\n    // it. (This only matters for elements that have includesChildren = true).\r\n\r\n    // If we are not counting child-element-focus as focused, make sure that the event target is the\r\n    // monitored element itself.\r\n    const elementInfo = this._elementInfo.get(element);\r\n    if (!elementInfo || (!elementInfo.checkChildren && element !== event.target)) {\r\n      return;\r\n    }\r\n\r\n    // If we couldn't detect a cause for the focus event, it's due to one of three reasons:\r\n    // 1) The window has just regained focus, in which case we want to restore the focused state of\r\n    //    the element from before the window blurred.\r\n    // 2) It was caused by a touch event, in which case we mark the origin as 'touch'.\r\n    // 3) The element was programmatically focused, in which case we should mark the origin as\r\n    //    'program'.\r\n    let origin = this._origin;\r\n    if (!origin) {\r\n      if (this._windowFocused && this._lastFocusOrigin) {\r\n        origin = this._lastFocusOrigin;\r\n      } else if (this._wasCausedByTouch(event)) {\r\n        origin = 'touch';\r\n      } else {\r\n        origin = 'program';\r\n      }\r\n    }\r\n\r\n    this._setClasses(element, origin);\r\n    this._emitOrigin(elementInfo.subject, origin);\r\n    this._lastFocusOrigin = origin;\r\n  }\r\n\r\n  /**\r\n   * Handles blur events on a registered element.\r\n   * @param event The blur event.\r\n   * @param element The monitored element.\r\n   */\r\n  _onBlur(event: FocusEvent, element: HTMLElement) {\r\n    // If we are counting child-element-focus as focused, make sure that we aren't just blurring in\r\n    // order to focus another child of the monitored element.\r\n    const elementInfo = this._elementInfo.get(element);\r\n\r\n    if (!elementInfo || (elementInfo.checkChildren && event.relatedTarget instanceof Node &&\r\n        element.contains(event.relatedTarget))) {\r\n      return;\r\n    }\r\n\r\n    this._setClasses(element);\r\n    this._emitOrigin(elementInfo.subject, null);\r\n  }\r\n\r\n  private _emitOrigin(subject: Subject<FocusOrigin>, origin: FocusOrigin) {\r\n    this._ngZone.run(() => subject.next(origin));\r\n  }\r\n\r\n  private _incrementMonitoredElementCount() {\r\n    // Register global listeners when first element is monitored.\r\n    if (++this._monitoredElementCount == 1) {\r\n      this._registerGlobalListeners();\r\n    }\r\n  }\r\n\r\n  private _decrementMonitoredElementCount() {\r\n    // Unregister global listeners when last element is unmonitored.\r\n    if (!--this._monitoredElementCount) {\r\n      this._unregisterGlobalListeners();\r\n      this._unregisterGlobalListeners = () => {};\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Directive that determines how a particular element was focused (via keyboard, mouse, touch, or\r\n * programmatically) and adds corresponding classes to the element.\r\n *\r\n * There are two variants of this directive:\r\n * 1) cdkMonitorElementFocus: does not consider an element to be focused if one of its children is\r\n *    focused.\r\n * 2) cdkMonitorSubtreeFocus: considers an element focused if it or any of its children are focused.\r\n */\r\n@Directive({\r\n  selector: '[cdkMonitorElementFocus], [cdkMonitorSubtreeFocus]',\r\n})\r\nexport class CdkMonitorFocus implements OnDestroy {\r\n  private _monitorSubscription: Subscription;\r\n  @Output() cdkFocusChange = new EventEmitter<FocusOrigin>();\r\n\r\n  constructor(private _elementRef: ElementRef, private _focusMonitor: FocusMonitor) {\r\n    this._monitorSubscription = this._focusMonitor.monitor(\r\n        this._elementRef.nativeElement,\r\n        this._elementRef.nativeElement.hasAttribute('cdkMonitorSubtreeFocus'))\r\n        .subscribe(origin => this.cdkFocusChange.emit(origin));\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\r\n    this._monitorSubscription.unsubscribe();\r\n  }\r\n}\r\n\r\n/** @docs-private @deprecated @breaking-change 7.0.0 */\r\nexport function FOCUS_MONITOR_PROVIDER_FACTORY(\r\n    parentDispatcher: FocusMonitor, ngZone: NgZone, platform: Platform) {\r\n  return parentDispatcher || new FocusMonitor(ngZone, platform);\r\n}\r\n\r\n/** @docs-private @deprecated @breaking-change 7.0.0 */\r\nexport const FOCUS_MONITOR_PROVIDER = {\r\n  // If there is already a FocusMonitor available, use that. Otherwise, provide a new one.\r\n  provide: FocusMonitor,\r\n  deps: [[new Optional(), new SkipSelf(), FocusMonitor], NgZone, Platform],\r\n  useFactory: FOCUS_MONITOR_PROVIDER_FACTORY\r\n};\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {ContentObserver} from '@angular/cdk/observers';\r\nimport {DOCUMENT} from '@angular/common';\r\nimport {\r\n  Directive,\r\n  ElementRef,\r\n  Inject,\r\n  Injectable,\r\n  Input,\r\n  NgZone,\r\n  OnDestroy,\r\n  Optional,\r\n  Provider,\r\n  SkipSelf,\r\n} from '@angular/core';\r\nimport {Subscription} from 'rxjs';\r\nimport {LIVE_ANNOUNCER_ELEMENT_TOKEN} from './live-announcer-token';\r\n\r\n\r\n/** Possible politeness levels. */\r\nexport type AriaLivePoliteness = 'off' | 'polite' | 'assertive';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class LiveAnnouncer implements OnDestroy {\r\n  private readonly _liveElement: HTMLElement;\r\n  private _document: Document;\r\n\r\n  constructor(\r\n      @Optional() @Inject(LIVE_ANNOUNCER_ELEMENT_TOKEN) elementToken: any,\r\n      @Inject(DOCUMENT) _document: any) {\r\n\r\n    // We inject the live element and document as `any` because the constructor signature cannot\r\n    // reference browser globals (HTMLElement, Document) on non-browser environments, since having\r\n    // a class decorator causes TypeScript to preserve the constructor signature types.\r\n    this._document = _document;\r\n    this._liveElement = elementToken || this._createLiveElement();\r\n  }\r\n\r\n  /**\r\n   * Announces a message to screenreaders.\r\n   * @param message Message to be announced to the screenreader\r\n   * @param politeness The politeness of the announcer element\r\n   * @returns Promise that will be resolved when the message is added to the DOM.\r\n   */\r\n  announce(message: string, politeness: AriaLivePoliteness = 'polite'): Promise<void> {\r\n    this._liveElement.textContent = '';\r\n\r\n    // TODO: ensure changing the politeness works on all environments we support.\r\n    this._liveElement.setAttribute('aria-live', politeness);\r\n\r\n    // This 100ms timeout is necessary for some browser + screen-reader combinations:\r\n    // - Both JAWS and NVDA over IE11 will not announce anything without a non-zero timeout.\r\n    // - With Chrome and IE11 with NVDA or JAWS, a repeated (identical) message won't be read a\r\n    //   second time without clearing and then using a non-zero delay.\r\n    // (using JAWS 17 at time of this writing).\r\n    return new Promise(resolve => {\r\n      setTimeout(() => {\r\n        this._liveElement.textContent = message;\r\n        resolve();\r\n      }, 100);\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this._liveElement && this._liveElement.parentNode) {\r\n      this._liveElement.parentNode.removeChild(this._liveElement);\r\n    }\r\n  }\r\n\r\n  private _createLiveElement(): HTMLElement {\r\n    const elementClass = 'cdk-live-announcer-element';\r\n    const previousElements = this._document.getElementsByClassName(elementClass);\r\n\r\n    // Remove any old containers. This can happen when coming in from a server-side-rendered page.\r\n    for (let i = 0; i < previousElements.length; i++) {\r\n      previousElements[i].parentNode!.removeChild(previousElements[i]);\r\n    }\r\n\r\n    const liveEl = this._document.createElement('div');\r\n    liveEl.classList.add(elementClass);\r\n    liveEl.classList.add('cdk-visually-hidden');\r\n\r\n    liveEl.setAttribute('aria-atomic', 'true');\r\n    liveEl.setAttribute('aria-live', 'polite');\r\n\r\n    this._document.body.appendChild(liveEl);\r\n\r\n    return liveEl;\r\n  }\r\n\r\n}\r\n\r\n\r\n/**\r\n * A directive that works similarly to aria-live, but uses the LiveAnnouncer to ensure compatibility\r\n * with a wider range of browsers and screen readers.\r\n */\r\n@Directive({\r\n  selector: '[cdkAriaLive]',\r\n  exportAs: 'cdkAriaLive',\r\n})\r\nexport class CdkAriaLive implements OnDestroy {\r\n  /** The aria-live politeness level to use when announcing messages. */\r\n  @Input('cdkAriaLive')\r\n  get politeness(): AriaLivePoliteness { return this._politeness; }\r\n  set politeness(value: AriaLivePoliteness) {\r\n    this._politeness = value === 'polite' || value === 'assertive' ? value : 'off';\r\n    if (this._politeness === 'off') {\r\n      if (this._subscription) {\r\n        this._subscription.unsubscribe();\r\n        this._subscription = null;\r\n      }\r\n    } else {\r\n      if (!this._subscription) {\r\n        this._subscription = this._ngZone.runOutsideAngular(\r\n            () => this._contentObserver.observe(this._elementRef.nativeElement).subscribe(\r\n                () => this._liveAnnouncer.announce(\r\n                    this._elementRef.nativeElement.innerText, this._politeness)));\r\n      }\r\n    }\r\n  }\r\n  private _politeness: AriaLivePoliteness = 'off';\r\n\r\n  private _subscription: Subscription | null;\r\n\r\n  constructor(private _elementRef: ElementRef, private _liveAnnouncer: LiveAnnouncer,\r\n              private _contentObserver: ContentObserver, private _ngZone: NgZone) {}\r\n\r\n  ngOnDestroy() {\r\n    if (this._subscription) {\r\n      this._subscription.unsubscribe();\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/** @docs-private @deprecated @breaking-change 7.0.0 */\r\nexport function LIVE_ANNOUNCER_PROVIDER_FACTORY(\r\n    parentDispatcher: LiveAnnouncer, liveElement: any, _document: any) {\r\n  return parentDispatcher || new LiveAnnouncer(liveElement, _document);\r\n}\r\n\r\n\r\n/** @docs-private @deprecated @breaking-change 7.0.0 */\r\nexport const LIVE_ANNOUNCER_PROVIDER: Provider = {\r\n  // If there is already a LiveAnnouncer available, use that. Otherwise, provide a new one.\r\n  provide: LiveAnnouncer,\r\n  deps: [\r\n    [new Optional(), new SkipSelf(), LiveAnnouncer],\r\n    [new Optional(), new Inject(LIVE_ANNOUNCER_ELEMENT_TOKEN)],\r\n    DOCUMENT,\r\n  ],\r\n  useFactory: LIVE_ANNOUNCER_PROVIDER_FACTORY\r\n};\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {InjectionToken} from '@angular/core';\r\n\r\n// The token for the live announcer element is defined in a separate file from LiveAnnouncer\r\n// as a workaround for https://github.com/angular/angular/issues/22559\r\n\r\nexport const LIVE_ANNOUNCER_ELEMENT_TOKEN =\r\n    new InjectionToken<HTMLElement | null>('liveAnnouncerElement', {\r\n      providedIn: 'root',\r\n      factory: LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY,\r\n    });\r\n\r\n/** @docs-private */\r\nexport function LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY(): null {\r\n  return null;\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\r\nimport {DOCUMENT} from '@angular/common';\r\nimport {\r\n  AfterContentInit,\r\n  Directive,\r\n  ElementRef,\r\n  Inject,\r\n  Injectable,\r\n  Input,\r\n  NgZone,\r\n  OnDestroy,\r\n  DoCheck,\r\n} from '@angular/core';\r\nimport {take} from 'rxjs/operators';\r\nimport {InteractivityChecker} from '../interactivity-checker/interactivity-checker';\r\n\r\n\r\n/**\r\n * Class that allows for trapping focus within a DOM element.\r\n *\r\n * This class currently uses a relatively simple approach to focus trapping.\r\n * It assumes that the tab order is the same as DOM order, which is not necessarily true.\r\n * Things like `tabIndex > 0`, flex `order`, and shadow roots can cause to two to misalign.\r\n */\r\nexport class FocusTrap {\r\n  private _startAnchor: HTMLElement | null;\r\n  private _endAnchor: HTMLElement | null;\r\n  private _hasAttached = false;\r\n\r\n  /** Whether the focus trap is active. */\r\n  get enabled(): boolean { return this._enabled; }\r\n  set enabled(val: boolean) {\r\n    this._enabled = val;\r\n\r\n    if (this._startAnchor && this._endAnchor) {\r\n      this._startAnchor.tabIndex = this._endAnchor.tabIndex = this._enabled ? 0 : -1;\r\n    }\r\n  }\r\n  private _enabled: boolean = true;\r\n\r\n  constructor(\r\n    private _element: HTMLElement,\r\n    private _checker: InteractivityChecker,\r\n    private _ngZone: NgZone,\r\n    private _document: Document,\r\n    deferAnchors = false) {\r\n\r\n    if (!deferAnchors) {\r\n      this.attachAnchors();\r\n    }\r\n  }\r\n\r\n  /** Destroys the focus trap by cleaning up the anchors. */\r\n  destroy() {\r\n    if (this._startAnchor && this._startAnchor.parentNode) {\r\n      this._startAnchor.parentNode.removeChild(this._startAnchor);\r\n    }\r\n\r\n    if (this._endAnchor && this._endAnchor.parentNode) {\r\n      this._endAnchor.parentNode.removeChild(this._endAnchor);\r\n    }\r\n\r\n    this._startAnchor = this._endAnchor = null;\r\n  }\r\n\r\n  /**\r\n   * Inserts the anchors into the DOM. This is usually done automatically\r\n   * in the constructor, but can be deferred for cases like directives with `*ngIf`.\r\n   * @returns Whether the focus trap managed to attach successfuly. This may not be the case\r\n   * if the target element isn't currently in the DOM.\r\n   */\r\n  attachAnchors(): boolean {\r\n    // If we're not on the browser, there can be no focus to trap.\r\n    if (this._hasAttached) {\r\n      return true;\r\n    }\r\n\r\n    this._ngZone.runOutsideAngular(() => {\r\n      if (!this._startAnchor) {\r\n        this._startAnchor = this._createAnchor();\r\n        this._startAnchor!.addEventListener('focus', () => this.focusLastTabbableElement());\r\n      }\r\n\r\n      if (!this._endAnchor) {\r\n        this._endAnchor = this._createAnchor();\r\n        this._endAnchor!.addEventListener('focus', () => this.focusFirstTabbableElement());\r\n      }\r\n    });\r\n\r\n    if (this._element.parentNode) {\r\n      this._element.parentNode.insertBefore(this._startAnchor!, this._element);\r\n      this._element.parentNode.insertBefore(this._endAnchor!, this._element.nextSibling);\r\n      this._hasAttached = true;\r\n    }\r\n\r\n    return this._hasAttached;\r\n  }\r\n\r\n  /**\r\n   * Waits for the zone to stabilize, then either focuses the first element that the\r\n   * user specified, or the first tabbable element.\r\n   * @returns Returns a promise that resolves with a boolean, depending\r\n   * on whether focus was moved successfuly.\r\n   */\r\n  focusInitialElementWhenReady(): Promise<boolean> {\r\n    return new Promise<boolean>(resolve => {\r\n      this._executeOnStable(() => resolve(this.focusInitialElement()));\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Waits for the zone to stabilize, then focuses\r\n   * the first tabbable element within the focus trap region.\r\n   * @returns Returns a promise that resolves with a boolean, depending\r\n   * on whether focus was moved successfuly.\r\n   */\r\n  focusFirstTabbableElementWhenReady(): Promise<boolean> {\r\n    return new Promise<boolean>(resolve => {\r\n      this._executeOnStable(() => resolve(this.focusFirstTabbableElement()));\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Waits for the zone to stabilize, then focuses\r\n   * the last tabbable element within the focus trap region.\r\n   * @returns Returns a promise that resolves with a boolean, depending\r\n   * on whether focus was moved successfuly.\r\n   */\r\n  focusLastTabbableElementWhenReady(): Promise<boolean> {\r\n    return new Promise<boolean>(resolve => {\r\n      this._executeOnStable(() => resolve(this.focusLastTabbableElement()));\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get the specified boundary element of the trapped region.\r\n   * @param bound The boundary to get (start or end of trapped region).\r\n   * @returns The boundary element.\r\n   */\r\n  private _getRegionBoundary(bound: 'start' | 'end'): HTMLElement | null {\r\n    // Contains the deprecated version of selector, for temporary backwards comparability.\r\n    let markers = this._element.querySelectorAll(`[cdk-focus-region-${bound}], ` +\r\n                                                 `[cdkFocusRegion${bound}], ` +\r\n                                                 `[cdk-focus-${bound}]`) as NodeListOf<HTMLElement>;\r\n\r\n    for (let i = 0; i < markers.length; i++) {\r\n      // @breaking-change 7.0.0\r\n      if (markers[i].hasAttribute(`cdk-focus-${bound}`)) {\r\n        console.warn(`Found use of deprecated attribute 'cdk-focus-${bound}', ` +\r\n                     `use 'cdkFocusRegion${bound}' instead. The deprecated ` +\r\n                     `attribute will be removed in 7.0.0.`, markers[i]);\r\n      } else if (markers[i].hasAttribute(`cdk-focus-region-${bound}`)) {\r\n        console.warn(`Found use of deprecated attribute 'cdk-focus-region-${bound}', ` +\r\n                     `use 'cdkFocusRegion${bound}' instead. The deprecated attribute ` +\r\n                     `will be removed in 7.0.0.`, markers[i]);\r\n      }\r\n    }\r\n\r\n    if (bound == 'start') {\r\n      return markers.length ? markers[0] : this._getFirstTabbableElement(this._element);\r\n    }\r\n    return markers.length ?\r\n        markers[markers.length - 1] : this._getLastTabbableElement(this._element);\r\n  }\r\n\r\n  /**\r\n   * Focuses the element that should be focused when the focus trap is initialized.\r\n   * @returns Whether focus was moved successfuly.\r\n   */\r\n  focusInitialElement(): boolean {\r\n    // Contains the deprecated version of selector, for temporary backwards comparability.\r\n    const redirectToElement = this._element.querySelector(`[cdk-focus-initial], ` +\r\n                                                          `[cdkFocusInitial]`) as HTMLElement;\r\n\r\n    if (redirectToElement) {\r\n      // @breaking-change 7.0.0\r\n      if (redirectToElement.hasAttribute(`cdk-focus-initial`)) {\r\n        console.warn(`Found use of deprecated attribute 'cdk-focus-initial', ` +\r\n                    `use 'cdkFocusInitial' instead. The deprecated attribute ` +\r\n                    `will be removed in 7.0.0`, redirectToElement);\r\n      }\r\n\r\n      redirectToElement.focus();\r\n      return true;\r\n    }\r\n\r\n    return this.focusFirstTabbableElement();\r\n  }\r\n\r\n  /**\r\n   * Focuses the first tabbable element within the focus trap region.\r\n   * @returns Whether focus was moved successfuly.\r\n   */\r\n  focusFirstTabbableElement(): boolean {\r\n    const redirectToElement = this._getRegionBoundary('start');\r\n\r\n    if (redirectToElement) {\r\n      redirectToElement.focus();\r\n    }\r\n\r\n    return !!redirectToElement;\r\n  }\r\n\r\n  /**\r\n   * Focuses the last tabbable element within the focus trap region.\r\n   * @returns Whether focus was moved successfuly.\r\n   */\r\n  focusLastTabbableElement(): boolean {\r\n    const redirectToElement = this._getRegionBoundary('end');\r\n\r\n    if (redirectToElement) {\r\n      redirectToElement.focus();\r\n    }\r\n\r\n    return !!redirectToElement;\r\n  }\r\n\r\n  /**\r\n   * Checks whether the focus trap has successfuly been attached.\r\n   */\r\n  hasAttached(): boolean {\r\n    return this._hasAttached;\r\n  }\r\n\r\n  /** Get the first tabbable element from a DOM subtree (inclusive). */\r\n  private _getFirstTabbableElement(root: HTMLElement): HTMLElement | null {\r\n    if (this._checker.isFocusable(root) && this._checker.isTabbable(root)) {\r\n      return root;\r\n    }\r\n\r\n    // Iterate in DOM order. Note that IE doesn't have `children` for SVG so we fall\r\n    // back to `childNodes` which includes text nodes, comments etc.\r\n    let children = root.children || root.childNodes;\r\n\r\n    for (let i = 0; i < children.length; i++) {\r\n      let tabbableChild = children[i].nodeType === this._document.ELEMENT_NODE ?\r\n        this._getFirstTabbableElement(children[i] as HTMLElement) :\r\n        null;\r\n\r\n      if (tabbableChild) {\r\n        return tabbableChild;\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  /** Get the last tabbable element from a DOM subtree (inclusive). */\r\n  private _getLastTabbableElement(root: HTMLElement): HTMLElement | null {\r\n    if (this._checker.isFocusable(root) && this._checker.isTabbable(root)) {\r\n      return root;\r\n    }\r\n\r\n    // Iterate in reverse DOM order.\r\n    let children = root.children || root.childNodes;\r\n\r\n    for (let i = children.length - 1; i >= 0; i--) {\r\n      let tabbableChild = children[i].nodeType === this._document.ELEMENT_NODE ?\r\n        this._getLastTabbableElement(children[i] as HTMLElement) :\r\n        null;\r\n\r\n      if (tabbableChild) {\r\n        return tabbableChild;\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  /** Creates an anchor element. */\r\n  private _createAnchor(): HTMLElement {\r\n    const anchor = this._document.createElement('div');\r\n    anchor.tabIndex = this._enabled ? 0 : -1;\r\n    anchor.classList.add('cdk-visually-hidden');\r\n    anchor.classList.add('cdk-focus-trap-anchor');\r\n    return anchor;\r\n  }\r\n\r\n  /** Executes a function when the zone is stable. */\r\n  private _executeOnStable(fn: () => any): void {\r\n    if (this._ngZone.isStable) {\r\n      fn();\r\n    } else {\r\n      this._ngZone.onStable.asObservable().pipe(take(1)).subscribe(fn);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/** Factory that allows easy instantiation of focus traps. */\r\n@Injectable({providedIn: 'root'})\r\nexport class FocusTrapFactory {\r\n  private _document: Document;\r\n\r\n  constructor(\r\n      private _checker: InteractivityChecker,\r\n      private _ngZone: NgZone,\r\n      @Inject(DOCUMENT) _document: any) {\r\n\r\n    this._document = _document;\r\n  }\r\n\r\n  /**\r\n   * Creates a focus-trapped region around the given element.\r\n   * @param element The element around which focus will be trapped.\r\n   * @param deferCaptureElements Defers the creation of focus-capturing elements to be done\r\n   *     manually by the user.\r\n   * @returns The created focus trap instance.\r\n   */\r\n  create(element: HTMLElement, deferCaptureElements: boolean = false): FocusTrap {\r\n    return new FocusTrap(\r\n        element, this._checker, this._ngZone, this._document, deferCaptureElements);\r\n  }\r\n}\r\n\r\n/** Directive for trapping focus within a region. */\r\n@Directive({\r\n  selector: '[cdkTrapFocus]',\r\n  exportAs: 'cdkTrapFocus',\r\n})\r\nexport class CdkTrapFocus implements OnDestroy, AfterContentInit, DoCheck {\r\n  private _document: Document;\r\n\r\n  /** Underlying FocusTrap instance. */\r\n  focusTrap: FocusTrap;\r\n\r\n  /** Previously focused element to restore focus to upon destroy when using autoCapture. */\r\n  private _previouslyFocusedElement: HTMLElement | null = null;\r\n\r\n  /** Whether the focus trap is active. */\r\n  @Input('cdkTrapFocus')\r\n  get enabled(): boolean { return this.focusTrap.enabled; }\r\n  set enabled(value: boolean) { this.focusTrap.enabled = coerceBooleanProperty(value); }\r\n\r\n  /**\r\n   * Whether the directive should automatially move focus into the trapped region upon\r\n   * initialization and return focus to the previous activeElement upon destruction.\r\n   */\r\n  @Input('cdkTrapFocusAutoCapture')\r\n  get autoCapture(): boolean { return this._autoCapture; }\r\n  set autoCapture(value: boolean) { this._autoCapture = coerceBooleanProperty(value); }\r\n  private _autoCapture: boolean;\r\n\r\n  constructor(\r\n      private _elementRef: ElementRef,\r\n      private _focusTrapFactory: FocusTrapFactory,\r\n      @Inject(DOCUMENT) _document: any) {\r\n\r\n    this._document = _document;\r\n    this.focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement, true);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.focusTrap.destroy();\r\n\r\n    // If we stored a previously focused element when using autoCapture, return focus to that\r\n    // element now that the trapped region is being destroyed.\r\n    if (this._previouslyFocusedElement) {\r\n      this._previouslyFocusedElement.focus();\r\n      this._previouslyFocusedElement = null;\r\n    }\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    this.focusTrap.attachAnchors();\r\n\r\n    if (this.autoCapture) {\r\n      this._previouslyFocusedElement = this._document.activeElement as HTMLElement;\r\n      this.focusTrap.focusInitialElementWhenReady();\r\n    }\r\n  }\r\n\r\n  ngDoCheck() {\r\n    if (!this.focusTrap.hasAttached()) {\r\n      this.focusTrap.attachAnchors();\r\n    }\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {Platform} from '@angular/cdk/platform';\r\nimport {Injectable} from '@angular/core';\r\n\r\n\r\n// The InteractivityChecker leans heavily on the ally.js accessibility utilities.\r\n// Methods like `isTabbable` are only covering specific edge-cases for the browsers which are\r\n// supported.\r\n\r\n/**\r\n * Utility for checking the interactivity of an element, such as whether is is focusable or\r\n * tabbable.\r\n */\r\n@Injectable({providedIn: 'root'})\r\nexport class InteractivityChecker {\r\n\r\n  constructor(private _platform: Platform) {}\r\n\r\n  /**\r\n   * Gets whether an element is disabled.\r\n   *\r\n   * @param element Element to be checked.\r\n   * @returns Whether the element is disabled.\r\n   */\r\n  isDisabled(element: HTMLElement): boolean {\r\n    // This does not capture some cases, such as a non-form control with a disabled attribute or\r\n    // a form control inside of a disabled form, but should capture the most common cases.\r\n    return element.hasAttribute('disabled');\r\n  }\r\n\r\n  /**\r\n   * Gets whether an element is visible for the purposes of interactivity.\r\n   *\r\n   * This will capture states like `display: none` and `visibility: hidden`, but not things like\r\n   * being clipped by an `overflow: hidden` parent or being outside the viewport.\r\n   *\r\n   * @returns Whether the element is visible.\r\n   */\r\n  isVisible(element: HTMLElement): boolean {\r\n    return hasGeometry(element) && getComputedStyle(element).visibility === 'visible';\r\n  }\r\n\r\n  /**\r\n   * Gets whether an element can be reached via Tab key.\r\n   * Assumes that the element has already been checked with isFocusable.\r\n   *\r\n   * @param element Element to be checked.\r\n   * @returns Whether the element is tabbable.\r\n   */\r\n  isTabbable(element: HTMLElement): boolean {\r\n    // Nothing is tabbable on the the server 😎\r\n    if (!this._platform.isBrowser) {\r\n      return false;\r\n    }\r\n\r\n    const frameElement = getFrameElement(getWindow(element));\r\n\r\n    if (frameElement) {\r\n      const frameType = frameElement && frameElement.nodeName.toLowerCase();\r\n\r\n      // Frame elements inherit their tabindex onto all child elements.\r\n      if (getTabIndexValue(frameElement) === -1) {\r\n        return false;\r\n      }\r\n\r\n      // Webkit and Blink consider anything inside of an <object> element as non-tabbable.\r\n      if ((this._platform.BLINK || this._platform.WEBKIT) && frameType === 'object') {\r\n        return false;\r\n      }\r\n\r\n      // Webkit and Blink disable tabbing to an element inside of an invisible frame.\r\n      if ((this._platform.BLINK || this._platform.WEBKIT) && !this.isVisible(frameElement)) {\r\n        return false;\r\n      }\r\n\r\n    }\r\n\r\n    let nodeName = element.nodeName.toLowerCase();\r\n    let tabIndexValue = getTabIndexValue(element);\r\n\r\n    if (element.hasAttribute('contenteditable')) {\r\n      return tabIndexValue !== -1;\r\n    }\r\n\r\n    if (nodeName === 'iframe') {\r\n      // The frames may be tabbable depending on content, but it's not possibly to reliably\r\n      // investigate the content of the frames.\r\n      return false;\r\n    }\r\n\r\n    if (nodeName === 'audio') {\r\n      if (!element.hasAttribute('controls')) {\r\n        // By default an <audio> element without the controls enabled is not tabbable.\r\n        return false;\r\n      } else if (this._platform.BLINK) {\r\n        // In Blink <audio controls> elements are always tabbable.\r\n        return true;\r\n      }\r\n    }\r\n\r\n    if (nodeName === 'video') {\r\n      if (!element.hasAttribute('controls') && this._platform.TRIDENT) {\r\n        // In Trident a <video> element without the controls enabled is not tabbable.\r\n        return false;\r\n      } else if (this._platform.BLINK || this._platform.FIREFOX) {\r\n        // In Chrome and Firefox <video controls> elements are always tabbable.\r\n        return true;\r\n      }\r\n    }\r\n\r\n    if (nodeName === 'object' && (this._platform.BLINK || this._platform.WEBKIT)) {\r\n      // In all Blink and WebKit based browsers <object> elements are never tabbable.\r\n      return false;\r\n    }\r\n\r\n    // In iOS the browser only considers some specific elements as tabbable.\r\n    if (this._platform.WEBKIT && this._platform.IOS && !isPotentiallyTabbableIOS(element)) {\r\n      return false;\r\n    }\r\n\r\n    return element.tabIndex >= 0;\r\n  }\r\n\r\n  /**\r\n   * Gets whether an element can be focused by the user.\r\n   *\r\n   * @param element Element to be checked.\r\n   * @returns Whether the element is focusable.\r\n   */\r\n  isFocusable(element: HTMLElement): boolean {\r\n    // Perform checks in order of left to most expensive.\r\n    // Again, naive approach that does not capture many edge cases and browser quirks.\r\n    return isPotentiallyFocusable(element) && !this.isDisabled(element) && this.isVisible(element);\r\n  }\r\n\r\n}\r\n\r\n/**\r\n * Returns the frame element from a window object. Since browsers like MS Edge throw errors if\r\n * the frameElement property is being accessed from a different host address, this property\r\n * should be accessed carefully.\r\n */\r\nfunction getFrameElement(window: Window) {\r\n  try {\r\n    return window.frameElement as HTMLElement;\r\n  } catch (e) {\r\n    return null;\r\n  }\r\n}\r\n\r\n/** Checks whether the specified element has any geometry / rectangles. */\r\nfunction hasGeometry(element: HTMLElement): boolean {\r\n  // Use logic from jQuery to check for an invisible element.\r\n  // See https://github.com/jquery/jquery/blob/master/src/css/hiddenVisibleSelectors.js#L12\r\n  return !!(element.offsetWidth || element.offsetHeight ||\r\n      (typeof element.getClientRects === 'function' && element.getClientRects().length));\r\n}\r\n\r\n/** Gets whether an element's  */\r\nfunction isNativeFormElement(element: Node) {\r\n  let nodeName = element.nodeName.toLowerCase();\r\n  return nodeName === 'input' ||\r\n      nodeName === 'select' ||\r\n      nodeName === 'button' ||\r\n      nodeName === 'textarea';\r\n}\r\n\r\n/** Gets whether an element is an `<input type=\"hidden\">`. */\r\nfunction isHiddenInput(element: HTMLElement): boolean {\r\n  return isInputElement(element) && element.type == 'hidden';\r\n}\r\n\r\n/** Gets whether an element is an anchor that has an href attribute. */\r\nfunction isAnchorWithHref(element: HTMLElement): boolean {\r\n  return isAnchorElement(element) && element.hasAttribute('href');\r\n}\r\n\r\n/** Gets whether an element is an input element. */\r\nfunction isInputElement(element: HTMLElement): element is HTMLInputElement {\r\n  return element.nodeName.toLowerCase() == 'input';\r\n}\r\n\r\n/** Gets whether an element is an anchor element. */\r\nfunction isAnchorElement(element: HTMLElement): element is HTMLAnchorElement {\r\n  return element.nodeName.toLowerCase() == 'a';\r\n}\r\n\r\n/** Gets whether an element has a valid tabindex. */\r\nfunction hasValidTabIndex(element: HTMLElement): boolean {\r\n  if (!element.hasAttribute('tabindex') || element.tabIndex === undefined) {\r\n    return false;\r\n  }\r\n\r\n  let tabIndex = element.getAttribute('tabindex');\r\n\r\n  // IE11 parses tabindex=\"\" as the value \"-32768\"\r\n  if (tabIndex == '-32768') {\r\n    return false;\r\n  }\r\n\r\n  return !!(tabIndex && !isNaN(parseInt(tabIndex, 10)));\r\n}\r\n\r\n/**\r\n * Returns the parsed tabindex from the element attributes instead of returning the\r\n * evaluated tabindex from the browsers defaults.\r\n */\r\nfunction getTabIndexValue(element: HTMLElement): number | null {\r\n  if (!hasValidTabIndex(element)) {\r\n    return null;\r\n  }\r\n\r\n  // See browser issue in Gecko https://bugzilla.mozilla.org/show_bug.cgi?id=1128054\r\n  const tabIndex = parseInt(element.getAttribute('tabindex') || '', 10);\r\n\r\n  return isNaN(tabIndex) ? -1 : tabIndex;\r\n}\r\n\r\n/** Checks whether the specified element is potentially tabbable on iOS */\r\nfunction isPotentiallyTabbableIOS(element: HTMLElement): boolean {\r\n  let nodeName = element.nodeName.toLowerCase();\r\n  let inputType = nodeName === 'input' && (element as HTMLInputElement).type;\r\n\r\n  return inputType === 'text'\r\n      || inputType === 'password'\r\n      || nodeName === 'select'\r\n      || nodeName === 'textarea';\r\n}\r\n\r\n/**\r\n * Gets whether an element is potentially focusable without taking current visible/disabled state\r\n * into account.\r\n */\r\nfunction isPotentiallyFocusable(element: HTMLElement): boolean {\r\n  // Inputs are potentially focusable *unless* they're type=\"hidden\".\r\n  if (isHiddenInput(element)) {\r\n    return false;\r\n  }\r\n\r\n  return isNativeFormElement(element) ||\r\n      isAnchorWithHref(element) ||\r\n      element.hasAttribute('contenteditable') ||\r\n      hasValidTabIndex(element);\r\n}\r\n\r\n/** Gets the parent window of a DOM node with regards of being inside of an iframe. */\r\nfunction getWindow(node: HTMLElement): Window {\r\n  return node.ownerDocument.defaultView || window;\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {ListKeyManager, ListKeyManagerOption} from './list-key-manager';\r\nimport {FocusOrigin} from '../focus-monitor/focus-monitor';\r\n\r\n/**\r\n * This is the interface for focusable items (used by the FocusKeyManager).\r\n * Each item must know how to focus itself, whether or not it is currently disabled\r\n * and be able to supply it's label.\r\n */\r\nexport interface FocusableOption extends ListKeyManagerOption {\r\n  /** Focuses the `FocusableOption`. */\r\n  focus(origin?: FocusOrigin): void;\r\n}\r\n\r\nexport class FocusKeyManager<T> extends ListKeyManager<FocusableOption & T> {\r\n  private _origin: FocusOrigin = 'program';\r\n\r\n  /**\r\n   * Sets the focus origin that will be passed in to the items for any subsequent `focus` calls.\r\n   * @param origin Focus origin to be used when focusing items.\r\n   */\r\n  setFocusOrigin(origin: FocusOrigin): this {\r\n    this._origin = origin;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Sets the active item to the item at the specified\r\n   * index and focuses the newly active item.\r\n   * @param index Index of the item to be set as active.\r\n   */\r\n  setActiveItem(index: number): void;\r\n\r\n  /**\r\n   * Sets the active item to the item that is specified and focuses it.\r\n   * @param item Item to be set as active.\r\n   */\r\n  setActiveItem(item: T): void;\r\n\r\n  setActiveItem(item: any): void {\r\n    super.setActiveItem(item);\r\n\r\n    if (this.activeItem) {\r\n      this.activeItem.focus(this._origin);\r\n    }\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {ListKeyManager, ListKeyManagerOption} from './list-key-manager';\r\n\r\n/**\r\n * This is the interface for highlightable items (used by the ActiveDescendantKeyManager).\r\n * Each item must know how to style itself as active or inactive and whether or not it is\r\n * currently disabled.\r\n */\r\nexport interface Highlightable extends ListKeyManagerOption {\r\n  /** Applies the styles for an active item to this item. */\r\n  setActiveStyles(): void;\r\n\r\n  /** Applies the styles for an inactive item to this item. */\r\n  setInactiveStyles(): void;\r\n}\r\n\r\nexport class ActiveDescendantKeyManager<T> extends ListKeyManager<Highlightable & T> {\r\n\r\n  /**\r\n   * Sets the active item to the item at the specified index and adds the\r\n   * active styles to the newly active item. Also removes active styles\r\n   * from the previously active item.\r\n   * @param index Index of the item to be set as active.\r\n   */\r\n  setActiveItem(index: number): void;\r\n\r\n  /**\r\n   * Sets the active item to the item to the specified one and adds the\r\n   * active styles to the it. Also removes active styles from the\r\n   * previously active item.\r\n   * @param item Item to be set as active.\r\n   */\r\n  setActiveItem(item: T): void;\r\n\r\n  setActiveItem(index: any): void {\r\n    if (this.activeItem) {\r\n      this.activeItem.setInactiveStyles();\r\n    }\r\n    super.setActiveItem(index);\r\n    if (this.activeItem) {\r\n      this.activeItem.setActiveStyles();\r\n    }\r\n  }\r\n\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {QueryList} from '@angular/core';\r\nimport {Subject, Subscription} from 'rxjs';\r\nimport {\r\n  UP_ARROW,\r\n  DOWN_ARROW,\r\n  LEFT_ARROW,\r\n  RIGHT_ARROW,\r\n  TAB,\r\n  A,\r\n  Z,\r\n  ZERO,\r\n  NINE,\r\n} from '@angular/cdk/keycodes';\r\nimport {debounceTime, filter, map, tap} from 'rxjs/operators';\r\n\r\n/** This interface is for items that can be passed to a ListKeyManager. */\r\nexport interface ListKeyManagerOption {\r\n  /** Whether the option is disabled. */\r\n  disabled?: boolean;\r\n\r\n  /** Gets the label for this option. */\r\n  getLabel?(): string;\r\n}\r\n\r\n/**\r\n * This class manages keyboard events for selectable lists. If you pass it a query list\r\n * of items, it will set the active item correctly when arrow events occur.\r\n */\r\nexport class ListKeyManager<T extends ListKeyManagerOption> {\r\n  private _activeItemIndex = -1;\r\n  private _activeItem: T;\r\n  private _wrap = false;\r\n  private _letterKeyStream = new Subject<string>();\r\n  private _typeaheadSubscription = Subscription.EMPTY;\r\n  private _vertical = true;\r\n  private _horizontal: 'ltr' | 'rtl' | null;\r\n\r\n  /**\r\n   * Predicate function that can be used to check whether an item should be skipped\r\n   * by the key manager. By default, disabled items are skipped.\r\n   */\r\n  private _skipPredicateFn = (item: T) => item.disabled;\r\n\r\n  // Buffer for the letters that the user has pressed when the typeahead option is turned on.\r\n  private _pressedLetters: string[] = [];\r\n\r\n  constructor(private _items: QueryList<T> | T[]) {\r\n    // We allow for the items to be an array because, in some cases, the consumer may\r\n    // not have access to a QueryList of the items they want to manage (e.g. when the\r\n    // items aren't being collected via `ViewChildren` or `ContentChildren`).\r\n    if (_items instanceof QueryList) {\r\n      _items.changes.subscribe((newItems: QueryList<T>) => {\r\n        if (this._activeItem) {\r\n          const itemArray = newItems.toArray();\r\n          const newIndex = itemArray.indexOf(this._activeItem);\r\n\r\n          if (newIndex > -1 && newIndex !== this._activeItemIndex) {\r\n            this._activeItemIndex = newIndex;\r\n          }\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Stream that emits any time the TAB key is pressed, so components can react\r\n   * when focus is shifted off of the list.\r\n   */\r\n  tabOut: Subject<void> = new Subject<void>();\r\n\r\n  /** Stream that emits whenever the active item of the list manager changes. */\r\n  change = new Subject<number>();\r\n\r\n  /**\r\n   * Sets the predicate function that determines which items should be skipped by the\r\n   * list key manager.\r\n   * @param predicate Function that determines whether the given item should be skipped.\r\n   */\r\n  skipPredicate(predicate: (item: T) => boolean): this {\r\n    this._skipPredicateFn = predicate;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Configures wrapping mode, which determines whether the active item will wrap to\r\n   * the other end of list when there are no more items in the given direction.\r\n   * @param shouldWrap Whether the list should wrap when reaching the end.\r\n   */\r\n  withWrap(shouldWrap = true): this {\r\n    this._wrap = shouldWrap;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Configures whether the key manager should be able to move the selection vertically.\r\n   * @param enabled Whether vertical selection should be enabled.\r\n   */\r\n  withVerticalOrientation(enabled: boolean = true): this {\r\n    this._vertical = enabled;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Configures the key manager to move the selection horizontally.\r\n   * Passing in `null` will disable horizontal movement.\r\n   * @param direction Direction in which the selection can be moved.\r\n   */\r\n  withHorizontalOrientation(direction: 'ltr' | 'rtl' | null): this {\r\n    this._horizontal = direction;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Turns on typeahead mode which allows users to set the active item by typing.\r\n   * @param debounceInterval Time to wait after the last keystroke before setting the active item.\r\n   */\r\n  withTypeAhead(debounceInterval: number = 200): this {\r\n    if (this._items.length && this._items.some(item => typeof item.getLabel !== 'function')) {\r\n      throw Error('ListKeyManager items in typeahead mode must implement the `getLabel` method.');\r\n    }\r\n\r\n    this._typeaheadSubscription.unsubscribe();\r\n\r\n    // Debounce the presses of non-navigational keys, collect the ones that correspond to letters\r\n    // and convert those letters back into a string. Afterwards find the first item that starts\r\n    // with that string and select it.\r\n    this._typeaheadSubscription = this._letterKeyStream.pipe(\r\n      tap(keyCode => this._pressedLetters.push(keyCode)),\r\n      debounceTime(debounceInterval),\r\n      filter(() => this._pressedLetters.length > 0),\r\n      map(() => this._pressedLetters.join(''))\r\n    ).subscribe(inputString => {\r\n      const items = this._getItemsArray();\r\n\r\n      // Start at 1 because we want to start searching at the item immediately\r\n      // following the current active item.\r\n      for (let i = 1; i < items.length + 1; i++) {\r\n        const index = (this._activeItemIndex + i) % items.length;\r\n        const item = items[index];\r\n\r\n        if (!this._skipPredicateFn(item) &&\r\n            item.getLabel!().toUpperCase().trim().indexOf(inputString) === 0) {\r\n\r\n          this.setActiveItem(index);\r\n          break;\r\n        }\r\n      }\r\n\r\n      this._pressedLetters = [];\r\n    });\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Sets the active item to the item at the index specified.\r\n   * @param index The index of the item to be set as active.\r\n   */\r\n  setActiveItem(index: number): void;\r\n\r\n  /**\r\n   * Sets the active item to the specified item.\r\n   * @param item The item to be set as active.\r\n   */\r\n  setActiveItem(item: T): void;\r\n\r\n  setActiveItem(item: any): void {\r\n    const previousIndex = this._activeItemIndex;\r\n\r\n    this.updateActiveItem(item);\r\n\r\n    if (this._activeItemIndex !== previousIndex) {\r\n      this.change.next(this._activeItemIndex);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sets the active item depending on the key event passed in.\r\n   * @param event Keyboard event to be used for determining which element should be active.\r\n   */\r\n  onKeydown(event: KeyboardEvent): void {\r\n    const keyCode = event.keyCode;\r\n\r\n    switch (keyCode) {\r\n      case TAB:\r\n        this.tabOut.next();\r\n        return;\r\n\r\n      case DOWN_ARROW:\r\n        if (this._vertical) {\r\n          this.setNextItemActive();\r\n          break;\r\n        } else {\r\n          return;\r\n        }\r\n\r\n      case UP_ARROW:\r\n        if (this._vertical) {\r\n          this.setPreviousItemActive();\r\n          break;\r\n        } else {\r\n          return;\r\n        }\r\n\r\n      case RIGHT_ARROW:\r\n        if (this._horizontal === 'ltr') {\r\n          this.setNextItemActive();\r\n          break;\r\n        } else if (this._horizontal === 'rtl') {\r\n          this.setPreviousItemActive();\r\n          break;\r\n        } else {\r\n          return;\r\n        }\r\n\r\n      case LEFT_ARROW:\r\n        if (this._horizontal === 'ltr') {\r\n          this.setPreviousItemActive();\r\n          break;\r\n        } else if (this._horizontal === 'rtl') {\r\n          this.setNextItemActive();\r\n          break;\r\n        } else {\r\n          return;\r\n        }\r\n\r\n      default:\r\n        // Attempt to use the `event.key` which also maps it to the user's keyboard language,\r\n        // otherwise fall back to resolving alphanumeric characters via the keyCode.\r\n        if (event.key && event.key.length === 1) {\r\n          this._letterKeyStream.next(event.key.toLocaleUpperCase());\r\n        } else if ((keyCode >= A && keyCode <= Z) || (keyCode >= ZERO && keyCode <= NINE)) {\r\n          this._letterKeyStream.next(String.fromCharCode(keyCode));\r\n        }\r\n\r\n        // Note that we return here, in order to avoid preventing\r\n        // the default action of non-navigational keys.\r\n        return;\r\n    }\r\n\r\n    this._pressedLetters = [];\r\n    event.preventDefault();\r\n  }\r\n\r\n  /** Index of the currently active item. */\r\n  get activeItemIndex(): number | null {\r\n    return this._activeItemIndex;\r\n  }\r\n\r\n  /** The active item. */\r\n  get activeItem(): T | null {\r\n    return this._activeItem;\r\n  }\r\n\r\n  /** Sets the active item to the first enabled item in the list. */\r\n  setFirstItemActive(): void {\r\n    this._setActiveItemByIndex(0, 1);\r\n  }\r\n\r\n  /** Sets the active item to the last enabled item in the list. */\r\n  setLastItemActive(): void {\r\n    this._setActiveItemByIndex(this._items.length - 1, -1);\r\n  }\r\n\r\n  /** Sets the active item to the next enabled item in the list. */\r\n  setNextItemActive(): void {\r\n    this._activeItemIndex < 0 ? this.setFirstItemActive() : this._setActiveItemByDelta(1);\r\n  }\r\n\r\n  /** Sets the active item to a previous enabled item in the list. */\r\n  setPreviousItemActive(): void {\r\n    this._activeItemIndex < 0 && this._wrap ? this.setLastItemActive()\r\n                                            : this._setActiveItemByDelta(-1);\r\n  }\r\n\r\n  /**\r\n   * Allows setting the active without any other effects.\r\n   * @param index Index of the item to be set as active.\r\n   */\r\n  updateActiveItem(index: number): void;\r\n\r\n  /**\r\n   * Allows setting the active item without any other effects.\r\n   * @param item Item to be set as active.\r\n   */\r\n  updateActiveItem(item: T): void;\r\n\r\n  updateActiveItem(item: any): void {\r\n    const itemArray = this._getItemsArray();\r\n    const index = typeof item === 'number' ? item : itemArray.indexOf(item);\r\n\r\n    this._activeItemIndex = index;\r\n    this._activeItem = itemArray[index];\r\n  }\r\n\r\n  /**\r\n   * Allows setting of the activeItemIndex without any other effects.\r\n   * @param index The new activeItemIndex.\r\n   * @deprecated Use `updateActiveItem` instead.\r\n   * @breaking-change 7.0.0\r\n   */\r\n  updateActiveItemIndex(index: number): void {\r\n    this.updateActiveItem(index);\r\n  }\r\n\r\n  /**\r\n   * This method sets the active item, given a list of items and the delta between the\r\n   * currently active item and the new active item. It will calculate differently\r\n   * depending on whether wrap mode is turned on.\r\n   */\r\n  private _setActiveItemByDelta(delta: -1 | 1): void {\r\n    this._wrap ? this._setActiveInWrapMode(delta) : this._setActiveInDefaultMode(delta);\r\n  }\r\n\r\n  /**\r\n   * Sets the active item properly given \"wrap\" mode. In other words, it will continue to move\r\n   * down the list until it finds an item that is not disabled, and it will wrap if it\r\n   * encounters either end of the list.\r\n   */\r\n  private _setActiveInWrapMode(delta: -1 | 1): void {\r\n    const items = this._getItemsArray();\r\n\r\n    for (let i = 1; i <= items.length; i++) {\r\n      const index = (this._activeItemIndex + (delta * i) + items.length) % items.length;\r\n      const item = items[index];\r\n\r\n      if (!this._skipPredicateFn(item)) {\r\n        this.setActiveItem(index);\r\n        return;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sets the active item properly given the default mode. In other words, it will\r\n   * continue to move down the list until it finds an item that is not disabled. If\r\n   * it encounters either end of the list, it will stop and not wrap.\r\n   */\r\n  private _setActiveInDefaultMode(delta: -1 | 1): void {\r\n    this._setActiveItemByIndex(this._activeItemIndex + delta, delta);\r\n  }\r\n\r\n  /**\r\n   * Sets the active item to the first enabled item starting at the index specified. If the\r\n   * item is disabled, it will move in the fallbackDelta direction until it either\r\n   * finds an enabled item or encounters the end of the list.\r\n   */\r\n  private _setActiveItemByIndex(index: number, fallbackDelta: -1 | 1): void {\r\n    const items = this._getItemsArray();\r\n\r\n    if (!items[index]) {\r\n      return;\r\n    }\r\n\r\n    while (this._skipPredicateFn(items[index])) {\r\n      index += fallbackDelta;\r\n\r\n      if (!items[index]) {\r\n        return;\r\n      }\r\n    }\r\n\r\n    this.setActiveItem(index);\r\n  }\r\n\r\n  /** Returns the items as an array. */\r\n  private _getItemsArray(): T[] {\r\n    return this._items instanceof QueryList ? this._items.toArray() : this._items;\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {DOCUMENT} from '@angular/common';\r\nimport {\r\n  Inject,\r\n  Injectable,\r\n  InjectionToken,\r\n  OnDestroy,\r\n  Optional,\r\n  SkipSelf,\r\n} from '@angular/core';\r\nimport {addAriaReferencedId, getAriaReferenceIds, removeAriaReferencedId} from './aria-reference';\r\n\r\n\r\n/**\r\n * Interface used to register message elements and keep a count of how many registrations have\r\n * the same message and the reference to the message element used for the `aria-describedby`.\r\n */\r\nexport interface RegisteredMessage {\r\n  /** The element containing the message. */\r\n  messageElement: Element;\r\n\r\n  /** The number of elements that reference this message element via `aria-describedby`. */\r\n  referenceCount: number;\r\n}\r\n\r\n/** ID used for the body container where all messages are appended. */\r\nexport const MESSAGES_CONTAINER_ID = 'cdk-describedby-message-container';\r\n\r\n/** ID prefix used for each created message element. */\r\nexport const CDK_DESCRIBEDBY_ID_PREFIX = 'cdk-describedby-message';\r\n\r\n/** Attribute given to each host element that is described by a message element. */\r\nexport const CDK_DESCRIBEDBY_HOST_ATTRIBUTE = 'cdk-describedby-host';\r\n\r\n/** Global incremental identifier for each registered message element. */\r\nlet nextId = 0;\r\n\r\n/** Global map of all registered message elements that have been placed into the document. */\r\nconst messageRegistry = new Map<string, RegisteredMessage>();\r\n\r\n/** Container for all registered messages. */\r\nlet messagesContainer: HTMLElement | null = null;\r\n\r\n/**\r\n * Utility that creates visually hidden elements with a message content. Useful for elements that\r\n * want to use aria-describedby to further describe themselves without adding additional visual\r\n * content.\r\n * @docs-private\r\n */\r\n@Injectable({providedIn: 'root'})\r\nexport class AriaDescriber implements OnDestroy {\r\n  private _document: Document;\r\n\r\n  constructor(@Inject(DOCUMENT) _document: any) {\r\n    this._document = _document;\r\n  }\r\n\r\n  /**\r\n   * Adds to the host element an aria-describedby reference to a hidden element that contains\r\n   * the message. If the same message has already been registered, then it will reuse the created\r\n   * message element.\r\n   */\r\n  describe(hostElement: Element, message: string) {\r\n    if (!this._canBeDescribed(hostElement, message)) {\r\n      return;\r\n    }\r\n\r\n    if (!messageRegistry.has(message)) {\r\n      this._createMessageElement(message);\r\n    }\r\n\r\n    if (!this._isElementDescribedByMessage(hostElement, message)) {\r\n      this._addMessageReference(hostElement, message);\r\n    }\r\n  }\r\n\r\n  /** Removes the host element's aria-describedby reference to the message element. */\r\n  removeDescription(hostElement: Element, message: string) {\r\n    if (!this._canBeDescribed(hostElement, message)) {\r\n      return;\r\n    }\r\n\r\n    if (this._isElementDescribedByMessage(hostElement, message)) {\r\n      this._removeMessageReference(hostElement, message);\r\n    }\r\n\r\n    const registeredMessage = messageRegistry.get(message);\r\n    if (registeredMessage && registeredMessage.referenceCount === 0) {\r\n      this._deleteMessageElement(message);\r\n    }\r\n\r\n    if (messagesContainer && messagesContainer.childNodes.length === 0) {\r\n      this._deleteMessagesContainer();\r\n    }\r\n  }\r\n\r\n  /** Unregisters all created message elements and removes the message container. */\r\n  ngOnDestroy() {\r\n    const describedElements =\r\n        this._document.querySelectorAll(`[${CDK_DESCRIBEDBY_HOST_ATTRIBUTE}]`);\r\n\r\n    for (let i = 0; i < describedElements.length; i++) {\r\n      this._removeCdkDescribedByReferenceIds(describedElements[i]);\r\n      describedElements[i].removeAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE);\r\n    }\r\n\r\n    if (messagesContainer) {\r\n      this._deleteMessagesContainer();\r\n    }\r\n\r\n    messageRegistry.clear();\r\n  }\r\n\r\n  /**\r\n   * Creates a new element in the visually hidden message container element with the message\r\n   * as its content and adds it to the message registry.\r\n   */\r\n  private _createMessageElement(message: string) {\r\n    const messageElement = this._document.createElement('div');\r\n    messageElement.setAttribute('id', `${CDK_DESCRIBEDBY_ID_PREFIX}-${nextId++}`);\r\n    messageElement.appendChild(this._document.createTextNode(message)!);\r\n\r\n    this._createMessagesContainer();\r\n    messagesContainer!.appendChild(messageElement);\r\n\r\n    messageRegistry.set(message, {messageElement, referenceCount: 0});\r\n  }\r\n\r\n  /** Deletes the message element from the global messages container. */\r\n  private _deleteMessageElement(message: string) {\r\n    const registeredMessage = messageRegistry.get(message);\r\n    const messageElement = registeredMessage && registeredMessage.messageElement;\r\n    if (messagesContainer && messageElement) {\r\n      messagesContainer.removeChild(messageElement);\r\n    }\r\n    messageRegistry.delete(message);\r\n  }\r\n\r\n  /** Creates the global container for all aria-describedby messages. */\r\n  private _createMessagesContainer() {\r\n    if (!messagesContainer) {\r\n      const preExistingContainer = this._document.getElementById(MESSAGES_CONTAINER_ID);\r\n\r\n      // When going from the server to the client, we may end up in a situation where there's\r\n      // already a container on the page, but we don't have a reference to it. Clear the\r\n      // old container so we don't get duplicates. Doing this, instead of emptying the previous\r\n      // container, should be slightly faster.\r\n      if (preExistingContainer) {\r\n        preExistingContainer.parentNode!.removeChild(preExistingContainer);\r\n      }\r\n\r\n      messagesContainer = this._document.createElement('div');\r\n      messagesContainer.id = MESSAGES_CONTAINER_ID;\r\n      messagesContainer.setAttribute('aria-hidden', 'true');\r\n      messagesContainer.style.display = 'none';\r\n      this._document.body.appendChild(messagesContainer);\r\n    }\r\n  }\r\n\r\n  /** Deletes the global messages container. */\r\n  private _deleteMessagesContainer() {\r\n    if (messagesContainer && messagesContainer.parentNode) {\r\n      messagesContainer.parentNode.removeChild(messagesContainer);\r\n      messagesContainer = null;\r\n    }\r\n  }\r\n\r\n  /** Removes all cdk-describedby messages that are hosted through the element. */\r\n  private _removeCdkDescribedByReferenceIds(element: Element) {\r\n    // Remove all aria-describedby reference IDs that are prefixed by CDK_DESCRIBEDBY_ID_PREFIX\r\n    const originalReferenceIds = getAriaReferenceIds(element, 'aria-describedby')\r\n        .filter(id => id.indexOf(CDK_DESCRIBEDBY_ID_PREFIX) != 0);\r\n    element.setAttribute('aria-describedby', originalReferenceIds.join(' '));\r\n  }\r\n\r\n  /**\r\n   * Adds a message reference to the element using aria-describedby and increments the registered\r\n   * message's reference count.\r\n   */\r\n  private _addMessageReference(element: Element, message: string) {\r\n    const registeredMessage = messageRegistry.get(message)!;\r\n\r\n    // Add the aria-describedby reference and set the\r\n    // describedby_host attribute to mark the element.\r\n    addAriaReferencedId(element, 'aria-describedby', registeredMessage.messageElement.id);\r\n    element.setAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE, '');\r\n\r\n    registeredMessage.referenceCount++;\r\n  }\r\n\r\n  /**\r\n   * Removes a message reference from the element using aria-describedby\r\n   * and decrements the registered message's reference count.\r\n   */\r\n  private _removeMessageReference(element: Element, message: string) {\r\n    const registeredMessage = messageRegistry.get(message)!;\r\n    registeredMessage.referenceCount--;\r\n\r\n    removeAriaReferencedId(element, 'aria-describedby', registeredMessage.messageElement.id);\r\n    element.removeAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE);\r\n  }\r\n\r\n  /** Returns true if the element has been described by the provided message ID. */\r\n  private _isElementDescribedByMessage(element: Element, message: string): boolean {\r\n    const referenceIds = getAriaReferenceIds(element, 'aria-describedby');\r\n    const registeredMessage = messageRegistry.get(message);\r\n    const messageId = registeredMessage && registeredMessage.messageElement.id;\r\n\r\n    return !!messageId && referenceIds.indexOf(messageId) != -1;\r\n  }\r\n\r\n  /** Determines whether a message can be described on a particular element. */\r\n  private _canBeDescribed(element: Element, message: string): boolean {\r\n    return element.nodeType === this._document.ELEMENT_NODE && message != null &&\r\n        !!`${message}`.trim();\r\n  }\r\n\r\n}\r\n\r\n\r\n/** @docs-private @deprecated @breaking-change 7.0.0 */\r\nexport function ARIA_DESCRIBER_PROVIDER_FACTORY(parentDispatcher: AriaDescriber, _document: any) {\r\n  return parentDispatcher || new AriaDescriber(_document);\r\n}\r\n\r\n/** @docs-private @deprecated @breaking-change 7.0.0 */\r\nexport const ARIA_DESCRIBER_PROVIDER = {\r\n  // If there is already an AriaDescriber available, use that. Otherwise, provide a new one.\r\n  provide: AriaDescriber,\r\n  deps: [\r\n    [new Optional(), new SkipSelf(), AriaDescriber],\r\n    DOCUMENT as InjectionToken<any>\r\n  ],\r\n  useFactory: ARIA_DESCRIBER_PROVIDER_FACTORY\r\n};\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n/** IDs are deliminated by an empty space, as per the spec. */\r\nconst ID_DELIMINATOR = ' ';\r\n\r\n/**\r\n * Adds the given ID to the specified ARIA attribute on an element.\r\n * Used for attributes such as aria-labelledby, aria-owns, etc.\r\n */\r\nexport function addAriaReferencedId(el: Element, attr: string, id: string) {\r\n  const ids = getAriaReferenceIds(el, attr);\r\n  if (ids.some(existingId => existingId.trim() == id.trim())) { return; }\r\n  ids.push(id.trim());\r\n\r\n  el.setAttribute(attr, ids.join(ID_DELIMINATOR));\r\n}\r\n\r\n/**\r\n * Removes the given ID from the specified ARIA attribute on an element.\r\n * Used for attributes such as aria-labelledby, aria-owns, etc.\r\n */\r\nexport function removeAriaReferencedId(el: Element, attr: string, id: string) {\r\n  const ids = getAriaReferenceIds(el, attr);\r\n  const filteredIds = ids.filter(val => val != id.trim());\r\n\r\n  el.setAttribute(attr, filteredIds.join(ID_DELIMINATOR));\r\n}\r\n\r\n/**\r\n * Gets the list of IDs referenced by the given ARIA attribute on an element.\r\n * Used for attributes such as aria-labelledby, aria-owns, etc.\r\n */\r\nexport function getAriaReferenceIds(el: Element, attr: string): string[] {\r\n  // Get string array of all individual ids (whitespace deliminated) in the attribute value\r\n  return (el.getAttribute(attr) || '').match(/\\S+/g) || [];\r\n}\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n"],"names":["CommonModule","PlatformModule","ObserversModule","NgModule","Optional","SkipSelf","NgZone","Platform","platform","Output","ElementRef","Directive","EventEmitter","Injectable","supportsPassiveEventListeners","Subject","observableOf","DOCUMENT","Inject","Input","ContentObserver","InjectionToken","coerceBooleanProperty","take","tslib_1.__extends","QueryList","A","Z","ZERO","NINE","LEFT_ARROW","RIGHT_ARROW","UP_ARROW","DOWN_ARROW","TAB","tap","debounceTime","filter","map","Subscription"],"mappings":"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"}