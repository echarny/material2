{"version":3,"file":"material-menu.umd.min.js","sources":["../../node_modules/tslib/tslib.es6.js","../../src/lib/menu/menu-errors.ts","../../src/lib/menu/menu-directive.ts","../../src/lib/menu/menu-trigger.ts","../../src/lib/menu/menu-content.ts","../../src/lib/menu/menu-animations.ts","../../src/lib/menu/menu-panel.ts","../../src/lib/menu/menu-item.ts","../../src/lib/menu/menu-module.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n/**\r\n * Throws an exception for the case when menu trigger doesn't have a valid mat-menu instance\r\n * @docs-private\r\n */\r\nexport function throwMatMenuMissingError() {\r\n  throw Error(`mat-menu-trigger: must pass in an mat-menu instance.\r\n\r\n    Example:\r\n      <mat-menu #menu=\"matMenu\"></mat-menu>\r\n      <button [matMenuTriggerFor]=\"menu\"></button>`);\r\n}\r\n\r\n/**\r\n * Throws an exception for the case when menu's x-position value isn't valid.\r\n * In other words, it doesn't match 'before' or 'after'.\r\n * @docs-private\r\n */\r\nexport function throwMatMenuInvalidPositionX() {\r\n  throw Error(`x-position value must be either 'before' or after'.\r\n      Example: <mat-menu x-position=\"before\" #menu=\"matMenu\"></mat-menu>`);\r\n}\r\n\r\n/**\r\n * Throws an exception for the case when menu's y-position value isn't valid.\r\n * In other words, it doesn't match 'above' or 'below'.\r\n * @docs-private\r\n */\r\nexport function throwMatMenuInvalidPositionY() {\r\n  throw Error(`y-position value must be either 'above' or below'.\r\n      Example: <mat-menu y-position=\"above\" #menu=\"matMenu\"></mat-menu>`);\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {FocusKeyManager, FocusOrigin} from '@angular/cdk/a11y';\r\nimport {Direction} from '@angular/cdk/bidi';\r\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\r\nimport {ESCAPE, LEFT_ARROW, RIGHT_ARROW, DOWN_ARROW, UP_ARROW} from '@angular/cdk/keycodes';\r\nimport {\r\n  AfterContentInit,\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  ContentChild,\r\n  ContentChildren,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Inject,\r\n  InjectionToken,\r\n  Input,\r\n  NgZone,\r\n  OnDestroy,\r\n  Output,\r\n  TemplateRef,\r\n  QueryList,\r\n  ViewChild,\r\n  ViewEncapsulation,\r\n  OnInit,\r\n} from '@angular/core';\r\nimport {merge, Observable, Subject, Subscription} from 'rxjs';\r\nimport {startWith, switchMap, take} from 'rxjs/operators';\r\nimport {matMenuAnimations} from './menu-animations';\r\nimport {MatMenuContent} from './menu-content';\r\nimport {throwMatMenuInvalidPositionX, throwMatMenuInvalidPositionY} from './menu-errors';\r\nimport {MatMenuItem} from './menu-item';\r\nimport {MAT_MENU_PANEL, MatMenuPanel} from './menu-panel';\r\nimport {MenuPositionX, MenuPositionY} from './menu-positions';\r\nimport {AnimationEvent} from '@angular/animations';\r\n\r\n\r\n/** Default `mat-menu` options that can be overridden. */\r\nexport interface MatMenuDefaultOptions {\r\n  /** The x-axis position of the menu. */\r\n  xPosition: MenuPositionX;\r\n\r\n  /** The y-axis position of the menu. */\r\n  yPosition: MenuPositionY;\r\n\r\n  /** Whether the menu should overlap the menu trigger. */\r\n  overlapTrigger: boolean;\r\n\r\n  /** Class to be applied to the menu's backdrop. */\r\n  backdropClass: string;\r\n\r\n  /** Whether the menu has a backdrop. */\r\n  hasBackdrop?: boolean;\r\n}\r\n\r\n/** Injection token to be used to override the default options for `mat-menu`. */\r\nexport const MAT_MENU_DEFAULT_OPTIONS =\r\n    new InjectionToken<MatMenuDefaultOptions>('mat-menu-default-options', {\r\n      providedIn: 'root',\r\n      factory: MAT_MENU_DEFAULT_OPTIONS_FACTORY\r\n    });\r\n\r\n/** @docs-private */\r\nexport function MAT_MENU_DEFAULT_OPTIONS_FACTORY(): MatMenuDefaultOptions {\r\n  return {\r\n    overlapTrigger: true,\r\n    xPosition: 'after',\r\n    yPosition: 'below',\r\n    backdropClass: 'cdk-overlay-transparent-backdrop',\r\n  };\r\n}\r\n/**\r\n * Start elevation for the menu panel.\r\n * @docs-private\r\n */\r\nconst MAT_MENU_BASE_ELEVATION = 2;\r\n\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'mat-menu',\r\n  templateUrl: 'menu.html',\r\n  styleUrls: ['menu.css'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n  exportAs: 'matMenu',\r\n  animations: [\r\n    matMenuAnimations.transformMenu,\r\n    matMenuAnimations.fadeInItems\r\n  ],\r\n  providers: [\r\n    {provide: MAT_MENU_PANEL, useExisting: MatMenu}\r\n  ]\r\n})\r\nexport class MatMenu implements AfterContentInit, MatMenuPanel<MatMenuItem>, OnInit, OnDestroy {\r\n  private _keyManager: FocusKeyManager<MatMenuItem>;\r\n  private _xPosition: MenuPositionX = this._defaultOptions.xPosition;\r\n  private _yPosition: MenuPositionY = this._defaultOptions.yPosition;\r\n  private _previousElevation: string;\r\n\r\n  /** Menu items inside the current menu. */\r\n  private _items: MatMenuItem[] = [];\r\n\r\n  /** Emits whenever the amount of menu items changes. */\r\n  private _itemChanges = new Subject<MatMenuItem[]>();\r\n\r\n  /** Subscription to tab events on the menu panel */\r\n  private _tabSubscription = Subscription.EMPTY;\r\n\r\n  /** Config object to be passed into the menu's ngClass */\r\n  _classList: {[key: string]: boolean} = {};\r\n\r\n  /** Current state of the panel animation. */\r\n  _panelAnimationState: 'void' | 'enter' = 'void';\r\n\r\n  /** Emits whenever an animation on the menu completes. */\r\n  _animationDone = new Subject<AnimationEvent>();\r\n\r\n  /** Whether the menu is animating. */\r\n  _isAnimating: boolean;\r\n\r\n  /** Parent menu of the current menu panel. */\r\n  parentMenu: MatMenuPanel | undefined;\r\n\r\n  /** Layout direction of the menu. */\r\n  direction: Direction;\r\n\r\n  /** Class to be added to the backdrop element. */\r\n  @Input() backdropClass: string = this._defaultOptions.backdropClass;\r\n\r\n  /** Position of the menu in the X axis. */\r\n  @Input()\r\n  get xPosition(): MenuPositionX { return this._xPosition; }\r\n  set xPosition(value: MenuPositionX) {\r\n    if (value !== 'before' && value !== 'after') {\r\n      throwMatMenuInvalidPositionX();\r\n    }\r\n    this._xPosition = value;\r\n    this.setPositionClasses();\r\n  }\r\n\r\n  /** Position of the menu in the Y axis. */\r\n  @Input()\r\n  get yPosition(): MenuPositionY { return this._yPosition; }\r\n  set yPosition(value: MenuPositionY) {\r\n    if (value !== 'above' && value !== 'below') {\r\n      throwMatMenuInvalidPositionY();\r\n    }\r\n    this._yPosition = value;\r\n    this.setPositionClasses();\r\n  }\r\n\r\n  /** @docs-private */\r\n  @ViewChild(TemplateRef) templateRef: TemplateRef<any>;\r\n\r\n  /**\r\n   * List of the items inside of a menu.\r\n   * @deprecated\r\n   * @breaking-change 7.0.0\r\n   */\r\n  @ContentChildren(MatMenuItem) items: QueryList<MatMenuItem>;\r\n\r\n  /**\r\n   * Menu content that will be rendered lazily.\r\n   * @docs-private\r\n   */\r\n  @ContentChild(MatMenuContent) lazyContent: MatMenuContent;\r\n\r\n  /** Whether the menu should overlap its trigger. */\r\n  @Input()\r\n  get overlapTrigger(): boolean { return this._overlapTrigger; }\r\n  set overlapTrigger(value: boolean) {\r\n    this._overlapTrigger = coerceBooleanProperty(value);\r\n  }\r\n  private _overlapTrigger: boolean = this._defaultOptions.overlapTrigger;\r\n\r\n  /** Whether the menu has a backdrop. */\r\n  @Input()\r\n  get hasBackdrop(): boolean | undefined { return this._hasBackdrop; }\r\n  set hasBackdrop(value: boolean | undefined) {\r\n    this._hasBackdrop = coerceBooleanProperty(value);\r\n  }\r\n  private _hasBackdrop: boolean | undefined = this._defaultOptions.hasBackdrop;\r\n\r\n  /**\r\n   * This method takes classes set on the host mat-menu element and applies them on the\r\n   * menu template that displays in the overlay container.  Otherwise, it's difficult\r\n   * to style the containing menu from outside the component.\r\n   * @param classes list of class names\r\n   */\r\n  @Input('class')\r\n  set panelClass(classes: string) {\r\n    if (classes && classes.length) {\r\n      this._classList = classes.split(' ').reduce((obj: any, className: string) => {\r\n        obj[className] = true;\r\n        return obj;\r\n      }, {});\r\n\r\n      this._elementRef.nativeElement.className = '';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This method takes classes set on the host mat-menu element and applies them on the\r\n   * menu template that displays in the overlay container.  Otherwise, it's difficult\r\n   * to style the containing menu from outside the component.\r\n   * @deprecated Use `panelClass` instead.\r\n   * @breaking-change 7.0.0\r\n   */\r\n  @Input()\r\n  get classList(): string { return this.panelClass; }\r\n  set classList(classes: string) { this.panelClass = classes; }\r\n\r\n  /** Event emitted when the menu is closed. */\r\n  @Output() readonly closed: EventEmitter<void | 'click' | 'keydown' | 'tab'> =\r\n      new EventEmitter<void | 'click' | 'keydown' | 'tab'>();\r\n\r\n  /**\r\n   * Event emitted when the menu is closed.\r\n   * @deprecated Switch to `closed` instead\r\n   * @breaking-change 7.0.0\r\n   */\r\n  @Output() close = this.closed;\r\n\r\n  constructor(\r\n    private _elementRef: ElementRef,\r\n    private _ngZone: NgZone,\r\n    @Inject(MAT_MENU_DEFAULT_OPTIONS) private _defaultOptions: MatMenuDefaultOptions) { }\r\n\r\n  ngOnInit() {\r\n    this.setPositionClasses();\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    this._keyManager = new FocusKeyManager<MatMenuItem>(this._items).withWrap().withTypeAhead();\r\n    this._tabSubscription = this._keyManager.tabOut.subscribe(() => this.closed.emit('tab'));\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._tabSubscription.unsubscribe();\r\n    this.closed.complete();\r\n  }\r\n\r\n  /** Stream that emits whenever the hovered menu item changes. */\r\n  _hovered(): Observable<MatMenuItem> {\r\n    return this._itemChanges.pipe(\r\n      startWith(this._items),\r\n      switchMap(items => merge(...items.map(item => item._hovered)))\r\n    );\r\n  }\r\n\r\n  /** Handle a keyboard event from the menu, delegating to the appropriate action. */\r\n  _handleKeydown(event: KeyboardEvent) {\r\n    const keyCode = event.keyCode;\r\n\r\n    switch (keyCode) {\r\n      case ESCAPE:\r\n        this.closed.emit('keydown');\r\n        event.stopPropagation();\r\n      break;\r\n      case LEFT_ARROW:\r\n        if (this.parentMenu && this.direction === 'ltr') {\r\n          this.closed.emit('keydown');\r\n        }\r\n      break;\r\n      case RIGHT_ARROW:\r\n        if (this.parentMenu && this.direction === 'rtl') {\r\n          this.closed.emit('keydown');\r\n        }\r\n      break;\r\n      default:\r\n        if (keyCode === UP_ARROW || keyCode === DOWN_ARROW) {\r\n          this._keyManager.setFocusOrigin('keyboard');\r\n        }\r\n\r\n        this._keyManager.onKeydown(event);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Focus the first item in the menu.\r\n   * @param origin Action from which the focus originated. Used to set the correct styling.\r\n   */\r\n  focusFirstItem(origin: FocusOrigin = 'program'): void {\r\n    // When the content is rendered lazily, it takes a bit before the items are inside the DOM.\r\n    if (this.lazyContent) {\r\n      this._ngZone.onStable.asObservable()\r\n        .pipe(take(1))\r\n        .subscribe(() => this._keyManager.setFocusOrigin(origin).setFirstItemActive());\r\n    } else {\r\n      this._keyManager.setFocusOrigin(origin).setFirstItemActive();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Resets the active item in the menu. This is used when the menu is opened, allowing\r\n   * the user to start from the first option when pressing the down arrow.\r\n   */\r\n  resetActiveItem() {\r\n    this._keyManager.setActiveItem(-1);\r\n  }\r\n\r\n  /**\r\n   * Sets the menu panel elevation.\r\n   * @param depth Number of parent menus that come before the menu.\r\n   */\r\n  setElevation(depth: number): void {\r\n    // The elevation starts at the base and increases by one for each level.\r\n    const newElevation = `mat-elevation-z${MAT_MENU_BASE_ELEVATION + depth}`;\r\n    const customElevation = Object.keys(this._classList).find(c => c.startsWith('mat-elevation-z'));\r\n\r\n    if (!customElevation || customElevation === this._previousElevation) {\r\n      if (this._previousElevation) {\r\n        this._classList[this._previousElevation] = false;\r\n      }\r\n\r\n      this._classList[newElevation] = true;\r\n      this._previousElevation = newElevation;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Registers a menu item with the menu.\r\n   * @docs-private\r\n   */\r\n  addItem(item: MatMenuItem) {\r\n    // We register the items through this method, rather than picking them up through\r\n    // `ContentChildren`, because we need the items to be picked up by their closest\r\n    // `mat-menu` ancestor. If we used `@ContentChildren(MatMenuItem, {descendants: true})`,\r\n    // all descendant items will bleed into the top-level menu in the case where the consumer\r\n    // has `mat-menu` instances nested inside each other.\r\n    if (this._items.indexOf(item) === -1) {\r\n      this._items.push(item);\r\n      this._itemChanges.next(this._items);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Removes an item from the menu.\r\n   * @docs-private\r\n   */\r\n  removeItem(item: MatMenuItem) {\r\n    const index = this._items.indexOf(item);\r\n\r\n    if (this._items.indexOf(item) > -1) {\r\n      this._items.splice(index, 1);\r\n      this._itemChanges.next(this._items);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Adds classes to the menu panel based on its position. Can be used by\r\n   * consumers to add specific styling based on the position.\r\n   * @param posX Position of the menu along the x axis.\r\n   * @param posY Position of the menu along the y axis.\r\n   * @docs-private\r\n   */\r\n  setPositionClasses(posX: MenuPositionX = this.xPosition, posY: MenuPositionY = this.yPosition) {\r\n    const classes = this._classList;\r\n    classes['mat-menu-before'] = posX === 'before';\r\n    classes['mat-menu-after'] = posX === 'after';\r\n    classes['mat-menu-above'] = posY === 'above';\r\n    classes['mat-menu-below'] = posY === 'below';\r\n  }\r\n\r\n  /** Starts the enter animation. */\r\n  _startAnimation() {\r\n    // @breaking-change 7.0.0 Combine with _resetAnimation.\r\n    this._panelAnimationState = 'enter';\r\n  }\r\n\r\n  /** Resets the panel animation to its initial state. */\r\n  _resetAnimation() {\r\n    // @breaking-change 7.0.0 Combine with _startAnimation.\r\n    this._panelAnimationState = 'void';\r\n  }\r\n\r\n  /** Callback that is invoked when the panel animation completes. */\r\n  _onAnimationDone(event: AnimationEvent) {\r\n    this._animationDone.next(event);\r\n    this._isAnimating = false;\r\n\r\n    // Scroll the content element to the top once the animation is done. This is necessary, because\r\n    // we move focus to the first item while it's still being animated, which can throw the browser\r\n    // off when it determines the scroll position. Alternatively we can move focus when the\r\n    // animation is done, however moving focus asynchronously will interrupt screen readers\r\n    // which are in the process of reading out the menu already. We take the `element` from\r\n    // the `event` since we can't use a `ViewChild` to access the pane.\r\n    if (event.toState === 'enter' && this._keyManager.activeItemIndex === 0) {\r\n      event.element.scrollTop = 0;\r\n    }\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {FocusMonitor, FocusOrigin, isFakeMousedownFromScreenReader} from '@angular/cdk/a11y';\r\nimport {Direction, Directionality} from '@angular/cdk/bidi';\r\nimport {LEFT_ARROW, RIGHT_ARROW} from '@angular/cdk/keycodes';\r\nimport {\r\n  FlexibleConnectedPositionStrategy,\r\n  HorizontalConnectionPos,\r\n  Overlay,\r\n  OverlayConfig,\r\n  OverlayRef,\r\n  ScrollStrategy,\r\n  VerticalConnectionPos,\r\n} from '@angular/cdk/overlay';\r\nimport {TemplatePortal} from '@angular/cdk/portal';\r\nimport {\r\n  AfterContentInit,\r\n  Directive,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Inject,\r\n  InjectionToken,\r\n  Input,\r\n  OnDestroy,\r\n  Optional,\r\n  Output,\r\n  Self,\r\n  ViewContainerRef,\r\n} from '@angular/core';\r\nimport {asapScheduler, merge, of as observableOf, Subscription} from 'rxjs';\r\nimport {delay, filter, take, takeUntil} from 'rxjs/operators';\r\nimport {MatMenu} from './menu-directive';\r\nimport {throwMatMenuMissingError} from './menu-errors';\r\nimport {MatMenuItem} from './menu-item';\r\nimport {MatMenuPanel} from './menu-panel';\r\nimport {MenuPositionX, MenuPositionY} from './menu-positions';\r\n\r\n/** Injection token that determines the scroll handling while the menu is open. */\r\nexport const MAT_MENU_SCROLL_STRATEGY =\r\n    new InjectionToken<() => ScrollStrategy>('mat-menu-scroll-strategy');\r\n\r\n/** @docs-private */\r\nexport function MAT_MENU_SCROLL_STRATEGY_FACTORY(overlay: Overlay): () => ScrollStrategy {\r\n  return () => overlay.scrollStrategies.reposition();\r\n}\r\n\r\n/** @docs-private */\r\nexport const MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER = {\r\n  provide: MAT_MENU_SCROLL_STRATEGY,\r\n  deps: [Overlay],\r\n  useFactory: MAT_MENU_SCROLL_STRATEGY_FACTORY,\r\n};\r\n\r\n/** Default top padding of the menu panel. */\r\nexport const MENU_PANEL_TOP_PADDING = 8;\r\n\r\n// TODO(andrewseguin): Remove the kebab versions in favor of camelCased attribute selectors\r\n\r\n/**\r\n * This directive is intended to be used in conjunction with an mat-menu tag.  It is\r\n * responsible for toggling the display of the provided menu instance.\r\n */\r\n@Directive({\r\n  selector: `[mat-menu-trigger-for], [matMenuTriggerFor]`,\r\n  host: {\r\n    'aria-haspopup': 'true',\r\n    '[attr.aria-expanded]': 'menuOpen || null',\r\n    '(mousedown)': '_handleMousedown($event)',\r\n    '(keydown)': '_handleKeydown($event)',\r\n    '(click)': '_handleClick($event)',\r\n  },\r\n  exportAs: 'matMenuTrigger'\r\n})\r\nexport class MatMenuTrigger implements AfterContentInit, OnDestroy {\r\n  private _portal: TemplatePortal;\r\n  private _overlayRef: OverlayRef | null = null;\r\n  private _menuOpen: boolean = false;\r\n  private _closeSubscription = Subscription.EMPTY;\r\n  private _hoverSubscription = Subscription.EMPTY;\r\n\r\n  // Tracking input type is necessary so it's possible to only auto-focus\r\n  // the first item of the list when the menu is opened via the keyboard\r\n  private _openedByMouse: boolean = false;\r\n\r\n  /**\r\n   * @deprecated\r\n   * @breaking-change 7.0.0\r\n   */\r\n  @Input('mat-menu-trigger-for')\r\n  get _deprecatedMatMenuTriggerFor(): MatMenuPanel {\r\n    return this.menu;\r\n  }\r\n\r\n  set _deprecatedMatMenuTriggerFor(v: MatMenuPanel) {\r\n    this.menu = v;\r\n  }\r\n\r\n  /** References the menu instance that the trigger is associated with. */\r\n  @Input('matMenuTriggerFor') menu: MatMenuPanel;\r\n\r\n  /** Data to be passed along to any lazily-rendered content. */\r\n  @Input('matMenuTriggerData') menuData: any;\r\n\r\n  /** Event emitted when the associated menu is opened. */\r\n  @Output() readonly menuOpened: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n  /**\r\n   * Event emitted when the associated menu is opened.\r\n   * @deprecated Switch to `menuOpened` instead\r\n   * @breaking-change 7.0.0\r\n   */\r\n  // tslint:disable-next-line:no-output-on-prefix\r\n  @Output() readonly onMenuOpen: EventEmitter<void> = this.menuOpened;\r\n\r\n  /** Event emitted when the associated menu is closed. */\r\n  @Output() readonly menuClosed: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n  /**\r\n   * Event emitted when the associated menu is closed.\r\n   * @deprecated Switch to `menuClosed` instead\r\n   * @breaking-change 7.0.0\r\n   */\r\n  // tslint:disable-next-line:no-output-on-prefix\r\n  @Output() readonly onMenuClose: EventEmitter<void> = this.menuClosed;\r\n\r\n  constructor(private _overlay: Overlay,\r\n              private _element: ElementRef,\r\n              private _viewContainerRef: ViewContainerRef,\r\n              @Inject(MAT_MENU_SCROLL_STRATEGY) private _scrollStrategy,\r\n              @Optional() private _parentMenu: MatMenu,\r\n              @Optional() @Self() private _menuItemInstance: MatMenuItem,\r\n              @Optional() private _dir: Directionality,\r\n              // TODO(crisbeto): make the _focusMonitor required when doing breaking changes.\r\n              // @breaking-change 7.0.0\r\n              private _focusMonitor?: FocusMonitor) {\r\n\r\n    if (_menuItemInstance) {\r\n      _menuItemInstance._triggersSubmenu = this.triggersSubmenu();\r\n    }\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    this._checkMenu();\r\n\r\n    this.menu.close.subscribe(reason => {\r\n      this._destroyMenu();\r\n\r\n      // If a click closed the menu, we should close the entire chain of nested menus.\r\n      if ((reason === 'click' || reason === 'tab') && this._parentMenu) {\r\n        this._parentMenu.closed.emit(reason);\r\n      }\r\n    });\r\n\r\n    this._handleHover();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this._overlayRef) {\r\n      this._overlayRef.dispose();\r\n      this._overlayRef = null;\r\n    }\r\n\r\n    this._cleanUpSubscriptions();\r\n  }\r\n\r\n  /** Whether the menu is open. */\r\n  get menuOpen(): boolean {\r\n    return this._menuOpen;\r\n  }\r\n\r\n  /** The text direction of the containing app. */\r\n  get dir(): Direction {\r\n    return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\r\n  }\r\n\r\n  /** Whether the menu triggers a sub-menu or a top-level one. */\r\n  triggersSubmenu(): boolean {\r\n    return !!(this._menuItemInstance && this._parentMenu);\r\n  }\r\n\r\n  /** Toggles the menu between the open and closed states. */\r\n  toggleMenu(): void {\r\n    return this._menuOpen ? this.closeMenu() : this.openMenu();\r\n  }\r\n\r\n  /** Opens the menu. */\r\n  openMenu(): void {\r\n    if (this._menuOpen) {\r\n      return;\r\n    }\r\n\r\n    const overlayRef = this._createOverlay();\r\n    this._setPosition(overlayRef.getConfig().positionStrategy as FlexibleConnectedPositionStrategy);\r\n    overlayRef.attach(this._portal);\r\n\r\n    if (this.menu.lazyContent) {\r\n      this.menu.lazyContent.attach(this.menuData);\r\n    }\r\n\r\n    this._closeSubscription = this._menuClosingActions().subscribe(() => this.closeMenu());\r\n    this._initMenu();\r\n\r\n    if (this.menu instanceof MatMenu) {\r\n      this.menu._startAnimation();\r\n    }\r\n  }\r\n\r\n  /** Closes the menu. */\r\n  closeMenu(): void {\r\n    this.menu.close.emit();\r\n  }\r\n\r\n  /**\r\n   * Focuses the menu trigger.\r\n   * @param origin Source of the menu trigger's focus.\r\n   */\r\n  focus(origin: FocusOrigin = 'program') {\r\n    if (this._focusMonitor) {\r\n      this._focusMonitor.focusVia(this._element.nativeElement, origin);\r\n    } else {\r\n      this._element.nativeElement.focus();\r\n    }\r\n  }\r\n\r\n  /** Closes the menu and does the necessary cleanup. */\r\n  private _destroyMenu() {\r\n    if (!this._overlayRef || !this.menuOpen) {\r\n      return;\r\n    }\r\n\r\n    const menu = this.menu;\r\n\r\n    this._closeSubscription.unsubscribe();\r\n    this._overlayRef.detach();\r\n\r\n    if (menu instanceof MatMenu) {\r\n      menu._resetAnimation();\r\n\r\n      if (menu.lazyContent) {\r\n        // Wait for the exit animation to finish before detaching the content.\r\n        menu._animationDone\r\n          .pipe(\r\n            filter(event => event.toState === 'void'),\r\n            take(1),\r\n            // Interrupt if the content got re-attached.\r\n            takeUntil(menu.lazyContent._attached)\r\n          )\r\n          .subscribe(() => menu.lazyContent!.detach(), undefined, () => {\r\n            // No matter whether the content got re-attached, reset the menu.\r\n            this._resetMenu();\r\n          });\r\n      } else {\r\n        this._resetMenu();\r\n      }\r\n    } else {\r\n      this._resetMenu();\r\n\r\n      if (menu.lazyContent) {\r\n        menu.lazyContent.detach();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This method sets the menu state to open and focuses the first item if\r\n   * the menu was opened via the keyboard.\r\n   */\r\n  private _initMenu(): void {\r\n    this.menu.parentMenu = this.triggersSubmenu() ? this._parentMenu : undefined;\r\n    this.menu.direction = this.dir;\r\n    this._setMenuElevation();\r\n    this._setIsMenuOpen(true);\r\n    this.menu.focusFirstItem(this._openedByMouse ? 'mouse' : 'program');\r\n  }\r\n\r\n  /** Updates the menu elevation based on the amount of parent menus that it has. */\r\n  private _setMenuElevation(): void {\r\n    if (this.menu.setElevation) {\r\n      let depth = 0;\r\n      let parentMenu = this.menu.parentMenu;\r\n\r\n      while (parentMenu) {\r\n        depth++;\r\n        parentMenu = parentMenu.parentMenu;\r\n      }\r\n\r\n      this.menu.setElevation(depth);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This method resets the menu when it's closed, most importantly restoring\r\n   * focus to the menu trigger if the menu was opened via the keyboard.\r\n   */\r\n  private _resetMenu(): void {\r\n    this._setIsMenuOpen(false);\r\n\r\n    // We should reset focus if the user is navigating using a keyboard or\r\n    // if we have a top-level trigger which might cause focus to be lost\r\n    // when clicking on the backdrop.\r\n    if (!this._openedByMouse) {\r\n      // Note that the focus style will show up both for `program` and\r\n      // `keyboard` so we don't have to specify which one it is.\r\n      this.focus();\r\n    } else if (!this.triggersSubmenu()) {\r\n      this.focus('mouse');\r\n    }\r\n\r\n    this._openedByMouse = false;\r\n  }\r\n\r\n  // set state rather than toggle to support triggers sharing a menu\r\n  private _setIsMenuOpen(isOpen: boolean): void {\r\n    this._menuOpen = isOpen;\r\n    this._menuOpen ? this.menuOpened.emit() : this.menuClosed.emit();\r\n\r\n    if (this.triggersSubmenu()) {\r\n      this._menuItemInstance._highlighted = isOpen;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This method checks that a valid instance of MatMenu has been passed into\r\n   * matMenuTriggerFor. If not, an exception is thrown.\r\n   */\r\n  private _checkMenu() {\r\n    if (!this.menu) {\r\n      throwMatMenuMissingError();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This method creates the overlay from the provided menu's template and saves its\r\n   * OverlayRef so that it can be attached to the DOM when openMenu is called.\r\n   */\r\n  private _createOverlay(): OverlayRef {\r\n    if (!this._overlayRef) {\r\n      this._portal = new TemplatePortal(this.menu.templateRef, this._viewContainerRef);\r\n      const config = this._getOverlayConfig();\r\n      this._subscribeToPositions(config.positionStrategy as FlexibleConnectedPositionStrategy);\r\n      this._overlayRef = this._overlay.create(config);\r\n    }\r\n\r\n    return this._overlayRef;\r\n  }\r\n\r\n  /**\r\n   * This method builds the configuration object needed to create the overlay, the OverlayState.\r\n   * @returns OverlayConfig\r\n   */\r\n  private _getOverlayConfig(): OverlayConfig {\r\n    return new OverlayConfig({\r\n      positionStrategy: this._overlay.position()\r\n          .flexibleConnectedTo(this._element)\r\n          .withTransformOriginOn('.mat-menu-panel'),\r\n      hasBackdrop: this.menu.hasBackdrop == null ? !this.triggersSubmenu() : this.menu.hasBackdrop,\r\n      backdropClass: this.menu.backdropClass || 'cdk-overlay-transparent-backdrop',\r\n      scrollStrategy: this._scrollStrategy(),\r\n      direction: this._dir\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Listens to changes in the position of the overlay and sets the correct classes\r\n   * on the menu based on the new position. This ensures the animation origin is always\r\n   * correct, even if a fallback position is used for the overlay.\r\n   */\r\n  private _subscribeToPositions(position: FlexibleConnectedPositionStrategy): void {\r\n    if (this.menu.setPositionClasses) {\r\n      position.positionChanges.subscribe(change => {\r\n        const posX: MenuPositionX = change.connectionPair.overlayX === 'start' ? 'after' : 'before';\r\n        const posY: MenuPositionY = change.connectionPair.overlayY === 'top' ? 'below' : 'above';\r\n\r\n        this.menu.setPositionClasses!(posX, posY);\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sets the appropriate positions on a position strategy\r\n   * so the overlay connects with the trigger correctly.\r\n   * @param positionStrategy Strategy whose position to update.\r\n   */\r\n  private _setPosition(positionStrategy: FlexibleConnectedPositionStrategy) {\r\n    let [originX, originFallbackX]: HorizontalConnectionPos[] =\r\n        this.menu.xPosition === 'before' ? ['end', 'start'] : ['start', 'end'];\r\n\r\n    let [overlayY, overlayFallbackY]: VerticalConnectionPos[] =\r\n        this.menu.yPosition === 'above' ? ['bottom', 'top'] : ['top', 'bottom'];\r\n\r\n    let [originY, originFallbackY] = [overlayY, overlayFallbackY];\r\n    let [overlayX, overlayFallbackX] = [originX, originFallbackX];\r\n    let offsetY = 0;\r\n\r\n    if (this.triggersSubmenu()) {\r\n      // When the menu is a sub-menu, it should always align itself\r\n      // to the edges of the trigger, instead of overlapping it.\r\n      overlayFallbackX = originX = this.menu.xPosition === 'before' ? 'start' : 'end';\r\n      originFallbackX = overlayX = originX === 'end' ? 'start' : 'end';\r\n      offsetY = overlayY === 'bottom' ? MENU_PANEL_TOP_PADDING : -MENU_PANEL_TOP_PADDING;\r\n    } else if (!this.menu.overlapTrigger) {\r\n      originY = overlayY === 'top' ? 'bottom' : 'top';\r\n      originFallbackY = overlayFallbackY === 'top' ? 'bottom' : 'top';\r\n    }\r\n\r\n    positionStrategy.withPositions([\r\n      {originX, originY, overlayX, overlayY, offsetY},\r\n      {originX: originFallbackX, originY, overlayX: overlayFallbackX, overlayY, offsetY},\r\n      {\r\n        originX,\r\n        originY: originFallbackY,\r\n        overlayX,\r\n        overlayY: overlayFallbackY,\r\n        offsetY: -offsetY\r\n      },\r\n      {\r\n        originX: originFallbackX,\r\n        originY: originFallbackY,\r\n        overlayX: overlayFallbackX,\r\n        overlayY: overlayFallbackY,\r\n        offsetY: -offsetY\r\n      }\r\n    ]);\r\n  }\r\n\r\n  /** Cleans up the active subscriptions. */\r\n  private _cleanUpSubscriptions(): void {\r\n    this._closeSubscription.unsubscribe();\r\n    this._hoverSubscription.unsubscribe();\r\n  }\r\n\r\n  /** Returns a stream that emits whenever an action that should close the menu occurs. */\r\n  private _menuClosingActions() {\r\n    const backdrop = this._overlayRef!.backdropClick();\r\n    const detachments = this._overlayRef!.detachments();\r\n    const parentClose = this._parentMenu ? this._parentMenu.closed : observableOf();\r\n    const hover = this._parentMenu ? this._parentMenu._hovered().pipe(\r\n      filter(active => active !== this._menuItemInstance),\r\n      filter(() => this._menuOpen)\r\n    ) : observableOf();\r\n\r\n    return merge(backdrop, parentClose, hover, detachments);\r\n  }\r\n\r\n  /** Handles mouse presses on the trigger. */\r\n  _handleMousedown(event: MouseEvent): void {\r\n    if (!isFakeMousedownFromScreenReader(event)) {\r\n      this._openedByMouse = true;\r\n\r\n      // Since clicking on the trigger won't close the menu if it opens a sub-menu,\r\n      // we should prevent focus from moving onto it via click to avoid the\r\n      // highlight from lingering on the menu item.\r\n      if (this.triggersSubmenu()) {\r\n        event.preventDefault();\r\n      }\r\n    }\r\n  }\r\n\r\n  /** Handles key presses on the trigger. */\r\n  _handleKeydown(event: KeyboardEvent): void {\r\n    const keyCode = event.keyCode;\r\n\r\n    if (this.triggersSubmenu() && (\r\n            (keyCode === RIGHT_ARROW && this.dir === 'ltr') ||\r\n            (keyCode === LEFT_ARROW && this.dir === 'rtl'))) {\r\n      this.openMenu();\r\n    }\r\n  }\r\n\r\n  /** Handles click events on the trigger. */\r\n  _handleClick(event: MouseEvent): void {\r\n    if (this.triggersSubmenu()) {\r\n      // Stop event propagation to avoid closing the parent menu.\r\n      event.stopPropagation();\r\n      this.openMenu();\r\n    } else {\r\n      this.toggleMenu();\r\n    }\r\n  }\r\n\r\n  /** Handles the cases where the user hovers over the trigger. */\r\n  private _handleHover() {\r\n    // Subscribe to changes in the hovered item in order to toggle the panel.\r\n    if (!this.triggersSubmenu()) {\r\n      return;\r\n    }\r\n\r\n    this._hoverSubscription = this._parentMenu._hovered()\r\n      // Since we might have multiple competing triggers for the same menu (e.g. a sub-menu\r\n      // with different data and triggers), we have to delay it by a tick to ensure that\r\n      // it won't be closed immediately after it is opened.\r\n      .pipe(\r\n        filter(active => active === this._menuItemInstance && !active.disabled),\r\n        delay(0, asapScheduler)\r\n      )\r\n      .subscribe(() => {\r\n        this._openedByMouse = true;\r\n\r\n        // If the same menu is used between multiple triggers, it might still be animating\r\n        // while the new trigger tries to re-open it. Wait for the animation to finish\r\n        // before doing so. Also interrupt if the user moves to another item.\r\n        if (this.menu instanceof MatMenu && this.menu._isAnimating) {\r\n          // We need the `delay(0)` here in order to avoid\r\n          // 'changed after checked' errors in some cases. See #12194.\r\n          this.menu._animationDone\r\n            .pipe(take(1), delay(0, asapScheduler), takeUntil(this._parentMenu._hovered()))\r\n            .subscribe(() => this.openMenu());\r\n        } else {\r\n          this.openMenu();\r\n        }\r\n      });\r\n  }\r\n\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {\r\n  Directive,\r\n  TemplateRef,\r\n  ComponentFactoryResolver,\r\n  ApplicationRef,\r\n  Injector,\r\n  ViewContainerRef,\r\n  Inject,\r\n  OnDestroy,\r\n} from '@angular/core';\r\nimport {TemplatePortal, DomPortalOutlet} from '@angular/cdk/portal';\r\nimport {DOCUMENT} from '@angular/common';\r\nimport {Subject} from 'rxjs';\r\n\r\n/**\r\n * Menu content that will be rendered lazily once the menu is opened.\r\n */\r\n@Directive({\r\n  selector: 'ng-template[matMenuContent]'\r\n})\r\nexport class MatMenuContent implements OnDestroy {\r\n  private _portal: TemplatePortal<any>;\r\n  private _outlet: DomPortalOutlet;\r\n\r\n  /** Emits when the menu content has been attached. */\r\n  _attached = new Subject<void>();\r\n\r\n  constructor(\r\n    private _template: TemplateRef<any>,\r\n    private _componentFactoryResolver: ComponentFactoryResolver,\r\n    private _appRef: ApplicationRef,\r\n    private _injector: Injector,\r\n    private _viewContainerRef: ViewContainerRef,\r\n    @Inject(DOCUMENT) private _document: any) {}\r\n\r\n  /**\r\n   * Attaches the content with a particular context.\r\n   * @docs-private\r\n   */\r\n  attach(context: any = {}) {\r\n    if (!this._portal) {\r\n      this._portal = new TemplatePortal(this._template, this._viewContainerRef);\r\n    }\r\n\r\n    this.detach();\r\n\r\n    if (!this._outlet) {\r\n      this._outlet = new DomPortalOutlet(this._document.createElement('div'),\r\n          this._componentFactoryResolver, this._appRef, this._injector);\r\n    }\r\n\r\n    const element: HTMLElement = this._template.elementRef.nativeElement;\r\n\r\n    // Because we support opening the same menu from different triggers (which in turn have their\r\n    // own `OverlayRef` panel), we have to re-insert the host element every time, otherwise we\r\n    // risk it staying attached to a pane that's no longer in the DOM.\r\n    element.parentNode!.insertBefore(this._outlet.outletElement, element);\r\n    this._portal.attach(this._outlet, context);\r\n    this._attached.next();\r\n  }\r\n\r\n  /**\r\n   * Detaches the content.\r\n   * @docs-private\r\n   */\r\n  detach() {\r\n    if (this._portal.isAttached) {\r\n      this._portal.detach();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this._outlet) {\r\n      this._outlet.dispose();\r\n    }\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport{\r\n  trigger,\r\n  state,\r\n  style,\r\n  animate,\r\n  transition,\r\n  query,\r\n  group,\r\n  sequence,\r\n  AnimationTriggerMetadata,\r\n} from '@angular/animations';\r\n\r\n/**\r\n * Animations used by the mat-menu component.\r\n * Animation duration and timing values are based on:\r\n * https://material.io/guidelines/components/menus.html#menus-usage\r\n */\r\nexport const matMenuAnimations: {\r\n  readonly transformMenu: AnimationTriggerMetadata;\r\n  readonly fadeInItems: AnimationTriggerMetadata;\r\n} = {\r\n  /**\r\n   * This animation controls the menu panel's entry and exit from the page.\r\n   *\r\n   * When the menu panel is added to the DOM, it scales in and fades in its border.\r\n   *\r\n   * When the menu panel is removed from the DOM, it simply fades out after a brief\r\n   * delay to display the ripple.\r\n   */\r\n  transformMenu: trigger('transformMenu', [\r\n    state('void', style({\r\n      opacity: 0,\r\n      // This starts off from 0.01, instead of 0, because there's an issue in the Angular animations\r\n      // as of 4.2, which causes the animation to be skipped if it starts from 0.\r\n      transform: 'scale(0.01, 0.01)'\r\n    })),\r\n    transition('void => enter', sequence([\r\n      query('.mat-menu-content', style({opacity: 0})),\r\n      animate('100ms linear', style({opacity: 1, transform: 'scale(1, 0.5)'})),\r\n      group([\r\n        query('.mat-menu-content', animate('400ms cubic-bezier(0.55, 0, 0.55, 0.2)',\r\n          style({opacity: 1})\r\n        )),\r\n        animate('300ms cubic-bezier(0.25, 0.8, 0.25, 1)', style({transform: 'scale(1, 1)'})),\r\n      ])\r\n    ])),\r\n    transition('* => void', animate('150ms 50ms linear', style({opacity: 0})))\r\n  ]),\r\n\r\n\r\n  /**\r\n   * This animation fades in the background color and content of the menu panel\r\n   * after its containing element is scaled in.\r\n   */\r\n  fadeInItems: trigger('fadeInItems', [\r\n    // TODO(crisbeto): this is inside the `transformMenu`\r\n    // now. Remove next time we do breaking changes.\r\n    state('showing', style({opacity: 1})),\r\n    transition('void => *', [\r\n      style({opacity: 0}),\r\n      animate('400ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)')\r\n    ])\r\n  ])\r\n};\r\n\r\n/**\r\n * @deprecated\r\n * @breaking-change 7.0.0\r\n */\r\nexport const fadeInItems = matMenuAnimations.fadeInItems;\r\n\r\n/**\r\n * @deprecated\r\n * @breaking-change 7.0.0\r\n */\r\nexport const transformMenu = matMenuAnimations.transformMenu;\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {EventEmitter, TemplateRef, InjectionToken} from '@angular/core';\r\nimport {MenuPositionX, MenuPositionY} from './menu-positions';\r\nimport {Direction} from '@angular/cdk/bidi';\r\nimport {FocusOrigin} from '@angular/cdk/a11y';\r\nimport {MatMenuContent} from './menu-content';\r\n\r\n/**\r\n * Injection token used to provide the parent menu to menu-specific components.\r\n * @docs-private\r\n */\r\nexport const MAT_MENU_PANEL = new InjectionToken<MatMenuPanel>('MAT_MENU_PANEL');\r\n\r\n/**\r\n * Interface for a custom menu panel that can be used with `matMenuTriggerFor`.\r\n * @docs-private\r\n */\r\nexport interface MatMenuPanel<T = any> {\r\n  xPosition: MenuPositionX;\r\n  yPosition: MenuPositionY;\r\n  overlapTrigger: boolean;\r\n  templateRef: TemplateRef<any>;\r\n  close: EventEmitter<void | 'click' | 'keydown' | 'tab'>;\r\n  parentMenu?: MatMenuPanel | undefined;\r\n  direction?: Direction;\r\n  focusFirstItem: (origin?: FocusOrigin) => void;\r\n  resetActiveItem: () => void;\r\n  setPositionClasses?: (x: MenuPositionX, y: MenuPositionY) => void;\r\n  setElevation?(depth: number): void;\r\n  lazyContent?: MatMenuContent;\r\n  backdropClass?: string;\r\n  hasBackdrop?: boolean;\r\n  addItem?: (item: T) => void;\r\n  removeItem?: (item: T) => void;\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {FocusableOption, FocusMonitor, FocusOrigin} from '@angular/cdk/a11y';\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  ElementRef,\r\n  OnDestroy,\r\n  ViewEncapsulation,\r\n  Inject,\r\n  Optional,\r\n} from '@angular/core';\r\nimport {\r\n  CanDisable,\r\n  CanDisableRipple,\r\n  mixinDisabled,\r\n  mixinDisableRipple\r\n} from '@angular/material/core';\r\nimport {Subject} from 'rxjs';\r\nimport {DOCUMENT} from '@angular/common';\r\nimport {MAT_MENU_PANEL, MatMenuPanel} from './menu-panel';\r\n\r\n// Boilerplate for applying mixins to MatMenuItem.\r\n/** @docs-private */\r\nexport class MatMenuItemBase {}\r\nexport const _MatMenuItemMixinBase = mixinDisableRipple(mixinDisabled(MatMenuItemBase));\r\n\r\n/**\r\n * This directive is intended to be used inside an mat-menu tag.\r\n * It exists mostly to set the role attribute.\r\n */\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: '[mat-menu-item]',\r\n  exportAs: 'matMenuItem',\r\n  inputs: ['disabled', 'disableRipple'],\r\n  host: {\r\n    'role': 'menuitem',\r\n    'class': 'mat-menu-item',\r\n    '[class.mat-menu-item-highlighted]': '_highlighted',\r\n    '[class.mat-menu-item-submenu-trigger]': '_triggersSubmenu',\r\n    '[attr.tabindex]': '_getTabIndex()',\r\n    '[attr.aria-disabled]': 'disabled.toString()',\r\n    '[attr.disabled]': 'disabled || null',\r\n    '(click)': '_checkDisabled($event)',\r\n    '(mouseenter)': '_handleMouseEnter()',\r\n  },\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n  templateUrl: 'menu-item.html',\r\n})\r\nexport class MatMenuItem extends _MatMenuItemMixinBase\r\n    implements FocusableOption, CanDisable, CanDisableRipple, OnDestroy {\r\n\r\n  private _document: Document;\r\n\r\n  /** Stream that emits when the menu item is hovered. */\r\n  readonly _hovered: Subject<MatMenuItem> = new Subject<MatMenuItem>();\r\n\r\n  /** Whether the menu item is highlighted. */\r\n  _highlighted: boolean = false;\r\n\r\n  /** Whether the menu item acts as a trigger for a sub-menu. */\r\n  _triggersSubmenu: boolean = false;\r\n\r\n  constructor(\r\n    private _elementRef: ElementRef,\r\n    @Inject(DOCUMENT) document?: any,\r\n    private _focusMonitor?: FocusMonitor,\r\n    @Inject(MAT_MENU_PANEL) @Optional() private _parentMenu?: MatMenuPanel<MatMenuItem>) {\r\n\r\n    // @breaking-change 7.0.0 make `_focusMonitor` and `document` required params.\r\n    super();\r\n\r\n    if (_focusMonitor) {\r\n      // Start monitoring the element so it gets the appropriate focused classes. We want\r\n      // to show the focus style for menu items only when the focus was not caused by a\r\n      // mouse or touch interaction.\r\n      _focusMonitor.monitor(this._getHostElement(), false);\r\n    }\r\n\r\n    if (_parentMenu && _parentMenu.addItem) {\r\n      _parentMenu.addItem(this);\r\n    }\r\n\r\n    this._document = document;\r\n  }\r\n\r\n  /** Focuses the menu item. */\r\n  focus(origin: FocusOrigin = 'program'): void {\r\n    if (this._focusMonitor) {\r\n      this._focusMonitor.focusVia(this._getHostElement(), origin);\r\n    } else {\r\n      this._getHostElement().focus();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this._focusMonitor) {\r\n      this._focusMonitor.stopMonitoring(this._getHostElement());\r\n    }\r\n\r\n    if (this._parentMenu && this._parentMenu.removeItem) {\r\n      this._parentMenu.removeItem(this);\r\n    }\r\n\r\n    this._hovered.complete();\r\n  }\r\n\r\n  /** Used to set the `tabindex`. */\r\n  _getTabIndex(): string {\r\n    return this.disabled ? '-1' : '0';\r\n  }\r\n\r\n  /** Returns the host DOM element. */\r\n  _getHostElement(): HTMLElement {\r\n    return this._elementRef.nativeElement;\r\n  }\r\n\r\n  /** Prevents the default element actions if it is disabled. */\r\n  _checkDisabled(event: Event): void {\r\n    if (this.disabled) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n  }\r\n\r\n  /** Emits to the hover stream. */\r\n  _handleMouseEnter() {\r\n    this._hovered.next(this);\r\n  }\r\n\r\n  /** Gets the label to be used when determining whether the option should be focused. */\r\n  getLabel(): string {\r\n    const element: HTMLElement = this._elementRef.nativeElement;\r\n    const textNodeType = this._document ? this._document.TEXT_NODE : 3;\r\n    let output = '';\r\n\r\n    if (element.childNodes) {\r\n      const length = element.childNodes.length;\r\n\r\n      // Go through all the top-level text nodes and extract their text.\r\n      // We skip anything that's not a text node to prevent the text from\r\n      // being thrown off by something like an icon.\r\n      for (let i = 0; i < length; i++) {\r\n        if (element.childNodes[i].nodeType === textNodeType) {\r\n          output += element.childNodes[i].textContent;\r\n        }\r\n      }\r\n    }\r\n\r\n    return output.trim();\r\n  }\r\n\r\n}\r\n\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {OverlayModule} from '@angular/cdk/overlay';\r\nimport {CommonModule} from '@angular/common';\r\nimport {NgModule} from '@angular/core';\r\nimport {MatCommonModule, MatRippleModule} from '@angular/material/core';\r\nimport {MatMenuContent} from './menu-content';\r\nimport {MatMenu} from './menu-directive';\r\nimport {MatMenuItem} from './menu-item';\r\nimport {\r\n  MatMenuTrigger,\r\n  MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER,\r\n} from './menu-trigger';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    MatCommonModule,\r\n    MatRippleModule,\r\n    OverlayModule,\r\n  ],\r\n  exports: [MatMenu, MatMenuItem, MatMenuTrigger, MatMenuContent, MatCommonModule],\r\n  declarations: [MatMenu, MatMenuItem, MatMenuTrigger, MatMenuContent],\r\n  providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER]\r\n})\r\nexport class MatMenuModule {}\r\n"],"names":["__extends","d","b","__","this","constructor","extendStatics","prototype","Object","create","throwMatMenuMissingError","Error","throwMatMenuInvalidPositionX","throwMatMenuInvalidPositionY","MAT_MENU_DEFAULT_OPTIONS_FACTORY","overlapTrigger","xPosition","yPosition","backdropClass","MAT_MENU_SCROLL_STRATEGY_FACTORY","overlay","scrollStrategies","reposition","setPrototypeOf","__proto__","Array","p","hasOwnProperty","MatMenuContent","_template","_componentFactoryResolver","_appRef","_injector","_viewContainerRef","_document","_attached","Subject","attach","context","_portal","TemplatePortal","detach","_outlet","DomPortalOutlet","createElement","element","elementRef","nativeElement","insertBefore","outletElement","next","isAttached","ngOnDestroy","dispose","type","Directive","args","selector","TemplateRef","ComponentFactoryResolver","ApplicationRef","Injector","ViewContainerRef","undefined","decorators","Inject","DOCUMENT","matMenuAnimations","transformMenu","trigger","state","style","opacity","transform","transition","sequence","query","animate","group","fadeInItems","MAT_MENU_PANEL","InjectionToken","MatMenuItemBase","_MatMenuItemMixinBase","mixinDisableRipple","mixinDisabled","MatMenuItem","_elementRef","document","_focusMonitor","_parentMenu","_this","_super","call","_hovered","_highlighted","_triggersSubmenu","monitor","_getHostElement","addItem","tslib_1.__extends","focus","origin","focusVia","stopMonitoring","removeItem","complete","_getTabIndex","disabled","_checkDisabled","event","preventDefault","stopPropagation","_handleMouseEnter","getLabel","textNodeType","TEXT_NODE","output","childNodes","length_1","length","i","nodeType","textContent","trim","Component","exportAs","inputs","host","role","class","[class.mat-menu-item-highlighted]","[class.mat-menu-item-submenu-trigger]","[attr.tabindex]","[attr.aria-disabled]","[attr.disabled]","(click)","(mouseenter)","changeDetection","ChangeDetectionStrategy","OnPush","encapsulation","ViewEncapsulation","None","template","FocusMonitor","Optional","MAT_MENU_DEFAULT_OPTIONS","providedIn","factory","MatMenu","_ngZone","_defaultOptions","_xPosition","_yPosition","_items","_itemChanges","_tabSubscription","Subscription","EMPTY","_classList","_panelAnimationState","_animationDone","_overlapTrigger","_hasBackdrop","hasBackdrop","closed","EventEmitter","close","defineProperty","value","setPositionClasses","coerceBooleanProperty","classes","split","reduce","obj","className","panelClass","ngOnInit","ngAfterContentInit","_keyManager","FocusKeyManager","withWrap","withTypeAhead","tabOut","subscribe","emit","unsubscribe","pipe","startWith","switchMap","items","merge","apply","map","item","_handleKeydown","keyCode","ESCAPE","LEFT_ARROW","parentMenu","direction","RIGHT_ARROW","UP_ARROW","DOWN_ARROW","setFocusOrigin","onKeydown","focusFirstItem","lazyContent","onStable","asObservable","take","setFirstItemActive","resetActiveItem","setActiveItem","setElevation","depth","newElevation","customElevation","keys","find","c","startsWith","_previousElevation","indexOf","push","index","splice","posX","posY","_startAnimation","_resetAnimation","_onAnimationDone","_isAnimating","toState","activeItemIndex","scrollTop","styles","animations","providers","provide","useExisting","propDecorators","Input","templateRef","ViewChild","ContentChildren","ContentChild","classList","Output","MAT_MENU_SCROLL_STRATEGY","MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER","deps","Overlay","useFactory","MatMenuTrigger","_overlay","_element","_scrollStrategy","_menuItemInstance","_dir","_overlayRef","_menuOpen","_closeSubscription","_hoverSubscription","_openedByMouse","menuOpened","onMenuOpen","menuClosed","onMenuClose","triggersSubmenu","menu","v","_checkMenu","reason","_destroyMenu","_handleHover","_cleanUpSubscriptions","toggleMenu","closeMenu","openMenu","overlayRef","_createOverlay","_setPosition","getConfig","menuData","_menuClosingActions","_initMenu","menuOpen","filter","takeUntil","_resetMenu","dir","_setMenuElevation","_setIsMenuOpen","isOpen","config","_getOverlayConfig","_subscribeToPositions","OverlayConfig","positionStrategy","position","flexibleConnectedTo","withTransformOriginOn","scrollStrategy","positionChanges","change","connectionPair","overlayX","overlayY","_a","originX","originFallbackX","_b","overlayFallbackY","_c","originY","originFallbackY","_d","overlayFallbackX","offsetY","withPositions","backdrop","backdropClick","detachments","parentClose","observableOf","hover","active","_handleMousedown","isFakeMousedownFromScreenReader","_handleClick","delay","asapScheduler","aria-haspopup","[attr.aria-expanded]","(mousedown)","(keydown)","ElementRef","Self","Directionality","_deprecatedMatMenuTriggerFor","NgModule","imports","CommonModule","MatCommonModule","MatRippleModule","OverlayModule","exports","declarations","MatMenuModule"],"mappings":"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"}