{"version":3,"file":"table-errors.js","sourceRoot":"","sources":["../../../../src/cdk/table/table-errors.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAaA,oCAA2C,EAAU;IACnD,MAAM,CAAC,KAAK,CAAC,qCAAkC,EAAE,QAAI,CAAC,CAAC;CACxD;AAFD,gEAEC;;;;;AAMD,0CAAiD,IAAY;IAC3D,MAAM,CAAC,KAAK,CAAC,kDAA+C,IAAI,QAAI,CAAC,CAAC;CACvE;AAFD,4EAEC;;;;;AAMD;IACE,MAAM,CAAC,KAAK,CAAC,sEAAsE,CAAC,CAAC;CACtF;AAFD,kFAEC;;;;;AAMD,4CAAmD,IAAS;IAC1D,MAAM,CAAC,KAAK,CAAC,kDAAkD;SAC3D,wBAAsB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAG,CAAA,CAAC,CAAC;CACnD;AAHD,gFAGC;;;;;AAMD;IACE,MAAM,CAAC,KAAK,CAAC,mDAAmD;QAC5D,oDAAoD,CAAC,CAAC;CAC3D;AAHD,kEAGC;;;;;AAMD;IACE,MAAM,CAAC,KAAK,CAAC,wEAAwE,CAAC,CAAC;CACxF;AAFD,wEAEC","sourcesContent":["/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n/**\r\n * Returns an error to be thrown when attempting to find an unexisting column.\r\n * @param id Id whose lookup failed.\r\n * @docs-private\r\n */\r\nexport function getTableUnknownColumnError(id: string) {\r\n  return Error(`Could not find column with id \"${id}\".`);\r\n}\r\n\r\n/**\r\n * Returns an error to be thrown when two column definitions have the same name.\r\n * @docs-private\r\n */\r\nexport function getTableDuplicateColumnNameError(name: string) {\r\n  return Error(`Duplicate column definition name provided: \"${name}\".`);\r\n}\r\n\r\n/**\r\n * Returns an error to be thrown when there are multiple rows that are missing a when function.\r\n * @docs-private\r\n */\r\nexport function getTableMultipleDefaultRowDefsError() {\r\n  return Error(`There can only be one default row without a when predicate function.`);\r\n}\r\n\r\n/**\r\n * Returns an error to be thrown when there are no matching row defs for a particular set of data.\r\n * @docs-private\r\n */\r\nexport function getTableMissingMatchingRowDefError(data: any) {\r\n  return Error(`Could not find a matching row definition for the` +\r\n      `provided row data: ${JSON.stringify(data)}`);\r\n}\r\n\r\n/**\r\n * Returns an error to be thrown when there is no row definitions present in the content.\r\n * @docs-private\r\n */\r\nexport function getTableMissingRowDefsError() {\r\n  return Error('Missing definitions for header, footer, and row; ' +\r\n      'cannot determine which columns should be rendered.');\r\n}\r\n\r\n/**\r\n * Returns an error to be thrown when the data source does not match the compatible types.\r\n * @docs-private\r\n */\r\nexport function getTableUnknownDataSourceError() {\r\n  return Error(`Provided data source did not match an array, Observable, or DataSource`);\r\n}\r\n"]}