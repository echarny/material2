{"version":3,"file":"virtual-scroll-viewport.spec.js","sourceRoot":"","sources":["../../../../src/cdk/scrolling/virtual-scroll-viewport.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import {ArrayDataSource} from '@angular/cdk/collections';\r\nimport {CdkVirtualForOf, CdkVirtualScrollViewport, ScrollingModule} from '@angular/cdk/scrolling';\r\nimport {dispatchFakeEvent} from '@angular/cdk/testing';\r\nimport {Component, Input, ViewChild, ViewContainerRef, ViewEncapsulation} from '@angular/core';\r\nimport {ComponentFixture, fakeAsync, flush, TestBed} from '@angular/core/testing';\r\nimport {animationFrameScheduler, Subject} from 'rxjs';\r\n\r\n\r\ndescribe('CdkVirtualScrollViewport', () => {\r\n  describe ('with FixedSizeVirtualScrollStrategy', () => {\r\n    let fixture: ComponentFixture<FixedSizeVirtualScroll>;\r\n    let testComponent: FixedSizeVirtualScroll;\r\n    let viewport: CdkVirtualScrollViewport;\r\n\r\n    beforeEach(() => {\r\n      TestBed.configureTestingModule({\r\n        imports: [ScrollingModule],\r\n        declarations: [FixedSizeVirtualScroll],\r\n      }).compileComponents();\r\n\r\n      fixture = TestBed.createComponent(FixedSizeVirtualScroll);\r\n      testComponent = fixture.componentInstance;\r\n      viewport = testComponent.viewport;\r\n    });\r\n\r\n    it('should render initial state', fakeAsync(() => {\r\n      finishInit(fixture);\r\n\r\n      const contentWrapper =\r\n          viewport.elementRef.nativeElement.querySelector('.cdk-virtual-scroll-content-wrapper')!;\r\n      expect(contentWrapper.children.length)\r\n          .toBe(4, 'should render 4 50px items to fill 200px space');\r\n    }));\r\n\r\n    it('should get the data length', fakeAsync(() => {\r\n      finishInit(fixture);\r\n\r\n      expect(viewport.getDataLength()).toBe(testComponent.items.length);\r\n    }));\r\n\r\n    it('should get the viewport size', fakeAsync(() => {\r\n      finishInit(fixture);\r\n\r\n      expect(viewport.getViewportSize()).toBe(testComponent.viewportSize);\r\n    }));\r\n\r\n    it('should update viewport size', fakeAsync(() => {\r\n      testComponent.viewportSize = 300;\r\n      fixture.detectChanges();\r\n      flush();\r\n      viewport.checkViewportSize();\r\n      expect(viewport.getViewportSize()).toBe(300);\r\n\r\n      testComponent.viewportSize = 500;\r\n      fixture.detectChanges();\r\n      flush();\r\n      viewport.checkViewportSize();\r\n      expect(viewport.getViewportSize()).toBe(500);\r\n    }));\r\n\r\n    it('should get the rendered range', fakeAsync(() => {\r\n      finishInit(fixture);\r\n\r\n      expect(viewport.getRenderedRange())\r\n          .toEqual({start: 0, end: 4}, 'should render the first 4 50px items to fill 200px space');\r\n    }));\r\n\r\n    it('should get the rendered content offset', fakeAsync(() => {\r\n      finishInit(fixture);\r\n      triggerScroll(viewport, testComponent.itemSize + 5);\r\n      fixture.detectChanges();\r\n      flush();\r\n\r\n      expect(viewport.getOffsetToRenderedContentStart()).toBe(testComponent.itemSize,\r\n          'should have 50px offset since first 50px item is not rendered');\r\n    }));\r\n\r\n    it('should get the scroll offset', fakeAsync(() => {\r\n      finishInit(fixture);\r\n      triggerScroll(viewport, testComponent.itemSize + 5);\r\n      fixture.detectChanges();\r\n      flush();\r\n\r\n      expect(viewport.measureScrollOffset()).toBe(testComponent.itemSize + 5);\r\n    }));\r\n\r\n    it('should get the rendered content size', fakeAsync(() => {\r\n      finishInit(fixture);\r\n\r\n      expect(viewport.measureRenderedContentSize())\r\n          .toBe(testComponent.viewportSize,\r\n              'should render 4 50px items with combined size of 200px to fill 200px space');\r\n    }));\r\n\r\n    it('should measure range size', fakeAsync(() => {\r\n      finishInit(fixture);\r\n\r\n      expect(viewport.measureRangeSize({start: 1, end: 3}))\r\n          .toBe(testComponent.itemSize * 2, 'combined size of 2 50px items should be 100px');\r\n    }));\r\n\r\n    it('should set total content size', fakeAsync(() => {\r\n      finishInit(fixture);\r\n\r\n      viewport.setTotalContentSize(10000);\r\n      flush();\r\n      fixture.detectChanges();\r\n\r\n      expect(viewport.elementRef.nativeElement.scrollHeight).toBe(10000);\r\n    }));\r\n\r\n    it('should set rendered range', fakeAsync(() => {\r\n      finishInit(fixture);\r\n      viewport.setRenderedRange({start: 2, end: 3});\r\n      fixture.detectChanges();\r\n      flush();\r\n\r\n      const items = fixture.elementRef.nativeElement.querySelectorAll('.item');\r\n      expect(items.length).toBe(1, 'Expected 1 item to be rendered');\r\n      expect(items[0].innerText.trim()).toBe('2 - 2', 'Expected item with index 2 to be rendered');\r\n    }));\r\n\r\n    it('should set content offset to top of content', fakeAsync(() => {\r\n      finishInit(fixture);\r\n      viewport.setRenderedContentOffset(10, 'to-start');\r\n      fixture.detectChanges();\r\n      flush();\r\n\r\n      expect(viewport.getOffsetToRenderedContentStart()).toBe(10);\r\n    }));\r\n\r\n    it('should set content offset to bottom of content', fakeAsync(() => {\r\n      finishInit(fixture);\r\n      const contentSize = viewport.measureRenderedContentSize();\r\n\r\n      expect(contentSize).toBeGreaterThan(0);\r\n\r\n      viewport.setRenderedContentOffset(contentSize + 10, 'to-end');\r\n      fixture.detectChanges();\r\n      flush();\r\n\r\n      expect(viewport.getOffsetToRenderedContentStart()).toBe(10);\r\n    }));\r\n\r\n    it('should set scroll offset', fakeAsync(() => {\r\n      finishInit(fixture);\r\n      viewport.setScrollOffset(testComponent.itemSize * 2);\r\n      fixture.detectChanges();\r\n      flush();\r\n\r\n      triggerScroll(viewport);\r\n      fixture.detectChanges();\r\n      flush();\r\n\r\n      expect(viewport.elementRef.nativeElement.scrollTop).toBe(testComponent.itemSize * 2);\r\n      expect(viewport.getRenderedRange()).toEqual({start: 2, end: 6});\r\n    }));\r\n\r\n    it('should scroll to offset', fakeAsync(() => {\r\n      finishInit(fixture);\r\n      viewport.scrollToOffset(testComponent.itemSize * 2);\r\n\r\n      triggerScroll(viewport);\r\n      fixture.detectChanges();\r\n      flush();\r\n\r\n      expect(viewport.elementRef.nativeElement.scrollTop).toBe(testComponent.itemSize * 2);\r\n      expect(viewport.getRenderedRange()).toEqual({start: 2, end: 6});\r\n    }));\r\n\r\n    it('should scroll to index', fakeAsync(() => {\r\n      finishInit(fixture);\r\n      viewport.scrollToIndex(2);\r\n\r\n      triggerScroll(viewport);\r\n      fixture.detectChanges();\r\n      flush();\r\n\r\n      expect(viewport.elementRef.nativeElement.scrollTop).toBe(testComponent.itemSize * 2);\r\n      expect(viewport.getRenderedRange()).toEqual({start: 2, end: 6});\r\n    }));\r\n\r\n    it('should scroll to offset in horizontal mode', fakeAsync(() => {\r\n      testComponent.orientation = 'horizontal';\r\n      finishInit(fixture);\r\n      viewport.scrollToOffset(testComponent.itemSize * 2);\r\n\r\n      triggerScroll(viewport);\r\n      fixture.detectChanges();\r\n      flush();\r\n\r\n      expect(viewport.elementRef.nativeElement.scrollLeft).toBe(testComponent.itemSize * 2);\r\n      expect(viewport.getRenderedRange()).toEqual({start: 2, end: 6});\r\n    }));\r\n\r\n    it('should scroll to index in horizontal mode', fakeAsync(() => {\r\n      testComponent.orientation = 'horizontal';\r\n      finishInit(fixture);\r\n      viewport.scrollToIndex(2);\r\n\r\n      triggerScroll(viewport);\r\n      fixture.detectChanges();\r\n      flush();\r\n\r\n      expect(viewport.elementRef.nativeElement.scrollLeft).toBe(testComponent.itemSize * 2);\r\n      expect(viewport.getRenderedRange()).toEqual({start: 2, end: 6});\r\n    }));\r\n\r\n    it('should output scrolled index', fakeAsync(() => {\r\n      finishInit(fixture);\r\n      triggerScroll(viewport, testComponent.itemSize * 2 - 1);\r\n      fixture.detectChanges();\r\n      flush();\r\n\r\n      expect(testComponent.scrolledToIndex).toBe(1);\r\n\r\n      triggerScroll(viewport, testComponent.itemSize * 2);\r\n      fixture.detectChanges();\r\n      flush();\r\n\r\n      expect(testComponent.scrolledToIndex).toBe(2);\r\n    }));\r\n\r\n    it('should update viewport as user scrolls down', fakeAsync(() => {\r\n      finishInit(fixture);\r\n\r\n      const maxOffset =\r\n          testComponent.itemSize * testComponent.items.length - testComponent.viewportSize;\r\n      for (let offset = 1; offset <= maxOffset; offset += 10) {\r\n        triggerScroll(viewport, offset);\r\n        fixture.detectChanges();\r\n        flush();\r\n\r\n        const expectedRange = {\r\n          start: Math.floor(offset / testComponent.itemSize),\r\n          end: Math.ceil((offset + testComponent.viewportSize) / testComponent.itemSize)\r\n        };\r\n        expect(viewport.getRenderedRange())\r\n            .toEqual(expectedRange,\r\n                `rendered range should match expected value at scroll offset ${offset}`);\r\n        expect(viewport.getOffsetToRenderedContentStart())\r\n            .toBe(expectedRange.start * testComponent.itemSize,\r\n                `rendered content offset should match expected value at scroll offset ${offset}`);\r\n        expect(viewport.measureRenderedContentSize())\r\n            .toBe((expectedRange.end - expectedRange.start) * testComponent.itemSize,\r\n                `rendered content size should match expected value at offset ${offset}`);\r\n      }\r\n    }));\r\n\r\n    it('should update viewport as user scrolls up', fakeAsync(() => {\r\n      finishInit(fixture);\r\n\r\n      const maxOffset =\r\n          testComponent.itemSize * testComponent.items.length - testComponent.viewportSize;\r\n      for (let offset = maxOffset - 1; offset >= 0; offset -= 10) {\r\n        triggerScroll(viewport, offset);\r\n        fixture.detectChanges();\r\n        flush();\r\n\r\n        const expectedRange = {\r\n          start: Math.floor(offset / testComponent.itemSize),\r\n          end: Math.ceil((offset + testComponent.viewportSize) / testComponent.itemSize)\r\n        };\r\n        expect(viewport.getRenderedRange())\r\n            .toEqual(expectedRange,\r\n                `rendered range should match expected value at scroll offset ${offset}`);\r\n        expect(viewport.getOffsetToRenderedContentStart())\r\n            .toBe(expectedRange.start * testComponent.itemSize,\r\n                `rendered content offset should match expected value at scroll offset ${offset}`);\r\n        expect(viewport.measureRenderedContentSize())\r\n            .toBe((expectedRange.end - expectedRange.start) * testComponent.itemSize,\r\n                `rendered content size should match expected value at offset ${offset}`);\r\n      }\r\n    }));\r\n\r\n    it('should render buffer element at the end when scrolled to the top', fakeAsync(() => {\r\n      testComponent.minBufferPx = testComponent.itemSize;\r\n      testComponent.maxBufferPx = testComponent.itemSize;\r\n      finishInit(fixture);\r\n\r\n      expect(viewport.getRenderedRange()).toEqual({start: 0, end: 5},\r\n          'should render the first 5 50px items to fill 200px space, plus one buffer element at' +\r\n          ' the end');\r\n    }));\r\n\r\n    it('should render buffer element at the start and end when scrolled to the middle',\r\n        fakeAsync(() => {\r\n          testComponent.minBufferPx = testComponent.itemSize;\r\n          testComponent.maxBufferPx = testComponent.itemSize;\r\n          finishInit(fixture);\r\n          triggerScroll(viewport, testComponent.itemSize * 2);\r\n          fixture.detectChanges();\r\n          flush();\r\n\r\n          expect(viewport.getRenderedRange()).toEqual({start: 1, end: 7},\r\n              'should render 6 50px items to fill 200px space, plus one buffer element at the' +\r\n              ' start and end');\r\n        }));\r\n\r\n    it('should render buffer element at the start when scrolled to the bottom', fakeAsync(() => {\r\n      testComponent.minBufferPx = testComponent.itemSize;\r\n      testComponent.maxBufferPx = testComponent.itemSize;\r\n      finishInit(fixture);\r\n      triggerScroll(viewport, testComponent.itemSize * 6);\r\n      fixture.detectChanges();\r\n      flush();\r\n\r\n      expect(viewport.getRenderedRange()).toEqual({start: 5, end: 10},\r\n          'should render the last 5 50px items to fill 200px space, plus one buffer element at' +\r\n          ' the start');\r\n    }));\r\n\r\n    it('should handle dynamic item size', fakeAsync(() => {\r\n      finishInit(fixture);\r\n      triggerScroll(viewport, testComponent.itemSize * 2);\r\n      fixture.detectChanges();\r\n      flush();\r\n\r\n      expect(viewport.getRenderedRange())\r\n          .toEqual({start: 2, end: 6}, 'should render 4 50px items to fill 200px space');\r\n\r\n      testComponent.itemSize *= 2;\r\n      fixture.detectChanges();\r\n      flush();\r\n\r\n      expect(viewport.getRenderedRange())\r\n          .toEqual({start: 1, end: 3}, 'should render 2 100px items to fill 200px space');\r\n    }));\r\n\r\n    it('should handle dynamic buffer size', fakeAsync(() => {\r\n      finishInit(fixture);\r\n      triggerScroll(viewport, testComponent.itemSize * 2);\r\n      fixture.detectChanges();\r\n      flush();\r\n\r\n      expect(viewport.getRenderedRange())\r\n          .toEqual({start: 2, end: 6}, 'should render 4 50px items to fill 200px space');\r\n\r\n      testComponent.minBufferPx = testComponent.itemSize;\r\n      testComponent.maxBufferPx = testComponent.itemSize;\r\n      fixture.detectChanges();\r\n      flush();\r\n\r\n      expect(viewport.getRenderedRange())\r\n          .toEqual({start: 1, end: 7}, 'should expand to 1 buffer element on each side');\r\n    }));\r\n\r\n    it('should handle dynamic item array', fakeAsync(() => {\r\n      finishInit(fixture);\r\n      triggerScroll(viewport, testComponent.itemSize * 6);\r\n      fixture.detectChanges();\r\n      flush();\r\n\r\n      expect(viewport.getOffsetToRenderedContentStart())\r\n          .toBe(testComponent.itemSize * 6, 'should be scrolled to bottom of 10 item list');\r\n\r\n      testComponent.items = Array(5).fill(0);\r\n      fixture.detectChanges();\r\n      flush();\r\n\r\n      triggerScroll(viewport);\r\n      fixture.detectChanges();\r\n      flush();\r\n\r\n      expect(viewport.getOffsetToRenderedContentStart())\r\n          .toBe(testComponent.itemSize, 'should be scrolled to bottom of 5 item list');\r\n    }));\r\n\r\n    it('should update viewport as user scrolls right in horizontal mode', fakeAsync(() => {\r\n      testComponent.orientation = 'horizontal';\r\n      finishInit(fixture);\r\n\r\n      const maxOffset =\r\n          testComponent.itemSize * testComponent.items.length - testComponent.viewportSize;\r\n      for (let offset = 1; offset <= maxOffset; offset += 10) {\r\n        triggerScroll(viewport, offset);\r\n        fixture.detectChanges();\r\n        flush();\r\n\r\n        const expectedRange = {\r\n          start: Math.floor(offset / testComponent.itemSize),\r\n          end: Math.ceil((offset + testComponent.viewportSize) / testComponent.itemSize)\r\n        };\r\n        expect(viewport.getRenderedRange())\r\n            .toEqual(expectedRange,\r\n                `rendered range should match expected value at scroll offset ${offset}`);\r\n        expect(viewport.getOffsetToRenderedContentStart())\r\n            .toBe(expectedRange.start * testComponent.itemSize,\r\n                `rendered content offset should match expected value at scroll offset ${offset}`);\r\n        expect(viewport.measureRenderedContentSize())\r\n            .toBe((expectedRange.end - expectedRange.start) * testComponent.itemSize,\r\n                `rendered content size should match expected value at offset ${offset}`);\r\n      }\r\n    }));\r\n\r\n    it('should update viewport as user scrolls left in horizontal mode', fakeAsync(() => {\r\n      testComponent.orientation = 'horizontal';\r\n      finishInit(fixture);\r\n\r\n      const maxOffset =\r\n          testComponent.itemSize * testComponent.items.length - testComponent.viewportSize;\r\n      for (let offset = maxOffset - 1; offset >= 0; offset -= 10) {\r\n        triggerScroll(viewport, offset);\r\n        fixture.detectChanges();\r\n        flush();\r\n\r\n        const expectedRange = {\r\n          start: Math.floor(offset / testComponent.itemSize),\r\n          end: Math.ceil((offset + testComponent.viewportSize) / testComponent.itemSize)\r\n        };\r\n        expect(viewport.getRenderedRange())\r\n            .toEqual(expectedRange,\r\n                `rendered range should match expected value at scroll offset ${offset}`);\r\n        expect(viewport.getOffsetToRenderedContentStart())\r\n            .toBe(expectedRange.start * testComponent.itemSize,\r\n                `rendered content offset should match expected value at scroll offset ${offset}`);\r\n        expect(viewport.measureRenderedContentSize())\r\n            .toBe((expectedRange.end - expectedRange.start) * testComponent.itemSize,\r\n                `rendered content size should match expected value at offset ${offset}`);\r\n      }\r\n    }));\r\n\r\n    it('should work with an Observable', fakeAsync(() => {\r\n      const data = new Subject<number[]>();\r\n      testComponent.items = data as any;\r\n      finishInit(fixture);\r\n\r\n      expect(viewport.getRenderedRange())\r\n          .toEqual({start: 0, end: 0}, 'no items should be rendered');\r\n\r\n      data.next([1, 2, 3]);\r\n      fixture.detectChanges();\r\n      flush();\r\n\r\n      expect(viewport.getRenderedRange())\r\n          .toEqual({start: 0, end: 3}, 'newly emitted items should be rendered');\r\n    }));\r\n\r\n    it('should work with a DataSource', fakeAsync(() => {\r\n      const data = new Subject<number[]>();\r\n      testComponent.items = new ArrayDataSource(data) as any;\r\n      finishInit(fixture);\r\n\r\n      expect(viewport.getRenderedRange())\r\n          .toEqual({start: 0, end: 0}, 'no items should be rendered');\r\n\r\n      data.next([1, 2, 3]);\r\n      fixture.detectChanges();\r\n      flush();\r\n\r\n      expect(viewport.getRenderedRange())\r\n          .toEqual({start: 0, end: 3}, 'newly emitted items should be rendered');\r\n    }));\r\n\r\n    it('should trackBy value by default', fakeAsync(() => {\r\n      testComponent.items = [];\r\n      spyOn(testComponent.virtualForViewContainer, 'detach').and.callThrough();\r\n      finishInit(fixture);\r\n\r\n      testComponent.items = [0];\r\n      fixture.detectChanges();\r\n      flush();\r\n\r\n      expect(testComponent.virtualForViewContainer.detach).not.toHaveBeenCalled();\r\n\r\n      testComponent.items = [1];\r\n      fixture.detectChanges();\r\n      flush();\r\n\r\n      expect(testComponent.virtualForViewContainer.detach).toHaveBeenCalled();\r\n    }));\r\n\r\n    it('should trackBy index when specified', fakeAsync(() => {\r\n      testComponent.trackBy = i => i;\r\n      testComponent.items = [];\r\n      spyOn(testComponent.virtualForViewContainer, 'detach').and.callThrough();\r\n      finishInit(fixture);\r\n\r\n      testComponent.items = [0];\r\n      fixture.detectChanges();\r\n      flush();\r\n\r\n      expect(testComponent.virtualForViewContainer.detach).not.toHaveBeenCalled();\r\n\r\n      testComponent.items = [1];\r\n      fixture.detectChanges();\r\n      flush();\r\n\r\n      expect(testComponent.virtualForViewContainer.detach).not.toHaveBeenCalled();\r\n    }));\r\n\r\n    it('should recycle views when template cache is large enough to accommodate', fakeAsync(() => {\r\n      testComponent.trackBy = i => i;\r\n      const spy =\r\n          spyOn(testComponent.virtualForViewContainer, 'createEmbeddedView').and.callThrough();\r\n      finishInit(fixture);\r\n\r\n      // Should create views for the initial rendered items.\r\n      expect(testComponent.virtualForViewContainer.createEmbeddedView).toHaveBeenCalledTimes(4);\r\n\r\n      spy.calls.reset();\r\n      triggerScroll(viewport, 10);\r\n      fixture.detectChanges();\r\n      flush();\r\n\r\n      // As we first start to scroll we need to create one more item. This is because the first item\r\n      // is still partially on screen and therefore can't be removed yet. At the same time a new\r\n      // item is now partially on the screen at the bottom and so a new view is needed.\r\n      expect(testComponent.virtualForViewContainer.createEmbeddedView).toHaveBeenCalledTimes(1);\r\n\r\n      spy.calls.reset();\r\n      const maxOffset =\r\n          testComponent.itemSize * testComponent.items.length - testComponent.viewportSize;\r\n      for (let offset = 10; offset <= maxOffset; offset += 10) {\r\n        triggerScroll(viewport, offset);\r\n        fixture.detectChanges();\r\n        flush();\r\n      }\r\n\r\n      // As we scroll through the rest of the items, no new views should be created, our existing 5\r\n      // can just be recycled as appropriate.\r\n      expect(testComponent.virtualForViewContainer.createEmbeddedView).not.toHaveBeenCalled();\r\n    }));\r\n\r\n    it('should not recycle views when template cache is full', fakeAsync(() => {\r\n      testComponent.trackBy = i => i;\r\n      testComponent.templateCacheSize = 0;\r\n      const spy =\r\n          spyOn(testComponent.virtualForViewContainer, 'createEmbeddedView').and.callThrough();\r\n      finishInit(fixture);\r\n\r\n      // Should create views for the initial rendered items.\r\n      expect(testComponent.virtualForViewContainer.createEmbeddedView).toHaveBeenCalledTimes(4);\r\n\r\n      spy.calls.reset();\r\n      triggerScroll(viewport, 10);\r\n      fixture.detectChanges();\r\n      flush();\r\n\r\n      // As we first start to scroll we need to create one more item. This is because the first item\r\n      // is still partially on screen and therefore can't be removed yet. At the same time a new\r\n      // item is now partially on the screen at the bottom and so a new view is needed.\r\n      expect(testComponent.virtualForViewContainer.createEmbeddedView).toHaveBeenCalledTimes(1);\r\n\r\n      spy.calls.reset();\r\n      const maxOffset =\r\n          testComponent.itemSize * testComponent.items.length - testComponent.viewportSize;\r\n      for (let offset = 10; offset <= maxOffset; offset += 10) {\r\n        triggerScroll(viewport, offset);\r\n        fixture.detectChanges();\r\n        flush();\r\n      }\r\n\r\n      // Since our template cache size is 0, as we scroll through the rest of the items, we need to\r\n      // create a new view for each one.\r\n      expect(testComponent.virtualForViewContainer.createEmbeddedView).toHaveBeenCalledTimes(5);\r\n    }));\r\n\r\n    it('should render up to maxBufferPx when buffer dips below minBufferPx', fakeAsync(() => {\r\n      testComponent.minBufferPx = testComponent.itemSize;\r\n      testComponent.maxBufferPx = testComponent.itemSize * 2;\r\n      finishInit(fixture);\r\n\r\n      expect(viewport.getRenderedRange())\r\n          .toEqual({start: 0, end: 6}, 'should have 2 buffer items initially');\r\n\r\n      triggerScroll(viewport, 50);\r\n      fixture.detectChanges();\r\n      flush();\r\n\r\n      expect(viewport.getRenderedRange())\r\n          .toEqual({start: 0, end: 6}, 'should not render additional buffer yet');\r\n\r\n      triggerScroll(viewport, 51);\r\n      fixture.detectChanges();\r\n      flush();\r\n\r\n      expect(viewport.getRenderedRange())\r\n          .toEqual({start: 0, end: 8}, 'should render 2 more buffer items');\r\n    }));\r\n\r\n    it('should throw if maxBufferPx is less than minBufferPx', fakeAsync(() => {\r\n      testComponent.minBufferPx = 100;\r\n      testComponent.maxBufferPx = 99;\r\n      expect(() => finishInit(fixture)).toThrow();\r\n    }));\r\n  });\r\n});\r\n\r\n\r\n/** Finish initializing the virtual scroll component at the beginning of a test. */\r\nfunction finishInit(fixture: ComponentFixture<any>) {\r\n  // On the first cycle we render and measure the viewport.\r\n  fixture.detectChanges();\r\n  flush();\r\n\r\n  // On the second cycle we render the items.\r\n  fixture.detectChanges();\r\n  flush();\r\n}\r\n\r\n/** Trigger a scroll event on the viewport (optionally setting a new scroll offset). */\r\nfunction triggerScroll(viewport: CdkVirtualScrollViewport, offset?: number) {\r\n  if (offset !== undefined) {\r\n    if (viewport.orientation == 'horizontal') {\r\n      viewport.elementRef.nativeElement.scrollLeft = offset;\r\n    } else {\r\n      viewport.elementRef.nativeElement.scrollTop = offset;\r\n    }\r\n  }\r\n  dispatchFakeEvent(viewport.elementRef.nativeElement, 'scroll');\r\n  animationFrameScheduler.flush();\r\n}\r\n\r\n\r\n@Component({\r\n  template: `\r\n    <cdk-virtual-scroll-viewport\r\n        [itemSize]=\"itemSize\" [minBufferPx]=\"minBufferPx\" [maxBufferPx]=\"maxBufferPx\"\r\n        [orientation]=\"orientation\" [style.height.px]=\"viewportHeight\"\r\n        [style.width.px]=\"viewportWidth\" (scrolledIndexChange)=\"scrolledToIndex = $event\">\r\n      <div class=\"item\"\r\n           *cdkVirtualFor=\"let item of items; let i = index; trackBy: trackBy; \\\r\n                           templateCacheSize: templateCacheSize\"\r\n           [style.height.px]=\"itemSize\" [style.width.px]=\"itemSize\">\r\n        {{i}} - {{item}}\r\n      </div>\r\n    </cdk-virtual-scroll-viewport>\r\n  `,\r\n  styles: [`\r\n    .cdk-virtual-scroll-content-wrapper {\r\n      display: flex;\r\n      flex-direction: column;\r\n    }\r\n\r\n    .cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper {\r\n      flex-direction: row;\r\n    }\r\n  `],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nclass FixedSizeVirtualScroll {\r\n  @ViewChild(CdkVirtualScrollViewport) viewport: CdkVirtualScrollViewport;\r\n  @ViewChild(CdkVirtualForOf, {read: ViewContainerRef}) virtualForViewContainer: ViewContainerRef;\r\n\r\n  @Input() orientation = 'vertical';\r\n  @Input() viewportSize = 200;\r\n  @Input() viewportCrossSize = 100;\r\n  @Input() itemSize = 50;\r\n  @Input() minBufferPx = 0;\r\n  @Input() maxBufferPx = 0;\r\n  @Input() items = Array(10).fill(0).map((_, i) => i);\r\n  @Input() trackBy;\r\n  @Input() templateCacheSize = 20;\r\n\r\n  scrolledToIndex = 0;\r\n\r\n  get viewportWidth() {\r\n    return this.orientation == 'horizontal' ? this.viewportSize : this.viewportCrossSize;\r\n  }\r\n\r\n  get viewportHeight() {\r\n    return this.orientation == 'horizontal' ? this.viewportCrossSize : this.viewportSize;\r\n  }\r\n}\r\n"]}