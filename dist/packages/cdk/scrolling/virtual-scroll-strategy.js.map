{"version":3,"file":"virtual-scroll-strategy.js","sourceRoot":"","sources":["../../../../src/cdk/scrolling/virtual-scroll-strategy.ts"],"names":[],"mappings":";;;;;;;;;AAQA,sCAA6C;;AAMhC,QAAA,uBAAuB,GAChC,IAAI,qBAAc,CAAwB,yBAAyB,CAAC","sourcesContent":["/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {InjectionToken} from '@angular/core';\r\nimport {Observable} from 'rxjs';\r\nimport {CdkVirtualScrollViewport} from './virtual-scroll-viewport';\r\n\r\n\r\n/** The injection token used to specify the virtual scrolling strategy. */\r\nexport const VIRTUAL_SCROLL_STRATEGY =\r\n    new InjectionToken<VirtualScrollStrategy>('VIRTUAL_SCROLL_STRATEGY');\r\n\r\n\r\n/** A strategy that dictates which items should be rendered in the viewport. */\r\nexport interface VirtualScrollStrategy {\r\n  /** Emits when the index of the first element visible in the viewport changes. */\r\n  scrolledIndexChange: Observable<number>;\r\n\r\n  /**\r\n   * Attaches this scroll strategy to a viewport.\r\n   * @param viewport The viewport to attach this strategy to.\r\n   */\r\n  attach(viewport: CdkVirtualScrollViewport): void;\r\n\r\n  /** Detaches this scroll strategy from the currently attached viewport. */\r\n  detach(): void;\r\n\r\n  /** Called when the viewport is scrolled (debounced using requestAnimationFrame). */\r\n  onContentScrolled();\r\n\r\n  /** Called when the length of the data changes. */\r\n  onDataLengthChanged();\r\n\r\n  /** Called when the range of items rendered in the DOM has changed. */\r\n  onContentRendered();\r\n\r\n  /** Called when the offset of the rendered items changed. */\r\n  onRenderedOffsetChanged();\r\n\r\n  /**\r\n   * Scroll to the offset for the given index.\r\n   * @param index The index of the element to scroll to.\r\n   * @param behavior The ScrollBehavior to use when scrolling.\r\n   */\r\n  scrollToIndex(index: number, behavior: ScrollBehavior): void;\r\n}\r\n"]}