{"version":3,"file":"padding.js","sourceRoot":"","sources":["../../../../src/cdk/tree/padding.ts"],"names":[],"mappings":";;;;;;;;;AAQA,0CAAiD;AACjD,kDAA2D;AAC3D,sCAA2F;AAC3F,4CAAyC;AACzC,6BAA6B;AAC7B,+BAA4C;;;;;;IAgC1C,4BAAoB,SAAyB,EACzB,KAAiB,EACjB,SAAoB,EACpB,QAAoB,EACR;QAJhC,iBASC;QATmB,cAAS,GAAT,SAAS,CAAgB;QACzB,UAAK,GAAL,KAAK,CAAY;QACjB,cAAS,GAAT,SAAS,CAAW;QACpB,aAAQ,GAAR,QAAQ,CAAY;QACR,SAAI,GAAJ,IAAI;;0BAzBf,IAAI,cAAO,EAAQ;uBAmBtB,EAAE;QAOlB,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;YACd,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,qBAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,SAAS,CAAC,cAAM,OAAA,KAAI,CAAC,WAAW,EAAE,EAAlB,CAAkB,CAAC,CAAC;SACvF;KACF;0BA1BG,qCAAK;;sBAAa,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;aACzC,UAAU,KAAa;YACrB,IAAI,CAAC,MAAM,GAAG,+BAAoB,CAAC,KAAK,CAAC,CAAC;YAC1C,IAAI,CAAC,WAAW,EAAE,CAAC;SACpB;;;;0BAMG,sCAAM;;;sBAAa,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;aAC3C,UAAW,KAAa;YACtB,IAAI,CAAC,OAAO,GAAG,+BAAoB,CAAC,KAAK,CAAC,CAAC;YAC3C,IAAI,CAAC,WAAW,EAAE,CAAC;SACpB;;;;IAcD,wCAAW,GAAX;QACE,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;QACvB,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;KAC5B;IAED,gGAAgG;;IAChG,2CAAc;IAAd;QACE,IAAM,SAAS,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,QAAQ,CAAC;YACxE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;YACtD,CAAC,CAAC,IAAI,CAAC;QACT,IAAM,KAAK,GAAG,IAAI,CAAC,MAAM,IAAI,SAAS,CAAC;QACvC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAI,KAAK,GAAG,IAAI,CAAC,OAAO,OAAI,CAAC,CAAC,CAAC,IAAI,CAAC;KACnD;IAED,wCAAW,GAAX;QACE,IAAM,OAAO,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;QACtC,IAAM,WAAW,GAAG,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,KAAK,KAAK,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,aAAa,CAAC;QAE5F,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,WAAW,EAAE,OAAO,CAAC,CAAC;KAC5E;;gBAxDF,gBAAS,SAAC;oBACT,QAAQ,EAAE,sBAAsB;iBACjC;;;;gBARgB,kBAAW;gBAApB,cAAO;gBAH4C,gBAAS;gBAAjD,iBAAU;gBAFrB,qBAAc,uBAyCP,eAAQ;;;0BAtBpB,YAAK,SAAC,oBAAoB;2BAU1B,YAAK,SAAC,0BAA0B;;6BArCnC;;AAsBa,gDAAkB","sourcesContent":["/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {Directionality} from '@angular/cdk/bidi';\r\nimport {coerceNumberProperty} from '@angular/cdk/coercion';\r\nimport {Directive, ElementRef, Input, OnDestroy, Optional, Renderer2} from '@angular/core';\r\nimport {takeUntil} from 'rxjs/operators';\r\nimport {Subject} from 'rxjs';\r\nimport {CdkTree, CdkTreeNode} from './tree';\r\n\r\n/**\r\n * Indent for the children tree dataNodes.\r\n * This directive will add left-padding to the node to show hierarchy.\r\n */\r\n@Directive({\r\n  selector: '[cdkTreeNodePadding]',\r\n})\r\nexport class CdkTreeNodePadding<T> implements OnDestroy {\r\n  /** Subject that emits when the component has been destroyed. */\r\n  private _destroyed = new Subject<void>();\r\n\r\n  /** The level of depth of the tree node. The padding will be `level * indent` pixels. */\r\n  @Input('cdkTreeNodePadding')\r\n  get level(): number { return this._level; }\r\n  set level(value: number) {\r\n    this._level = coerceNumberProperty(value);\r\n    this._setPadding();\r\n  }\r\n  _level: number;\r\n\r\n  /** The indent for each level. Default number 40px from material design menu sub-menu spec. */\r\n  // TODO(tinayuangao): Make indent working with a string with unit, e.g. 10em\r\n  @Input('cdkTreeNodePaddingIndent')\r\n  get indent(): number { return this._indent; }\r\n  set indent(value: number) {\r\n    this._indent = coerceNumberProperty(value);\r\n    this._setPadding();\r\n  }\r\n  _indent: number = 40;\r\n\r\n  constructor(private _treeNode: CdkTreeNode<T>,\r\n              private _tree: CdkTree<T>,\r\n              private _renderer: Renderer2,\r\n              private _element: ElementRef,\r\n              @Optional() private _dir: Directionality) {\r\n    this._setPadding();\r\n    if (this._dir) {\r\n      this._dir.change.pipe(takeUntil(this._destroyed)).subscribe(() => this._setPadding());\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._destroyed.next();\r\n    this._destroyed.complete();\r\n  }\r\n\r\n  /** The padding indent value for the tree node. Returns a string with px numbers if not null. */\r\n  _paddingIndent(): string|null {\r\n    const nodeLevel = (this._treeNode.data && this._tree.treeControl.getLevel)\r\n      ? this._tree.treeControl.getLevel(this._treeNode.data)\r\n      : null;\r\n    const level = this._level || nodeLevel;\r\n    return level ? `${level * this._indent}px` : null;\r\n  }\r\n\r\n  _setPadding() {\r\n    const padding = this._paddingIndent();\r\n    const paddingProp = this._dir && this._dir.value === 'rtl' ? 'paddingRight' : 'paddingLeft';\r\n\r\n    this._renderer.setStyle(this._element.nativeElement, paddingProp, padding);\r\n  }\r\n}\r\n"]}