{"version":3,"file":"tree.spec.js","sourceRoot":"","sources":["../../../../src/cdk/tree/tree.spec.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nimport {ComponentFixture, TestBed, fakeAsync, flush} from '@angular/core/testing';\r\nimport {Component, ViewChild, TrackByFunction} from '@angular/core';\r\n\r\nimport {CollectionViewer, DataSource} from '@angular/cdk/collections';\r\nimport {combineLatest, BehaviorSubject, Observable} from 'rxjs';\r\nimport {map} from 'rxjs/operators';\r\n\r\nimport {BaseTreeControl} from './control/base-tree-control';\r\nimport {TreeControl} from './control/tree-control';\r\nimport {FlatTreeControl} from './control/flat-tree-control';\r\nimport {NestedTreeControl} from './control/nested-tree-control';\r\nimport {CdkTreeModule} from './index';\r\nimport {CdkTree, CdkTreeNode} from './tree';\r\nimport {getTreeControlFunctionsMissingError} from './tree-errors';\r\n\r\n\r\ndescribe('CdkTree', () => {\r\n  /** Represents an indent for expectNestedTreeToMatch */\r\n  const _ = {};\r\n  let dataSource: FakeDataSource;\r\n  let treeElement: HTMLElement;\r\n  let tree: CdkTree<TestData>;\r\n\r\n  function configureCdkTreeTestingModule(declarations) {\r\n    TestBed.configureTestingModule({\r\n      imports: [CdkTreeModule],\r\n      declarations: declarations,\r\n    }).compileComponents();\r\n  }\r\n\r\n  it('should clear out the `mostRecentTreeNode` on destroy', () => {\r\n    configureCdkTreeTestingModule([SimpleCdkTreeApp]);\r\n    const fixture = TestBed.createComponent(SimpleCdkTreeApp);\r\n    fixture.detectChanges();\r\n\r\n    // Cast the assertions to a boolean to avoid Jasmine going into an\r\n    // infinite loop when stringifying the object, if the test starts failing.\r\n    expect(!!CdkTreeNode.mostRecentTreeNode).toBe(true);\r\n\r\n    fixture.destroy();\r\n\r\n    expect(!!CdkTreeNode.mostRecentTreeNode).toBe(false);\r\n  });\r\n\r\n  describe('flat tree', () => {\r\n    describe('should initialize', () => {\r\n      let fixture: ComponentFixture<SimpleCdkTreeApp>;\r\n      let component: SimpleCdkTreeApp;\r\n\r\n      beforeEach(() => {\r\n        configureCdkTreeTestingModule([SimpleCdkTreeApp]);\r\n        fixture = TestBed.createComponent(SimpleCdkTreeApp);\r\n\r\n        component = fixture.componentInstance;\r\n        dataSource = component.dataSource as FakeDataSource;\r\n        tree = component.tree;\r\n        treeElement = fixture.nativeElement.querySelector('cdk-tree');\r\n\r\n        fixture.detectChanges();\r\n      });\r\n\r\n      it('with a connected data source', () => {\r\n        expect(tree.dataSource).toBe(dataSource);\r\n        expect(dataSource.isConnected).toBe(true);\r\n      });\r\n\r\n      it('with rendered dataNodes', () => {\r\n        const nodes = getNodes(treeElement);\r\n\r\n        expect(nodes).toBeDefined('Expect nodes to be defined');\r\n        expect(nodes[0].classList).toContain('customNodeClass');\r\n      });\r\n\r\n      it('with the right accessibility roles', () => {\r\n        expect(treeElement.getAttribute('role')).toBe('tree');\r\n\r\n        getNodes(treeElement).forEach(node => {\r\n          expect(node.getAttribute('role')).toBe('treeitem');\r\n        });\r\n      });\r\n\r\n      it('with the right data', () => {\r\n        expect(dataSource.data.length).toBe(3);\r\n\r\n        let data = dataSource.data;\r\n        expectFlatTreeToMatch(treeElement, 28,\r\n          [`${data[0].pizzaTopping} - ${data[0].pizzaCheese} + ${data[0].pizzaBase}`],\r\n          [`${data[1].pizzaTopping} - ${data[1].pizzaCheese} + ${data[1].pizzaBase}`],\r\n          [`${data[2].pizzaTopping} - ${data[2].pizzaCheese} + ${data[2].pizzaBase}`]);\r\n\r\n        dataSource.addData(2);\r\n        fixture.detectChanges();\r\n\r\n        data = dataSource.data;\r\n        expect(data.length).toBe(4);\r\n        expectFlatTreeToMatch(treeElement, 28,\r\n          [`${data[0].pizzaTopping} - ${data[0].pizzaCheese} + ${data[0].pizzaBase}`],\r\n          [`${data[1].pizzaTopping} - ${data[1].pizzaCheese} + ${data[1].pizzaBase}`],\r\n          [`${data[2].pizzaTopping} - ${data[2].pizzaCheese} + ${data[2].pizzaBase}`],\r\n          [_, `${data[3].pizzaTopping} - ${data[3].pizzaCheese} + ${data[3].pizzaBase}`]);\r\n      });\r\n    });\r\n\r\n    describe('with toggle', () => {\r\n      let fixture: ComponentFixture<CdkTreeAppWithToggle>;\r\n      let component: CdkTreeAppWithToggle;\r\n\r\n      beforeEach(() => {\r\n        configureCdkTreeTestingModule([CdkTreeAppWithToggle]);\r\n        fixture = TestBed.createComponent(CdkTreeAppWithToggle);\r\n\r\n        component = fixture.componentInstance;\r\n        dataSource = component.dataSource as FakeDataSource;\r\n        tree = component.tree;\r\n        treeElement = fixture.nativeElement.querySelector('cdk-tree');\r\n\r\n        fixture.detectChanges();\r\n      });\r\n\r\n      it('should expand/collapse the node', () => {\r\n        expect(dataSource.data.length).toBe(3);\r\n\r\n        expect(component.treeControl.expansionModel.selected.length)\r\n          .toBe(0, `Expect no expanded node`);\r\n\r\n        component.toggleRecursively = false;\r\n        let data = dataSource.data;\r\n        dataSource.addChild(data[2]);\r\n        fixture.detectChanges();\r\n\r\n        data = dataSource.data;\r\n        expect(data.length).toBe(4);\r\n        expectFlatTreeToMatch(treeElement, 40,\r\n          [`${data[0].pizzaTopping} - ${data[0].pizzaCheese} + ${data[0].pizzaBase}`],\r\n          [`${data[1].pizzaTopping} - ${data[1].pizzaCheese} + ${data[1].pizzaBase}`],\r\n          [`${data[2].pizzaTopping} - ${data[2].pizzaCheese} + ${data[2].pizzaBase}`],\r\n          [_, `${data[3].pizzaTopping} - ${data[3].pizzaCheese} + ${data[3].pizzaBase}`]);\r\n\r\n\r\n        (getNodes(treeElement)[2] as HTMLElement).click();\r\n        fixture.detectChanges();\r\n\r\n        expect(component.treeControl.expansionModel.selected.length)\r\n          .toBe(1, `Expect node expanded`);\r\n        expect(component.treeControl.expansionModel.selected[0]).toBe(data[2]);\r\n\r\n        (getNodes(treeElement)[2] as HTMLElement).click();\r\n        fixture.detectChanges();\r\n\r\n        expect(component.treeControl.expansionModel.selected.length)\r\n          .toBe(0, `Expect node collapsed`);\r\n      });\r\n\r\n      it('should expand/collapse the node recursively', () => {\r\n        expect(dataSource.data.length).toBe(3);\r\n\r\n        expect(component.treeControl.expansionModel.selected.length)\r\n          .toBe(0, `Expect no expanded node`);\r\n\r\n        let data = dataSource.data;\r\n        dataSource.addChild(data[2]);\r\n        fixture.detectChanges();\r\n\r\n        data = dataSource.data;\r\n        expect(data.length).toBe(4);\r\n        expectFlatTreeToMatch(treeElement, 40,\r\n          [`${data[0].pizzaTopping} - ${data[0].pizzaCheese} + ${data[0].pizzaBase}`],\r\n          [`${data[1].pizzaTopping} - ${data[1].pizzaCheese} + ${data[1].pizzaBase}`],\r\n          [`${data[2].pizzaTopping} - ${data[2].pizzaCheese} + ${data[2].pizzaBase}`],\r\n          [_, `${data[3].pizzaTopping} - ${data[3].pizzaCheese} + ${data[3].pizzaBase}`]);\r\n\r\n        (getNodes(treeElement)[2] as HTMLElement).click();\r\n        fixture.detectChanges();\r\n\r\n        expect(component.treeControl.expansionModel.selected.length)\r\n          .toBe(2, `Expect nodes expanded`);\r\n        expect(component.treeControl.expansionModel.selected[0])\r\n          .toBe(data[2], `Expect parent node expanded`);\r\n        expect(component.treeControl.expansionModel.selected[1])\r\n          .toBe(data[3], `Expected child node expanded`);\r\n\r\n        (getNodes(treeElement)[2] as HTMLElement).click();\r\n        fixture.detectChanges();\r\n\r\n        expect(component.treeControl.expansionModel.selected.length)\r\n          .toBe(0, `Expect node collapsed`);\r\n      });\r\n    });\r\n\r\n    describe('with when node template', () => {\r\n      let fixture: ComponentFixture<WhenNodeCdkTreeApp>;\r\n      let component: WhenNodeCdkTreeApp;\r\n\r\n      beforeEach(() => {\r\n        configureCdkTreeTestingModule([WhenNodeCdkTreeApp]);\r\n        fixture = TestBed.createComponent(WhenNodeCdkTreeApp);\r\n\r\n        component = fixture.componentInstance;\r\n        dataSource = component.dataSource as FakeDataSource;\r\n        tree = component.tree;\r\n        treeElement = fixture.nativeElement.querySelector('cdk-tree');\r\n\r\n        fixture.detectChanges();\r\n      });\r\n\r\n      it('with the right data', () => {\r\n        expect(dataSource.data.length).toBe(3);\r\n\r\n        let data = dataSource.data;\r\n        expectFlatTreeToMatch(treeElement, 28,\r\n          [`[topping_1] - [cheese_1] + [base_1]`],\r\n          [`[topping_2] - [cheese_2] + [base_2]`],\r\n          [`[topping_3] - [cheese_3] + [base_3]`]);\r\n\r\n        dataSource.addChild(data[1]);\r\n        fixture.detectChanges();\r\n\r\n        treeElement = fixture.nativeElement.querySelector('cdk-tree');\r\n        data = dataSource.data;\r\n        expect(data.length).toBe(4);\r\n        expectFlatTreeToMatch(treeElement, 28,\r\n          [`[topping_1] - [cheese_1] + [base_1]`],\r\n          [`[topping_2] - [cheese_2] + [base_2]`],\r\n          [_, `topping_4 - cheese_4 + base_4`],\r\n          [`[topping_3] - [cheese_3] + [base_3]`]);\r\n      });\r\n    });\r\n\r\n    describe('with array data source', () => {\r\n      let fixture: ComponentFixture<ArrayDataSourceCdkTreeApp>;\r\n      let component: ArrayDataSourceCdkTreeApp;\r\n\r\n      beforeEach(() => {\r\n        configureCdkTreeTestingModule([ArrayDataSourceCdkTreeApp]);\r\n        fixture = TestBed.createComponent(ArrayDataSourceCdkTreeApp);\r\n\r\n        component = fixture.componentInstance;\r\n        dataSource = component.dataSource as FakeDataSource;\r\n        tree = component.tree;\r\n        treeElement = fixture.nativeElement.querySelector('cdk-tree');\r\n\r\n        fixture.detectChanges();\r\n      });\r\n\r\n      it('with the right data', () => {\r\n        expect(dataSource.data.length).toBe(3);\r\n\r\n        let data = dataSource.data;\r\n        expectFlatTreeToMatch(treeElement, 28,\r\n          [`[topping_1] - [cheese_1] + [base_1]`],\r\n          [`[topping_2] - [cheese_2] + [base_2]`],\r\n          [`[topping_3] - [cheese_3] + [base_3]`]);\r\n\r\n        dataSource.addChild(data[1]);\r\n        fixture.detectChanges();\r\n\r\n        treeElement = fixture.nativeElement.querySelector('cdk-tree');\r\n        data = dataSource.data;\r\n        expect(data.length).toBe(4);\r\n        expectFlatTreeToMatch(treeElement, 28,\r\n          [`[topping_1] - [cheese_1] + [base_1]`],\r\n          [`[topping_2] - [cheese_2] + [base_2]`],\r\n          [_, `[topping_4] - [cheese_4] + [base_4]`],\r\n          [`[topping_3] - [cheese_3] + [base_3]`]);\r\n      });\r\n    });\r\n\r\n    describe('with observable data source', () => {\r\n      let fixture: ComponentFixture<ObservableDataSourceCdkTreeApp>;\r\n      let component: ObservableDataSourceCdkTreeApp;\r\n\r\n      beforeEach(() => {\r\n        configureCdkTreeTestingModule([ObservableDataSourceCdkTreeApp]);\r\n        fixture = TestBed.createComponent(ObservableDataSourceCdkTreeApp);\r\n\r\n        component = fixture.componentInstance;\r\n        dataSource = component.dataSource as FakeDataSource;\r\n        tree = component.tree;\r\n        treeElement = fixture.nativeElement.querySelector('cdk-tree');\r\n\r\n        fixture.detectChanges();\r\n      });\r\n\r\n      it('with the right data', () => {\r\n        expect(dataSource.data.length).toBe(3);\r\n\r\n        let data = dataSource.data;\r\n        expectFlatTreeToMatch(treeElement, 28,\r\n          [`[topping_1] - [cheese_1] + [base_1]`],\r\n          [`[topping_2] - [cheese_2] + [base_2]`],\r\n          [`[topping_3] - [cheese_3] + [base_3]`]);\r\n\r\n        dataSource.addChild(data[1]);\r\n        fixture.detectChanges();\r\n\r\n        treeElement = fixture.nativeElement.querySelector('cdk-tree');\r\n        data = dataSource.data;\r\n        expect(data.length).toBe(4);\r\n        expectFlatTreeToMatch(treeElement, 28,\r\n          [`[topping_1] - [cheese_1] + [base_1]`],\r\n          [`[topping_2] - [cheese_2] + [base_2]`],\r\n          [_, `[topping_4] - [cheese_4] + [base_4]`],\r\n          [`[topping_3] - [cheese_3] + [base_3]`]);\r\n      });\r\n    });\r\n\r\n    describe('with trackBy', () => {\r\n      let fixture: ComponentFixture<CdkTreeAppWithTrackBy>;\r\n      let component: CdkTreeAppWithTrackBy;\r\n\r\n      function createTrackByTestComponent(trackByStrategy: 'reference' | 'property' | 'index') {\r\n        configureCdkTreeTestingModule([CdkTreeAppWithTrackBy]);\r\n        fixture = TestBed.createComponent(CdkTreeAppWithTrackBy);\r\n        component = fixture.componentInstance;\r\n        component.trackByStrategy = trackByStrategy;\r\n        dataSource = component.dataSource as FakeDataSource;\r\n        tree = component.tree;\r\n        treeElement = fixture.nativeElement.querySelector('cdk-tree');\r\n\r\n        fixture.detectChanges();\r\n\r\n        // Each node receives an attribute 'initialIndex' the element's original place\r\n        getNodes(treeElement).forEach((node: Element, index: number) => {\r\n          node.setAttribute('initialIndex', index.toString());\r\n        });\r\n\r\n        // Prove that the attributes match their indicies\r\n        const initialNodes = getNodes(treeElement);\r\n        expect(initialNodes[0].getAttribute('initialIndex')).toBe('0');\r\n        expect(initialNodes[1].getAttribute('initialIndex')).toBe('1');\r\n        expect(initialNodes[2].getAttribute('initialIndex')).toBe('2');\r\n      }\r\n\r\n      function mutateData() {\r\n        // Swap first and second data in data array\r\n        const copiedData = component.dataSource.data.slice();\r\n        const temp = copiedData[0];\r\n        copiedData[0] = copiedData[1];\r\n        copiedData[1] = temp;\r\n\r\n        // Remove the third element\r\n        copiedData.splice(2, 1);\r\n\r\n        // Add new data\r\n        component.dataSource.data = copiedData;\r\n        component.dataSource.addData();\r\n      }\r\n\r\n      it('should add/remove/move nodes with reference-based trackBy', () => {\r\n        createTrackByTestComponent('reference');\r\n        mutateData();\r\n\r\n        // Expect that the first and second nodes were swapped and that the last node is new\r\n        const changedNodes = getNodes(treeElement);\r\n        expect(changedNodes.length).toBe(3);\r\n        expect(changedNodes[0].getAttribute('initialIndex')).toBe('1');\r\n        expect(changedNodes[1].getAttribute('initialIndex')).toBe('0');\r\n        expect(changedNodes[2].getAttribute('initialIndex')).toBe(null);\r\n      });\r\n\r\n      it('should add/remove/move nodes with property-based trackBy', () => {\r\n        createTrackByTestComponent('property');\r\n        mutateData();\r\n\r\n        // Change each item reference to show that the trackby is checking the item properties.\r\n        // Otherwise this would cause them all to be removed/added.\r\n        component.dataSource.data = component.dataSource.data\r\n            .map(item => new TestData(item.pizzaTopping, item.pizzaCheese, item.pizzaBase, ));\r\n\r\n        // Expect that the first and second nodes were swapped and that the last node is new\r\n        const changedNodes = getNodes(treeElement);\r\n        expect(changedNodes.length).toBe(3);\r\n        expect(changedNodes[0].getAttribute('initialIndex')).toBe('1');\r\n        expect(changedNodes[1].getAttribute('initialIndex')).toBe('0');\r\n        expect(changedNodes[2].getAttribute('initialIndex')).toBe(null);\r\n      });\r\n\r\n      it('should add/remove/move nodes with index-based trackBy', () => {\r\n        createTrackByTestComponent('index');\r\n        mutateData();\r\n\r\n        // Change each item reference to show that the trackby is checking the index.\r\n        // Otherwise this would cause them all to be removed/added.\r\n        component.dataSource.data = component.dataSource.data\r\n            .map(item => new TestData(item.pizzaTopping, item.pizzaCheese, item.pizzaBase, ));\r\n\r\n        // Expect first two to be the same since they were swapped but indicies are consistent.\r\n        // The third element was removed and caught by the tree so it was removed before another\r\n        // item was added, so it is without an initial index.\r\n        const changedNodes = getNodes(treeElement);\r\n        expect(changedNodes.length).toBe(3);\r\n        expect(changedNodes[0].getAttribute('initialIndex')).toBe('0');\r\n        expect(changedNodes[1].getAttribute('initialIndex')).toBe('1');\r\n        expect(changedNodes[2].getAttribute('initialIndex')).toBe(null);\r\n      });\r\n    });\r\n  });\r\n\r\n  describe('nested tree', () => {\r\n    describe('should initialize', () => {\r\n      let fixture: ComponentFixture<NestedCdkTreeApp>;\r\n      let component: NestedCdkTreeApp;\r\n\r\n      beforeEach(() => {\r\n        configureCdkTreeTestingModule([NestedCdkTreeApp]);\r\n        fixture = TestBed.createComponent(NestedCdkTreeApp);\r\n\r\n        component = fixture.componentInstance;\r\n        dataSource = component.dataSource as FakeDataSource;\r\n        tree = component.tree;\r\n        treeElement = fixture.nativeElement.querySelector('cdk-tree');\r\n\r\n        fixture.detectChanges();\r\n      });\r\n\r\n      it('with a connected data source', () => {\r\n        expect(tree.dataSource).toBe(dataSource);\r\n        expect(dataSource.isConnected).toBe(true);\r\n      });\r\n\r\n      it('with rendered dataNodes', () => {\r\n        const nodes = getNodes(treeElement);\r\n\r\n        expect(nodes).toBeDefined('Expect nodes to be defined');\r\n        expect(nodes[0].classList).toContain('customNodeClass');\r\n      });\r\n\r\n      it('with the right accessibility roles', () => {\r\n        expect(treeElement.getAttribute('role')).toBe('tree');\r\n\r\n        getNodes(treeElement).forEach(node => {\r\n          expect(node.getAttribute('role')).toBe('treeitem');\r\n        });\r\n      });\r\n\r\n      it('with the right data', () => {\r\n        expect(dataSource.data.length).toBe(3);\r\n\r\n        let data = dataSource.data;\r\n        expectNestedTreeToMatch(treeElement,\r\n          [`${data[0].pizzaTopping} - ${data[0].pizzaCheese} + ${data[0].pizzaBase}`],\r\n          [`${data[1].pizzaTopping} - ${data[1].pizzaCheese} + ${data[1].pizzaBase}`],\r\n          [`${data[2].pizzaTopping} - ${data[2].pizzaCheese} + ${data[2].pizzaBase}`]);\r\n\r\n        dataSource.addChild(data[1], false);\r\n        fixture.detectChanges();\r\n\r\n        treeElement = fixture.nativeElement.querySelector('cdk-tree');\r\n        data = dataSource.data;\r\n        expect(data.length).toBe(3);\r\n        expectNestedTreeToMatch(treeElement,\r\n          [`topping_1 - cheese_1 + base_1`],\r\n          [`topping_2 - cheese_2 + base_2`],\r\n          [_, `topping_4 - cheese_4 + base_4`],\r\n          [`topping_3 - cheese_3 + base_3`]);\r\n      });\r\n\r\n      it('with nested child data', () => {\r\n        expect(dataSource.data.length).toBe(3);\r\n\r\n        let data = dataSource.data;\r\n        const child = dataSource.addChild(data[1], false);\r\n        dataSource.addChild(child, false);\r\n        fixture.detectChanges();\r\n\r\n        expect(data.length).toBe(3);\r\n        expectNestedTreeToMatch(treeElement,\r\n            [`topping_1 - cheese_1 + base_1`],\r\n            [`topping_2 - cheese_2 + base_2`],\r\n            [_, `topping_4 - cheese_4 + base_4`],\r\n            [_, _, `topping_5 - cheese_5 + base_5`],\r\n            [`topping_3 - cheese_3 + base_3`]);\r\n\r\n        dataSource.addChild(child, false);\r\n        fixture.detectChanges();\r\n\r\n        expect(data.length).toBe(3);\r\n        expectNestedTreeToMatch(treeElement,\r\n            [`topping_1 - cheese_1 + base_1`],\r\n            [`topping_2 - cheese_2 + base_2`],\r\n            [_, `topping_4 - cheese_4 + base_4`],\r\n            [_, _, `topping_5 - cheese_5 + base_5`],\r\n            [_, _, `topping_6 - cheese_6 + base_6`],\r\n            [`topping_3 - cheese_3 + base_3`]);\r\n      });\r\n    });\r\n\r\n    describe('with static children', () => {\r\n      let fixture: ComponentFixture<StaticNestedCdkTreeApp>;\r\n      let component: StaticNestedCdkTreeApp;\r\n\r\n      beforeEach(() => {\r\n      configureCdkTreeTestingModule([StaticNestedCdkTreeApp]);\r\n      fixture = TestBed.createComponent(StaticNestedCdkTreeApp);\r\n\r\n      component = fixture.componentInstance;\r\n      dataSource = component.dataSource as FakeDataSource;\r\n      tree = component.tree;\r\n      treeElement = fixture.nativeElement.querySelector('cdk-tree');\r\n\r\n      fixture.detectChanges();\r\n    });\r\n\r\n    it('with the right data', () => {\r\n      expectNestedTreeToMatch(treeElement,\r\n        [`topping_1 - cheese_1 + base_1`],\r\n        [`topping_2 - cheese_2 + base_2`],\r\n        [_, `topping_4 - cheese_4 + base_4`],\r\n        [_, _, `topping_5 - cheese_5 + base_5`],\r\n        [_, _, `topping_6 - cheese_6 + base_6`],\r\n        [`topping_3 - cheese_3 + base_3`]);\r\n    });\r\n  });\r\n\r\n    describe('with when node', () => {\r\n      let fixture: ComponentFixture<WhenNodeNestedCdkTreeApp>;\r\n      let component: WhenNodeNestedCdkTreeApp;\r\n\r\n      beforeEach(() => {\r\n        configureCdkTreeTestingModule([WhenNodeNestedCdkTreeApp]);\r\n        fixture = TestBed.createComponent(WhenNodeNestedCdkTreeApp);\r\n\r\n        component = fixture.componentInstance;\r\n        dataSource = component.dataSource as FakeDataSource;\r\n        tree = component.tree;\r\n        treeElement = fixture.nativeElement.querySelector('cdk-tree');\r\n\r\n        fixture.detectChanges();\r\n      });\r\n\r\n      it('with the right data', () => {\r\n        expect(dataSource.data.length).toBe(3);\r\n\r\n        let data = dataSource.data;\r\n        expectNestedTreeToMatch(treeElement,\r\n            [`topping_1 - cheese_1 + base_1`],\r\n            [`>> topping_2 - cheese_2 + base_2`],\r\n            [`topping_3 - cheese_3 + base_3`]);\r\n\r\n        dataSource.addChild(data[1], false);\r\n        fixture.detectChanges();\r\n\r\n        treeElement = fixture.nativeElement.querySelector('cdk-tree');\r\n        data = dataSource.data;\r\n        expect(data.length).toBe(3);\r\n        expectNestedTreeToMatch(treeElement,\r\n            [`topping_1 - cheese_1 + base_1`],\r\n            [`>> topping_2 - cheese_2 + base_2`],\r\n            [_, `topping_4 - cheese_4 + base_4`],\r\n            [`topping_3 - cheese_3 + base_3`]);\r\n      });\r\n    });\r\n\r\n    describe('with toggle', () => {\r\n      let fixture: ComponentFixture<NestedCdkTreeAppWithToggle>;\r\n      let component: NestedCdkTreeAppWithToggle;\r\n\r\n      beforeEach(() => {\r\n        configureCdkTreeTestingModule([NestedCdkTreeAppWithToggle]);\r\n        fixture = TestBed.createComponent(NestedCdkTreeAppWithToggle);\r\n\r\n        component = fixture.componentInstance;\r\n        dataSource = component.dataSource as FakeDataSource;\r\n        tree = component.tree;\r\n        treeElement = fixture.nativeElement.querySelector('cdk-tree');\r\n\r\n        fixture.detectChanges();\r\n      });\r\n\r\n      it('should expand/collapse the node multiple times', () => {\r\n        component.toggleRecursively = false;\r\n        let data = dataSource.data;\r\n        const child = dataSource.addChild(data[1], false);\r\n        dataSource.addChild(child, false);\r\n\r\n        fixture.detectChanges();\r\n\r\n        expectNestedTreeToMatch(treeElement,\r\n          [`topping_1 - cheese_1 + base_1`],\r\n          [`topping_2 - cheese_2 + base_2`],\r\n          [`topping_3 - cheese_3 + base_3`]);\r\n\r\n        fixture.detectChanges();\r\n\r\n        (getNodes(treeElement)[1] as HTMLElement).click();\r\n        fixture.detectChanges();\r\n\r\n        expect(component.treeControl.expansionModel.selected.length)\r\n          .toBe(1, `Expect node expanded`);\r\n        expectNestedTreeToMatch(treeElement,\r\n          [`topping_1 - cheese_1 + base_1`],\r\n          [`topping_2 - cheese_2 + base_2`],\r\n          [_, `topping_4 - cheese_4 + base_4`],\r\n          [`topping_3 - cheese_3 + base_3`]);\r\n\r\n        (getNodes(treeElement)[1] as HTMLElement).click();\r\n        fixture.detectChanges();\r\n\r\n        expectNestedTreeToMatch(treeElement,\r\n          [`topping_1 - cheese_1 + base_1`],\r\n          [`topping_2 - cheese_2 + base_2`],\r\n          [`topping_3 - cheese_3 + base_3`]);\r\n        expect(component.treeControl.expansionModel.selected.length)\r\n          .toBe(0, `Expect node collapsed`);\r\n\r\n        (getNodes(treeElement)[1] as HTMLElement).click();\r\n        fixture.detectChanges();\r\n\r\n        expect(component.treeControl.expansionModel.selected.length)\r\n          .toBe(1, `Expect node expanded`);\r\n        expectNestedTreeToMatch(treeElement,\r\n          [`topping_1 - cheese_1 + base_1`],\r\n          [`topping_2 - cheese_2 + base_2`],\r\n          [_, `topping_4 - cheese_4 + base_4`],\r\n          [`topping_3 - cheese_3 + base_3`]);\r\n      });\r\n\r\n      it('should expand/collapse the node recursively', () => {\r\n        let data = dataSource.data;\r\n        const child = dataSource.addChild(data[1], false);\r\n        dataSource.addChild(child, false);\r\n        fixture.detectChanges();\r\n\r\n        expectNestedTreeToMatch(treeElement,\r\n          [`topping_1 - cheese_1 + base_1`],\r\n          [`topping_2 - cheese_2 + base_2`],\r\n          [`topping_3 - cheese_3 + base_3`]);\r\n\r\n        (getNodes(treeElement)[1] as HTMLElement).click();\r\n        fixture.detectChanges();\r\n\r\n        expect(component.treeControl.expansionModel.selected.length)\r\n          .toBe(3, `Expect node expanded`);\r\n        expectNestedTreeToMatch(treeElement,\r\n          [`topping_1 - cheese_1 + base_1`],\r\n          [`topping_2 - cheese_2 + base_2`],\r\n          [_, `topping_4 - cheese_4 + base_4`],\r\n          [_, _, `topping_5 - cheese_5 + base_5`],\r\n          [`topping_3 - cheese_3 + base_3`]);\r\n\r\n        (getNodes(treeElement)[1] as HTMLElement).click();\r\n        fixture.detectChanges();\r\n\r\n        expect(component.treeControl.expansionModel.selected.length)\r\n          .toBe(0, `Expect node collapsed`);\r\n        expectNestedTreeToMatch(treeElement,\r\n          [`topping_1 - cheese_1 + base_1`],\r\n          [`topping_2 - cheese_2 + base_2`],\r\n          [`topping_3 - cheese_3 + base_3`]);\r\n      });\r\n    });\r\n\r\n    describe('with array data source', () => {\r\n      let fixture: ComponentFixture<ArrayDataSourceNestedCdkTreeApp>;\r\n      let component: ArrayDataSourceNestedCdkTreeApp;\r\n\r\n      beforeEach(() => {\r\n        configureCdkTreeTestingModule([ArrayDataSourceNestedCdkTreeApp]);\r\n        fixture = TestBed.createComponent(ArrayDataSourceNestedCdkTreeApp);\r\n\r\n        component = fixture.componentInstance;\r\n        dataSource = component.dataSource as FakeDataSource;\r\n        tree = component.tree;\r\n        treeElement = fixture.nativeElement.querySelector('cdk-tree');\r\n\r\n        fixture.detectChanges();\r\n      });\r\n\r\n      it('with the right data', () => {\r\n        expect(dataSource.data.length).toBe(3);\r\n\r\n        let data = dataSource.data;\r\n        expectNestedTreeToMatch(treeElement,\r\n          [`[topping_1] - [cheese_1] + [base_1]`],\r\n          [`[topping_2] - [cheese_2] + [base_2]`],\r\n          [`[topping_3] - [cheese_3] + [base_3]`]);\r\n\r\n        dataSource.addChild(data[1], false);\r\n        fixture.detectChanges();\r\n\r\n        treeElement = fixture.nativeElement.querySelector('cdk-tree');\r\n        expectNestedTreeToMatch(treeElement,\r\n          [`[topping_1] - [cheese_1] + [base_1]`],\r\n          [`[topping_2] - [cheese_2] + [base_2]`],\r\n          [_, `[topping_4] - [cheese_4] + [base_4]`],\r\n          [`[topping_3] - [cheese_3] + [base_3]`]);\r\n      });\r\n    });\r\n\r\n    describe('with observable data source', () => {\r\n      let fixture: ComponentFixture<ObservableDataSourceNestedCdkTreeApp>;\r\n      let component: ObservableDataSourceNestedCdkTreeApp;\r\n\r\n      beforeEach(() => {\r\n        configureCdkTreeTestingModule([ObservableDataSourceNestedCdkTreeApp]);\r\n        fixture = TestBed.createComponent(ObservableDataSourceNestedCdkTreeApp);\r\n\r\n        component = fixture.componentInstance;\r\n        dataSource = component.dataSource as FakeDataSource;\r\n        tree = component.tree;\r\n        treeElement = fixture.nativeElement.querySelector('cdk-tree');\r\n\r\n        fixture.detectChanges();\r\n      });\r\n\r\n      it('with the right data', () => {\r\n        expect(dataSource.data.length).toBe(3);\r\n\r\n        let data = dataSource.data;\r\n        expectNestedTreeToMatch(treeElement,\r\n          [`[topping_1] - [cheese_1] + [base_1]`],\r\n          [`[topping_2] - [cheese_2] + [base_2]`],\r\n          [`[topping_3] - [cheese_3] + [base_3]`]);\r\n\r\n        dataSource.addChild(data[1], false);\r\n        fixture.detectChanges();\r\n\r\n        treeElement = fixture.nativeElement.querySelector('cdk-tree');\r\n        expectNestedTreeToMatch(treeElement,\r\n          [`[topping_1] - [cheese_1] + [base_1]`],\r\n          [`[topping_2] - [cheese_2] + [base_2]`],\r\n          [_, `[topping_4] - [cheese_4] + [base_4]`],\r\n          [`[topping_3] - [cheese_3] + [base_3]`]);\r\n      });\r\n    });\r\n\r\n    describe('with trackBy', () => {\r\n      let fixture: ComponentFixture<NestedCdkTreeAppWithTrackBy>;\r\n      let component: NestedCdkTreeAppWithTrackBy;\r\n\r\n      function createTrackByTestComponent(trackByStrategy: 'reference' | 'property' | 'index') {\r\n        configureCdkTreeTestingModule([NestedCdkTreeAppWithTrackBy]);\r\n        fixture = TestBed.createComponent(NestedCdkTreeAppWithTrackBy);\r\n        component = fixture.componentInstance;\r\n        component.trackByStrategy = trackByStrategy;\r\n        dataSource = component.dataSource as FakeDataSource;\r\n\r\n        tree = component.tree;\r\n        treeElement = fixture.nativeElement.querySelector('cdk-tree');\r\n\r\n        fixture.detectChanges();\r\n\r\n        // Each node receives an attribute 'initialIndex' the element's original place\r\n        getNodes(treeElement).forEach((node: Element, index: number) => {\r\n          node.setAttribute('initialIndex', index.toString());\r\n        });\r\n\r\n        // Prove that the attributes match their indicies\r\n        const initialNodes = getNodes(treeElement);\r\n        expect(initialNodes.length).toBe(3);\r\n        initialNodes.forEach((node, index) => {\r\n          expect(node.getAttribute('initialIndex')).toBe(`${index}`);\r\n        });\r\n\r\n        const parent = dataSource.data[0];\r\n        dataSource.addChild(parent, false);\r\n        dataSource.addChild(parent, false);\r\n        dataSource.addChild(parent, false);\r\n        getNodes(initialNodes[0]).forEach((node: Element, index: number) => {\r\n          node.setAttribute('initialIndex', `c${index}`);\r\n        });\r\n        getNodes(initialNodes[0]).forEach((node, index) => {\r\n          expect(node.getAttribute('initialIndex')).toBe(`c${index}`);\r\n        });\r\n      }\r\n\r\n      function mutateChildren(parent: TestData) {\r\n        // Swap first and second data in data array\r\n        const copiedData = parent.children.slice();\r\n        const temp = copiedData[0];\r\n        copiedData[0] = copiedData[1];\r\n        copiedData[1] = temp;\r\n\r\n        // Remove the third element\r\n        copiedData.splice(2, 1);\r\n\r\n        // Add new data\r\n        parent.children = copiedData;\r\n        parent.observableChildren.next(copiedData);\r\n        component.dataSource.addChild(parent, false);\r\n      }\r\n\r\n      it('should add/remove/move children nodes with reference-based trackBy', () => {\r\n        createTrackByTestComponent('reference');\r\n        mutateChildren(dataSource.data[0]);\r\n\r\n        const changedNodes = getNodes(treeElement);\r\n        expect(changedNodes.length).toBe(6);\r\n        expect(changedNodes[0].getAttribute('initialIndex')).toBe('0');\r\n\r\n        // Expect that the first and second child nodes were swapped and that the last node is new\r\n        expect(changedNodes[1].getAttribute('initialIndex')).toBe('c1');\r\n        expect(changedNodes[2].getAttribute('initialIndex')).toBe('c0');\r\n        expect(changedNodes[3].getAttribute('initialIndex')).toBe(null);\r\n\r\n        expect(changedNodes[4].getAttribute('initialIndex')).toBe('1');\r\n        expect(changedNodes[5].getAttribute('initialIndex')).toBe('2');\r\n      });\r\n\r\n      it('should add/remove/move children nodes with property-based trackBy', () => {\r\n        createTrackByTestComponent('property');\r\n        mutateChildren(dataSource.data[0]);\r\n\r\n        // Change each item reference to show that the trackby is checking the item properties.\r\n        // Otherwise this would cause them all to be removed/added.\r\n        dataSource.data[0].observableChildren.next(dataSource.data[0].children\r\n          .map(item => new TestData(item.pizzaTopping, item.pizzaCheese, item.pizzaBase)));\r\n\r\n        // Expect that the first and second nodes were swapped and that the last node is new\r\n        const changedNodes = getNodes(treeElement);\r\n        expect(changedNodes.length).toBe(6);\r\n        expect(changedNodes[0].getAttribute('initialIndex')).toBe('0');\r\n\r\n        // Expect that the first and second child nodes were swapped and that the last node is new\r\n        expect(changedNodes[1].getAttribute('initialIndex')).toBe('c1');\r\n        expect(changedNodes[2].getAttribute('initialIndex')).toBe('c0');\r\n        expect(changedNodes[3].getAttribute('initialIndex')).toBe(null);\r\n\r\n        expect(changedNodes[4].getAttribute('initialIndex')).toBe('1');\r\n        expect(changedNodes[5].getAttribute('initialIndex')).toBe('2');\r\n      });\r\n\r\n      it('should add/remove/move children nodes with index-based trackBy', () => {\r\n        createTrackByTestComponent('index');\r\n        mutateChildren(dataSource.data[0]);\r\n\r\n        // Change each item reference to show that the trackby is checking the index.\r\n        // Otherwise this would cause them all to be removed/added.\r\n        dataSource.data[0].observableChildren.next(dataSource.data[0].children\r\n          .map(item => new TestData(item.pizzaTopping, item.pizzaCheese, item.pizzaBase)));\r\n\r\n        const changedNodes = getNodes(treeElement);\r\n        expect(changedNodes.length).toBe(6);\r\n        expect(changedNodes[0].getAttribute('initialIndex')).toBe('0');\r\n\r\n        // Expect first two children to be the same since they were swapped\r\n        // but indicies are consistent.\r\n        // The third element was removed and caught by the tree so it was removed before another\r\n        // item was added, so it is without an initial index.\r\n        expect(changedNodes[1].getAttribute('initialIndex')).toBe('c0');\r\n        expect(changedNodes[2].getAttribute('initialIndex')).toBe('c1');\r\n        expect(changedNodes[3].getAttribute('initialIndex')).toBe(null);\r\n\r\n        expect(changedNodes[4].getAttribute('initialIndex')).toBe('1');\r\n        expect(changedNodes[5].getAttribute('initialIndex')).toBe('2');\r\n      });\r\n    });\r\n\r\n    it('should throw an error when missing function in nested tree', fakeAsync(() => {\r\n      configureCdkTreeTestingModule([NestedCdkErrorTreeApp]);\r\n      expect(() => {\r\n        try {\r\n          TestBed.createComponent(NestedCdkErrorTreeApp).detectChanges();\r\n          flush();\r\n        } catch {\r\n          flush();\r\n        } finally {\r\n          flush();\r\n        }\r\n      }).toThrowError(getTreeControlFunctionsMissingError().message);\r\n    }));\r\n\r\n    it('should throw an error when missing function in flat tree', fakeAsync(() => {\r\n      configureCdkTreeTestingModule([FlatCdkErrorTreeApp]);\r\n      expect(() => {\r\n        try {\r\n          TestBed.createComponent(FlatCdkErrorTreeApp).detectChanges();\r\n          flush();\r\n        } catch {\r\n          flush();\r\n        }\r\n      }).toThrowError(getTreeControlFunctionsMissingError().message);\r\n    }));\r\n  });\r\n\r\n  describe('with depth', () => {\r\n    let fixture: ComponentFixture<DepthNestedCdkTreeApp>;\r\n    let component: DepthNestedCdkTreeApp;\r\n\r\n    beforeEach(() => {\r\n      configureCdkTreeTestingModule([DepthNestedCdkTreeApp]);\r\n      fixture = TestBed.createComponent(DepthNestedCdkTreeApp);\r\n\r\n      component = fixture.componentInstance;\r\n      dataSource = component.dataSource as FakeDataSource;\r\n      tree = component.tree;\r\n      treeElement = fixture.nativeElement.querySelector('cdk-tree');\r\n\r\n      fixture.detectChanges();\r\n    });\r\n\r\n    it('should have correct depth for nested tree', () => {\r\n      let data = dataSource.data;\r\n      const child = dataSource.addChild(data[1], false);\r\n      dataSource.addChild(child, false);\r\n\r\n      fixture.detectChanges();\r\n\r\n      const depthElements = Array.from(treeElement.querySelectorAll('.tree-test-level')!);\r\n      const expectedLevels = ['0', '0', '1', '2', '0'];\r\n      depthElements.forEach((element, index) => {\r\n        const actualLevel = element.textContent!.trim();\r\n        expect(actualLevel).toBe(expectedLevels[index]);\r\n      });\r\n      expect(depthElements.length).toBe(5);\r\n    });\r\n  });\r\n});\r\n\r\nexport class TestData {\r\n  pizzaTopping: string;\r\n  pizzaCheese: string;\r\n  pizzaBase: string;\r\n  level: number;\r\n  children: TestData[];\r\n  observableChildren: BehaviorSubject<TestData[]>;\r\n\r\n  constructor(pizzaTopping: string, pizzaCheese: string, pizzaBase: string, level: number = 1) {\r\n    this.pizzaTopping = pizzaTopping;\r\n    this.pizzaCheese = pizzaCheese;\r\n    this.pizzaBase = pizzaBase;\r\n    this.level = level;\r\n    this.children = [];\r\n    this.observableChildren = new BehaviorSubject<TestData[]>(this.children);\r\n  }\r\n}\r\n\r\nclass FakeDataSource extends DataSource<TestData> {\r\n  dataIndex = 0;\r\n  isConnected = false;\r\n\r\n  _dataChange = new BehaviorSubject<TestData[]>([]);\r\n  get data() { return this._dataChange.getValue(); }\r\n  set data(data: TestData[]) { this._dataChange.next(data); }\r\n\r\n  constructor(public treeControl: TreeControl<TestData>) {\r\n    super();\r\n    for (let i = 0; i < 3; i++) {\r\n      this.addData();\r\n    }\r\n  }\r\n\r\n  connect(collectionViewer: CollectionViewer): Observable<TestData[]> {\r\n    this.isConnected = true;\r\n    const streams = [this._dataChange, collectionViewer.viewChange];\r\n    return combineLatest<TestData[]>(streams)\r\n      .pipe(map(([data]) => {\r\n        this.treeControl.dataNodes = data;\r\n        return data;\r\n      }));\r\n  }\r\n\r\n  disconnect() {\r\n    this.isConnected = false;\r\n  }\r\n\r\n  addChild(parent: TestData, isFlat: boolean = true) {\r\n    const nextIndex = ++this.dataIndex;\r\n    const child = new TestData(`topping_${nextIndex}`, `cheese_${nextIndex}`, `base_${nextIndex}`,\r\n      parent.level + 1);\r\n    parent.children.push(child);\r\n    if (isFlat) {\r\n      let copiedData = this.data.slice();\r\n      copiedData.splice(this.data.indexOf(parent) + 1, 0, child);\r\n      this.data = copiedData;\r\n    } else {\r\n      parent.observableChildren.next(parent.children);\r\n    }\r\n    return child;\r\n  }\r\n\r\n  addData(level: number = 1) {\r\n    const nextIndex = ++this.dataIndex;\r\n\r\n    let copiedData = this.data.slice();\r\n    copiedData.push(\r\n      new TestData(`topping_${nextIndex}`, `cheese_${nextIndex}`, `base_${nextIndex}`, level));\r\n\r\n    this.data = copiedData;\r\n  }\r\n}\r\n\r\nfunction getNodes(treeElement: Element): Element[] {\r\n  return [].slice.call(treeElement.querySelectorAll('.cdk-tree-node'))!;\r\n}\r\n\r\nfunction expectFlatTreeToMatch(treeElement: Element, expectedPaddingIndent: number = 28,\r\n                               ...expectedTree: any[]) {\r\n  const missedExpectations: string[] = [];\r\n\r\n  function checkNode(node: Element, expectedNode: any[]) {\r\n    const actualTextContent = node.textContent!.trim();\r\n    const expectedTextContent = expectedNode[expectedNode.length - 1];\r\n    if (actualTextContent !== expectedTextContent) {\r\n      missedExpectations.push(\r\n        `Expected node contents to be ${expectedTextContent} but was ${actualTextContent}`);\r\n    }\r\n  }\r\n\r\n  function checkLevel(node: Element, expectedNode: any[]) {\r\n    const actualLevel = (node as HTMLElement).style.paddingLeft;\r\n    const expectedLevel = `${(expectedNode.length) * expectedPaddingIndent}px`;\r\n    if (actualLevel != expectedLevel) {\r\n      missedExpectations.push(\r\n        `Expected node level to be ${expectedLevel} but was ${actualLevel}`);\r\n    }\r\n  }\r\n\r\n  getNodes(treeElement).forEach((node, index) => {\r\n    const expected = expectedTree ?\r\n      expectedTree[index] :\r\n      null;\r\n\r\n    checkLevel(node, expected);\r\n    checkNode(node, expected);\r\n  });\r\n\r\n  if (missedExpectations.length) {\r\n    fail(missedExpectations.join('\\n'));\r\n  }\r\n}\r\n\r\nfunction expectNestedTreeToMatch(treeElement: Element, ...expectedTree: any[]) {\r\n  const missedExpectations: string[] = [];\r\n  function checkNodeContent(node: Element, expectedNode: any[]) {\r\n    const expectedTextContent = expectedNode[expectedNode.length - 1];\r\n    const actualTextContent = node.childNodes.item(0).textContent!.trim();\r\n    if (actualTextContent !== expectedTextContent) {\r\n      missedExpectations.push(\r\n        `Expected node contents to be ${expectedTextContent} but was ${actualTextContent}`);\r\n    }\r\n  }\r\n\r\n  function checkNodeDescendants(node: Element, expectedNode: any[], currentIndex: number) {\r\n    let expectedDescendant = 0;\r\n\r\n    for (let i = currentIndex + 1; i < expectedTree.length; ++i) {\r\n      if (expectedTree[i].length > expectedNode.length) {\r\n        ++expectedDescendant;\r\n      } else if (expectedTree[i].length === expectedNode.length) {\r\n        break;\r\n      }\r\n    }\r\n\r\n    const actualDescendant = getNodes(node).length;\r\n    if (actualDescendant !== expectedDescendant) {\r\n      missedExpectations.push(\r\n        `Expected node descendant num to be ${expectedDescendant} but was ${actualDescendant}`);\r\n    }\r\n  }\r\n\r\n  getNodes(treeElement).forEach((node, index) => {\r\n\r\n    const expected = expectedTree ?\r\n      expectedTree[index] :\r\n      null;\r\n\r\n    checkNodeDescendants(node, expected, index);\r\n    checkNodeContent(node, expected);\r\n  });\r\n\r\n  if (missedExpectations.length) {\r\n    fail(missedExpectations.join('\\n'));\r\n  }\r\n}\r\n\r\n@Component({\r\n  template: `\r\n    <cdk-tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\">\r\n      <cdk-tree-node *cdkTreeNodeDef=\"let node\" class=\"customNodeClass\"\r\n                     cdkTreeNodePadding [cdkTreeNodePaddingIndent]=\"28\"\r\n                     cdkTreeNodeToggle>\r\n                     {{node.pizzaTopping}} - {{node.pizzaCheese}} + {{node.pizzaBase}}\r\n      </cdk-tree-node>\r\n    </cdk-tree>\r\n  `\r\n})\r\nclass SimpleCdkTreeApp {\r\n  getLevel = (node: TestData) => node.level;\r\n  isExpandable = (node: TestData) => node.children.length > 0;\r\n\r\n  treeControl: TreeControl<TestData> = new FlatTreeControl(this.getLevel, this.isExpandable);\r\n\r\n  dataSource: FakeDataSource | null = new FakeDataSource(this.treeControl);\r\n\r\n  @ViewChild(CdkTree) tree: CdkTree<TestData>;\r\n\r\n}\r\n\r\n@Component({\r\n  template: `\r\n    <cdk-tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\">\r\n      <cdk-nested-tree-node *cdkTreeNodeDef=\"let node\" class=\"customNodeClass\">\r\n                     {{node.pizzaTopping}} - {{node.pizzaCheese}} + {{node.pizzaBase}}\r\n         <ng-template cdkTreeNodeOutlet></ng-template>\r\n      </cdk-nested-tree-node>\r\n    </cdk-tree>\r\n  `\r\n})\r\nclass NestedCdkTreeApp {\r\n  getChildren = (node: TestData) => node.observableChildren;\r\n\r\n  treeControl: TreeControl<TestData> = new NestedTreeControl(this.getChildren);\r\n\r\n  dataSource: FakeDataSource | null = new FakeDataSource(this.treeControl);\r\n\r\n  @ViewChild(CdkTree) tree: CdkTree<TestData>;\r\n}\r\n\r\n@Component({\r\n  template: `\r\n    <cdk-tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\">\r\n      <cdk-nested-tree-node *cdkTreeNodeDef=\"let node\" class=\"customNodeClass\">\r\n                     {{node.pizzaTopping}} - {{node.pizzaCheese}} + {{node.pizzaBase}}\r\n         <ng-template cdkTreeNodeOutlet></ng-template>\r\n      </cdk-nested-tree-node>\r\n    </cdk-tree>\r\n  `\r\n})\r\nclass StaticNestedCdkTreeApp {\r\n  getChildren = (node: TestData) => node.children;\r\n\r\n  treeControl: TreeControl<TestData> = new NestedTreeControl(this.getChildren);\r\n\r\n  dataSource: FakeDataSource;\r\n\r\n  @ViewChild(CdkTree) tree: CdkTree<TestData>;\r\n\r\n  constructor() {\r\n    const dataSource = new FakeDataSource(this.treeControl);\r\n    const data = dataSource.data;\r\n    const child = dataSource.addChild(data[1], false);\r\n    dataSource.addChild(child, false);\r\n    dataSource.addChild(child, false);\r\n\r\n    this.dataSource = dataSource;\r\n  }\r\n}\r\n\r\n@Component({\r\n  template: `\r\n    <cdk-tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\">\r\n      <cdk-nested-tree-node *cdkTreeNodeDef=\"let node\" class=\"customNodeClass\">\r\n                     {{node.pizzaTopping}} - {{node.pizzaCheese}} + {{node.pizzaBase}}\r\n         <ng-template cdkTreeNodeOutlet></ng-template>\r\n      </cdk-nested-tree-node>\r\n       <cdk-nested-tree-node *cdkTreeNodeDef=\"let node; when: isSecondNode\" class=\"customNodeClass\">\r\n                     >> {{node.pizzaTopping}} - {{node.pizzaCheese}} + {{node.pizzaBase}}\r\n         <ng-template cdkTreeNodeOutlet></ng-template>\r\n      </cdk-nested-tree-node>\r\n    </cdk-tree>\r\n  `\r\n})\r\nclass WhenNodeNestedCdkTreeApp {\r\n  isSecondNode = (_: number, node: TestData) => node.pizzaBase.indexOf('2') > 0;\r\n\r\n  getChildren = (node: TestData) => node.observableChildren;\r\n\r\n  treeControl: TreeControl<TestData> = new NestedTreeControl(this.getChildren);\r\n\r\n  dataSource: FakeDataSource | null = new FakeDataSource(this.treeControl);\r\n\r\n  @ViewChild(CdkTree) tree: CdkTree<TestData>;\r\n}\r\n\r\n\r\n@Component({\r\n  template: `\r\n    <cdk-tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\">\r\n      <cdk-tree-node *cdkTreeNodeDef=\"let node\" class=\"customNodeClass\"\r\n                     cdkTreeNodePadding\r\n                     cdkTreeNodeToggle [cdkTreeNodeToggleRecursive]=\"toggleRecursively\">\r\n                     {{node.pizzaTopping}} - {{node.pizzaCheese}} + {{node.pizzaBase}}\r\n      </cdk-tree-node>\r\n    </cdk-tree>\r\n  `\r\n})\r\nclass CdkTreeAppWithToggle {\r\n  toggleRecursively: boolean = true;\r\n\r\n  getLevel = (node: TestData) => node.level;\r\n  isExpandable = (node: TestData) => node.children.length > 0;\r\n\r\n  treeControl: TreeControl<TestData> = new FlatTreeControl(this.getLevel, this.isExpandable);\r\n  dataSource: FakeDataSource | null = new FakeDataSource(this.treeControl);\r\n\r\n  @ViewChild(CdkTree) tree: CdkTree<TestData>;\r\n}\r\n\r\n@Component({\r\n  template: `\r\n    <cdk-tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\">\r\n      <cdk-nested-tree-node *cdkTreeNodeDef=\"let node\" class=\"customNodeClass\"\r\n                            cdkTreeNodeToggle [cdkTreeNodeToggleRecursive]=\"toggleRecursively\">\r\n                     {{node.pizzaTopping}} - {{node.pizzaCheese}} + {{node.pizzaBase}}\r\n        <div *ngIf=\"treeControl.isExpanded(node)\">\r\n          <ng-template cdkTreeNodeOutlet></ng-template>\r\n        </div>\r\n      </cdk-nested-tree-node>\r\n    </cdk-tree>\r\n  `\r\n})\r\nclass NestedCdkTreeAppWithToggle {\r\n  toggleRecursively: boolean = true;\r\n\r\n  getChildren = (node: TestData) => node.observableChildren;\r\n\r\n  treeControl: TreeControl<TestData> = new NestedTreeControl(this.getChildren);\r\n  dataSource: FakeDataSource | null = new FakeDataSource(this.treeControl);\r\n\r\n  @ViewChild(CdkTree) tree: CdkTree<TestData>;\r\n}\r\n\r\n@Component({\r\n  template: `\r\n    <cdk-tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\">\r\n      <cdk-tree-node *cdkTreeNodeDef=\"let node\" class=\"customNodeClass\"\r\n                     cdkTreeNodePadding [cdkTreeNodePaddingIndent]=\"28\"\r\n                     cdkTreeNodeToggle>\r\n                     {{node.pizzaTopping}} - {{node.pizzaCheese}} + {{node.pizzaBase}}\r\n      </cdk-tree-node>\r\n       <cdk-tree-node *cdkTreeNodeDef=\"let node; when: isOddNode\" class=\"customNodeClass\"\r\n                     cdkTreeNodePadding [cdkTreeNodePaddingIndent]=\"28\"\r\n                     cdkTreeNodeToggle>\r\n                     [{{node.pizzaTopping}}] - [{{node.pizzaCheese}}] + [{{node.pizzaBase}}]\r\n      </cdk-tree-node>\r\n    </cdk-tree>\r\n  `\r\n})\r\nclass WhenNodeCdkTreeApp {\r\n  isOddNode = (_: number, node: TestData) => node.level % 2 === 1;\r\n  getLevel = (node: TestData) => node.level;\r\n  isExpandable = (node: TestData) => node.children.length > 0;\r\n\r\n  treeControl: TreeControl<TestData> = new FlatTreeControl(this.getLevel, this.isExpandable);\r\n\r\n  dataSource: FakeDataSource | null = new FakeDataSource(this.treeControl);\r\n\r\n  @ViewChild(CdkTree) tree: CdkTree<TestData>;\r\n}\r\n\r\n@Component({\r\n  template: `\r\n    <cdk-tree [dataSource]=\"dataArray\" [treeControl]=\"treeControl\">\r\n      <cdk-tree-node *cdkTreeNodeDef=\"let node\"\r\n                     cdkTreeNodePadding [cdkTreeNodePaddingIndent]=\"28\"\r\n                     cdkTreeNodeToggle>\r\n                     [{{node.pizzaTopping}}] - [{{node.pizzaCheese}}] + [{{node.pizzaBase}}]\r\n      </cdk-tree-node>\r\n    </cdk-tree>\r\n  `\r\n})\r\nclass ArrayDataSourceCdkTreeApp {\r\n  getLevel = (node: TestData) => node.level;\r\n  isExpandable = (node: TestData) => node.children.length > 0;\r\n\r\n  treeControl: TreeControl<TestData> = new FlatTreeControl(this.getLevel, this.isExpandable);\r\n\r\n  dataSource: FakeDataSource = new FakeDataSource(this.treeControl);\r\n\r\n  get dataArray() {\r\n    return this.dataSource.data;\r\n  }\r\n\r\n  @ViewChild(CdkTree) tree: CdkTree<TestData>;\r\n}\r\n\r\n@Component({\r\n  template: `\r\n    <cdk-tree [dataSource]=\"dataObservable\" [treeControl]=\"treeControl\">\r\n      <cdk-tree-node *cdkTreeNodeDef=\"let node\"\r\n                     cdkTreeNodePadding [cdkTreeNodePaddingIndent]=\"28\"\r\n                     cdkTreeNodeToggle>\r\n                     [{{node.pizzaTopping}}] - [{{node.pizzaCheese}}] + [{{node.pizzaBase}}]\r\n      </cdk-tree-node>\r\n    </cdk-tree>\r\n  `\r\n})\r\nclass ObservableDataSourceCdkTreeApp {\r\n  getLevel = (node: TestData) => node.level;\r\n  isExpandable = (node: TestData) => node.children.length > 0;\r\n\r\n  treeControl: TreeControl<TestData> = new FlatTreeControl(this.getLevel, this.isExpandable);\r\n\r\n  dataSource: FakeDataSource = new FakeDataSource(this.treeControl);\r\n\r\n  get dataObservable() {\r\n    return this.dataSource._dataChange;\r\n  }\r\n\r\n  @ViewChild(CdkTree) tree: CdkTree<TestData>;\r\n}\r\n\r\n@Component({\r\n  template: `\r\n    <cdk-tree [dataSource]=\"dataArray\" [treeControl]=\"treeControl\">\r\n      <cdk-nested-tree-node *cdkTreeNodeDef=\"let node\">\r\n                     [{{node.pizzaTopping}}] - [{{node.pizzaCheese}}] + [{{node.pizzaBase}}]\r\n         <ng-template cdkTreeNodeOutlet></ng-template>\r\n      </cdk-nested-tree-node>\r\n    </cdk-tree>\r\n  `\r\n})\r\nclass ArrayDataSourceNestedCdkTreeApp {\r\n\r\n  getChildren = (node: TestData) => node.observableChildren;\r\n\r\n  treeControl: TreeControl<TestData> = new NestedTreeControl(this.getChildren);\r\n\r\n  dataSource: FakeDataSource = new FakeDataSource(this.treeControl);\r\n\r\n  get dataArray() {\r\n    return this.dataSource.data;\r\n  }\r\n\r\n  @ViewChild(CdkTree) tree: CdkTree<TestData>;\r\n}\r\n\r\n@Component({\r\n  template: `\r\n    <cdk-tree [dataSource]=\"dataObservable\" [treeControl]=\"treeControl\">\r\n      <cdk-nested-tree-node *cdkTreeNodeDef=\"let node\">\r\n                     [{{node.pizzaTopping}}] - [{{node.pizzaCheese}}] + [{{node.pizzaBase}}]\r\n         <ng-template cdkTreeNodeOutlet></ng-template>\r\n      </cdk-nested-tree-node>\r\n    </cdk-tree>\r\n  `\r\n})\r\nclass ObservableDataSourceNestedCdkTreeApp {\r\n\r\n  getChildren = (node: TestData) => node.observableChildren;\r\n\r\n  treeControl: TreeControl<TestData> = new NestedTreeControl(this.getChildren);\r\n\r\n  dataSource: FakeDataSource = new FakeDataSource(this.treeControl);\r\n\r\n  get dataObservable() {\r\n    return this.dataSource._dataChange;\r\n  }\r\n\r\n  @ViewChild(CdkTree) tree: CdkTree<TestData>;\r\n}\r\n\r\n@Component({\r\n  template: `\r\n    <cdk-tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\">\r\n      <cdk-nested-tree-node *cdkTreeNodeDef=\"let node\" class=\"customNodeClass\">\r\n                     {{node.pizzaTopping}} - {{node.pizzaCheese}} + {{node.pizzaBase}}\r\n         <ng-template cdkTreeNodeOutlet></ng-template>\r\n      </cdk-nested-tree-node>\r\n    </cdk-tree>\r\n  `\r\n})\r\nclass NestedCdkErrorTreeApp {\r\n  getLevel = (node: TestData) => node.level;\r\n\r\n  isExpandable = (node: TestData) => node.children.length > 0;\r\n\r\n  treeControl: TreeControl<TestData> = new FlatTreeControl(this.getLevel, this.isExpandable);\r\n\r\n  dataSource: FakeDataSource | null = new FakeDataSource(this.treeControl);\r\n\r\n  @ViewChild(CdkTree) tree: CdkTree<TestData>;\r\n}\r\n\r\nclass FakeTreeControl extends BaseTreeControl<TestData> {\r\n  getDescendants(_: TestData): TestData[] {\r\n    return this.dataNodes;\r\n  }\r\n\r\n  expandAll(): void {\r\n    // No op\r\n  }\r\n}\r\n@Component({\r\n  template: `\r\n    <cdk-tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\">\r\n      <cdk-tree-node *cdkTreeNodeDef=\"let node\" class=\"customNodeClass\">\r\n                     {{node.pizzaTopping}} - {{node.pizzaCheese}} + {{node.pizzaBase}}\r\n         <ng-template cdkTreeNodeOutlet></ng-template>\r\n      </cdk-tree-node>\r\n    </cdk-tree>\r\n  `\r\n})\r\nclass FlatCdkErrorTreeApp {\r\n\r\n  getLevel = (node: TestData) => node.level;\r\n\r\n  isExpandable = (node: TestData) => node.children.length > 0;\r\n\r\n  treeControl: TreeControl<TestData> = new FakeTreeControl();\r\n\r\n  dataSource: FakeDataSource | null = new FakeDataSource(this.treeControl);\r\n\r\n  @ViewChild(CdkTree) tree: CdkTree<TestData>;\r\n}\r\n\r\n\r\n@Component({\r\n  template: `\r\n    <cdk-tree [dataSource]=\"dataArray\" [treeControl]=\"treeControl\">\r\n      <cdk-nested-tree-node *cdkTreeNodeDef=\"let node; let level = level\">\r\n          <span class=\"tree-test-level\">{{level}}</span>\r\n           [{{node.pizzaTopping}}] - [{{node.pizzaCheese}}] + [{{node.pizzaBase}}]\r\n         <ng-template cdkTreeNodeOutlet></ng-template>\r\n      </cdk-nested-tree-node>\r\n    </cdk-tree>\r\n  `\r\n})\r\nclass DepthNestedCdkTreeApp {\r\n\r\n  getChildren = (node: TestData) => node.observableChildren;\r\n\r\n  treeControl: TreeControl<TestData> = new NestedTreeControl(this.getChildren);\r\n\r\n  dataSource: FakeDataSource = new FakeDataSource(this.treeControl);\r\n\r\n  get dataArray() {\r\n    return this.dataSource.data;\r\n  }\r\n\r\n  @ViewChild(CdkTree) tree: CdkTree<TestData>;\r\n}\r\n\r\n@Component({\r\n  template: `\r\n    <cdk-tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\" [trackBy]=\"trackByFn\">\r\n      <cdk-tree-node *cdkTreeNodeDef=\"let node\" class=\"customNodeClass\">\r\n                     {{node.pizzaTopping}} - {{node.pizzaCheese}} + {{node.pizzaBase}}\r\n      </cdk-tree-node>\r\n    </cdk-tree>\r\n  `\r\n})\r\nclass CdkTreeAppWithTrackBy {\r\n  trackByStrategy: 'reference' | 'property' | 'index' = 'reference';\r\n\r\n  trackByFn: TrackByFunction<TestData> = (index, item) => {\r\n    switch (this.trackByStrategy) {\r\n      case 'reference': return item;\r\n      case 'property': return item.pizzaBase;\r\n      case 'index': return index;\r\n    }\r\n  }\r\n\r\n  getLevel = (node: TestData) => node.level;\r\n  isExpandable = (node: TestData) => node.children.length > 0;\r\n\r\n  treeControl: TreeControl<TestData> = new FlatTreeControl(this.getLevel, this.isExpandable);\r\n  dataSource: FakeDataSource = new FakeDataSource(this.treeControl);\r\n\r\n  @ViewChild(CdkTree) tree: CdkTree<TestData>;\r\n}\r\n\r\n@Component({\r\n  template: `\r\n    <cdk-tree [dataSource]=\"dataArray\" [treeControl]=\"treeControl\" [trackBy]=\"trackByFn\">\r\n      <cdk-nested-tree-node *cdkTreeNodeDef=\"let node\">\r\n           [{{node.pizzaTopping}}] - [{{node.pizzaCheese}}] + [{{node.pizzaBase}}]\r\n         <ng-template cdkTreeNodeOutlet></ng-template>\r\n      </cdk-nested-tree-node>\r\n    </cdk-tree>\r\n  `\r\n})\r\nclass NestedCdkTreeAppWithTrackBy {\r\n  trackByStrategy: 'reference' | 'property' | 'index' = 'reference';\r\n\r\n  trackByFn: TrackByFunction<TestData> = (index, item) => {\r\n    switch (this.trackByStrategy) {\r\n      case 'reference': return item;\r\n      case 'property': return item.pizzaBase;\r\n      case 'index': return index;\r\n    }\r\n  }\r\n\r\n  getChildren = (node: TestData) => node.observableChildren;\r\n\r\n  treeControl: TreeControl<TestData> = new NestedTreeControl(this.getChildren);\r\n\r\n  dataSource: FakeDataSource = new FakeDataSource(this.treeControl);\r\n\r\n  get dataArray() {\r\n    return this.dataSource.data;\r\n  }\r\n\r\n  @ViewChild(CdkTree) tree: CdkTree<TestData>;\r\n}\r\n"]}