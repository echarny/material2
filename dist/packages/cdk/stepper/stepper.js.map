{"version":3,"file":"stepper.js","sourceRoot":"","sources":["../../../../src/cdk/stepper/stepper.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {FocusableOption, FocusKeyManager} from '@angular/cdk/a11y';\r\nimport {Direction, Directionality} from '@angular/cdk/bidi';\r\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\r\nimport {END, ENTER, HOME, SPACE} from '@angular/cdk/keycodes';\r\nimport {\r\n  AfterViewInit,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ContentChild,\r\n  ContentChildren,\r\n  Directive,\r\n  EventEmitter,\r\n  forwardRef,\r\n  Inject,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  Optional,\r\n  Output,\r\n  QueryList,\r\n  TemplateRef,\r\n  ViewChild,\r\n  ViewEncapsulation,\r\n} from '@angular/core';\r\nimport {AbstractControl} from '@angular/forms';\r\nimport {CdkStepLabel} from './step-label';\r\nimport {Observable, Subject, of as obaservableOf} from 'rxjs';\r\nimport {startWith, takeUntil} from 'rxjs/operators';\r\n\r\n/** Used to generate unique ID for each stepper component. */\r\nlet nextId = 0;\r\n\r\n/**\r\n * Position state of the content of each step in stepper that is used for transitioning\r\n * the content into correct position upon step selection change.\r\n */\r\nexport type StepContentPositionState = 'previous' | 'current' | 'next';\r\n\r\n/** Possible orientation of a stepper. */\r\nexport type StepperOrientation = 'horizontal' | 'vertical';\r\n\r\n/** Change event emitted on selection changes. */\r\nexport class StepperSelectionEvent {\r\n  /** Index of the step now selected. */\r\n  selectedIndex: number;\r\n\r\n  /** Index of the step previously selected. */\r\n  previouslySelectedIndex: number;\r\n\r\n  /** The step instance now selected. */\r\n  selectedStep: CdkStep;\r\n\r\n  /** The step instance previously selected. */\r\n  previouslySelectedStep: CdkStep;\r\n}\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'cdk-step',\r\n  exportAs: 'cdkStep',\r\n  template: '<ng-template><ng-content></ng-content></ng-template>',\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class CdkStep implements OnChanges {\r\n  /** Template for step label if it exists. */\r\n  @ContentChild(CdkStepLabel) stepLabel: CdkStepLabel;\r\n\r\n  /** Template for step content. */\r\n  @ViewChild(TemplateRef) content: TemplateRef<any>;\r\n\r\n  /** The top level abstract control of the step. */\r\n  @Input() stepControl: AbstractControl;\r\n\r\n  /** Whether user has seen the expanded step content or not. */\r\n  interacted = false;\r\n\r\n  /** Plain text label of the step. */\r\n  @Input() label: string;\r\n\r\n  /** Aria label for the tab. */\r\n  @Input('aria-label') ariaLabel: string;\r\n\r\n  /**\r\n   * Reference to the element that the tab is labelled by.\r\n   * Will be cleared if `aria-label` is set at the same time.\r\n   */\r\n  @Input('aria-labelledby') ariaLabelledby: string;\r\n\r\n  /** Whether the user can return to this step once it has been marked as complted. */\r\n  @Input()\r\n  get editable(): boolean { return this._editable; }\r\n  set editable(value: boolean) {\r\n    this._editable = coerceBooleanProperty(value);\r\n  }\r\n  private _editable = true;\r\n\r\n  /** Whether the completion of step is optional. */\r\n  @Input()\r\n  get optional(): boolean { return this._optional; }\r\n  set optional(value: boolean) {\r\n    this._optional = coerceBooleanProperty(value);\r\n  }\r\n  private _optional = false;\r\n\r\n  /** Whether step is marked as completed. */\r\n  @Input()\r\n  get completed(): boolean {\r\n    return this._customCompleted == null ? this._defaultCompleted : this._customCompleted;\r\n  }\r\n  set completed(value: boolean) {\r\n    this._customCompleted = coerceBooleanProperty(value);\r\n  }\r\n  private _customCompleted: boolean | null = null;\r\n\r\n  private get _defaultCompleted() {\r\n    return this.stepControl ? this.stepControl.valid && this.interacted : this.interacted;\r\n  }\r\n\r\n  constructor(@Inject(forwardRef(() => CdkStepper)) private _stepper: CdkStepper) { }\r\n\r\n  /** Selects this step component. */\r\n  select(): void {\r\n    this._stepper.selected = this;\r\n  }\r\n\r\n  /** Resets the step to its initial state. Note that this includes resetting form data. */\r\n  reset(): void {\r\n    this.interacted = false;\r\n\r\n    if (this._customCompleted != null) {\r\n      this._customCompleted = false;\r\n    }\r\n\r\n    if (this.stepControl) {\r\n      this.stepControl.reset();\r\n    }\r\n  }\r\n\r\n  ngOnChanges() {\r\n    // Since basically all inputs of the MatStep get proxied through the view down to the\r\n    // underlying MatStepHeader, we have to make sure that change detection runs correctly.\r\n    this._stepper._stateChanged();\r\n  }\r\n}\r\n\r\n@Directive({\r\n  selector: '[cdkStepper]',\r\n  exportAs: 'cdkStepper',\r\n})\r\nexport class CdkStepper implements AfterViewInit, OnDestroy {\r\n  /** Emits when the component is destroyed. */\r\n  protected _destroyed = new Subject<void>();\r\n\r\n  /** Used for managing keyboard focus. */\r\n  private _keyManager: FocusKeyManager<FocusableOption>;\r\n\r\n  /** The list of step components that the stepper is holding. */\r\n  @ContentChildren(CdkStep) _steps: QueryList<CdkStep>;\r\n\r\n  /** The list of step headers of the steps in the stepper. */\r\n  _stepHeader: QueryList<FocusableOption>;\r\n\r\n  /** Whether the validity of previous steps should be checked or not. */\r\n  @Input()\r\n  get linear(): boolean { return this._linear; }\r\n  set linear(value: boolean) { this._linear = coerceBooleanProperty(value); }\r\n  private _linear = false;\r\n\r\n  /** The index of the selected step. */\r\n  @Input()\r\n  get selectedIndex() { return this._selectedIndex; }\r\n  set selectedIndex(index: number) {\r\n    if (this._steps) {\r\n      // Ensure that the index can't be out of bounds.\r\n      if (index < 0 || index > this._steps.length - 1) {\r\n        throw Error('cdkStepper: Cannot assign out-of-bounds value to `selectedIndex`.');\r\n      }\r\n\r\n      if (this._selectedIndex != index &&\r\n          !this._anyControlsInvalidOrPending(index) &&\r\n          (index >= this._selectedIndex || this._steps.toArray()[index].editable)) {\r\n        this._updateSelectedItemIndex(index);\r\n      }\r\n    } else {\r\n      this._selectedIndex = index;\r\n    }\r\n  }\r\n  private _selectedIndex = 0;\r\n\r\n  /** The step that is selected. */\r\n  @Input()\r\n  get selected(): CdkStep {\r\n    // @breaking-change 7.0.0 Change return type to `CdkStep | undefined`.\r\n    return this._steps ? this._steps.toArray()[this.selectedIndex] : undefined!;\r\n  }\r\n  set selected(step: CdkStep) {\r\n    this.selectedIndex = this._steps ? this._steps.toArray().indexOf(step) : -1;\r\n  }\r\n\r\n  /** Event emitted when the selected step has changed. */\r\n  @Output() selectionChange: EventEmitter<StepperSelectionEvent>\r\n      = new EventEmitter<StepperSelectionEvent>();\r\n\r\n  /** Used to track unique ID for each stepper component. */\r\n  _groupId: number;\r\n\r\n  protected _orientation: StepperOrientation = 'horizontal';\r\n\r\n  constructor(\r\n    @Optional() private _dir: Directionality,\r\n    private _changeDetectorRef: ChangeDetectorRef) {\r\n    this._groupId = nextId++;\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this._keyManager = new FocusKeyManager(this._stepHeader)\r\n      .withWrap()\r\n      .withVerticalOrientation(this._orientation === 'vertical');\r\n\r\n    (this._dir ? this._dir.change as Observable<Direction> : obaservableOf())\r\n      .pipe(startWith(this._layoutDirection()), takeUntil(this._destroyed))\r\n      .subscribe(direction => this._keyManager.withHorizontalOrientation(direction));\r\n\r\n    this._keyManager.updateActiveItemIndex(this._selectedIndex);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._destroyed.next();\r\n    this._destroyed.complete();\r\n  }\r\n\r\n  /** Selects and focuses the next step in list. */\r\n  next(): void {\r\n    this.selectedIndex = Math.min(this._selectedIndex + 1, this._steps.length - 1);\r\n  }\r\n\r\n  /** Selects and focuses the previous step in list. */\r\n  previous(): void {\r\n    this.selectedIndex = Math.max(this._selectedIndex - 1, 0);\r\n  }\r\n\r\n  /** Resets the stepper to its initial state. Note that this includes clearing form data. */\r\n  reset(): void {\r\n    this._updateSelectedItemIndex(0);\r\n    this._steps.forEach(step => step.reset());\r\n    this._stateChanged();\r\n  }\r\n\r\n  /** Returns a unique id for each step label element. */\r\n  _getStepLabelId(i: number): string {\r\n    return `cdk-step-label-${this._groupId}-${i}`;\r\n  }\r\n\r\n  /** Returns unique id for each step content element. */\r\n  _getStepContentId(i: number): string {\r\n    return `cdk-step-content-${this._groupId}-${i}`;\r\n  }\r\n\r\n  /** Marks the component to be change detected. */\r\n  _stateChanged() {\r\n    this._changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  /** Returns position state of the step with the given index. */\r\n  _getAnimationDirection(index: number): StepContentPositionState {\r\n    const position = index - this._selectedIndex;\r\n    if (position < 0) {\r\n      return this._layoutDirection() === 'rtl' ? 'next' : 'previous';\r\n    } else if (position > 0) {\r\n      return this._layoutDirection() === 'rtl' ? 'previous' : 'next';\r\n    }\r\n    return 'current';\r\n  }\r\n\r\n  /** Returns the type of icon to be displayed. */\r\n  _getIndicatorType(index: number): 'number' | 'edit' | 'done' {\r\n    const step = this._steps.toArray()[index];\r\n    if (!step.completed || this._selectedIndex == index) {\r\n      return 'number';\r\n    } else {\r\n      return step.editable ? 'edit' : 'done';\r\n    }\r\n  }\r\n\r\n  /** Returns the index of the currently-focused step header. */\r\n  _getFocusIndex() {\r\n    return this._keyManager ? this._keyManager.activeItemIndex : this._selectedIndex;\r\n  }\r\n\r\n  private _updateSelectedItemIndex(newIndex: number): void {\r\n    const stepsArray = this._steps.toArray();\r\n    this.selectionChange.emit({\r\n      selectedIndex: newIndex,\r\n      previouslySelectedIndex: this._selectedIndex,\r\n      selectedStep: stepsArray[newIndex],\r\n      previouslySelectedStep: stepsArray[this._selectedIndex],\r\n    });\r\n    this._keyManager.updateActiveItemIndex(newIndex);\r\n    this._selectedIndex = newIndex;\r\n    this._stateChanged();\r\n  }\r\n\r\n  _onKeydown(event: KeyboardEvent) {\r\n    const keyCode = event.keyCode;\r\n\r\n    if (this._keyManager.activeItemIndex != null && (keyCode === SPACE || keyCode === ENTER)) {\r\n      this.selectedIndex = this._keyManager.activeItemIndex;\r\n      event.preventDefault();\r\n    } else if (keyCode === HOME) {\r\n      this._keyManager.setFirstItemActive();\r\n      event.preventDefault();\r\n    } else if (keyCode === END) {\r\n      this._keyManager.setLastItemActive();\r\n      event.preventDefault();\r\n    } else {\r\n      this._keyManager.onKeydown(event);\r\n    }\r\n  }\r\n\r\n  private _anyControlsInvalidOrPending(index: number): boolean {\r\n    const steps = this._steps.toArray();\r\n\r\n    steps[this._selectedIndex].interacted = true;\r\n\r\n    if (this._linear && index >= 0) {\r\n      return steps.slice(0, index).some(step => {\r\n        const control = step.stepControl;\r\n        const isIncomplete = control ?\r\n            (control.invalid || control.pending || !step.interacted) :\r\n            !step.completed;\r\n        return isIncomplete && !step.optional;\r\n      });\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  private _layoutDirection(): Direction {\r\n    return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\r\n  }\r\n}\r\n"]}