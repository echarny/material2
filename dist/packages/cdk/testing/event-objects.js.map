{"version":3,"file":"event-objects.js","sourceRoot":"","sources":["../../../../src/cdk/testing/event-objects.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n/** Creates a browser MouseEvent with the specified options. */\r\nexport function createMouseEvent(type: string, x = 0, y = 0) {\r\n  const event = document.createEvent('MouseEvent');\r\n\r\n  event.initMouseEvent(type,\r\n    true, /* canBubble */\r\n    false, /* cancelable */\r\n    window, /* view */\r\n    0, /* detail */\r\n    x, /* screenX */\r\n    y, /* screenY */\r\n    x, /* clientX */\r\n    y, /* clientY */\r\n    false, /* ctrlKey */\r\n    false, /* altKey */\r\n    false, /* shiftKey */\r\n    false, /* metaKey */\r\n    0, /* button */\r\n    null /* relatedTarget */);\r\n\r\n  return event;\r\n}\r\n\r\n/** Creates a browser TouchEvent with the specified pointer coordinates. */\r\nexport function createTouchEvent(type: string, pageX = 0, pageY = 0) {\r\n  // In favor of creating events that work for most of the browsers, the event is created\r\n  // as a basic UI Event. The necessary details for the event will be set manually.\r\n  const event = document.createEvent('UIEvent');\r\n  const touchDetails = {pageX, pageY};\r\n\r\n  event.initUIEvent(type, true, true, window, 0);\r\n\r\n  // Most of the browsers don't have a \"initTouchEvent\" method that can be used to define\r\n  // the touch details.\r\n  Object.defineProperties(event, {\r\n    touches: {value: [touchDetails]},\r\n    targetTouches: {value: [touchDetails]}\r\n  });\r\n\r\n  return event;\r\n}\r\n\r\n/** Dispatches a keydown event from an element. */\r\nexport function createKeyboardEvent(type: string, keyCode: number, target?: Element, key?: string) {\r\n  let event = document.createEvent('KeyboardEvent') as any;\r\n  // Firefox does not support `initKeyboardEvent`, but supports `initKeyEvent`.\r\n  let initEventFn = (event.initKeyEvent || event.initKeyboardEvent).bind(event);\r\n  let originalPreventDefault = event.preventDefault;\r\n\r\n  initEventFn(type, true, true, window, 0, 0, 0, 0, 0, keyCode);\r\n\r\n  // Webkit Browsers don't set the keyCode when calling the init function.\r\n  // See related bug https://bugs.webkit.org/show_bug.cgi?id=16735\r\n  Object.defineProperties(event, {\r\n    keyCode: { get: () => keyCode },\r\n    key: { get: () => key },\r\n    target: { get: () => target }\r\n  });\r\n\r\n  // IE won't set `defaultPrevented` on synthetic events so we need to do it manually.\r\n  event.preventDefault = function() {\r\n    Object.defineProperty(event, 'defaultPrevented', { get: () => true });\r\n    return originalPreventDefault.apply(this, arguments);\r\n  };\r\n\r\n  return event;\r\n}\r\n\r\n/** Creates a fake event object with any desired event type. */\r\nexport function createFakeEvent(type: string, canBubble = false, cancelable = true) {\r\n  const event = document.createEvent('Event');\r\n  event.initEvent(type, canBubble, cancelable);\r\n  return event;\r\n}\r\n"]}