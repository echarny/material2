{"version":3,"file":"dispatch-events.js","sourceRoot":"","sources":["../../../../src/cdk/testing/dispatch-events.ts"],"names":[],"mappings":";;;;;;;;;AAQA,iDAKyB;;AAGzB,uBAA8B,IAAmB,EAAE,KAAY;IAC7D,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;IAC1B,MAAM,CAAC,KAAK,CAAC;CACd;AAHD,sCAGC;;AAGD,2BAAkC,IAAmB,EAAE,IAAY,EAAE,SAAmB;IACtF,MAAM,CAAC,aAAa,CAAC,IAAI,EAAE,+BAAe,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC,CAAC;CAC9D;AAFD,8CAEC;;AAGD,+BAAsC,IAAU,EAAE,IAAY,EAAE,OAAe,EAAE,MAAgB;IAE/F,MAAM,CAAC,aAAa,CAAC,IAAI,EAAE,mCAAmB,CAAC,IAAI,EAAE,OAAO,EAAE,MAAM,CAAC,CAAkB,CAAC;CACzF;AAHD,sDAGC;;AAGD,4BAAmC,IAAU,EAAE,IAAY,EAAE,CAAK,EAAE,CAAK,EACvE,KAAoC;IADuB,kBAAA,EAAA,KAAK;IAAE,kBAAA,EAAA,KAAK;IACvE,sBAAA,EAAA,QAAQ,gCAAgB,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC;IACpC,MAAM,CAAC,aAAa,CAAC,IAAI,EAAE,KAAK,CAAe,CAAC;CACjD;AAHD,gDAGC;;AAGD,4BAAmC,IAAU,EAAE,IAAY,EAAE,CAAK,EAAE,CAAK;IAAZ,kBAAA,EAAA,KAAK;IAAE,kBAAA,EAAA,KAAK;IACvE,MAAM,CAAC,aAAa,CAAC,IAAI,EAAE,gCAAgB,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;CAC1D;AAFD,gDAEC","sourcesContent":["/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {\r\n  createFakeEvent,\r\n  createKeyboardEvent,\r\n  createMouseEvent,\r\n  createTouchEvent\r\n} from './event-objects';\r\n\r\n/** Utility to dispatch any event on a Node. */\r\nexport function dispatchEvent(node: Node | Window, event: Event): Event {\r\n  node.dispatchEvent(event);\r\n  return event;\r\n}\r\n\r\n/** Shorthand to dispatch a fake event on a specified node. */\r\nexport function dispatchFakeEvent(node: Node | Window, type: string, canBubble?: boolean): Event {\r\n  return dispatchEvent(node, createFakeEvent(type, canBubble));\r\n}\r\n\r\n/** Shorthand to dispatch a keyboard event with a specified key code. */\r\nexport function dispatchKeyboardEvent(node: Node, type: string, keyCode: number, target?: Element):\r\n    KeyboardEvent {\r\n  return dispatchEvent(node, createKeyboardEvent(type, keyCode, target)) as KeyboardEvent;\r\n}\r\n\r\n/** Shorthand to dispatch a mouse event on the specified coordinates. */\r\nexport function dispatchMouseEvent(node: Node, type: string, x = 0, y = 0,\r\n  event = createMouseEvent(type, x, y)): MouseEvent {\r\n  return dispatchEvent(node, event) as MouseEvent;\r\n}\r\n\r\n/** Shorthand to dispatch a touch event on the specified coordinates. */\r\nexport function dispatchTouchEvent(node: Node, type: string, x = 0, y = 0) {\r\n  return dispatchEvent(node, createTouchEvent(type, x, y));\r\n}\r\n"]}