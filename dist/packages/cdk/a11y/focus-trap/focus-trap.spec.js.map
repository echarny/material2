{"version":3,"file":"focus-trap.spec.js","sourceRoot":"","sources":["../../../../../src/cdk/a11y/focus-trap/focus-trap.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import {Platform} from '@angular/cdk/platform';\r\nimport {Component, PLATFORM_ID, ViewChild} from '@angular/core';\r\nimport {async, ComponentFixture, TestBed} from '@angular/core/testing';\r\nimport {A11yModule, FocusTrap, CdkTrapFocus} from '../index';\r\n\r\n\r\ndescribe('FocusTrap', () => {\r\n\r\n  beforeEach(async(() => {\r\n    TestBed.configureTestingModule({\r\n      imports: [A11yModule],\r\n      declarations: [\r\n        FocusTrapWithBindings,\r\n        SimpleFocusTrap,\r\n        FocusTrapTargets,\r\n        FocusTrapWithSvg,\r\n        FocusTrapWithoutFocusableElements,\r\n        FocusTrapWithAutoCapture,\r\n      ],\r\n    });\r\n\r\n    TestBed.compileComponents();\r\n  }));\r\n\r\n  describe('with default element', () => {\r\n    let fixture: ComponentFixture<SimpleFocusTrap>;\r\n    let focusTrapInstance: FocusTrap;\r\n\r\n    beforeEach(() => {\r\n      fixture = TestBed.createComponent(SimpleFocusTrap);\r\n      fixture.detectChanges();\r\n      focusTrapInstance = fixture.componentInstance.focusTrapDirective.focusTrap;\r\n    });\r\n\r\n    it('wrap focus from end to start', () => {\r\n      // Because we can't mimic a real tab press focus change in a unit test, just call the\r\n      // focus event handler directly.\r\n      const result = focusTrapInstance.focusFirstTabbableElement();\r\n\r\n      expect(document.activeElement.nodeName.toLowerCase())\r\n          .toBe('input', 'Expected input element to be focused');\r\n      expect(result).toBe(true, 'Expected return value to be true if focus was shifted.');\r\n    });\r\n\r\n    it('should wrap focus from start to end', () => {\r\n      // Because we can't mimic a real tab press focus change in a unit test, just call the\r\n      // focus event handler directly.\r\n      const result = focusTrapInstance.focusLastTabbableElement();\r\n\r\n      const platformId = TestBed.get(PLATFORM_ID);\r\n      // In iOS button elements are never tabbable, so the last element will be the input.\r\n      const lastElement = new Platform(platformId).IOS ? 'input' : 'button';\r\n\r\n      expect(document.activeElement.nodeName.toLowerCase())\r\n          .toBe(lastElement, `Expected ${lastElement} element to be focused`);\r\n\r\n      expect(result).toBe(true, 'Expected return value to be true if focus was shifted.');\r\n    });\r\n\r\n    it('should return false if it did not manage to find a focusable element', () => {\r\n      fixture.destroy();\r\n\r\n      const newFixture = TestBed.createComponent(FocusTrapWithoutFocusableElements);\r\n      newFixture.detectChanges();\r\n\r\n      const focusTrap = newFixture.componentInstance.focusTrapDirective.focusTrap;\r\n      const result = focusTrap.focusFirstTabbableElement();\r\n\r\n      expect(result).toBe(false);\r\n    });\r\n\r\n    it('should be enabled by default', () => {\r\n      expect(focusTrapInstance.enabled).toBe(true);\r\n    });\r\n\r\n  });\r\n\r\n  describe('with bindings', () => {\r\n    let fixture: ComponentFixture<FocusTrapWithBindings>;\r\n\r\n    beforeEach(() => {\r\n      fixture = TestBed.createComponent(FocusTrapWithBindings);\r\n      fixture.detectChanges();\r\n    });\r\n\r\n    it('should clean up its anchor sibling elements on destroy', () => {\r\n      const rootElement = fixture.debugElement.nativeElement as HTMLElement;\r\n\r\n      expect(rootElement.querySelectorAll('div.cdk-visually-hidden').length).toBe(2);\r\n\r\n      fixture.componentInstance.renderFocusTrap = false;\r\n      fixture.detectChanges();\r\n\r\n      expect(rootElement.querySelectorAll('div.cdk-visually-hidden').length).toBe(0);\r\n    });\r\n\r\n    it('should set the appropriate tabindex on the anchors, based on the disabled state', () => {\r\n      const anchors = Array.from(\r\n        fixture.debugElement.nativeElement.querySelectorAll('div.cdk-visually-hidden')\r\n      ) as HTMLElement[];\r\n\r\n      expect(anchors.every(current => current.getAttribute('tabindex') === '0')).toBe(true);\r\n\r\n      fixture.componentInstance._isFocusTrapEnabled = false;\r\n      fixture.detectChanges();\r\n\r\n      expect(anchors.every(current => current.getAttribute('tabindex') === '-1')).toBe(true);\r\n    });\r\n  });\r\n\r\n  describe('with focus targets', () => {\r\n    let fixture: ComponentFixture<FocusTrapTargets>;\r\n    let focusTrapInstance: FocusTrap;\r\n\r\n    beforeEach(() => {\r\n      fixture = TestBed.createComponent(FocusTrapTargets);\r\n      fixture.detectChanges();\r\n      focusTrapInstance = fixture.componentInstance.focusTrapDirective.focusTrap;\r\n    });\r\n\r\n    it('should be able to set initial focus target', () => {\r\n      // Because we can't mimic a real tab press focus change in a unit test, just call the\r\n      // focus event handler directly.\r\n      focusTrapInstance.focusInitialElement();\r\n      expect(document.activeElement.id).toBe('middle');\r\n    });\r\n\r\n    it('should be able to prioritize the first focus target', () => {\r\n      // Because we can't mimic a real tab press focus change in a unit test, just call the\r\n      // focus event handler directly.\r\n      focusTrapInstance.focusFirstTabbableElement();\r\n      expect(document.activeElement.id).toBe('first');\r\n    });\r\n\r\n    it('should be able to prioritize the last focus target', () => {\r\n      // Because we can't mimic a real tab press focus change in a unit test, just call the\r\n      // focus event handler directly.\r\n      focusTrapInstance.focusLastTabbableElement();\r\n      expect(document.activeElement.id).toBe('last');\r\n    });\r\n  });\r\n\r\n  describe('special cases', () => {\r\n    it('should not throw when it has a SVG child', () => {\r\n      let fixture = TestBed.createComponent(FocusTrapWithSvg);\r\n\r\n      fixture.detectChanges();\r\n\r\n      let focusTrapInstance = fixture.componentInstance.focusTrapDirective.focusTrap;\r\n\r\n      expect(() => focusTrapInstance.focusFirstTabbableElement()).not.toThrow();\r\n      expect(() => focusTrapInstance.focusLastTabbableElement()).not.toThrow();\r\n    });\r\n  });\r\n\r\n  describe('with autoCapture', () => {\r\n    it('should automatically capture and return focus on init / destroy', async(() => {\r\n      const fixture = TestBed.createComponent(FocusTrapWithAutoCapture);\r\n      fixture.detectChanges();\r\n\r\n      const buttonOutsideTrappedRegion = fixture.nativeElement.querySelector('button');\r\n      buttonOutsideTrappedRegion.focus();\r\n      expect(document.activeElement).toBe(buttonOutsideTrappedRegion);\r\n\r\n      fixture.componentInstance.showTrappedRegion = true;\r\n      fixture.detectChanges();\r\n\r\n      fixture.whenStable().then(() => {\r\n        expect(document.activeElement.id).toBe('auto-capture-target');\r\n\r\n        fixture.destroy();\r\n        expect(document.activeElement).toBe(buttonOutsideTrappedRegion);\r\n      });\r\n    }));\r\n  });\r\n});\r\n\r\n\r\n@Component({\r\n  template: `\r\n    <div cdkTrapFocus>\r\n      <input>\r\n      <button>SAVE</button>\r\n    </div>\r\n    `\r\n})\r\nclass SimpleFocusTrap {\r\n  @ViewChild(CdkTrapFocus) focusTrapDirective: CdkTrapFocus;\r\n}\r\n\r\n@Component({\r\n  template: `\r\n    <button type=\"button\">Toggle</button>\r\n    <div *ngIf=\"showTrappedRegion\" cdkTrapFocus cdkTrapFocusAutoCapture>\r\n      <input id=\"auto-capture-target\">\r\n      <button>SAVE</button>\r\n    </div>\r\n    `\r\n})\r\nclass FocusTrapWithAutoCapture {\r\n  @ViewChild(CdkTrapFocus) focusTrapDirective: CdkTrapFocus;\r\n  showTrappedRegion = false;\r\n}\r\n\r\n\r\n@Component({\r\n  template: `\r\n    <div *ngIf=\"renderFocusTrap\" [cdkTrapFocus]=\"_isFocusTrapEnabled\">\r\n      <input>\r\n      <button>SAVE</button>\r\n    </div>\r\n    `\r\n})\r\nclass FocusTrapWithBindings {\r\n  @ViewChild(CdkTrapFocus) focusTrapDirective: CdkTrapFocus;\r\n  renderFocusTrap = true;\r\n  _isFocusTrapEnabled = true;\r\n}\r\n\r\n\r\n@Component({\r\n  template: `\r\n    <div cdkTrapFocus>\r\n      <input>\r\n      <button>before</button>\r\n      <button id=\"first\" cdkFocusRegionStart></button>\r\n      <button id=\"middle\" cdkFocusInitial></button>\r\n      <button id=\"last\" cdkFocusRegionEnd></button>\r\n      <button>after</button>\r\n      <input>\r\n    </div>\r\n    `\r\n})\r\nclass FocusTrapTargets {\r\n  @ViewChild(CdkTrapFocus) focusTrapDirective: CdkTrapFocus;\r\n}\r\n\r\n\r\n@Component({\r\n  template: `\r\n    <div cdkTrapFocus>\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\">\r\n        <circle cx=\"100\" cy=\"100\" r=\"100\"/>\r\n      </svg>\r\n    </div>\r\n    `\r\n})\r\nclass FocusTrapWithSvg {\r\n  @ViewChild(CdkTrapFocus) focusTrapDirective: CdkTrapFocus;\r\n}\r\n\r\n@Component({\r\n  template: `\r\n    <div cdkTrapFocus>\r\n      <p>Hello</p>\r\n    </div>\r\n    `\r\n})\r\nclass FocusTrapWithoutFocusableElements {\r\n  @ViewChild(CdkTrapFocus) focusTrapDirective: CdkTrapFocus;\r\n}\r\n"]}