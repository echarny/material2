{"version":3,"file":"list-key-manager.spec.js","sourceRoot":"","sources":["../../../../../src/cdk/a11y/key-manager/list-key-manager.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import {DOWN_ARROW, TAB, UP_ARROW, LEFT_ARROW, RIGHT_ARROW} from '@angular/cdk/keycodes';\r\nimport {take} from 'rxjs/operators';\r\nimport {QueryList} from '@angular/core';\r\nimport {fakeAsync, tick} from '@angular/core/testing';\r\nimport {createKeyboardEvent} from '@angular/cdk/testing';\r\nimport {ActiveDescendantKeyManager} from './activedescendant-key-manager';\r\nimport {FocusKeyManager} from './focus-key-manager';\r\nimport {ListKeyManager} from './list-key-manager';\r\nimport {FocusOrigin} from '../focus-monitor/focus-monitor';\r\nimport {Subject} from 'rxjs';\r\n\r\n\r\nclass FakeFocusable {\r\n  /** Whether the item is disabled or not. */\r\n  disabled = false;\r\n  /** Test property that can be used to test the `skipPredicate` functionality. */\r\n  skipItem = false;\r\n  constructor(private _label = '') {}\r\n  focus(_focusOrigin?: FocusOrigin) {}\r\n  getLabel() { return this._label; }\r\n}\r\n\r\nclass FakeHighlightable {\r\n  disabled = false;\r\n  setActiveStyles() {}\r\n  setInactiveStyles() {}\r\n}\r\n\r\nclass FakeQueryList<T> extends QueryList<T> {\r\n  changes = new Subject<FakeQueryList<T>>();\r\n  items: T[];\r\n  get length() { return this.items.length; }\r\n  set length(_) { /* Empty setter for base class constructor */  }\r\n  get first() { return this.items[0]; }\r\n  toArray() { return this.items; }\r\n  some() { return this.items.some.apply(this.items, arguments); }\r\n  notifyOnChanges() { this.changes.next(this); }\r\n}\r\n\r\n\r\ndescribe('Key managers', () => {\r\n  let itemList: FakeQueryList<any>;\r\n  let fakeKeyEvents: {\r\n    downArrow: KeyboardEvent,\r\n    upArrow: KeyboardEvent,\r\n    leftArrow: KeyboardEvent,\r\n    rightArrow: KeyboardEvent,\r\n    tab: KeyboardEvent,\r\n    unsupported: KeyboardEvent\r\n  };\r\n\r\n  beforeEach(() => {\r\n    itemList = new FakeQueryList<any>();\r\n    fakeKeyEvents = {\r\n      downArrow: createKeyboardEvent('keydown', DOWN_ARROW),\r\n      upArrow: createKeyboardEvent('keydown', UP_ARROW),\r\n      leftArrow: createKeyboardEvent('keydown', LEFT_ARROW),\r\n      rightArrow: createKeyboardEvent('keydown', RIGHT_ARROW),\r\n      tab: createKeyboardEvent('keydown', TAB),\r\n      unsupported: createKeyboardEvent('keydown', 192) // corresponds to the tilde character (~)\r\n    };\r\n  });\r\n\r\n  describe('ListKeyManager', () => {\r\n    let keyManager: ListKeyManager<FakeFocusable>;\r\n\r\n    beforeEach(() => {\r\n      itemList.items = [\r\n        new FakeFocusable('one'),\r\n        new FakeFocusable('two'),\r\n        new FakeFocusable('three')\r\n      ];\r\n      keyManager = new ListKeyManager<FakeFocusable>(itemList);\r\n\r\n      // first item is already focused\r\n      keyManager.setFirstItemActive();\r\n\r\n      spyOn(keyManager, 'setActiveItem').and.callThrough();\r\n    });\r\n\r\n    it('should maintain the active item if the amount of items changes', () => {\r\n      expect(keyManager.activeItemIndex).toBe(0);\r\n      expect(keyManager.activeItem!.getLabel()).toBe('one');\r\n\r\n      itemList.items.unshift(new FakeFocusable('zero'));\r\n      itemList.notifyOnChanges();\r\n\r\n      expect(keyManager.activeItemIndex).toBe(1);\r\n      expect(keyManager.activeItem!.getLabel()).toBe('one');\r\n    });\r\n\r\n    describe('Key events', () => {\r\n\r\n      it('should emit tabOut when the tab key is pressed', () => {\r\n        const spy = jasmine.createSpy('tabOut spy');\r\n        keyManager.tabOut.pipe(take(1)).subscribe(spy);\r\n        keyManager.onKeydown(fakeKeyEvents.tab);\r\n\r\n        expect(spy).toHaveBeenCalled();\r\n      });\r\n\r\n      it('should emit an event whenever the active item changes', () => {\r\n        const spy = jasmine.createSpy('change spy');\r\n        const subscription = keyManager.change.subscribe(spy);\r\n\r\n        keyManager.onKeydown(fakeKeyEvents.downArrow);\r\n        expect(spy).toHaveBeenCalledTimes(1);\r\n\r\n        keyManager.onKeydown(fakeKeyEvents.upArrow);\r\n        expect(spy).toHaveBeenCalledTimes(2);\r\n\r\n        subscription.unsubscribe();\r\n      });\r\n\r\n      it('should activate the first item when pressing down on a clean key manager', () => {\r\n        keyManager = new ListKeyManager<FakeFocusable>(itemList);\r\n\r\n        expect(keyManager.activeItemIndex).toBe(-1, 'Expected active index to default to -1.');\r\n\r\n        keyManager.onKeydown(fakeKeyEvents.downArrow);\r\n\r\n        expect(keyManager.activeItemIndex).toBe(0, 'Expected first item to become active.');\r\n      });\r\n\r\n      it('should not prevent the default keyboard action when pressing tab', () => {\r\n        expect(fakeKeyEvents.tab.defaultPrevented).toBe(false);\r\n\r\n        keyManager.onKeydown(fakeKeyEvents.tab);\r\n\r\n        expect(fakeKeyEvents.tab.defaultPrevented).toBe(false);\r\n      });\r\n\r\n      it('should not do anything for unsupported key presses', () => {\r\n        keyManager.setActiveItem(1);\r\n\r\n        expect(keyManager.activeItemIndex).toBe(1);\r\n        expect(fakeKeyEvents.unsupported.defaultPrevented).toBe(false);\r\n\r\n        keyManager.onKeydown(fakeKeyEvents.unsupported);\r\n\r\n        expect(keyManager.activeItemIndex).toBe(1);\r\n        expect(fakeKeyEvents.unsupported.defaultPrevented).toBe(false);\r\n      });\r\n\r\n      it('should ignore the horizontal keys when only in vertical mode', () => {\r\n        keyManager.withVerticalOrientation().withHorizontalOrientation(null);\r\n\r\n        expect(keyManager.activeItemIndex).toBe(0);\r\n\r\n        keyManager.onKeydown(fakeKeyEvents.rightArrow);\r\n\r\n        expect(keyManager.activeItemIndex).toBe(0);\r\n        expect(fakeKeyEvents.rightArrow.defaultPrevented).toBe(false);\r\n      });\r\n\r\n      it('should ignore the horizontal keys when only in horizontal mode', () => {\r\n        keyManager.withVerticalOrientation(false).withHorizontalOrientation('ltr');\r\n\r\n        expect(keyManager.activeItemIndex).toBe(0);\r\n\r\n        keyManager.onKeydown(fakeKeyEvents.downArrow);\r\n\r\n        expect(keyManager.activeItemIndex).toBe(0);\r\n        expect(fakeKeyEvents.downArrow.defaultPrevented).toBe(false);\r\n      });\r\n\r\n      describe('with `vertical` direction', () => {\r\n        beforeEach(() => {\r\n          keyManager.withVerticalOrientation();\r\n          this.nextKeyEvent = createKeyboardEvent('keydown', DOWN_ARROW);\r\n          this.prevKeyEvent = createKeyboardEvent('keydown', UP_ARROW);\r\n        });\r\n\r\n        runDirectionalKeyTests.call(this);\r\n      });\r\n\r\n      describe('with `ltr` direction', () => {\r\n        beforeEach(() => {\r\n          keyManager.withHorizontalOrientation('ltr');\r\n          this.nextKeyEvent = createKeyboardEvent('keydown', RIGHT_ARROW);\r\n          this.prevKeyEvent = createKeyboardEvent('keydown', LEFT_ARROW);\r\n        });\r\n\r\n        runDirectionalKeyTests.call(this);\r\n      });\r\n\r\n      describe('with `rtl` direction', () => {\r\n        beforeEach(() => {\r\n          keyManager.withHorizontalOrientation('rtl');\r\n          this.nextKeyEvent = createKeyboardEvent('keydown', LEFT_ARROW);\r\n          this.prevKeyEvent = createKeyboardEvent('keydown', RIGHT_ARROW);\r\n        });\r\n\r\n        runDirectionalKeyTests.call(this);\r\n      });\r\n\r\n      /**\r\n       * Defines the directional key tests that should be run in a particular context. Note that\r\n       * parameters have to be passed in via Jasmine's context object (`this` inside a `beforeEach`)\r\n       * because this function has to run before any `beforeEach`, `beforeAll` etc. hooks.\r\n       */\r\n      function runDirectionalKeyTests() {\r\n        it('should set subsequent items as active when the next key is pressed', () => {\r\n          keyManager.onKeydown(this.nextKeyEvent);\r\n\r\n          expect(keyManager.activeItemIndex)\r\n              .toBe(1, 'Expected active item to be 1 after one next key event.');\r\n          expect(keyManager.setActiveItem).not.toHaveBeenCalledWith(0);\r\n          expect(keyManager.setActiveItem).toHaveBeenCalledWith(1);\r\n          expect(keyManager.setActiveItem).not.toHaveBeenCalledWith(2);\r\n\r\n          keyManager.onKeydown(this.nextKeyEvent);\r\n          expect(keyManager.activeItemIndex)\r\n              .toBe(2, 'Expected active item to be 2 after two next key events.');\r\n          expect(keyManager.setActiveItem).toHaveBeenCalledWith(2);\r\n          expect(keyManager.setActiveItem).not.toHaveBeenCalledWith(0);\r\n        });\r\n\r\n        it('should set first item active when the next key is pressed if no active item', () => {\r\n          keyManager.setActiveItem(-1);\r\n          keyManager.onKeydown(this.nextKeyEvent);\r\n\r\n          expect(keyManager.activeItemIndex)\r\n              .toBe(0, 'Expected active item to be 0 after next key if active item was null.');\r\n          expect(keyManager.setActiveItem).toHaveBeenCalledWith(0);\r\n          expect(keyManager.setActiveItem).not.toHaveBeenCalledWith(1);\r\n          expect(keyManager.setActiveItem).not.toHaveBeenCalledWith(2);\r\n        });\r\n\r\n        it('should set previous items as active when the previous key is pressed', () => {\r\n          keyManager.onKeydown(this.nextKeyEvent);\r\n\r\n          expect(keyManager.activeItemIndex)\r\n              .toBe(1, 'Expected active item to be 1 after one next key event.');\r\n          expect(keyManager.setActiveItem).not.toHaveBeenCalledWith(0);\r\n          expect(keyManager.setActiveItem).toHaveBeenCalledWith(1);\r\n\r\n          keyManager.onKeydown(this.prevKeyEvent);\r\n          expect(keyManager.activeItemIndex)\r\n              .toBe(0, 'Expected active item to be 0 after one next and one previous key event.');\r\n          expect(keyManager.setActiveItem).toHaveBeenCalledWith(0);\r\n        });\r\n\r\n        it('should do nothing when the prev key is pressed if no active item and not wrap', () => {\r\n          keyManager.setActiveItem(-1);\r\n          keyManager.onKeydown(this.prevKeyEvent);\r\n\r\n          expect(keyManager.activeItemIndex)\r\n              .toBe(-1, 'Expected nothing to happen if prev event occurs and no active item.');\r\n          expect(keyManager.setActiveItem).not.toHaveBeenCalledWith(0);\r\n          expect(keyManager.setActiveItem).not.toHaveBeenCalledWith(1);\r\n          expect(keyManager.setActiveItem).not.toHaveBeenCalledWith(2);\r\n        });\r\n\r\n        it('should skip disabled items', () => {\r\n          itemList.items[1].disabled = true;\r\n\r\n          // Next event should skip past disabled item from 0 to 2\r\n          keyManager.onKeydown(this.nextKeyEvent);\r\n          expect(keyManager.activeItemIndex)\r\n              .toBe(2, 'Expected active item to skip past disabled item on next event.');\r\n          expect(keyManager.setActiveItem).not.toHaveBeenCalledWith(0);\r\n          expect(keyManager.setActiveItem).not.toHaveBeenCalledWith(1);\r\n          expect(keyManager.setActiveItem).toHaveBeenCalledWith(2);\r\n\r\n          // Previous event should skip past disabled item from 2 to 0\r\n          keyManager.onKeydown(this.prevKeyEvent);\r\n          expect(keyManager.activeItemIndex)\r\n              .toBe(0, 'Expected active item to skip past disabled item on up arrow.');\r\n          expect(keyManager.setActiveItem).toHaveBeenCalledWith(0);\r\n          expect(keyManager.setActiveItem).not.toHaveBeenCalledWith(1);\r\n        });\r\n\r\n        it('should work normally when disabled property does not exist', () => {\r\n          itemList.items[0].disabled = undefined;\r\n          itemList.items[1].disabled = undefined;\r\n          itemList.items[2].disabled = undefined;\r\n\r\n          keyManager.onKeydown(this.nextKeyEvent);\r\n          expect(keyManager.activeItemIndex)\r\n              .toBe(1, 'Expected active item to be 1 after one next event when disabled not set.');\r\n          expect(keyManager.setActiveItem).not.toHaveBeenCalledWith(0);\r\n          expect(keyManager.setActiveItem).toHaveBeenCalledWith(1);\r\n          expect(keyManager.setActiveItem).not.toHaveBeenCalledWith(2);\r\n\r\n          keyManager.onKeydown(this.nextKeyEvent);\r\n          expect(keyManager.activeItemIndex)\r\n              .toBe(2, 'Expected active item to be 2 after two next events when disabled not set.');\r\n          expect(keyManager.setActiveItem).not.toHaveBeenCalledWith(0);\r\n          expect(keyManager.setActiveItem).toHaveBeenCalledWith(2);\r\n        });\r\n\r\n        it('should not move active item past either end of the list', () => {\r\n          keyManager.onKeydown(this.nextKeyEvent);\r\n          keyManager.onKeydown(this.nextKeyEvent);\r\n          expect(keyManager.activeItemIndex)\r\n              .toBe(2, `Expected last item of the list to be active.`);\r\n\r\n          // This next event would move active item past the end of the list\r\n          keyManager.onKeydown(this.nextKeyEvent);\r\n          expect(keyManager.activeItemIndex)\r\n              .toBe(2, `Expected active item to remain at the end of the list.`);\r\n\r\n          keyManager.onKeydown(this.prevKeyEvent);\r\n          keyManager.onKeydown(this.prevKeyEvent);\r\n          expect(keyManager.activeItemIndex)\r\n              .toBe(0, `Expected first item of the list to be active.`);\r\n\r\n          // This prev event would move active item past the beginning of the list\r\n          keyManager.onKeydown(this.prevKeyEvent);\r\n          expect(keyManager.activeItemIndex)\r\n              .toBe(0, `Expected active item to remain at the beginning of the list.`);\r\n        });\r\n\r\n        it('should not move active item to end when the last item is disabled', () => {\r\n          itemList.items[2].disabled = true;\r\n          keyManager.onKeydown(this.nextKeyEvent);\r\n          expect(keyManager.activeItemIndex)\r\n              .toBe(1, `Expected second item of the list to be active.`);\r\n\r\n          // This next key event would set active item to the last item, which is disabled\r\n          keyManager.onKeydown(this.nextKeyEvent);\r\n          expect(keyManager.activeItemIndex)\r\n              .toBe(1, `Expected the second item to remain active.`);\r\n          expect(keyManager.setActiveItem).not.toHaveBeenCalledWith(2);\r\n        });\r\n\r\n        it('should prevent the default keyboard action of handled events', () => {\r\n          expect(this.nextKeyEvent.defaultPrevented).toBe(false);\r\n          keyManager.onKeydown(this.nextKeyEvent);\r\n          expect(this.nextKeyEvent.defaultPrevented).toBe(true);\r\n\r\n          expect(this.prevKeyEvent.defaultPrevented).toBe(false);\r\n          keyManager.onKeydown(this.prevKeyEvent);\r\n          expect(this.prevKeyEvent.defaultPrevented).toBe(true);\r\n        });\r\n      }\r\n\r\n    });\r\n\r\n    describe('programmatic focus', () => {\r\n\r\n      it('should setActiveItem()', () => {\r\n        expect(keyManager.activeItemIndex)\r\n            .toBe(0, `Expected first item of the list to be active.`);\r\n\r\n        keyManager.setActiveItem(1);\r\n        expect(keyManager.activeItemIndex)\r\n            .toBe(1, `Expected activeItemIndex to be updated when setActiveItem() was called.`);\r\n      });\r\n\r\n      it('should be able to set the active item by reference', () => {\r\n        expect(keyManager.activeItemIndex)\r\n            .toBe(0, `Expected first item of the list to be active.`);\r\n\r\n        keyManager.setActiveItem(itemList.items[2]);\r\n        expect(keyManager.activeItemIndex)\r\n            .toBe(2, `Expected activeItemIndex to be updated.`);\r\n      });\r\n\r\n      it('should be able to set the active item without emitting an event', () => {\r\n        const spy = jasmine.createSpy('change spy');\r\n        const subscription = keyManager.change.subscribe(spy);\r\n\r\n        expect(keyManager.activeItemIndex).toBe(0);\r\n\r\n        keyManager.updateActiveItem(2);\r\n\r\n        expect(keyManager.activeItemIndex).toBe(2);\r\n        expect(spy).not.toHaveBeenCalled();\r\n\r\n        subscription.unsubscribe();\r\n      });\r\n\r\n      it('should expose the active item correctly', () => {\r\n        keyManager.onKeydown(fakeKeyEvents.downArrow);\r\n\r\n        expect(keyManager.activeItemIndex).toBe(1, 'Expected active item to be the second option.');\r\n        expect(keyManager.activeItem)\r\n            .toBe(itemList.items[1], 'Expected the active item to match the second option.');\r\n\r\n\r\n        keyManager.onKeydown(fakeKeyEvents.downArrow);\r\n        expect(keyManager.activeItemIndex).toBe(2, 'Expected active item to be the third option.');\r\n        expect(keyManager.activeItem)\r\n            .toBe(itemList.items[2], 'Expected the active item ID to match the third option.');\r\n      });\r\n\r\n      it('should setFirstItemActive()', () => {\r\n        keyManager.onKeydown(fakeKeyEvents.downArrow);\r\n        keyManager.onKeydown(fakeKeyEvents.downArrow);\r\n        expect(keyManager.activeItemIndex)\r\n            .toBe(2, `Expected last item of the list to be active.`);\r\n\r\n        keyManager.setFirstItemActive();\r\n        expect(keyManager.activeItemIndex)\r\n            .toBe(0, `Expected setFirstItemActive() to set the active item to the first item.`);\r\n      });\r\n\r\n      it('should set the active item to the second item if the first one is disabled', () => {\r\n        itemList.items[0].disabled = true;\r\n\r\n        keyManager.setFirstItemActive();\r\n        expect(keyManager.activeItemIndex)\r\n            .toBe(1, `Expected the second item to be active if the first was disabled.`);\r\n      });\r\n\r\n      it('should setLastItemActive()', () => {\r\n        expect(keyManager.activeItemIndex)\r\n            .toBe(0, `Expected first item of the list to be active.`);\r\n\r\n        keyManager.setLastItemActive();\r\n        expect(keyManager.activeItemIndex)\r\n            .toBe(2, `Expected setLastItemActive() to set the active item to the last item.`);\r\n      });\r\n\r\n      it('should set the active item to the second to last item if the last is disabled', () => {\r\n        itemList.items[2].disabled = true;\r\n\r\n        keyManager.setLastItemActive();\r\n        expect(keyManager.activeItemIndex)\r\n            .toBe(1, `Expected the second to last item to be active if the last was disabled.`);\r\n      });\r\n\r\n      it('should setNextItemActive()', () => {\r\n        expect(keyManager.activeItemIndex)\r\n            .toBe(0, `Expected first item of the list to be active.`);\r\n\r\n        keyManager.setNextItemActive();\r\n        expect(keyManager.activeItemIndex)\r\n            .toBe(1, `Expected setNextItemActive() to set the active item to the next item.`);\r\n      });\r\n\r\n      it('should set the active item to the next enabled item if next is disabled', () => {\r\n        itemList.items[1].disabled = true;\r\n        expect(keyManager.activeItemIndex)\r\n            .toBe(0, `Expected first item of the list to be active.`);\r\n\r\n        keyManager.setNextItemActive();\r\n        expect(keyManager.activeItemIndex)\r\n            .toBe(2, `Expected setNextItemActive() to only set enabled items as active.`);\r\n      });\r\n\r\n      it('should setPreviousItemActive()', () => {\r\n        keyManager.onKeydown(fakeKeyEvents.downArrow);\r\n        expect(keyManager.activeItemIndex)\r\n            .toBe(1, `Expected second item of the list to be active.`);\r\n\r\n        keyManager.setPreviousItemActive();\r\n        expect(keyManager.activeItemIndex)\r\n            .toBe(0, `Expected setPreviousItemActive() to set the active item to the previous.`);\r\n      });\r\n\r\n      it('should skip disabled items when setPreviousItemActive() is called', () => {\r\n        itemList.items[1].disabled = true;\r\n        keyManager.onKeydown(fakeKeyEvents.downArrow);\r\n        keyManager.onKeydown(fakeKeyEvents.downArrow);\r\n        expect(keyManager.activeItemIndex)\r\n            .toBe(2, `Expected third item of the list to be active.`);\r\n\r\n        keyManager.setPreviousItemActive();\r\n        expect(keyManager.activeItemIndex)\r\n            .toBe(0, `Expected setPreviousItemActive() to skip the disabled item.`);\r\n      });\r\n\r\n      it('should not emit an event if the item did not change', () => {\r\n        const spy = jasmine.createSpy('change spy');\r\n        const subscription = keyManager.change.subscribe(spy);\r\n\r\n        keyManager.setActiveItem(2);\r\n        keyManager.setActiveItem(2);\r\n\r\n        expect(spy).toHaveBeenCalledTimes(1);\r\n\r\n        subscription.unsubscribe();\r\n      });\r\n\r\n    });\r\n\r\n    describe('wrap mode', () => {\r\n\r\n      it('should return itself to allow chaining', () => {\r\n        expect(keyManager.withWrap())\r\n            .toEqual(keyManager, `Expected withWrap() to return an instance of ListKeyManager.`);\r\n      });\r\n\r\n      it('should wrap focus when arrow keying past items while in wrap mode', () => {\r\n        keyManager.withWrap();\r\n        keyManager.onKeydown(fakeKeyEvents.downArrow);\r\n        keyManager.onKeydown(fakeKeyEvents.downArrow);\r\n\r\n        expect(keyManager.activeItemIndex).toBe(2, 'Expected last item to be active.');\r\n\r\n        // this down arrow moves down past the end of the list\r\n        keyManager.onKeydown(fakeKeyEvents.downArrow);\r\n        expect(keyManager.activeItemIndex).toBe(0, 'Expected active item to wrap to beginning.');\r\n\r\n        // this up arrow moves up past the beginning of the list\r\n        keyManager.onKeydown(fakeKeyEvents.upArrow);\r\n        expect(keyManager.activeItemIndex).toBe(2, 'Expected active item to wrap to end.');\r\n      });\r\n\r\n      it('should set last item active when up arrow is pressed if no active item', () => {\r\n        keyManager.withWrap();\r\n        keyManager.setActiveItem(-1);\r\n        keyManager.onKeydown(fakeKeyEvents.upArrow);\r\n\r\n        expect(keyManager.activeItemIndex)\r\n            .toBe(2, 'Expected last item to be active on up arrow if no active item.');\r\n        expect(keyManager.setActiveItem).not.toHaveBeenCalledWith(0);\r\n        expect(keyManager.setActiveItem).toHaveBeenCalledWith(2);\r\n\r\n        keyManager.onKeydown(fakeKeyEvents.downArrow);\r\n        expect(keyManager.activeItemIndex)\r\n            .toBe(0, 'Expected active item to be 0 after wrapping back to beginning.');\r\n        expect(keyManager.setActiveItem).toHaveBeenCalledWith(0);\r\n      });\r\n\r\n      // This test should pass if all items are disabled and the down arrow key got pressed.\r\n      // If the test setup crashes or this test times out, this test can be considered as failed.\r\n      it('should not get into an infinite loop if all items are disabled', () => {\r\n        keyManager.withWrap();\r\n        keyManager.setActiveItem(0);\r\n\r\n        itemList.items.forEach(item => item.disabled = true);\r\n\r\n        keyManager.onKeydown(fakeKeyEvents.downArrow);\r\n      });\r\n\r\n      it('should be able to disable wrapping', () => {\r\n        keyManager.withWrap();\r\n        keyManager.setFirstItemActive();\r\n        keyManager.onKeydown(fakeKeyEvents.upArrow);\r\n\r\n        expect(keyManager.activeItemIndex).toBe(itemList.items.length - 1);\r\n\r\n        keyManager.withWrap(false);\r\n        keyManager.setFirstItemActive();\r\n        keyManager.onKeydown(fakeKeyEvents.upArrow);\r\n\r\n        expect(keyManager.activeItemIndex).toBe(0);\r\n      });\r\n    });\r\n\r\n    describe('skip predicate', () => {\r\n\r\n      it('should skip disabled items by default', () => {\r\n        itemList.items[1].disabled = true;\r\n\r\n        expect(keyManager.activeItemIndex).toBe(0);\r\n\r\n        keyManager.onKeydown(fakeKeyEvents.downArrow);\r\n\r\n        expect(keyManager.activeItemIndex).toBe(2);\r\n      });\r\n\r\n      it('should be able to skip items with a custom predicate', () => {\r\n        keyManager.skipPredicate(item => item.skipItem);\r\n\r\n        itemList.items[1].skipItem = true;\r\n\r\n        expect(keyManager.activeItemIndex).toBe(0);\r\n\r\n        keyManager.onKeydown(fakeKeyEvents.downArrow);\r\n\r\n        expect(keyManager.activeItemIndex).toBe(2);\r\n      });\r\n    });\r\n\r\n    describe('typeahead mode', () => {\r\n      const debounceInterval = 300;\r\n\r\n      beforeEach(() => {\r\n        keyManager.withTypeAhead(debounceInterval);\r\n        keyManager.setActiveItem(-1);\r\n      });\r\n\r\n      it('should throw if the items do not implement the getLabel method', () => {\r\n        const invalidQueryList = new FakeQueryList();\r\n\r\n        invalidQueryList.items = [{ disabled: false }];\r\n\r\n        const invalidManager = new ListKeyManager(invalidQueryList);\r\n\r\n        expect(() => invalidManager.withTypeAhead()).toThrowError(/must implement/);\r\n      });\r\n\r\n      it('should debounce the input key presses', fakeAsync(() => {\r\n        keyManager.onKeydown(createKeyboardEvent('keydown', 79, undefined, 'o')); // types \"o\"\r\n        keyManager.onKeydown(createKeyboardEvent('keydown', 78, undefined, 'n')); // types \"n\"\r\n        keyManager.onKeydown(createKeyboardEvent('keydown', 69, undefined, 'e')); // types \"e\"\r\n\r\n        expect(keyManager.activeItem).not.toBe(itemList.items[0]);\r\n\r\n        tick(debounceInterval);\r\n\r\n        expect(keyManager.activeItem).toBe(itemList.items[0]);\r\n      }));\r\n\r\n      it('should focus the first item that starts with a letter', fakeAsync(() => {\r\n        keyManager.onKeydown(createKeyboardEvent('keydown', 84, undefined, 't')); // types \"t\"\r\n\r\n        tick(debounceInterval);\r\n\r\n        expect(keyManager.activeItem).toBe(itemList.items[1]);\r\n      }));\r\n\r\n      it('should focus the first item that starts with sequence of letters', fakeAsync(() => {\r\n        keyManager.onKeydown(createKeyboardEvent('keydown', 84, undefined, 't')); // types \"t\"\r\n        keyManager.onKeydown(createKeyboardEvent('keydown', 72, undefined, 'h')); // types \"h\"\r\n\r\n        tick(debounceInterval);\r\n\r\n        expect(keyManager.activeItem).toBe(itemList.items[2]);\r\n      }));\r\n\r\n      it('should cancel any pending timers if a navigation key is pressed', fakeAsync(() => {\r\n        keyManager.onKeydown(createKeyboardEvent('keydown', 84, undefined, 't')); // types \"t\"\r\n        keyManager.onKeydown(createKeyboardEvent('keydown', 72, undefined, 'h')); // types \"h\"\r\n        keyManager.onKeydown(fakeKeyEvents.downArrow);\r\n\r\n        tick(debounceInterval);\r\n\r\n        expect(keyManager.activeItem).toBe(itemList.items[0]);\r\n      }));\r\n\r\n      it('should handle non-English input', fakeAsync(() => {\r\n        itemList.items = [\r\n          new FakeFocusable('едно'),\r\n          new FakeFocusable('две'),\r\n          new FakeFocusable('три')\r\n        ];\r\n\r\n        const keyboardEvent = createKeyboardEvent('keydown', 68, undefined, 'д');\r\n\r\n        keyManager.onKeydown(keyboardEvent); // types \"д\"\r\n        tick(debounceInterval);\r\n\r\n        expect(keyManager.activeItem).toBe(itemList.items[1]);\r\n      }));\r\n\r\n      it('should handle non-letter characters', fakeAsync(() => {\r\n        itemList.items = [\r\n          new FakeFocusable('[]'),\r\n          new FakeFocusable('321'),\r\n          new FakeFocusable('`!?')\r\n        ];\r\n\r\n        keyManager.onKeydown(createKeyboardEvent('keydown', 192, undefined, '`')); // types \"`\"\r\n        tick(debounceInterval);\r\n        expect(keyManager.activeItem).toBe(itemList.items[2]);\r\n\r\n        keyManager.onKeydown(createKeyboardEvent('keydown', 51, undefined, '3')); // types \"3\"\r\n        tick(debounceInterval);\r\n        expect(keyManager.activeItem).toBe(itemList.items[1]);\r\n\r\n        keyManager.onKeydown(createKeyboardEvent('keydown', 219, undefined, '[')); // types \"[\"\r\n        tick(debounceInterval);\r\n        expect(keyManager.activeItem).toBe(itemList.items[0]);\r\n      }));\r\n\r\n      it('should not focus disabled items', fakeAsync(() => {\r\n        expect(keyManager.activeItem).toBeFalsy();\r\n\r\n        itemList.items[0].disabled = true;\r\n        keyManager.onKeydown(createKeyboardEvent('keydown', 79, undefined, 'o')); // types \"o\"\r\n        tick(debounceInterval);\r\n\r\n        expect(keyManager.activeItem).toBeFalsy();\r\n      }));\r\n\r\n      it('should start looking for matches after the active item', fakeAsync(() => {\r\n        itemList.items = [\r\n          new FakeFocusable('Bilbo'),\r\n          new FakeFocusable('Frodo'),\r\n          new FakeFocusable('Pippin'),\r\n          new FakeFocusable('Boromir'),\r\n          new FakeFocusable('Aragorn')\r\n        ];\r\n\r\n        keyManager.setActiveItem(1);\r\n        keyManager.onKeydown(createKeyboardEvent('keydown', 66, undefined, 'b'));\r\n        tick(debounceInterval);\r\n\r\n        expect(keyManager.activeItem).toBe(itemList.items[3]);\r\n      }));\r\n\r\n      it('should wrap back around if there were no matches after the active item', fakeAsync(() => {\r\n        itemList.items = [\r\n          new FakeFocusable('Bilbo'),\r\n          new FakeFocusable('Frodo'),\r\n          new FakeFocusable('Pippin'),\r\n          new FakeFocusable('Boromir'),\r\n          new FakeFocusable('Aragorn')\r\n        ];\r\n\r\n        keyManager.setActiveItem(3);\r\n        keyManager.onKeydown(createKeyboardEvent('keydown', 66, undefined, 'b'));\r\n        tick(debounceInterval);\r\n\r\n        expect(keyManager.activeItem).toBe(itemList.items[0]);\r\n      }));\r\n\r\n      it('should wrap back around if the last item is active', fakeAsync(() => {\r\n        keyManager.setActiveItem(2);\r\n        keyManager.onKeydown(createKeyboardEvent('keydown', 79, undefined, 'o'));\r\n        tick(debounceInterval);\r\n\r\n        expect(keyManager.activeItem).toBe(itemList.items[0]);\r\n      }));\r\n\r\n      it('should be able to select the first item', fakeAsync(() => {\r\n        keyManager.setActiveItem(-1);\r\n        keyManager.onKeydown(createKeyboardEvent('keydown', 79, undefined, 'o'));\r\n        tick(debounceInterval);\r\n\r\n        expect(keyManager.activeItem).toBe(itemList.items[0]);\r\n      }));\r\n\r\n      it('should not do anything if there is no match', fakeAsync(() => {\r\n        keyManager.setActiveItem(1);\r\n        keyManager.onKeydown(createKeyboardEvent('keydown', 87, undefined, 'w'));\r\n        tick(debounceInterval);\r\n\r\n        expect(keyManager.activeItem).toBe(itemList.items[1]);\r\n      }));\r\n\r\n    });\r\n\r\n  });\r\n\r\n  describe('FocusKeyManager', () => {\r\n    let keyManager: FocusKeyManager<FakeFocusable>;\r\n\r\n    beforeEach(() => {\r\n      itemList.items = [new FakeFocusable(), new FakeFocusable(), new FakeFocusable()];\r\n      keyManager = new FocusKeyManager<FakeFocusable>(itemList);\r\n\r\n      // first item is already focused\r\n      keyManager.setFirstItemActive();\r\n\r\n      spyOn(itemList.items[0], 'focus');\r\n      spyOn(itemList.items[1], 'focus');\r\n      spyOn(itemList.items[2], 'focus');\r\n    });\r\n\r\n    it('should focus subsequent items when down arrow is pressed', () => {\r\n      keyManager.onKeydown(fakeKeyEvents.downArrow);\r\n\r\n      expect(itemList.items[0].focus).not.toHaveBeenCalled();\r\n      expect(itemList.items[1].focus).toHaveBeenCalledTimes(1);\r\n      expect(itemList.items[2].focus).not.toHaveBeenCalled();\r\n\r\n      keyManager.onKeydown(fakeKeyEvents.downArrow);\r\n      expect(itemList.items[0].focus).not.toHaveBeenCalled();\r\n      expect(itemList.items[1].focus).toHaveBeenCalledTimes(1);\r\n      expect(itemList.items[2].focus).toHaveBeenCalledTimes(1);\r\n    });\r\n\r\n    it('should focus previous items when up arrow is pressed', () => {\r\n      keyManager.onKeydown(fakeKeyEvents.downArrow);\r\n\r\n      expect(itemList.items[0].focus).not.toHaveBeenCalled();\r\n      expect(itemList.items[1].focus).toHaveBeenCalledTimes(1);\r\n\r\n      keyManager.onKeydown(fakeKeyEvents.upArrow);\r\n\r\n      expect(itemList.items[0].focus).toHaveBeenCalledTimes(1);\r\n      expect(itemList.items[1].focus).toHaveBeenCalledTimes(1);\r\n    });\r\n\r\n    it('should allow setting the focused item without calling focus', () => {\r\n      expect(keyManager.activeItemIndex)\r\n          .toBe(0, `Expected first item of the list to be active.`);\r\n\r\n      keyManager.updateActiveItem(1);\r\n      expect(keyManager.activeItemIndex)\r\n          .toBe(1, `Expected activeItemIndex to update after calling updateActiveItemIndex().`);\r\n      expect(itemList.items[1].focus).not.toHaveBeenCalledTimes(1);\r\n    });\r\n\r\n    it('should be able to set the focus origin', () => {\r\n      keyManager.setFocusOrigin('mouse');\r\n\r\n      keyManager.onKeydown(fakeKeyEvents.downArrow);\r\n      expect(itemList.items[1].focus).toHaveBeenCalledWith('mouse');\r\n\r\n      keyManager.onKeydown(fakeKeyEvents.downArrow);\r\n      expect(itemList.items[2].focus).toHaveBeenCalledWith('mouse');\r\n\r\n      keyManager.setFocusOrigin('keyboard');\r\n\r\n      keyManager.onKeydown(fakeKeyEvents.upArrow);\r\n      expect(itemList.items[1].focus).toHaveBeenCalledWith('keyboard');\r\n    });\r\n\r\n  });\r\n\r\n  describe('ActiveDescendantKeyManager', () => {\r\n    let keyManager: ActiveDescendantKeyManager<FakeHighlightable>;\r\n\r\n    beforeEach(() => {\r\n      itemList.items = [new FakeHighlightable(), new FakeHighlightable(), new FakeHighlightable()];\r\n      keyManager = new ActiveDescendantKeyManager<FakeHighlightable>(itemList);\r\n\r\n      // first item is already focused\r\n      keyManager.setFirstItemActive();\r\n\r\n      spyOn(itemList.items[0], 'setActiveStyles');\r\n      spyOn(itemList.items[1], 'setActiveStyles');\r\n      spyOn(itemList.items[2], 'setActiveStyles');\r\n\r\n      spyOn(itemList.items[0], 'setInactiveStyles');\r\n      spyOn(itemList.items[1], 'setInactiveStyles');\r\n      spyOn(itemList.items[2], 'setInactiveStyles');\r\n    });\r\n\r\n    it('should set subsequent items as active with the DOWN arrow', () => {\r\n      keyManager.onKeydown(fakeKeyEvents.downArrow);\r\n\r\n      expect(itemList.items[1].setActiveStyles).toHaveBeenCalled();\r\n      expect(itemList.items[2].setActiveStyles).not.toHaveBeenCalled();\r\n\r\n      keyManager.onKeydown(fakeKeyEvents.downArrow);\r\n\r\n      expect(itemList.items[2].setActiveStyles).toHaveBeenCalled();\r\n    });\r\n\r\n    it('should set previous items as active with the UP arrow', () => {\r\n      keyManager.setLastItemActive();\r\n      keyManager.onKeydown(fakeKeyEvents.upArrow);\r\n\r\n      expect(itemList.items[1].setActiveStyles).toHaveBeenCalled();\r\n      expect(itemList.items[0].setActiveStyles).not.toHaveBeenCalled();\r\n\r\n      keyManager.onKeydown(fakeKeyEvents.upArrow);\r\n\r\n      expect(itemList.items[0].setActiveStyles).toHaveBeenCalled();\r\n    });\r\n\r\n    it('should set inactive styles on previously active items', () => {\r\n      keyManager.onKeydown(fakeKeyEvents.downArrow);\r\n      expect(itemList.items[0].setInactiveStyles).toHaveBeenCalled();\r\n\r\n      keyManager.onKeydown(fakeKeyEvents.upArrow);\r\n      expect(itemList.items[1].setInactiveStyles).toHaveBeenCalled();\r\n    });\r\n\r\n  });\r\n\r\n\r\n});\r\n"]}