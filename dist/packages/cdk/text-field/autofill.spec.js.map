{"version":3,"file":"autofill.spec.js","sourceRoot":"","sources":["../../../../src/cdk/text-field/autofill.spec.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {supportsPassiveEventListeners} from '@angular/cdk/platform';\r\nimport {Component, ElementRef, NgZone, ViewChild} from '@angular/core';\r\nimport {ComponentFixture, inject, TestBed} from '@angular/core/testing';\r\nimport {EMPTY} from 'rxjs';\r\nimport {AutofillEvent, AutofillMonitor} from './autofill';\r\nimport {TextFieldModule} from './text-field-module';\r\n\r\n\r\nconst listenerOptions: any = supportsPassiveEventListeners() ? {passive: true} : false;\r\n\r\n\r\ndescribe('AutofillMonitor', () => {\r\n  let autofillMonitor: AutofillMonitor;\r\n  let fixture: ComponentFixture<Inputs>;\r\n  let testComponent: Inputs;\r\n\r\n  beforeEach(() => {\r\n    TestBed.configureTestingModule({\r\n      imports: [TextFieldModule],\r\n      declarations: [Inputs],\r\n    }).compileComponents();\r\n  });\r\n\r\n  beforeEach(inject([AutofillMonitor], (afm: AutofillMonitor) => {\r\n    autofillMonitor = afm;\r\n    fixture = TestBed.createComponent(Inputs);\r\n    testComponent = fixture.componentInstance;\r\n\r\n    for (const input of [testComponent.input1, testComponent.input2, testComponent.input3]) {\r\n      spyOn(input.nativeElement, 'addEventListener');\r\n      spyOn(input.nativeElement, 'removeEventListener');\r\n    }\r\n\r\n    fixture.detectChanges();\r\n  }));\r\n\r\n  afterEach(() => {\r\n    // Call destroy to make sure we clean up all listeners.\r\n    autofillMonitor.ngOnDestroy();\r\n  });\r\n\r\n  it('should add monitored class and listener upon monitoring', () => {\r\n    const inputEl = testComponent.input1.nativeElement;\r\n    expect(inputEl.addEventListener).not.toHaveBeenCalled();\r\n\r\n    autofillMonitor.monitor(inputEl);\r\n    expect(inputEl.classList).toContain('cdk-text-field-autofill-monitored');\r\n    expect(inputEl.addEventListener)\r\n        .toHaveBeenCalledWith('animationstart', jasmine.any(Function), listenerOptions);\r\n  });\r\n\r\n  it('should not add multiple listeners to the same element', () => {\r\n    const inputEl = testComponent.input1.nativeElement;\r\n    expect(inputEl.addEventListener).not.toHaveBeenCalled();\r\n\r\n    autofillMonitor.monitor(inputEl);\r\n    autofillMonitor.monitor(inputEl);\r\n    expect(inputEl.addEventListener).toHaveBeenCalledTimes(1);\r\n  });\r\n\r\n  it('should remove monitored class and listener upon stop monitoring', () => {\r\n    const inputEl = testComponent.input1.nativeElement;\r\n    autofillMonitor.monitor(inputEl);\r\n    expect(inputEl.classList).toContain('cdk-text-field-autofill-monitored');\r\n    expect(inputEl.removeEventListener).not.toHaveBeenCalled();\r\n\r\n    autofillMonitor.stopMonitoring(inputEl);\r\n    expect(inputEl.classList).not.toContain('cdk-text-field-autofill-monitored');\r\n    expect(inputEl.removeEventListener)\r\n        .toHaveBeenCalledWith('animationstart', jasmine.any(Function), listenerOptions);\r\n  });\r\n\r\n  it('should stop monitoring all monitored elements upon destroy', () => {\r\n    const inputEl1 = testComponent.input1.nativeElement;\r\n    const inputEl2 = testComponent.input2.nativeElement;\r\n    const inputEl3 = testComponent.input3.nativeElement;\r\n    autofillMonitor.monitor(inputEl1);\r\n    autofillMonitor.monitor(inputEl2);\r\n    autofillMonitor.monitor(inputEl3);\r\n    expect(inputEl1.removeEventListener).not.toHaveBeenCalled();\r\n    expect(inputEl2.removeEventListener).not.toHaveBeenCalled();\r\n    expect(inputEl3.removeEventListener).not.toHaveBeenCalled();\r\n\r\n    autofillMonitor.ngOnDestroy();\r\n    expect(inputEl1.removeEventListener).toHaveBeenCalled();\r\n    expect(inputEl2.removeEventListener).toHaveBeenCalled();\r\n    expect(inputEl3.removeEventListener).toHaveBeenCalled();\r\n  });\r\n\r\n  it('should emit and add filled class upon start animation', () => {\r\n    const inputEl = testComponent.input1.nativeElement;\r\n    let animationStartCallback: Function = () => {};\r\n    let autofillStreamEvent: AutofillEvent | null = null;\r\n    inputEl.addEventListener.and.callFake((_, cb) => animationStartCallback = cb);\r\n    const autofillStream = autofillMonitor.monitor(inputEl);\r\n    autofillStream.subscribe(event => autofillStreamEvent = event);\r\n    expect(autofillStreamEvent).toBeNull();\r\n    expect(inputEl.classList).not.toContain('cdk-text-field-autofilled');\r\n\r\n    animationStartCallback({animationName: 'cdk-text-field-autofill-start', target: inputEl});\r\n    expect(inputEl.classList).toContain('cdk-text-field-autofilled');\r\n    expect(autofillStreamEvent).toEqual({target: inputEl, isAutofilled: true} as any);\r\n  });\r\n\r\n  it('should emit and remove filled class upon end animation', () => {\r\n    const inputEl = testComponent.input1.nativeElement;\r\n    let animationStartCallback: Function = () => {};\r\n    let autofillStreamEvent: AutofillEvent | null = null;\r\n    inputEl.addEventListener.and.callFake((_, cb) => animationStartCallback = cb);\r\n    const autofillStream = autofillMonitor.monitor(inputEl);\r\n    autofillStream.subscribe(event => autofillStreamEvent = event);\r\n    animationStartCallback({animationName: 'cdk-text-field-autofill-start', target: inputEl});\r\n    expect(inputEl.classList).toContain('cdk-text-field-autofilled');\r\n    expect(autofillStreamEvent).toEqual({target: inputEl, isAutofilled: true} as any);\r\n\r\n    animationStartCallback({animationName: 'cdk-text-field-autofill-end', target: inputEl});\r\n    expect(inputEl.classList).not.toContain('cdk-text-field-autofilled');\r\n    expect(autofillStreamEvent).toEqual({target: inputEl, isAutofilled: false} as any);\r\n  });\r\n\r\n  it('should cleanup filled class if monitoring stopped in autofilled state', () => {\r\n    const inputEl = testComponent.input1.nativeElement;\r\n    let animationStartCallback: Function = () => {};\r\n    inputEl.addEventListener.and.callFake((_, cb) => animationStartCallback = cb);\r\n    autofillMonitor.monitor(inputEl);\r\n    animationStartCallback({animationName: 'cdk-text-field-autofill-start', target: inputEl});\r\n    expect(inputEl.classList).toContain('cdk-text-field-autofilled');\r\n\r\n    autofillMonitor.stopMonitoring(inputEl);\r\n    expect(inputEl.classlist).not.toContain('cdk-text-field-autofilled');\r\n  });\r\n\r\n  it('should complete the stream when monitoring is stopped', () => {\r\n    const element = testComponent.input1.nativeElement;\r\n    const autofillStream = autofillMonitor.monitor(element);\r\n    const spy = jasmine.createSpy('autofillStream complete');\r\n\r\n    autofillStream.subscribe(undefined, undefined, spy);\r\n    expect(spy).not.toHaveBeenCalled();\r\n\r\n    autofillMonitor.stopMonitoring(element);\r\n    expect(spy).toHaveBeenCalled();\r\n  });\r\n\r\n  it('should emit on stream inside the NgZone', () => {\r\n    const inputEl = testComponent.input1.nativeElement;\r\n    let animationStartCallback: Function = () => {};\r\n    inputEl.addEventListener.and.callFake((_, cb) => animationStartCallback = cb);\r\n    const autofillStream = autofillMonitor.monitor(inputEl);\r\n    const spy = jasmine.createSpy('autofill spy');\r\n\r\n    autofillStream.subscribe(() => spy(NgZone.isInAngularZone()));\r\n    expect(spy).not.toHaveBeenCalled();\r\n\r\n    animationStartCallback({animationName: 'cdk-text-field-autofill-start', target: inputEl});\r\n    expect(spy).toHaveBeenCalledWith(true);\r\n  });\r\n\r\n  it('should not emit on init if input is unfilled', () => {\r\n    const inputEl = testComponent.input1.nativeElement;\r\n    let animationStartCallback: Function = () => {};\r\n    inputEl.addEventListener.and.callFake((_, cb) => animationStartCallback = cb);\r\n    const autofillStream = autofillMonitor.monitor(inputEl);\r\n    const spy = jasmine.createSpy('autofill spy');\r\n    autofillStream.subscribe(() => spy());\r\n    animationStartCallback({animationName: 'cdk-text-field-autofill-end', target: inputEl});\r\n    expect(spy).not.toHaveBeenCalled();\r\n  });\r\n});\r\n\r\ndescribe('cdkAutofill', () => {\r\n  let autofillMonitor: AutofillMonitor;\r\n  let fixture: ComponentFixture<InputWithCdkAutofilled>;\r\n  let testComponent: InputWithCdkAutofilled;\r\n\r\n  beforeEach(() => {\r\n    TestBed.configureTestingModule({\r\n      imports: [TextFieldModule],\r\n      declarations: [InputWithCdkAutofilled],\r\n    }).compileComponents();\r\n  });\r\n\r\n  beforeEach(inject([AutofillMonitor], (afm: AutofillMonitor) => {\r\n    autofillMonitor = afm;\r\n    spyOn(autofillMonitor, 'monitor').and.returnValue(EMPTY);\r\n    spyOn(autofillMonitor, 'stopMonitoring');\r\n    fixture = TestBed.createComponent(InputWithCdkAutofilled);\r\n    testComponent = fixture.componentInstance;\r\n    fixture.detectChanges();\r\n  }));\r\n\r\n  it('should monitor host element on init', () => {\r\n    expect(autofillMonitor.monitor).toHaveBeenCalledWith(testComponent.input.nativeElement);\r\n  });\r\n\r\n  it('should stop monitoring host element on destroy', () => {\r\n    expect(autofillMonitor.stopMonitoring).not.toHaveBeenCalled();\r\n    fixture.destroy();\r\n    expect(autofillMonitor.stopMonitoring).toHaveBeenCalledWith(testComponent.input.nativeElement);\r\n  });\r\n});\r\n\r\n@Component({\r\n  template: `\r\n    <input #input1>\r\n    <input #input2>\r\n    <input #input3>\r\n  `\r\n})\r\nclass Inputs {\r\n  @ViewChild('input1') input1: ElementRef;\r\n  @ViewChild('input2') input2: ElementRef;\r\n  @ViewChild('input3') input3: ElementRef;\r\n}\r\n\r\n@Component({\r\n  template: `<input #input cdkAutofill>`\r\n})\r\nclass InputWithCdkAutofilled {\r\n  @ViewChild('input') input: ElementRef;\r\n}\r\n"]}