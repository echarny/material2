{"version":3,"file":"accordion-item.spec.js","sourceRoot":"","sources":["../../../../src/cdk/accordion/accordion-item.spec.ts"],"names":[],"mappings":";;AAAA,iDAAuE;AACvE,sCAAwC;AACxC,8DAA6C;AAC7C,mEAA6E;AAC7E,2CAAkE;AAElE,QAAQ,CAAC,kBAAkB,EAAE;IAC3B,UAAU,CAAC,eAAK,CAAC;QACf,iBAAO,CAAC,sBAAsB,CAAC;YAC7B,OAAO,EAAE;gBACP,oCAAuB;gBACvB,+BAAkB;aACnB;YACD,YAAY,EAAE;gBACZ,UAAU;gBACV,yBAAyB;gBACzB,sBAAsB;aACvB;SACF,CAAC,CAAC;QACH,iBAAO,CAAC,iBAAiB,EAAE,CAAC;KAC7B,CAAC,CAAC,CAAC;IAEJ,QAAQ,CAAC,aAAa,EAAE;QACtB,IAAI,OAAqC,CAAC;QAC1C,IAAI,IAAsB,CAAC;QAE3B,UAAU,CAAC;YACT,OAAO,GAAG,iBAAO,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;YAC9C,IAAI,GAAG,OAAO,CAAC,YAAY;iBACxB,KAAK,CAAC,qBAAE,CAAC,SAAS,CAAC,6BAAgB,CAAC,CAAC;iBACrC,QAAQ,CAAC,GAAG,CAAC,6BAAgB,CAAC,CAAC;SACnC,CAAC,CAAC;QAEH,QAAQ,CAAC,sBAAsB,EAAE;YAC/B,UAAU,CAAC;gBACT,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;aACvB,CAAC,CAAC;YAEH,EAAE,CAAC,kCAAkC,EAAE;gBACrC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAClC,IAAI,CAAC,MAAM,EAAE,CAAC;gBACd,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACjC,IAAI,CAAC,MAAM,EAAE,CAAC;gBACd,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aACnC,CAAC,CAAC;YAEH,EAAE,CAAC,2CAA2C,EAAE;gBAC9C,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;gBACtB,IAAI,CAAC,IAAI,EAAE,CAAC;gBACZ,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAClC,CAAC,CAAC;YAEH,EAAE,CAAC,yCAAyC,EAAE;gBAC5C,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;gBACrB,IAAI,CAAC,KAAK,EAAE,CAAC;gBACb,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aACnC,CAAC,CAAC;YAEH,EAAE,CAAC,4BAA4B,EAAE;gBAC/B,IAAI,CAAC,IAAI,EAAE,CAAC;gBACZ,OAAO,CAAC,aAAa,EAAE,CAAC;gBACxB,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;gBAC3B,IAAI,CAAC,KAAK,EAAE,CAAC;gBACb,OAAO,CAAC,aAAa,EAAE,CAAC;gBACxB,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,gBAAgB,EAAE,CAAC;aAC7C,CAAC,CAAC;YAEH,EAAE,CAAC,gEAAgE,EAAE;gBACnE,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAClC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;gBAC3B,IAAI,CAAC,KAAK,EAAE,CAAC;gBACb,OAAO,CAAC,aAAa,EAAE,CAAC;gBACxB,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,gBAAgB,EAAE,CAAC;aACjD,CAAC,CAAC;YAEH,EAAE,CAAC,6BAA6B,EAAE;gBAChC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;gBAC3B,IAAI,CAAC,IAAI,EAAE,CAAC;gBACZ,OAAO,CAAC,aAAa,EAAE,CAAC;gBACxB,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,gBAAgB,EAAE,CAAC;aAC7C,CAAC,CAAC;YAEH,EAAE,CAAC,+BAA+B,EAAE;gBAClC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;gBAC9B,IAAI,CAAC,WAAW,EAAE,CAAC;gBACnB,OAAO,CAAC,aAAa,EAAE,CAAC;gBACxB,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,gBAAgB,EAAE,CAAC;aAChD,CAAC,CAAC;SACJ,CAAC,CAAC;QAEH,QAAQ,CAAC,kBAAkB,EAAE;YAC3B,UAAU,CAAC;gBACT,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;aACtB,CAAC,CAAC;YAEH,EAAE,CAAC,sCAAsC,EAAE;gBACzC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;gBAClC,IAAI,CAAC,MAAM,EAAE,CAAC;gBACd,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aACnC,CAAC,CAAC;YAEH,EAAE,CAAC,+CAA+C,EAAE;gBAClD,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;gBACtB,IAAI,CAAC,IAAI,EAAE,CAAC;gBACZ,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aACnC,CAAC,CAAC;YAEH,EAAE,CAAC,6CAA6C,EAAE;gBAChD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;gBACrB,IAAI,CAAC,KAAK,EAAE,CAAC;gBACb,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAClC,CAAC,CAAC;YAEH,EAAE,CAAC,gCAAgC,EAAE;gBACnC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;gBAC3B,IAAI,CAAC,KAAK,EAAE,CAAC;gBACb,OAAO,CAAC,aAAa,EAAE,CAAC;gBACxB,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,gBAAgB,EAAE,CAAC;aACjD,CAAC,CAAC;YAEH,EAAE,CAAC,iCAAiC,EAAE;gBACpC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;gBAC3B,IAAI,CAAC,IAAI,EAAE,CAAC;gBACZ,OAAO,CAAC,aAAa,EAAE,CAAC;gBACxB,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,gBAAgB,EAAE,CAAC;aACjD,CAAC,CAAC;YAEH,EAAE,CAAC,+BAA+B,EAAE;gBAClC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;gBAC9B,IAAI,CAAC,WAAW,EAAE,CAAC;gBACnB,OAAO,CAAC,aAAa,EAAE,CAAC;gBACxB,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,gBAAgB,EAAE,CAAC;aAChD,CAAC,CAAC;SACJ,CAAC,CAAC;QAEH,EAAE,CAAC,+DAA+D,EAAE;YAClE,IAAM,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;YAC9C,IAAM,WAAW,GAAG,OAAO,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC;YACtD,IAAM,YAAY,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,OAAO,EAAE,SAAS,EAAE,WAAW,CAAC,CAAC;YAE/E,OAAO,CAAC,aAAa,EAAE,CAAC;YACxB,OAAO,CAAC,OAAO,EAAE,CAAC;YAElB,MAAM,CAAC,OAAO,CAAC,CAAC,gBAAgB,EAAE,CAAC;YACnC,MAAM,CAAC,WAAW,CAAC,CAAC,gBAAgB,EAAE,CAAC;YAEvC,YAAY,CAAC,WAAW,EAAE,CAAC;SAC5B,CAAC,CAAC;QAEH,EAAE,CAAC,gDAAgD,EAAE;YACnD,IAAM,WAAW,GAAG,OAAO,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC;YACtD,IAAM,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,eAAQ,EAAE,SAAS,EAAE,WAAW,CAAC,CAAC;YAE7E,OAAO,CAAC,aAAa,EAAE,CAAC;YACxB,OAAO,CAAC,OAAO,EAAE,CAAC;YAElB,MAAM,CAAC,WAAW,CAAC,CAAC,gBAAgB,EAAE,CAAC;YAEvC,YAAY,CAAC,WAAW,EAAE,CAAC;SAC5B,CAAC,CAAC;QAEH,EAAE,CAAC,gDAAgD,EAAE;YACnD,IAAM,WAAW,GAAG,OAAO,CAAC,SAAS,CAAC,cAAc,CAAC,CAAC;YACtD,IAAM,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,eAAQ,EAAE,SAAS,EAAE,WAAW,CAAC,CAAC;YAE7E,OAAO,CAAC,aAAa,EAAE,CAAC;YACxB,OAAO,CAAC,OAAO,EAAE,CAAC;YAElB,MAAM,CAAC,WAAW,CAAC,CAAC,gBAAgB,EAAE,CAAC;YAEvC,YAAY,CAAC,WAAW,EAAE,CAAC;SAC5B,CAAC,CAAC;KAEJ,CAAC,CAAC;IAEH,QAAQ,CAAC,yBAAyB,EAAE;QAClC,IAAI,OAAqC,CAAC;QAC1C,IAAI,SAA2B,CAAC;QAChC,IAAI,UAA4B,CAAC;QAEjC,UAAU,CAAC;YACT,OAAO,GAAG,iBAAO,CAAC,eAAe,CAAC,yBAAyB,CAAC,CAAC;YAC7D;;;;cAII,EAJH,iBAAS,EAAE,kBAAU,CAIjB;;SACN,CAAC,CAAC;QAEH,EAAE,CAAC,2DAA2D,EAAE;YAC9D,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACvC,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACxC,SAAS,CAAC,IAAI,EAAE,CAAC;YACjB,OAAO,CAAC,aAAa,EAAE,CAAC;YACxB,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACtC,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACxC,UAAU,CAAC,IAAI,EAAE,CAAC;YAClB,OAAO,CAAC,aAAa,EAAE,CAAC;YACxB,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACtC,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACxC,CAAC,CAAC;QAEH,EAAE,CAAC,qDAAqD,EAAE;YACxD,SAAS,CAAC,QAAQ,GAAG,IAAI,CAAC;YAC1B,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACvC,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACxC,SAAS,CAAC,IAAI,EAAE,CAAC;YACjB,OAAO,CAAC,aAAa,EAAE,CAAC;YACxB,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACvC,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACxC,UAAU,CAAC,IAAI,EAAE,CAAC;YAClB,OAAO,CAAC,aAAa,EAAE,CAAC;YACxB,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACvC,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACxC,CAAC,CAAC;KACJ,CAAC,CAAC;IAGH,QAAQ,CAAC,oBAAoB,EAAE;QAC7B,IAAI,OAAqC,CAAC;QAC1C,IAAI,SAA2B,CAAC;QAChC,IAAI,UAA4B,CAAC;QAEjC,UAAU,CAAC;YACT,OAAO,GAAG,iBAAO,CAAC,eAAe,CAAC,sBAAsB,CAAC,CAAC;YAC1D;;;;cAII,EAJH,iBAAS,EAAE,kBAAU,CAIjB;;SACN,CAAC,CAAC;QAEH,EAAE,CAAC,qDAAqD,EAAE;YACxD,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACvC,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACxC,SAAS,CAAC,IAAI,EAAE,CAAC;YACjB,OAAO,CAAC,aAAa,EAAE,CAAC;YACxB,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACtC,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACxC,UAAU,CAAC,IAAI,EAAE,CAAC;YAClB,OAAO,CAAC,aAAa,EAAE,CAAC;YACxB,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACvC,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACxC,CAAC,CAAC;KACJ,CAAC,CAAC;CACJ,CAAC,CAAC;;;;;gBAEF,gBAAS,SAAC;oBACT,QAAQ,EAAE,kDAAkD;iBAC7D;;qBAzPD;;;;;;gBA4PC,gBAAS,SAAC;oBACT,QAAQ,EAAE,kHAGT;iBACF;;oCAjQD;;;;;;gBAoQC,gBAAS,SAAC;oBACT,QAAQ,EAAE,iKAKT;iBACF;;iCA3QD","sourcesContent":["import {async, TestBed, ComponentFixture} from '@angular/core/testing';\r\nimport {Component} from '@angular/core';\r\nimport {By} from '@angular/platform-browser';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport {CdkAccordionModule, CdkAccordionItem} from './public-api';\r\n\r\ndescribe('CdkAccordionItem', () => {\r\n  beforeEach(async(() => {\r\n    TestBed.configureTestingModule({\r\n      imports: [\r\n        BrowserAnimationsModule,\r\n        CdkAccordionModule\r\n      ],\r\n      declarations: [\r\n        SingleItem,\r\n        ItemGroupWithoutAccordion,\r\n        ItemGroupWithAccordion\r\n      ],\r\n    });\r\n    TestBed.compileComponents();\r\n  }));\r\n\r\n  describe('single item', () => {\r\n    let fixture: ComponentFixture<SingleItem>;\r\n    let item: CdkAccordionItem;\r\n\r\n    beforeEach(() => {\r\n      fixture = TestBed.createComponent(SingleItem);\r\n      item = fixture.debugElement\r\n        .query(By.directive(CdkAccordionItem))\r\n        .injector.get(CdkAccordionItem);\r\n    });\r\n\r\n    describe('that is not disabled', () => {\r\n      beforeEach(() => {\r\n        item.disabled = false;\r\n      });\r\n\r\n      it('should toggle its expanded state', () => {\r\n        expect(item.expanded).toBe(false);\r\n        item.toggle();\r\n        expect(item.expanded).toBe(true);\r\n        item.toggle();\r\n        expect(item.expanded).toBe(false);\r\n      });\r\n\r\n      it('should set its expanded state to expanded', () => {\r\n        item.expanded = false;\r\n        item.open();\r\n        expect(item.expanded).toBe(true);\r\n      });\r\n\r\n      it('should set its expanded state to closed', () => {\r\n        item.expanded = true;\r\n        item.close();\r\n        expect(item.expanded).toBe(false);\r\n      });\r\n\r\n      it('should emit a closed event', () => {\r\n        item.open();\r\n        fixture.detectChanges();\r\n        spyOn(item.closed, 'emit');\r\n        item.close();\r\n        fixture.detectChanges();\r\n        expect(item.closed.emit).toHaveBeenCalled();\r\n      });\r\n\r\n      it('should not emit a closed event when the item is closed already', () => {\r\n        expect(item.expanded).toBe(false);\r\n        spyOn(item.closed, 'emit');\r\n        item.close();\r\n        fixture.detectChanges();\r\n        expect(item.closed.emit).not.toHaveBeenCalled();\r\n      });\r\n\r\n      it('should emit an opened event', () => {\r\n        spyOn(item.opened, 'emit');\r\n        item.open();\r\n        fixture.detectChanges();\r\n        expect(item.opened.emit).toHaveBeenCalled();\r\n      });\r\n\r\n      it('should emit a destroyed event', () => {\r\n        spyOn(item.destroyed, 'emit');\r\n        item.ngOnDestroy();\r\n        fixture.detectChanges();\r\n        expect(item.destroyed.emit).toHaveBeenCalled();\r\n      });\r\n    });\r\n\r\n    describe('that is disabled', () => {\r\n      beforeEach(() => {\r\n        item.disabled = true;\r\n      });\r\n\r\n      it('should not toggle its expanded state', () => {\r\n        expect(item.expanded).toBe(false);\r\n        item.toggle();\r\n        expect(item.expanded).toBe(false);\r\n      });\r\n\r\n      it('should not set its expanded state to expanded', () => {\r\n        item.expanded = false;\r\n        item.open();\r\n        expect(item.expanded).toBe(false);\r\n      });\r\n\r\n      it('should not set its expanded state to closed', () => {\r\n        item.expanded = true;\r\n        item.close();\r\n        expect(item.expanded).toBe(true);\r\n      });\r\n\r\n      it('should not emit a closed event', () => {\r\n        spyOn(item.closed, 'emit');\r\n        item.close();\r\n        fixture.detectChanges();\r\n        expect(item.closed.emit).not.toHaveBeenCalled();\r\n      });\r\n\r\n      it('should not emit an opened event', () => {\r\n        spyOn(item.opened, 'emit');\r\n        item.open();\r\n        fixture.detectChanges();\r\n        expect(item.opened.emit).not.toHaveBeenCalled();\r\n      });\r\n\r\n      it('should emit a destroyed event', () => {\r\n        spyOn(item.destroyed, 'emit');\r\n        item.ngOnDestroy();\r\n        fixture.detectChanges();\r\n        expect(item.destroyed.emit).toHaveBeenCalled();\r\n      });\r\n    });\r\n\r\n    it('should emit to and complete the `destroyed` stream on destroy', () => {\r\n      const emitSpy = jasmine.createSpy('emit spy');\r\n      const completeSpy = jasmine.createSpy('complete spy');\r\n      const subscription = item.destroyed.subscribe(emitSpy, undefined, completeSpy);\r\n\r\n      fixture.detectChanges();\r\n      fixture.destroy();\r\n\r\n      expect(emitSpy).toHaveBeenCalled();\r\n      expect(completeSpy).toHaveBeenCalled();\r\n\r\n      subscription.unsubscribe();\r\n    });\r\n\r\n    it('should complete the `opened` stream on destroy', () => {\r\n      const completeSpy = jasmine.createSpy('complete spy');\r\n      const subscription = item.opened.subscribe(() => {}, undefined, completeSpy);\r\n\r\n      fixture.detectChanges();\r\n      fixture.destroy();\r\n\r\n      expect(completeSpy).toHaveBeenCalled();\r\n\r\n      subscription.unsubscribe();\r\n    });\r\n\r\n    it('should complete the `closed` stream on destroy', () => {\r\n      const completeSpy = jasmine.createSpy('complete spy');\r\n      const subscription = item.closed.subscribe(() => {}, undefined, completeSpy);\r\n\r\n      fixture.detectChanges();\r\n      fixture.destroy();\r\n\r\n      expect(completeSpy).toHaveBeenCalled();\r\n\r\n      subscription.unsubscribe();\r\n    });\r\n\r\n  });\r\n\r\n  describe('items without accordion', () => {\r\n    let fixture: ComponentFixture<SingleItem>;\r\n    let firstItem: CdkAccordionItem;\r\n    let secondItem: CdkAccordionItem;\r\n\r\n    beforeEach(() => {\r\n      fixture = TestBed.createComponent(ItemGroupWithoutAccordion);\r\n      [firstItem, secondItem] = fixture.debugElement\r\n        .queryAll(By.directive(CdkAccordionItem))\r\n        .map(el => {\r\n          return el.injector.get(CdkAccordionItem) as CdkAccordionItem;\r\n        });\r\n    });\r\n\r\n    it('should not change expanded state based on unrelated items', () => {\r\n      expect(firstItem.expanded).toBe(false);\r\n      expect(secondItem.expanded).toBe(false);\r\n      firstItem.open();\r\n      fixture.detectChanges();\r\n      expect(firstItem.expanded).toBe(true);\r\n      expect(secondItem.expanded).toBe(false);\r\n      secondItem.open();\r\n      fixture.detectChanges();\r\n      expect(firstItem.expanded).toBe(true);\r\n      expect(secondItem.expanded).toBe(true);\r\n    });\r\n\r\n    it('should not change expanded state for disabled items', () => {\r\n      firstItem.disabled = true;\r\n      expect(firstItem.expanded).toBe(false);\r\n      expect(secondItem.expanded).toBe(false);\r\n      firstItem.open();\r\n      fixture.detectChanges();\r\n      expect(firstItem.expanded).toBe(false);\r\n      expect(secondItem.expanded).toBe(false);\r\n      secondItem.open();\r\n      fixture.detectChanges();\r\n      expect(firstItem.expanded).toBe(false);\r\n      expect(secondItem.expanded).toBe(true);\r\n    });\r\n  });\r\n\r\n\r\n  describe('items in accordion', () => {\r\n    let fixture: ComponentFixture<SingleItem>;\r\n    let firstItem: CdkAccordionItem;\r\n    let secondItem: CdkAccordionItem;\r\n\r\n    beforeEach(() => {\r\n      fixture = TestBed.createComponent(ItemGroupWithAccordion);\r\n      [firstItem, secondItem] = fixture.debugElement\r\n        .queryAll(By.directive(CdkAccordionItem))\r\n        .map(el => {\r\n          return el.injector.get(CdkAccordionItem) as CdkAccordionItem;\r\n        });\r\n    });\r\n\r\n    it('should change expanded state based on related items', () => {\r\n      expect(firstItem.expanded).toBe(false);\r\n      expect(secondItem.expanded).toBe(false);\r\n      firstItem.open();\r\n      fixture.detectChanges();\r\n      expect(firstItem.expanded).toBe(true);\r\n      expect(secondItem.expanded).toBe(false);\r\n      secondItem.open();\r\n      fixture.detectChanges();\r\n      expect(firstItem.expanded).toBe(false);\r\n      expect(secondItem.expanded).toBe(true);\r\n    });\r\n  });\r\n});\r\n\r\n@Component({\r\n  template: `<cdk-accordion-item #item1></cdk-accordion-item>`\r\n})\r\nclass SingleItem {}\r\n\r\n@Component({\r\n  template: `\r\n    <cdk-accordion-item #item1></cdk-accordion-item>\r\n    <cdk-accordion-item #item2></cdk-accordion-item>\r\n  `\r\n})\r\nclass ItemGroupWithoutAccordion {}\r\n\r\n@Component({\r\n  template: `\r\n    <cdk-accordion>\r\n      <cdk-accordion-item #item1></cdk-accordion-item>\r\n      <cdk-accordion-item #item2></cdk-accordion-item>\r\n    </cdk-accordion>\r\n  `\r\n})\r\nclass ItemGroupWithAccordion {}\r\n"]}