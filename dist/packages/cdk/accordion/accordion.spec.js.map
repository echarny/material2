{"version":3,"file":"accordion.spec.js","sourceRoot":"","sources":["../../../../src/cdk/accordion/accordion.spec.ts"],"names":[],"mappings":";;AAAA,iDAAqD;AACrD,sCAAmD;AACnD,8DAA6C;AAC7C,mEAA6E;AAC7E,2CAAkE;AAElE,QAAQ,CAAC,cAAc,EAAE;IACvB,UAAU,CAAC,eAAK,CAAC;QACf,iBAAO,CAAC,sBAAsB,CAAC;YAC7B,OAAO,EAAE;gBACP,oCAAuB;gBACvB,+BAAkB;aACnB;YACD,YAAY,EAAE;gBACZ,UAAU;gBACV,WAAW;aACZ;SACF,CAAC,CAAC;QACH,iBAAO,CAAC,iBAAiB,EAAE,CAAC;KAC7B,CAAC,CAAC,CAAC;IAEJ,EAAE,CAAC,mDAAmD,EAAE;QACtD,IAAM,OAAO,GAAG,iBAAO,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;QACpD;;;;YAAO,kBAAU,EAAE,mBAAW,CAIzB;QAEL,UAAU,CAAC,IAAI,EAAE,CAAC;QAClB,OAAO,CAAC,aAAa,EAAE,CAAC;QACxB,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,UAAU,EAAE,CAAC;QACzC,MAAM,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,SAAS,EAAE,CAAC;QAEzC,WAAW,CAAC,IAAI,EAAE,CAAC;QACnB,OAAO,CAAC,aAAa,EAAE,CAAC;QACxB,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,SAAS,EAAE,CAAC;QACxC,MAAM,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,UAAU,EAAE,CAAC;KAC3C,CAAC,CAAC;IAEH,EAAE,CAAC,2DAA2D,EAAE;QAC9D,IAAM,OAAO,GAAG,iBAAO,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;QACpD;;;;YAAO,kBAAU,EAAE,mBAAW,CAIzB;QAEL,OAAO,CAAC,iBAAiB,CAAC,KAAK,GAAG,IAAI,CAAC;QACvC,OAAO,CAAC,aAAa,EAAE,CAAC;QACxB,UAAU,CAAC,QAAQ,GAAG,IAAI,CAAC;QAC3B,WAAW,CAAC,QAAQ,GAAG,IAAI,CAAC;QAC5B,OAAO,CAAC,aAAa,EAAE,CAAC;QACxB,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,UAAU,EAAE,CAAC;QACzC,MAAM,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,UAAU,EAAE,CAAC;KAC3C,CAAC,CAAC;IAEH,EAAE,CAAC,wDAAwD,EAAE;QAC3D,IAAM,OAAO,GAAG,iBAAO,CAAC,eAAe,CAAC,WAAW,CAAC,CAAC;QACrD,IAAM,SAAS,GAAG,OAAO,CAAC,iBAAiB,CAAC,SAAS,CAAC;QACtD,IAAM,SAAS,GAAG,OAAO,CAAC,iBAAiB,CAAC,SAAS,CAAC;QAEtD,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;KAC3D,CAAC,CAAC;CACJ,CAAC,CAAC;;;qBAUgB,KAAK;;;gBARvB,gBAAS,SAAC,EAAC,QAAQ,EAAE,uKAIH,EAAC;;;;0BAEjB,gBAAS,SAAC,OAAO;0BACjB,gBAAS,SAAC,OAAO;;qBAzEpB;;;;;;gBA8EC,gBAAS,SAAC,EAAC,QAAQ,EAAE,+MAKH,EAAC;;;;8BAEjB,gBAAS,SAAC,WAAW;8BACrB,gBAAS,SAAC,WAAW;;sBAtFxB","sourcesContent":["import {async, TestBed} from '@angular/core/testing';\r\nimport {Component, ViewChild} from '@angular/core';\r\nimport {By} from '@angular/platform-browser';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport {CdkAccordionModule, CdkAccordionItem} from './public-api';\r\n\r\ndescribe('CdkAccordion', () => {\r\n  beforeEach(async(() => {\r\n    TestBed.configureTestingModule({\r\n      imports: [\r\n        BrowserAnimationsModule,\r\n        CdkAccordionModule\r\n      ],\r\n      declarations: [\r\n        SetOfItems,\r\n        NestedItems,\r\n      ],\r\n    });\r\n    TestBed.compileComponents();\r\n  }));\r\n\r\n  it('should ensure only one item is expanded at a time', () => {\r\n    const fixture = TestBed.createComponent(SetOfItems);\r\n    const [firstPanel, secondPanel] = fixture.debugElement\r\n      .queryAll(By.directive(CdkAccordionItem))\r\n      .map(el => {\r\n        return el.injector.get(CdkAccordionItem) as CdkAccordionItem;\r\n      });\r\n\r\n    firstPanel.open();\r\n    fixture.detectChanges();\r\n    expect(firstPanel.expanded).toBeTruthy();\r\n    expect(secondPanel.expanded).toBeFalsy();\r\n\r\n    secondPanel.open();\r\n    fixture.detectChanges();\r\n    expect(firstPanel.expanded).toBeFalsy();\r\n    expect(secondPanel.expanded).toBeTruthy();\r\n  });\r\n\r\n  it('should allow multiple items to be expanded simultaneously', () => {\r\n    const fixture = TestBed.createComponent(SetOfItems);\r\n    const [firstPanel, secondPanel] = fixture.debugElement\r\n      .queryAll(By.directive(CdkAccordionItem))\r\n      .map(el => {\r\n        return el.injector.get(CdkAccordionItem) as CdkAccordionItem;\r\n      });\r\n\r\n    fixture.componentInstance.multi = true;\r\n    fixture.detectChanges();\r\n    firstPanel.expanded = true;\r\n    secondPanel.expanded = true;\r\n    fixture.detectChanges();\r\n    expect(firstPanel.expanded).toBeTruthy();\r\n    expect(secondPanel.expanded).toBeTruthy();\r\n  });\r\n\r\n  it('should not register nested items to the same accordion', () => {\r\n    const fixture = TestBed.createComponent(NestedItems);\r\n    const innerItem = fixture.componentInstance.innerItem;\r\n    const outerItem = fixture.componentInstance.outerItem;\r\n\r\n    expect(innerItem.accordion).not.toBe(outerItem.accordion);\r\n  });\r\n});\r\n\r\n@Component({template: `\r\n  <cdk-accordion [multi]=\"multi\">\r\n    <cdk-accordion-item #item1></cdk-accordion-item>\r\n    <cdk-accordion-item #item2></cdk-accordion-item>\r\n  </cdk-accordion>`})\r\nclass SetOfItems {\r\n  @ViewChild('item1') item1;\r\n  @ViewChild('item2') item2;\r\n  multi: boolean = false;\r\n}\r\n\r\n\r\n@Component({template: `\r\n  <cdk-accordion>\r\n    <cdk-accordion-item #outerItem=\"cdkAccordionItem\">\r\n      <cdk-accordion-item #innerItem=\"cdkAccordionItem\"></cdk-accordion-item>\r\n    </cdk-accordion-item>\r\n  </cdk-accordion>`})\r\nclass NestedItems {\r\n  @ViewChild('outerItem') outerItem: CdkAccordionItem;\r\n  @ViewChild('innerItem') innerItem: CdkAccordionItem;\r\n}\r\n"]}