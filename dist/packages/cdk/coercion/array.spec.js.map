{"version":3,"file":"array.spec.js","sourceRoot":"","sources":["../../../../src/cdk/coercion/array.spec.ts"],"names":[],"mappings":";;AAAA,iCAAoC;AAEpC,QAAQ,CAAC,aAAa,EAAE;IAEtB,EAAE,CAAC,kCAAkC,EAAE;QACrC,IAAI,SAAS,GAAG,eAAe,CAAC;QAChC,MAAM,CAAC,mBAAW,CAAC,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;KACrD,CAAC,CAAC;IAEH,EAAE,CAAC,kCAAkC,EAAE;QACrC,IAAI,SAAS,GAAG,EAAE,CAAC;QACnB,MAAM,CAAC,mBAAW,CAAC,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;KACrD,CAAC,CAAC;IAEH,EAAE,CAAC,mCAAmC,EAAE;QACtC,IAAI,SAAS,GAAG,EAAE,SAAS,EAAE,QAAQ,EAAE,CAAC;QACxC,MAAM,CAAC,mBAAW,CAAC,SAAS,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;KACrD,CAAC,CAAC;IAEH,EAAE,CAAC,qCAAqC,EAAE;QACxC,IAAI,OAAO,GAAG,IAAI,CAAC;QACnB,MAAM,CAAC,mBAAW,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;KACjD,CAAC,CAAC;IAEH,EAAE,CAAC,4CAA4C,EAAE;QAC/C,IAAI,YAAY,GAAG,SAAS,CAAC;QAC7B,MAAM,CAAC,mBAAW,CAAC,YAAY,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;KAC3D,CAAC,CAAC;IAEH,EAAE,CAAC,sCAAsC,EAAE;QACzC,IAAI,QAAQ,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;QACzB,MAAM,CAAC,mBAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KAC9C,CAAC,CAAC;CAEJ,CAAC,CAAC","sourcesContent":["import {coerceArray} from './array';\r\n\r\ndescribe('coerceArray', () => {\r\n\r\n  it('should wrap a string in an array', () => {\r\n    let stringVal = 'just a string';\r\n    expect(coerceArray(stringVal)).toEqual([stringVal]);\r\n  });\r\n\r\n  it('should wrap a number in an array', () => {\r\n    let numberVal = 42;\r\n    expect(coerceArray(numberVal)).toEqual([numberVal]);\r\n  });\r\n\r\n  it('should wrap an object in an array', () => {\r\n    let objectVal = { something: 'clever' };\r\n    expect(coerceArray(objectVal)).toEqual([objectVal]);\r\n  });\r\n\r\n  it('should wrap a null vall in an array', () => {\r\n    let nullVal = null;\r\n    expect(coerceArray(nullVal)).toEqual([nullVal]);\r\n  });\r\n\r\n  it('should wrap an undefined value in an array', () => {\r\n    let undefinedVal = undefined;\r\n    expect(coerceArray(undefinedVal)).toEqual([undefinedVal]);\r\n  });\r\n\r\n  it('should not wrap an array in an array', () => {\r\n    let arrayVal = [1, 2, 3];\r\n    expect(coerceArray(arrayVal)).toBe(arrayVal);\r\n  });\r\n\r\n});\r\n"]}