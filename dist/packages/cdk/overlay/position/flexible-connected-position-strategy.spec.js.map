{"version":3,"file":"flexible-connected-position-strategy.spec.js","sourceRoot":"","sources":["../../../../../src/cdk/overlay/position/flexible-connected-position-strategy.spec.ts"],"names":[],"mappings":";;AAAA,8CAAkE;AAClE,oDAAsE;AACtE,gDAAgD;AAChD,sCAAsE;AACtE,iDAAsD;AAEtD,4CAAmC;AACnC,kCASkB;;AAIlB,IAAM,cAAc,GAAG,EAAE,CAAC;AAC1B,IAAM,aAAa,GAAG,EAAE,CAAC;AAEzB,QAAQ,CAAC,mCAAmC,EAAE;IAC5C,IAAI,OAAgB,CAAC;IACrB,IAAI,gBAAkC,CAAC;IACvC,IAAI,IAAgB,CAAC;IACrB,IAAI,UAAsB,CAAC;IAC3B,IAAI,QAAuB,CAAC;IAE5B,UAAU,CAAC;QACT,iBAAO,CAAC,sBAAsB,CAAC;YAC7B,OAAO,EAAE,CAAC,2BAAe,EAAE,qBAAa,EAAE,iBAAiB,CAAC;YAC5D,SAAS,EAAE,CAAC,EAAC,OAAO,EAAE,aAAM,EAAE,UAAU,EAAE,cAAM,OAAA,IAAI,GAAG,IAAI,oBAAU,EAAE,EAAvB,CAAuB,EAAC,CAAC;SAC1E,CAAC,CAAC;QAEH,gBAAM,CAAC,CAAC,eAAO,EAAE,wBAAgB,EAAE,qBAAa,CAAC,EAC/C,UAAC,CAAU,EAAE,EAAoB,EAAE,CAAgB;YACjD,OAAO,GAAG,CAAC,CAAC;YACZ,gBAAgB,GAAG,EAAE,CAAC;YACtB,QAAQ,GAAG,CAAC,CAAC;SACd,CAAC,EAAE,CAAC;KACR,CAAC,CAAC;IAEH,SAAS,CAAC;QACR,gBAAgB,CAAC,WAAW,EAAE,CAAC;QAE/B,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;YACf,UAAU,CAAC,OAAO,EAAE,CAAC;SACtB;KACF,CAAC,CAAC;IAEH,uBAAuB,MAAqB;QAC1C,UAAU,GAAG,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QACpC,UAAU,CAAC,MAAM,CAAC,IAAI,wBAAe,CAAC,WAAW,CAAC,CAAC,CAAC;QACpD,IAAI,CAAC,gBAAgB,EAAE,CAAC;KACzB;IAED,EAAE,CAAC,uEAAuE,EAAE;QAC1E,IAAM,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAC7C,IAAM,gBAAgB,GAAG,OAAO,CAAC,QAAQ,EAAE;aACtC,mBAAmB,CAAC,MAAM,CAAC;aAC3B,aAAa,CAAC,CAAC;gBACd,QAAQ,EAAE,OAAO;gBACjB,QAAQ,EAAE,KAAK;gBACf,OAAO,EAAE,OAAO;gBAChB,OAAO,EAAE,QAAQ;aAClB,CAAC,CAAC,CAAC;;QAGR,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;QAClC,aAAa,CAAC,EAAC,gBAAgB,kBAAA,EAAC,CAAC,CAAC;QAElC,MAAM,CAAC,cAAM,OAAA,aAAa,CAAC,EAAC,gBAAgB,kBAAA,EAAC,CAAC,EAAjC,CAAiC,CAAC,CAAC,OAAO,EAAE,CAAC;QAE1D,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;KACnC,CAAC,CAAC;IAEH,EAAE,CAAC,4DAA4D,EAAE;QAC/D,IAAM,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAC7C,IAAM,gBAAgB,GAAG,OAAO,CAAC,QAAQ,EAAE;aACtC,mBAAmB,CAAC,MAAM,CAAC;aAC3B,aAAa,CAAC,CAAC;gBACd,QAAQ,EAAE,OAAO;gBACjB,QAAQ,EAAE,KAAK;gBACf,OAAO,EAAE,OAAO;gBAChB,OAAO,EAAE,QAAQ;aAClB,CAAC,CAAC,CAAC;;QAGR,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;QAClC,aAAa,CAAC,EAAC,gBAAgB,kBAAA,EAAC,CAAC,CAAC;QAClC,UAAU,CAAC,OAAO,EAAE,CAAC;QAErB,MAAM,CAAC,cAAM,OAAA,gBAAgB,CAAC,KAAK,EAAE,EAAxB,CAAwB,CAAC,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;QAErD,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;KACnC,CAAC,CAAC;IAEH,EAAE,CAAC,iFAAiF,EAAE;QACpF,IAAM,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAC7C,IAAM,gBAAgB,GAAG,OAAO,CAAC,QAAQ,EAAE;aACtC,mBAAmB,CAAC,MAAM,CAAC;aAC3B,aAAa,CAAC,CAAC;gBACd,QAAQ,EAAE,OAAO;gBACjB,QAAQ,EAAE,KAAK;gBACf,OAAO,EAAE,OAAO;gBAChB,OAAO,EAAE,QAAQ;aAClB,CAAC,CAAC,CAAC;;QAGR,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;QAClC,aAAa,CAAC,EAAC,gBAAgB,kBAAA,EAAC,CAAC,CAAC;QAClC,UAAU,CAAC,OAAO,EAAE,CAAC;QAErB,MAAM,CAAC,cAAM,OAAA,gBAAgB,CAAC,mBAAmB,EAAE,EAAtC,CAAsC,CAAC,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;QAEnE,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;KACnC,CAAC,CAAC;IAEH,EAAE,CAAC,qEAAqE,EAAE;QACxE,IAAM,aAAa,GAAG,4BAA4B,EAAE,CAAC;QACrD,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC;;QAGzC,aAAa,CAAC,KAAK,CAAC,GAAG,GAAG,OAAO,CAAC;QAClC,aAAa,CAAC,KAAK,CAAC,IAAI,GAAG,MAAM,CAAC;;;QAIlC,gBAAgB,CAAC,mBAAmB,EAAE,CAAC,KAAK,CAAC,GAAG,GAAG,QAAQ,CAAC;QAE5D,aAAa,CAAC;YACZ,gBAAgB,EAAE,OAAO,CAAC,QAAQ,EAAE;iBACjC,mBAAmB,CAAC,aAAa,CAAC;iBAClC,sBAAsB,CAAC,KAAK,CAAC;iBAC7B,QAAQ,CAAC,KAAK,CAAC;iBACf,aAAa,CAAC,CAAC;oBACd,OAAO,EAAE,OAAO;oBAChB,OAAO,EAAE,QAAQ;oBACjB,QAAQ,EAAE,OAAO;oBACjB,QAAQ,EAAE,KAAK;iBAChB,CAAC,CAAC;SACN,CAAC,CAAC;QAEH,IAAM,UAAU,GAAG,aAAa,CAAC,qBAAqB,EAAE,CAAC;QACzD,IAAM,WAAW,GAAG,UAAU,CAAC,cAAc,CAAC,qBAAqB,EAAE,CAAC;QAEtE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;QAExE,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC;KAC1C,CAAC,CAAC;IAEH,QAAQ,CAAC,yCAAyC,EAAE;QAClD,IAAM,aAAa,GAAG,cAAc,CAAC;QACrC,IAAM,YAAY,GAAG,aAAa,CAAC;QACnC,IAAM,cAAc,GAAG,cAAc,CAAC;QACtC,IAAM,aAAa,GAAG,aAAa,CAAC;QAEpC,IAAI,aAA0B,CAAC;QAC/B,IAAI,gBAAmD,CAAC;QAExD,UAAU,CAAC;;YAET,aAAa,GAAG,4BAA4B,EAAE,CAAC;YAC/C,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC;YACzC,gBAAgB,GAAG,OAAO,CAAC,QAAQ,EAAE;iBAChC,mBAAmB,CAAC,aAAa,CAAC;iBAClC,sBAAsB,CAAC,KAAK,CAAC;iBAC7B,QAAQ,CAAC,KAAK,CAAC,CAAC;SACtB,CAAC,CAAC;QAEH,SAAS,CAAC;YACR,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC;SAC1C,CAAC,CAAC;QAEH,QAAQ,CAAC,2CAA2C,EAAE;;;;YAIpD,IAAM,WAAW,GAAG,GAAG,CAAC;YACxB,IAAM,UAAU,GAAG,GAAG,CAAC;YAEvB,UAAU,CAAC;gBACT,aAAa,CAAC,KAAK,CAAC,IAAI,GAAM,WAAW,OAAI,CAAC;gBAC9C,aAAa,CAAC,KAAK,CAAC,GAAG,GAAM,UAAU,OAAI,CAAC;aAC7C,CAAC,CAAC;;YAGH,sBAAsB,EAAE,CAAC;SAC1B,CAAC,CAAC;QAEH,QAAQ,CAAC,eAAe,EAAE;;YAExB,IAAM,WAAW,GAAG,IAAI,CAAC;YACzB,IAAM,UAAU,GAAG,IAAI,CAAC;;YAGxB,IAAI,gBAAgB,GAAgB,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YAClE,gBAAgB,CAAC,KAAK,CAAC,KAAK,GAAG,QAAQ,CAAC;YACxC,gBAAgB,CAAC,KAAK,CAAC,MAAM,GAAG,QAAQ,CAAC;YAEzC,UAAU,CAAC;;;gBAGT,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,CAAC;gBAC5C,MAAM,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;gBAE1B,aAAa,CAAC,KAAK,CAAC,GAAG,GAAM,UAAU,OAAI,CAAC;gBAC5C,aAAa,CAAC,KAAK,CAAC,IAAI,GAAM,WAAW,OAAI,CAAC;aAC/C,CAAC,CAAC;YAEH,SAAS,CAAC;gBACR,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;gBACpB,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,CAAC;aAC7C,CAAC,CAAC;;YAGH,sBAAsB,EAAE,CAAC;SAC1B,CAAC,CAAC;QAEH,QAAQ,CAAC,yBAAyB,EAAE;YAClC,EAAE,CAAC,wEAAwE,EAAE;gBAC3E,aAAa,CAAC,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC;gBAChC,aAAa,CAAC,KAAK,CAAC,IAAI,GAAG,OAAO,CAAC;gBACnC,IAAM,UAAU,GAAG,aAAa,CAAC,qBAAqB,EAAE,CAAC;gBAEzD,gBAAgB,CAAC,aAAa,CAAC;oBAC7B;wBACE,OAAO,EAAE,KAAK;wBACd,OAAO,EAAE,KAAK;wBACd,QAAQ,EAAE,KAAK;wBACf,QAAQ,EAAE,QAAQ;qBACnB;oBACD;wBACE,OAAO,EAAE,OAAO;wBAChB,OAAO,EAAE,QAAQ;wBACjB,QAAQ,EAAE,OAAO;wBACjB,QAAQ,EAAE,KAAK;qBAChB;iBACF,CAAC,CAAC;gBAEH,aAAa,CAAC,EAAC,gBAAgB,kBAAA,EAAC,CAAC,CAAC;gBAElC,IAAM,WAAW,GAAG,UAAU,CAAC,cAAc,CAAC,qBAAqB,EAAE,CAAC;gBACtE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;gBACxE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;aACxE,CAAC,CAAC;YAEH,EAAE,CAAC,yEAAyE,EAAE;gBAC5E,aAAa,CAAC,KAAK,CAAC,GAAG,GAAG,OAAO,CAAC;gBAClC,aAAa,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC;gBAEjC,IAAM,UAAU,GAAG,aAAa,CAAC,qBAAqB,EAAE,CAAC;gBACzD,IAAM,aAAa,GAAG,UAAU,CAAC,GAAG,GAAG,CAAC,aAAa,GAAG,CAAC,CAAC,CAAC;gBAE3D,gBAAgB,CAAC,aAAa,CAAC;oBAC7B;wBACE,OAAO,EAAE,OAAO;wBAChB,OAAO,EAAE,QAAQ;wBACjB,QAAQ,EAAE,KAAK;wBACf,QAAQ,EAAE,KAAK;qBAChB;oBACD;wBACE,OAAO,EAAE,KAAK;wBACd,OAAO,EAAE,QAAQ;wBACjB,QAAQ,EAAE,OAAO;wBACjB,QAAQ,EAAE,QAAQ;qBACnB;iBACF,CAAC,CAAC;gBAEH,aAAa,CAAC,EAAC,gBAAgB,kBAAA,EAAC,CAAC,CAAC;gBAElC,IAAM,WAAW,GAAG,UAAU,CAAC,cAAc,CAAC,qBAAqB,EAAE,CAAC;gBACtE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,GAAG,CAAC,cAAc,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC3F,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;aACzE,CAAC,CAAC;YAEH,EAAE,CAAC,2EAA2E,EAAE;gBAC9E,aAAa,CAAC,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC;gBACpC,aAAa,CAAC,KAAK,CAAC,IAAI,GAAG,OAAO,CAAC;gBAEnC,IAAM,UAAU,GAAG,aAAa,CAAC,qBAAqB,EAAE,CAAC;gBAEzD,gBAAgB,CAAC,aAAa,CAAC;oBAC7B;wBACE,OAAO,EAAE,OAAO;wBAChB,OAAO,EAAE,QAAQ;wBACjB,QAAQ,EAAE,OAAO;wBACjB,QAAQ,EAAE,KAAK;qBAChB;oBACD;wBACE,OAAO,EAAE,KAAK;wBACd,OAAO,EAAE,KAAK;wBACd,QAAQ,EAAE,KAAK;wBACf,QAAQ,EAAE,QAAQ;qBACnB;iBACF,CAAC,CAAC;gBAEH,aAAa,CAAC,EAAC,gBAAgB,kBAAA,EAAC,CAAC,CAAC;gBAElC,IAAM,WAAW,GAAG,UAAU,CAAC,cAAc,CAAC,qBAAqB,EAAE,CAAC;gBACtE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC;gBACxE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;aAC1E,CAAC,CAAC;YAEH,EAAE,CAAC,0EAA0E,EAAE;gBAC7E,aAAa,CAAC,KAAK,CAAC,GAAG,GAAG,OAAO,CAAC;gBAClC,aAAa,CAAC,KAAK,CAAC,KAAK,GAAG,MAAM,CAAC;gBAEnC,IAAM,UAAU,GAAG,aAAa,CAAC,qBAAqB,EAAE,CAAC;gBAEzD,gBAAgB,CAAC,aAAa,CAAC;oBAC7B;wBACE,OAAO,EAAE,KAAK;wBACd,OAAO,EAAE,QAAQ;wBACjB,QAAQ,EAAE,OAAO;wBACjB,QAAQ,EAAE,QAAQ;qBACnB;oBACD;wBACE,OAAO,EAAE,OAAO;wBAChB,OAAO,EAAE,QAAQ;wBACjB,QAAQ,EAAE,KAAK;wBACf,QAAQ,EAAE,KAAK;qBAChB;iBACF,CAAC,CAAC;gBAEH,aAAa,CAAC,EAAC,gBAAgB,kBAAA,EAAC,CAAC,CAAC;gBAElC,IAAM,WAAW,GAAG,UAAU,CAAC,cAAc,CAAC,qBAAqB,EAAE,CAAC;gBACtE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;gBACxE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;aACzE,CAAC,CAAC;YAEH,EAAE,CAAC,6EAA6E,EAAE;;gBAEhF,aAAa,CAAC,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC;gBAEpC,IAAM,UAAU,GAAG,aAAa,CAAC,qBAAqB,EAAE,CAAC;gBAEzD,gBAAgB,CAAC,aAAa,CAAC;oBAC7B;wBACE,OAAO,EAAE,OAAO;wBAChB,OAAO,EAAE,QAAQ;wBACjB,QAAQ,EAAE,OAAO;wBACjB,QAAQ,EAAE,KAAK;qBAChB;oBACD;wBACE,OAAO,EAAE,OAAO;wBAChB,OAAO,EAAE,KAAK;wBACd,QAAQ,EAAE,OAAO;wBACjB,QAAQ,EAAE,QAAQ;qBACnB;iBACF,CAAC,CAAC;;gBAGH,aAAa,CAAC,EAAC,gBAAgB,kBAAA,EAAC,CAAC,CAAC;;gBAGlC,UAAU,CAAC,cAAc,CAAC,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC;;gBAGhD,gBAAgB,CAAC,mBAAmB,EAAE,CAAC;gBAEvC,IAAM,WAAW,GAAG,UAAU,CAAC,cAAc,CAAC,qBAAqB,EAAE,CAAC;gBACtE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,EAClE,4EAA4E,CAAC,CAAC;aACnF,CAAC,CAAC;YAEH,EAAE,CAAC,6EAA6E,EAAE;;gBAEhF,aAAa,CAAC,KAAK,CAAC,MAAM,GAAG,QAAQ,CAAC;gBACtC,aAAa,CAAC,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC;gBAE9B,IAAM,UAAU,GAAG,aAAa,CAAC,qBAAqB,EAAE,CAAC;gBAEzD,gBAAgB,CAAC,aAAa,CAAC,CAAC;wBAC9B,OAAO,EAAE,OAAO;wBAChB,OAAO,EAAE,KAAK;wBACd,QAAQ,EAAE,OAAO;wBACjB,QAAQ,EAAE,QAAQ;qBACnB,CAAC,CAAC,CAAC;gBAEJ,aAAa,CAAC,EAAC,gBAAgB,kBAAA,EAAC,CAAC,CAAC;gBAClC,gBAAgB,CAAC,mBAAmB,EAAE,CAAC;gBAEvC,IAAM,WAAW,GAAG,UAAU,CAAC,cAAc,CAAC,qBAAqB,EAAE,CAAC;gBACtE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,EAClE,2EAA2E,CAAC,CAAC;aAClF,CAAC,CAAC;YAEH,EAAE,CAAC,2CAA2C,EAAE;gBAC9C,IAAM,UAAU,GAAG,aAAa,CAAC,qBAAqB,EAAE,CAAC;gBAEzD,gBAAgB,CAAC,aAAa,CAAC,CAAC;wBAC9B,OAAO,EAAE,OAAO;wBAChB,OAAO,EAAE,QAAQ;wBACjB,QAAQ,EAAE,OAAO;wBACjB,QAAQ,EAAE,KAAK;qBAChB,CAAC,CAAC,CAAC;gBAEJ,aAAa,CAAC;oBACZ,gBAAgB,kBAAA;oBAChB,SAAS,EAAE,KAAK;iBACjB,CAAC,CAAC;;gBAGH,UAAU,CAAC,cAAc,CAAC,KAAK,CAAC,KAAK,GAAG,OAAO,CAAC;gBAEhD,IAAM,WAAW,GAAG,UAAU,CAAC,cAAc,CAAC,qBAAqB,EAAE,CAAC;gBACtE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;gBACxE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;aAC1E,CAAC,CAAC;YAEH,EAAE,CAAC,oDAAoD,EAAE;gBACvD,IAAM,UAAU,GAAG,aAAa,CAAC,qBAAqB,EAAE,CAAC;gBAEzD,gBAAgB,CAAC,aAAa,CAAC,CAAC;wBAC9B,OAAO,EAAE,OAAO;wBAChB,OAAO,EAAE,KAAK;wBACd,QAAQ,EAAE,OAAO;wBACjB,QAAQ,EAAE,KAAK;wBACf,OAAO,EAAE,EAAE;qBACZ,CAAC,CAAC,CAAC;gBAEJ,aAAa,CAAC,EAAC,gBAAgB,kBAAA,EAAC,CAAC,CAAC;gBAElC,IAAM,WAAW,GAAG,UAAU,CAAC,cAAc,CAAC,qBAAqB,EAAE,CAAC;gBACtE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC;gBACrE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,GAAG,EAAE,CAAC,CAAC,CAAC;aAC7E,CAAC,CAAC;YAEH,EAAE,CAAC,4CAA4C,EAAE;gBAC/C,IAAM,UAAU,GAAG,aAAa,CAAC,qBAAqB,EAAE,CAAC;gBAEzD,gBAAgB,CAAC,kBAAkB,CAAC,EAAE,CAAC,CAAC,aAAa,CAAC,CAAC;wBACrD,OAAO,EAAE,OAAO;wBAChB,OAAO,EAAE,KAAK;wBACd,QAAQ,EAAE,OAAO;wBACjB,QAAQ,EAAE,KAAK;qBAChB,CAAC,CAAC,CAAC;gBAEJ,aAAa,CAAC,EAAC,gBAAgB,kBAAA,EAAC,CAAC,CAAC;gBAElC,IAAM,WAAW,GAAG,UAAU,CAAC,cAAc,CAAC,qBAAqB,EAAE,CAAC;gBACtE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC;gBACrE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,GAAG,EAAE,CAAC,CAAC,CAAC;aAC7E,CAAC,CAAC;YAEH,EAAE,CAAC,6EAA6E,EAAE;gBAChF,IAAM,UAAU,GAAG,aAAa,CAAC,qBAAqB,EAAE,CAAC;gBAEzD,gBAAgB,CAAC,kBAAkB,CAAC,EAAE,CAAC,CAAC,aAAa,CAAC,CAAC;wBACrD,OAAO,EAAE,OAAO;wBAChB,OAAO,EAAE,KAAK;wBACd,QAAQ,EAAE,OAAO;wBACjB,QAAQ,EAAE,KAAK;wBACf,OAAO,EAAE,EAAE;qBACZ,CAAC,CAAC,CAAC;gBAEJ,aAAa,CAAC,EAAC,gBAAgB,kBAAA,EAAC,CAAC,CAAC;gBAElC,IAAM,WAAW,GAAG,UAAU,CAAC,cAAc,CAAC,qBAAqB,EAAE,CAAC;gBACtE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC;gBACrE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,GAAG,EAAE,CAAC,CAAC,CAAC;aAC7E,CAAC,CAAC;YAEH,EAAE,CAAC,oDAAoD,EAAE;gBACvD,IAAM,UAAU,GAAG,aAAa,CAAC,qBAAqB,EAAE,CAAC;gBAEzD,gBAAgB,CAAC,aAAa,CAAC,CAAC;wBAC9B,OAAO,EAAE,OAAO;wBAChB,OAAO,EAAE,KAAK;wBACd,QAAQ,EAAE,OAAO;wBACjB,QAAQ,EAAE,KAAK;wBACf,OAAO,EAAE,EAAE;qBACZ,CAAC,CAAC,CAAC;gBAEJ,aAAa,CAAC,EAAC,gBAAgB,kBAAA,EAAC,CAAC,CAAC;gBAElC,IAAM,WAAW,GAAG,UAAU,CAAC,cAAc,CAAC,qBAAqB,EAAE,CAAC;gBACtE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC;gBAC1E,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;aACxE,CAAC,CAAC;YAEH,EAAE,CAAC,4CAA4C,EAAE;gBAC/C,IAAM,UAAU,GAAG,aAAa,CAAC,qBAAqB,EAAE,CAAC;gBAEzD,gBAAgB,CAAC,kBAAkB,CAAC,EAAE,CAAC,CAAC,aAAa,CAAC,CAAC;wBACrD,OAAO,EAAE,OAAO;wBAChB,OAAO,EAAE,KAAK;wBACd,QAAQ,EAAE,OAAO;wBACjB,QAAQ,EAAE,KAAK;qBAChB,CAAC,CAAC,CAAC;gBAEJ,aAAa,CAAC,EAAC,gBAAgB,kBAAA,EAAC,CAAC,CAAC;gBAElC,IAAM,WAAW,GAAG,UAAU,CAAC,cAAc,CAAC,qBAAqB,EAAE,CAAC;gBACtE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC;gBAC1E,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;aACxE,CAAC,CAAC;YAEH,EAAE,CAAC,6EAA6E,EAAE;gBAChF,IAAM,UAAU,GAAG,aAAa,CAAC,qBAAqB,EAAE,CAAC;gBAEzD,gBAAgB,CAAC,kBAAkB,CAAC,EAAE,CAAC,CAAC,aAAa,CAAC,CAAC;wBACrD,OAAO,EAAE,OAAO;wBAChB,OAAO,EAAE,KAAK;wBACd,QAAQ,EAAE,OAAO;wBACjB,QAAQ,EAAE,KAAK;wBACf,OAAO,EAAE,EAAE;qBACZ,CAAC,CAAC,CAAC;gBAEJ,aAAa,CAAC,EAAC,gBAAgB,kBAAA,EAAC,CAAC,CAAC;gBAElC,IAAM,WAAW,GAAG,UAAU,CAAC,cAAc,CAAC,qBAAqB,EAAE,CAAC;gBACtE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC;gBAC1E,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;aACxE,CAAC,CAAC;YAEH,EAAE,CAAC,sEAAsE,EAAE;gBACzE,aAAa,CAAC,KAAK,CAAC,MAAM,GAAG,GAAG,CAAC;gBACjC,aAAa,CAAC,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC;gBACjC,aAAa,CAAC,KAAK,CAAC,QAAQ,GAAG,OAAO,CAAC;gBAEvC,IAAM,UAAU,GAAG,aAAa,CAAC,qBAAqB,EAAE,CAAC;gBAEzD,gBAAgB,CAAC,aAAa,CAAC;oBAC7B;wBACE,OAAO,EAAE,OAAO;wBAChB,OAAO,EAAE,KAAK;wBACd,QAAQ,EAAE,OAAO;wBACjB,QAAQ,EAAE,KAAK;wBACf,OAAO,EAAE,EAAE;wBACX,OAAO,EAAE,EAAE;qBACZ;oBACD;wBACE,OAAO,EAAE,OAAO;wBAChB,OAAO,EAAE,KAAK;wBACd,QAAQ,EAAE,OAAO;wBACjB,QAAQ,EAAE,QAAQ;wBAClB,OAAO,EAAE,CAAC,GAAG;wBACb,OAAO,EAAE,CAAC,GAAG;qBACd;iBACF,CAAC,CAAC;gBAEH,aAAa,CAAC,EAAC,gBAAgB,kBAAA,EAAC,CAAC,CAAC;gBAElC,IAAM,WAAW,GAAG,UAAU,CAAC,cAAc,CAAC,qBAAqB,EAAE,CAAC;gBACtE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC;gBAC9E,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC;aAC9E,CAAC,CAAC;SAEJ,CAAC,CAAC;QAEH,QAAQ,CAAC,uBAAuB,EAAE;YAChC,EAAE,CAAC,sEAAsE,EAAE;gBACzE,gBAAgB,CAAC,qBAAqB,CAAC,mBAAmB,CAAC,CAAC,aAAa,CAAC,CAAC;wBACzE,OAAO,EAAE,OAAO;wBAChB,OAAO,EAAE,QAAQ;wBACjB,QAAQ,EAAE,OAAO;wBACjB,QAAQ,EAAE,KAAK;qBAChB,CAAC,CAAC,CAAC;gBAEJ,aAAa,CAAC,EAAC,gBAAgB,kBAAA,EAAC,CAAC,CAAC;gBAElC,IAAM,MAAM,GAAG,UAAU,CAAC,cAAc,CAAC,aAAa,CAAC,mBAAmB,CAAiB,CAAC;gBAE5F,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;aAC5D,CAAC,CAAC;YAEH,EAAE,CAAC,oEAAoE,EAAE;gBACvE,gBAAgB,CAAC,qBAAqB,CAAC,mBAAmB,CAAC,CAAC,aAAa,CAAC,CAAC;wBACzE,OAAO,EAAE,KAAK;wBACd,OAAO,EAAE,QAAQ;wBACjB,QAAQ,EAAE,KAAK;wBACf,QAAQ,EAAE,KAAK;qBAChB,CAAC,CAAC,CAAC;gBAEJ,aAAa,CAAC,EAAC,gBAAgB,kBAAA,EAAC,CAAC,CAAC;gBAElC,IAAM,MAAM,GAAG,UAAU,CAAC,cAAc,CAAC,aAAa,CAAC,mBAAmB,CAAiB,CAAC;gBAE5F,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;aAC7D,CAAC,CAAC;YAEH,EAAE,CAAC,kEAAkE,EAAE;gBACrE,gBAAgB,CAAC,qBAAqB,CAAC,mBAAmB,CAAC,CAAC,aAAa,CAAC,CAAC;wBACzE,OAAO,EAAE,OAAO;wBAChB,OAAO,EAAE,QAAQ;wBACjB,QAAQ,EAAE,OAAO;wBACjB,QAAQ,EAAE,QAAQ;qBACnB,CAAC,CAAC,CAAC;gBAEJ,aAAa,CAAC,EAAC,gBAAgB,kBAAA,EAAC,CAAC,CAAC;gBAElC,IAAM,MAAM,GAAG,UAAU,CAAC,cAAc,CAAC,aAAa,CAAC,mBAAmB,CAAiB,CAAC;gBAE5F,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;aAC/D,CAAC,CAAC;YAEH,EAAE,CAAC,oEAAoE,EAAE;gBACvE,gBAAgB,CAAC,qBAAqB,CAAC,mBAAmB,CAAC,CAAC,aAAa,CAAC,CAAC;wBACzE,OAAO,EAAE,QAAQ;wBACjB,OAAO,EAAE,KAAK;wBACd,QAAQ,EAAE,QAAQ;wBAClB,QAAQ,EAAE,KAAK;qBAChB,CAAC,CAAC,CAAC;gBAEJ,aAAa,CAAC,EAAC,gBAAgB,kBAAA,EAAC,CAAC,CAAC;gBAElC,IAAM,MAAM,GAAG,UAAU,CAAC,cAAc,CAAC,aAAa,CAAC,mBAAmB,CAAiB,CAAC;gBAE5F,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC;aAC9D,CAAC,CAAC;YAEH,EAAE,CAAC,mEAAmE,EAAE;gBACtE,gBAAgB,CAAC,qBAAqB,CAAC,mBAAmB,CAAC,CAAC,aAAa,CAAC,CAAC;wBACzE,OAAO,EAAE,OAAO;wBAChB,OAAO,EAAE,KAAK;wBACd,QAAQ,EAAE,OAAO;wBACjB,QAAQ,EAAE,QAAQ;qBACnB,CAAC,CAAC,CAAC;gBAEJ,aAAa,CAAC,EAAC,gBAAgB,kBAAA,EAAC,CAAC,CAAC;gBAElC,IAAM,MAAM,GAAG,UAAU,CAAC,cAAc,CAAC,aAAa,CAAC,mBAAmB,CAAiB,CAAC;gBAE5F,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;aAC/D,CAAC,CAAC;YAEH,EAAE,CAAC,6EAA6E,EAAE;gBAChF,gBAAgB,CAAC,qBAAqB,CAAC,mBAAmB,CAAC,CAAC,aAAa,CAAC,CAAC;wBACzE,OAAO,EAAE,OAAO;wBAChB,OAAO,EAAE,QAAQ;wBACjB,QAAQ,EAAE,OAAO;wBACjB,QAAQ,EAAE,KAAK;qBAChB,CAAC,CAAC,CAAC;gBAEJ,aAAa,CAAC,EAAC,gBAAgB,kBAAA,EAAE,SAAS,EAAE,KAAK,EAAC,CAAC,CAAC;gBAEpD,IAAM,MAAM,GAAG,UAAU,CAAC,cAAc,CAAC,aAAa,CAAC,mBAAmB,CAAiB,CAAC;gBAE5F,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;aAC7D,CAAC,CAAC;YAEH,EAAE,CAAC,2EAA2E,EAAE;gBAC9E,gBAAgB,CAAC,qBAAqB,CAAC,mBAAmB,CAAC,CAAC,aAAa,CAAC,CAAC;wBACzE,OAAO,EAAE,KAAK;wBACd,OAAO,EAAE,QAAQ;wBACjB,QAAQ,EAAE,KAAK;wBACf,QAAQ,EAAE,KAAK;qBAChB,CAAC,CAAC,CAAC;gBAEJ,aAAa,CAAC,EAAC,gBAAgB,kBAAA,EAAE,SAAS,EAAE,KAAK,EAAC,CAAC,CAAC;gBAEpD,IAAM,MAAM,GAAG,UAAU,CAAC,cAAc,CAAC,aAAa,CAAC,mBAAmB,CAAiB,CAAC;gBAE5F,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;aAC5D,CAAC,CAAC;SAEJ,CAAC,CAAC;QAEH,EAAE,CAAC,wEAAwE,EAAE;;YAE3E,aAAa,CAAC,KAAK,CAAC,GAAG,GAAG,OAAO,CAAC;YAClC,aAAa,CAAC,KAAK,CAAC,IAAI,GAAG,MAAM,CAAC;YAElC,IAAM,UAAU,GAAG,aAAa,CAAC,qBAAqB,EAAE,CAAC;YAEzD,gBAAgB,CAAC,aAAa,CAAC;gBAC7B;oBACE,OAAO,EAAE,OAAO;oBAChB,OAAO,EAAE,KAAK;oBACd,QAAQ,EAAE,KAAK;oBACf,QAAQ,EAAE,KAAK;oBACf,OAAO,EAAE,CAAC,EAAE;iBACb;gBACD;oBACE,OAAO,EAAE,KAAK;oBACd,OAAO,EAAE,KAAK;oBACd,QAAQ,EAAE,OAAO;oBACjB,QAAQ,EAAE,KAAK;iBAChB;aACF,CAAC,CAAC;YAEH,aAAa,CAAC,EAAC,gBAAgB,kBAAA,EAAC,CAAC,CAAC;YAElC,IAAM,WAAW,GAAG,UAAU,CAAC,cAAc,CAAC,qBAAqB,EAAE,CAAC;YACtE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC;YACrE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;SACzE,CAAC,CAAC;QAEH,EAAE,CAAC,wEAAwE,EAAE;;YAE3E,aAAa,CAAC,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC;YACpC,aAAa,CAAC,KAAK,CAAC,IAAI,GAAG,OAAO,CAAC;YAEnC,IAAM,UAAU,GAAG,aAAa,CAAC,qBAAqB,EAAE,CAAC;YAEzD,gBAAgB,CAAC,aAAa,CAAC;gBAC7B;oBACE,OAAO,EAAE,OAAO;oBAChB,OAAO,EAAE,QAAQ;oBACjB,QAAQ,EAAE,OAAO;oBACjB,QAAQ,EAAE,KAAK;oBACf,OAAO,EAAE,EAAE;iBACZ;gBACD;oBACE,OAAO,EAAE,KAAK;oBACd,OAAO,EAAE,KAAK;oBACd,QAAQ,EAAE,KAAK;oBACf,QAAQ,EAAE,QAAQ;iBACnB;aACF,CAAC,CAAC;YAEH,aAAa,CAAC,EAAC,gBAAgB,kBAAA,EAAC,CAAC,CAAC;YAElC,IAAM,WAAW,GAAG,UAAU,CAAC,cAAc,CAAC,qBAAqB,EAAE,CAAC;YACtE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC;YACxE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;SAC1E,CAAC,CAAC;QAEH,EAAE,CAAC,8DAA8D,EAAE;YACjE,aAAa,CAAC,KAAK,CAAC,GAAG,GAAG,OAAO,CAAC;YAClC,aAAa,CAAC,KAAK,CAAC,KAAK,GAAG,MAAM,CAAC;YAEnC,gBAAgB,CAAC,aAAa,CAAC;gBAC7B;oBACE,OAAO,EAAE,KAAK;oBACd,OAAO,EAAE,QAAQ;oBACjB,QAAQ,EAAE,OAAO;oBACjB,QAAQ,EAAE,QAAQ;iBACnB;gBACD;oBACE,OAAO,EAAE,OAAO;oBAChB,OAAO,EAAE,QAAQ;oBACjB,QAAQ,EAAE,KAAK;oBACf,QAAQ,EAAE,KAAK;iBAChB;aACF,CAAC,CAAC;YAEH,IAAM,qBAAqB,GAAG,OAAO,CAAC,SAAS,CAAC,uBAAuB,CAAC,CAAC;YACzE,IAAM,YAAY,GAAG,gBAAgB,CAAC,eAAe,CAAC,SAAS,CAAC,qBAAqB,CAAC,CAAC;YAEvF,aAAa,CAAC,EAAC,gBAAgB,kBAAA,EAAC,CAAC,CAAC;YAElC,IAAM,UAAU,GAAG,qBAAqB,CAAC,KAAK,CAAC,UAAU,EAAE,CAAC;YAE5D,MAAM,CAAC,qBAAqB,CAAC,CAAC,gBAAgB,EAAE,CAAC;YACjD,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,YAAY,sCAA8B,CAAC;iBAC/D,IAAI,CAAC,IAAI,EAAE,0EAA0E,CAAC,CAAC;;;YAI5F,aAAa,CAAC,KAAK,CAAC,GAAG,GAAG,OAAO,CAAC;YAClC,aAAa,CAAC,KAAK,CAAC,IAAI,GAAG,OAAO,CAAC;YAEnC,UAAU,CAAC,cAAc,EAAE,CAAC;YAE5B,MAAM,CAAC,qBAAqB,CAAC,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC;YAEvD,YAAY,CAAC,WAAW,EAAE,CAAC;SAC5B,CAAC,CAAC;QAEH,EAAE,CAAC,0EAA0E,EAAE;YAC7E,aAAa,CAAC,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC;YACpC,aAAa,CAAC,KAAK,CAAC,KAAK,GAAG,MAAM,CAAC;YAEnC,gBAAgB,CAAC,aAAa,CAAC;gBAC7B;oBACE,OAAO,EAAE,KAAK;oBACd,OAAO,EAAE,QAAQ;oBACjB,QAAQ,EAAE,OAAO;oBACjB,QAAQ,EAAE,KAAK;iBAChB;gBACD;oBACE,OAAO,EAAE,OAAO;oBAChB,OAAO,EAAE,QAAQ;oBACjB,QAAQ,EAAE,KAAK;oBACf,QAAQ,EAAE,KAAK;iBAChB;aACF,CAAC,CAAC;YAEH,IAAM,qBAAqB,GAAG,OAAO,CAAC,SAAS,CAAC,uBAAuB,CAAC,CAAC;YACzE,IAAM,YAAY,GAAG,gBAAgB,CAAC,eAAe,CAAC,SAAS,CAAC,qBAAqB,CAAC,CAAC;YAEvF,aAAa,CAAC,EAAC,gBAAgB,kBAAA,EAAC,CAAC,CAAC;YAElC,MAAM,CAAC,qBAAqB,CAAC,CAAC,gBAAgB,EAAE,CAAC;YAEjD,YAAY,CAAC,WAAW,EAAE,CAAC;SAC5B,CAAC,CAAC;QAEH,EAAE,CAAC,8EAA8E,EAAE;YACjF,aAAa,CAAC,KAAK,CAAC,GAAG,GAAG,OAAO,CAAC;YAClC,aAAa,CAAC,KAAK,CAAC,KAAK,GAAG,MAAM,CAAC;YAEnC,IAAM,UAAU,GAAG,aAAa,CAAC,qBAAqB,EAAE,CAAC;YAEzD,gBAAgB,CAAC,aAAa,CAAC;gBAC7B;oBACE,OAAO,EAAE,KAAK;oBACd,OAAO,EAAE,QAAQ;oBACjB,QAAQ,EAAE,OAAO;oBACjB,QAAQ,EAAE,QAAQ;iBACnB;gBACD;oBACE,OAAO,EAAE,KAAK;oBACd,OAAO,EAAE,KAAK;oBACd,QAAQ,EAAE,OAAO;oBACjB,QAAQ,EAAE,QAAQ;iBACnB;gBACD;oBACE,OAAO,EAAE,KAAK;oBACd,OAAO,EAAE,KAAK;oBACd,QAAQ,EAAE,KAAK;oBACf,QAAQ,EAAE,KAAK;iBAChB;aACF,CAAC,CAAC;YAEH,aAAa,CAAC,EAAC,gBAAgB,kBAAA,EAAC,CAAC,CAAC;YAElC,IAAM,WAAW,GAAG,UAAU,CAAC,cAAc,CAAC,qBAAqB,EAAE,CAAC;YACtE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC;YACrE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;SACxE,CAAC,CAAC;QAEH,EAAE,CAAC,uEAAuE,EAAE;YAC1E,gBAAgB,CAAC,aAAa,CAAC;gBAC7B;oBACE,OAAO,EAAE,KAAK;oBACd,OAAO,EAAE,QAAQ;oBACjB,QAAQ,EAAE,OAAO;oBACjB,QAAQ,EAAE,QAAQ;iBACnB;gBACD;oBACE,OAAO,EAAE,OAAO;oBAChB,OAAO,EAAE,QAAQ;oBACjB,QAAQ,EAAE,KAAK;oBACf,QAAQ,EAAE,KAAK;iBAChB;aACF,CAAC;iBACD,kBAAkB,EAAE,CAAC;YAEtB,IAAM,SAAS,GAAG,KAAK,CAAC,gBAAgB,EAAE,qBAAqB,CAAC,CAAC;YAEjE,aAAa,CAAC,EAAC,gBAAgB,kBAAA,EAAC,CAAC,CAAC;YAElC,MAAM,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,gBAAgB,EAAE,CAAC;YAEzC,gBAAgB,CAAC,KAAK,EAAE,CAAC;YAEzB,MAAM,CAAC,SAAS,CAAC,CAAC,gBAAgB,EAAE,CAAC;SACtC,CAAC,CAAC;QAEH,EAAE,CAAC,6EAA6E,EAAE;YAChF,aAAa,CAAC,KAAK,CAAC,GAAG,GAAG,OAAO,CAAC;YAClC,aAAa,CAAC,KAAK,CAAC,IAAI,GAAG,OAAO,CAAC;YAEnC,IAAM,UAAU,GAAG,aAAa,CAAC,qBAAqB,EAAE,CAAC;YAEzD,gBAAgB,CAAC,aAAa,CAAC,CAAC;oBAC9B,OAAO,EAAE,OAAO;oBAChB,OAAO,EAAE,KAAK;oBACd,QAAQ,EAAE,OAAO;oBACjB,QAAQ,EAAE,KAAK;oBACf,OAAO,EAAE,EAAE;oBACX,OAAO,EAAE,EAAE;iBACZ,CAAC,CAAC,CAAC;YAEJ,aAAa,CAAC,EAAC,gBAAgB,kBAAA,EAAC,CAAC,CAAC;YAElC,IAAI,WAAW,GAAG,UAAU,CAAC,cAAc,CAAC,qBAAqB,EAAE,CAAC;YAEpE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC;YAC1E,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;YAE5E,gBAAgB,CAAC,aAAa,CAAC,CAAC;oBAC9B,OAAO,EAAE,OAAO;oBAChB,OAAO,EAAE,KAAK;oBACd,QAAQ,EAAE,OAAO;oBACjB,QAAQ,EAAE,KAAK;oBACf,OAAO,EAAE,EAAE;oBACX,OAAO,EAAE,EAAE;iBACZ,CAAC,CAAC,CAAC;YAEJ,gBAAgB,CAAC,mBAAmB,EAAE,CAAC;YAEvC,WAAW,GAAG,UAAU,CAAC,cAAc,CAAC,qBAAqB,EAAE,CAAC;YAEhE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC;YAC1E,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;SAC7E,CAAC,CAAC;;;;;;;QAQH;YACE,EAAE,CAAC,6CAA6C,EAAE;gBAChD,IAAM,UAAU,GAAG,aAAa,CAAC,qBAAqB,EAAE,CAAC;gBAEzD,gBAAgB,CAAC,aAAa,CAAC,CAAC;wBAC9B,OAAO,EAAE,OAAO;wBAChB,OAAO,EAAE,QAAQ;wBACjB,QAAQ,EAAE,OAAO;wBACjB,QAAQ,EAAE,KAAK;qBAChB,CAAC,CAAC,CAAC;gBAEJ,aAAa,CAAC,EAAC,gBAAgB,kBAAA,EAAC,CAAC,CAAC;gBAElC,IAAM,WAAW,GAAG,UAAU,CAAC,cAAc,CAAC,qBAAqB,EAAE,CAAC;gBACtE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;gBACxE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;aACxE,CAAC,CAAC;YAEH,EAAE,CAAC,yDAAyD,EAAE;gBAC5D,IAAM,UAAU,GAAG,aAAa,CAAC,qBAAqB,EAAE,CAAC;gBACzD,IAAM,aAAa,GAAG,UAAU,CAAC,GAAG,GAAG,CAAC,aAAa,GAAG,CAAC,CAAC,CAAC;gBAE3D,gBAAgB,CAAC,aAAa,CAAC,CAAC;wBAC9B,OAAO,EAAE,KAAK;wBACd,OAAO,EAAE,QAAQ;wBACjB,QAAQ,EAAE,OAAO;wBACjB,QAAQ,EAAE,QAAQ;qBACnB,CAAC,CAAC,CAAC;gBAEJ,aAAa,CAAC,EAAC,gBAAgB,kBAAA,EAAC,CAAC,CAAC;gBAElC,IAAM,WAAW,GAAG,UAAU,CAAC,cAAc,CAAC,qBAAqB,EAAE,CAAC;gBACtE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,GAAG,CAAC,cAAc,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC3F,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;aACzE,CAAC,CAAC;YAEH,EAAE,CAAC,oCAAoC,EAAE;gBACvC,IAAM,UAAU,GAAG,aAAa,CAAC,qBAAqB,EAAE,CAAC;gBAEzD,gBAAgB,CAAC,aAAa,CAAC,CAAC;wBAC9B,OAAO,EAAE,OAAO;wBAChB,OAAO,EAAE,QAAQ;wBACjB,QAAQ,EAAE,KAAK;wBACf,QAAQ,EAAE,KAAK;qBAChB,CAAC,CAAC,CAAC;gBAEJ,aAAa,CAAC,EAAC,gBAAgB,kBAAA,EAAC,CAAC,CAAC;gBAElC,IAAM,WAAW,GAAG,UAAU,CAAC,cAAc,CAAC,qBAAqB,EAAE,CAAC;gBACtE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;gBACxE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;aACzE,CAAC,CAAC;YAEH,EAAE,CAAC,sCAAsC,EAAE;gBACzC,IAAM,UAAU,GAAG,aAAa,CAAC,qBAAqB,EAAE,CAAC;gBAEzD,gBAAgB,CAAC,aAAa,CAAC,CAAC;wBAC9B,OAAO,EAAE,KAAK;wBACd,OAAO,EAAE,KAAK;wBACd,QAAQ,EAAE,KAAK;wBACf,QAAQ,EAAE,QAAQ;qBACnB,CAAC,CAAC,CAAC;gBAEJ,aAAa,CAAC,EAAC,gBAAgB,kBAAA,EAAC,CAAC,CAAC;gBAElC,IAAM,WAAW,GAAG,UAAU,CAAC,cAAc,CAAC,qBAAqB,EAAE,CAAC;gBACtE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC;gBACxE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;aAC1E,CAAC,CAAC;YAEH,EAAE,CAAC,iCAAiC,EAAE;gBACpC,IAAM,UAAU,GAAG,aAAa,CAAC,qBAAqB,EAAE,CAAC;gBACzD,IAAM,aAAa,GAAG,UAAU,CAAC,IAAI,GAAG,CAAC,YAAY,GAAG,CAAC,CAAC,CAAC;gBAE3D,gBAAgB,CAAC,aAAa,CAAC,CAAC;wBAC9B,OAAO,EAAE,QAAQ;wBACjB,OAAO,EAAE,QAAQ;wBACjB,QAAQ,EAAE,QAAQ;wBAClB,QAAQ,EAAE,KAAK;qBAChB,CAAC,CAAC,CAAC;gBAEJ,aAAa,CAAC,EAAC,gBAAgB,kBAAA,EAAC,CAAC,CAAC;gBAElC,IAAM,WAAW,GAAG,UAAU,CAAC,cAAc,CAAC,qBAAqB,EAAE,CAAC;gBACtE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;gBACxE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,GAAG,CAAC,aAAa,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;aAC5F,CAAC,CAAC;YAEH,EAAE,CAAC,yCAAyC,EAAE;gBAC5C,IAAM,UAAU,GAAG,aAAa,CAAC,qBAAqB,EAAE,CAAC;gBAEzD,gBAAgB,CAAC,aAAa,CAAC,CAAC;wBAC9B,OAAO,EAAE,QAAQ;wBACjB,OAAO,EAAE,QAAQ;wBACjB,QAAQ,EAAE,QAAQ;wBAClB,QAAQ,EAAE,QAAQ;qBACnB,CAAC,CAAC,CAAC;gBAEJ,aAAa,CAAC,EAAC,gBAAgB,kBAAA,EAAC,CAAC,CAAC;gBAElC,IAAM,WAAW,GAAG,UAAU,CAAC,cAAc,CAAC,qBAAqB,EAAE,CAAC;gBACtE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC;gBACrE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;aACxE,CAAC,CAAC;SACJ;KACF,CAAC,CAAC;IAEH,QAAQ,CAAC,cAAc,EAAE;QACvB,IAAM,cAAc,GAAG,cAAc,CAAC;QACtC,IAAM,aAAa,GAAG,aAAa,CAAC;QAEpC,IAAI,aAA0B,CAAC;QAC/B,IAAI,gBAAmD,CAAC;QAExD,UAAU,CAAC;YACT,aAAa,GAAG,4BAA4B,EAAE,CAAC;YAC/C,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC;YACzC,gBAAgB,GAAG,OAAO,CAAC,QAAQ,EAAE;iBAChC,mBAAmB,CAAC,aAAa,CAAC;iBAClC,sBAAsB,CAAC,KAAK,CAAC;iBAC7B,QAAQ,EAAE,CAAC;SACjB,CAAC,CAAC;QAEH,SAAS,CAAC;YACR,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC;SAC1C,CAAC,CAAC;QAEH,EAAE,CAAC,mFAAmF,EAAE;YACtF,aAAa,CAAC,KAAK,CAAC,GAAG,GAAG,OAAO,CAAC;YAClC,aAAa,CAAC,KAAK,CAAC,KAAK,GAAM,CAAC,aAAa,GAAG,CAAC,OAAI,CAAC;YAEtD,gBAAgB,CAAC,aAAa,CAAC,CAAC;oBAC9B,OAAO,EAAE,OAAO;oBAChB,OAAO,EAAE,QAAQ;oBACjB,QAAQ,EAAE,OAAO;oBACjB,QAAQ,EAAE,KAAK;iBAChB,CAAC,CAAC,CAAC;YAEJ,aAAa,CAAC,EAAC,gBAAgB,kBAAA,EAAC,CAAC,CAAC;YAElC,IAAM,WAAW,GAAG,UAAU,CAAC,cAAc,CAAC,qBAAqB,EAAE,CAAC;YACtE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,eAAe,EAAE,CAAC,KAAK,CAAC,CAAC;SAC9E,CAAC,CAAC;QAEH,EAAE,CAAC,kFAAkF,EAAE;YACrF,aAAa,CAAC,KAAK,CAAC,GAAG,GAAG,OAAO,CAAC;YAClC,aAAa,CAAC,KAAK,CAAC,IAAI,GAAM,CAAC,aAAa,GAAG,CAAC,OAAI,CAAC;YAErD,gBAAgB,CAAC,aAAa,CAAC,CAAC;oBAC9B,OAAO,EAAE,OAAO;oBAChB,OAAO,EAAE,QAAQ;oBACjB,QAAQ,EAAE,OAAO;oBACjB,QAAQ,EAAE,KAAK;iBAChB,CAAC,CAAC,CAAC;YAEJ,aAAa,CAAC,EAAC,gBAAgB,kBAAA,EAAC,CAAC,CAAC;YAElC,IAAM,WAAW,GAAG,UAAU,CAAC,cAAc,CAAC,qBAAqB,EAAE,CAAC;YACtE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SAC9C,CAAC,CAAC;QAEH,EAAE,CAAC,iFAAiF,EAAE;YACpF,aAAa,CAAC,KAAK,CAAC,GAAG,GAAM,CAAC,cAAc,GAAG,CAAC,OAAI,CAAC;YACrD,aAAa,CAAC,KAAK,CAAC,IAAI,GAAG,OAAO,CAAC;YAEnC,gBAAgB,CAAC,aAAa,CAAC,CAAC;oBAC9B,OAAO,EAAE,OAAO;oBAChB,OAAO,EAAE,QAAQ;oBACjB,QAAQ,EAAE,OAAO;oBACjB,QAAQ,EAAE,KAAK;iBAChB,CAAC,CAAC,CAAC;YAEJ,aAAa,CAAC,EAAC,gBAAgB,kBAAA,EAAC,CAAC,CAAC;YAElC,IAAM,WAAW,GAAG,UAAU,CAAC,cAAc,CAAC,qBAAqB,EAAE,CAAC;YACtE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SAC7C,CAAC,CAAC;QAEH,EAAE,CAAC,oFAAoF,EAAE;YACvF,aAAa,CAAC,KAAK,CAAC,MAAM,GAAM,CAAC,cAAc,GAAG,CAAC,OAAI,CAAC;YACxD,aAAa,CAAC,KAAK,CAAC,IAAI,GAAG,OAAO,CAAC;YAEnC,gBAAgB,CAAC,aAAa,CAAC,CAAC;oBAC9B,OAAO,EAAE,OAAO;oBAChB,OAAO,EAAE,QAAQ;oBACjB,QAAQ,EAAE,OAAO;oBACjB,QAAQ,EAAE,KAAK;iBAChB,CAAC,CAAC,CAAC;YAEJ,aAAa,CAAC,EAAC,gBAAgB,kBAAA,EAAC,CAAC,CAAC;YAElC,IAAM,WAAW,GAAG,UAAU,CAAC,cAAc,CAAC,qBAAqB,EAAE,CAAC;YACtE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,eAAe,EAAE,CAAC,MAAM,CAAC,CAAC;SAChF,CAAC,CAAC;QAEH,EAAE,CAAC,6EAA6E,EAAE;YAChF,aAAa,CAAC,KAAK,CAAC,GAAG,GAAG,OAAO,CAAC;YAClC,aAAa,CAAC,KAAK,CAAC,IAAI,GAAM,CAAC,aAAa,GAAG,CAAC,OAAI,CAAC;YAErD,gBAAgB;iBACb,kBAAkB,CAAC,EAAE,CAAC;iBACtB,aAAa,CAAC,CAAC;oBACd,OAAO,EAAE,OAAO;oBAChB,OAAO,EAAE,QAAQ;oBACjB,QAAQ,EAAE,OAAO;oBACjB,QAAQ,EAAE,KAAK;iBAChB,CAAC,CAAC,CAAC;YAEN,aAAa,CAAC,EAAC,gBAAgB,kBAAA,EAAC,CAAC,CAAC;YAElC,IAAM,WAAW,GAAG,UAAU,CAAC,cAAc,CAAC,qBAAqB,EAAE,CAAC;YACtE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;SAC/C,CAAC,CAAC;QAEH,EAAE,CAAC,2EAA2E,EAAE;YAC9E,gBAAgB,CAAC,kBAAkB,CAAC,EAAE,CAAC,CAAC;YAExC,aAAa,CAAC,KAAK,CAAC,GAAG,GAAM,CAAC,cAAc,GAAG,CAAC,OAAI,CAAC;YACrD,aAAa,CAAC,KAAK,CAAC,IAAI,GAAG,OAAO,CAAC;YAEnC,gBAAgB;iBACb,kBAAkB,CAAC,EAAE,CAAC;iBACtB,aAAa,CAAC,CAAC;oBACd,OAAO,EAAE,OAAO;oBAChB,OAAO,EAAE,QAAQ;oBACjB,QAAQ,EAAE,OAAO;oBACjB,QAAQ,EAAE,KAAK;iBAChB,CAAC,CAAC,CAAC;YAEN,aAAa,CAAC,EAAC,gBAAgB,kBAAA,EAAC,CAAC,CAAC;YAElC,IAAM,WAAW,GAAG,UAAU,CAAC,cAAc,CAAC,qBAAqB,EAAE,CAAC;YACtE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;SAC9C,CAAC,CAAC;KAEJ,CAAC,CAAC;IAEH,QAAQ,CAAC,0BAA0B,EAAE;QACnC,IAAM,cAAc,GAAG,cAAc,CAAC;QACtC,IAAM,aAAa,GAAG,aAAa,CAAC;QAEpC,IAAI,aAA0B,CAAC;QAC/B,IAAI,gBAAmD,CAAC;QAExD,UAAU,CAAC;YACT,aAAa,GAAG,4BAA4B,EAAE,CAAC;YAC/C,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC;YACzC,gBAAgB,GAAG,OAAO,CAAC,QAAQ,EAAE,CAAC,mBAAmB,CAAC,aAAa,CAAC,CAAC;SAC1E,CAAC,CAAC;QAEH,SAAS,CAAC;YACR,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC;SAC1C,CAAC,CAAC;QAEH,EAAE,CAAC,mFAAmF,EAAE;YACtF,gBAAgB;iBACb,sBAAsB,EAAE;iBACxB,QAAQ,CAAC,KAAK,CAAC;iBACf,aAAa,CAAC,CAAC;oBACd,QAAQ,EAAE,KAAK;oBACf,QAAQ,EAAE,OAAO;oBACjB,OAAO,EAAE,QAAQ;oBACjB,OAAO,EAAE,OAAO;iBACjB,CAAC,CAAC,CAAC;YAEN,aAAa,CAAC,EAAC,gBAAgB,kBAAA,EAAC,CAAC,CAAC;YAElC,MAAM,CAAC,UAAU,CAAC,WAAW,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;SACpE,CAAC,CAAC;QAEH,EAAE,CAAC,gFAAgF,EAAE;YACnF,gBAAgB;iBACb,sBAAsB,EAAE;iBACxB,QAAQ,CAAC,KAAK,CAAC;iBACf,aAAa,CAAC,CAAC;oBACd,QAAQ,EAAE,KAAK;oBACf,QAAQ,EAAE,KAAK;oBACf,OAAO,EAAE,QAAQ;oBACjB,OAAO,EAAE,KAAK;iBACf,CAAC,CAAC,CAAC;YAEN,aAAa,CAAC,EAAC,gBAAgB,kBAAA,EAAC,CAAC,CAAC;YAElC,MAAM,CAAC,UAAU,CAAC,WAAW,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;SAClE,CAAC,CAAC;QAEH,EAAE,CAAC,mEAAmE,EAAE;YACtE,gBAAgB;iBACb,sBAAsB,EAAE;iBACxB,QAAQ,CAAC,KAAK,CAAC;iBACf,aAAa,CAAC,CAAC;oBACd,QAAQ,EAAE,KAAK;oBACf,QAAQ,EAAE,QAAQ;oBAClB,OAAO,EAAE,QAAQ;oBACjB,OAAO,EAAE,QAAQ;iBAClB,CAAC,CAAC,CAAC;YAEN,aAAa,CAAC,EAAC,gBAAgB,kBAAA,EAAC,CAAC,CAAC;YAElC,MAAM,CAAC,UAAU,CAAC,WAAW,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SAChE,CAAC,CAAC;QAEH,EAAE,CAAC,uCAAuC,EAAE;YAC1C,aAAa,CAAC,KAAK,CAAC,GAAG,GAAG,OAAO,CAAC;YAClC,aAAa,CAAC,KAAK,CAAC,IAAI,GAAG,OAAO,CAAC;YAEnC,gBAAgB;iBACb,sBAAsB,EAAE;iBACxB,QAAQ,CAAC,KAAK,CAAC;iBACf,aAAa,CAAC,CAAC;oBACd,QAAQ,EAAE,QAAQ;oBAClB,QAAQ,EAAE,QAAQ;oBAClB,OAAO,EAAE,QAAQ;oBACjB,OAAO,EAAE,QAAQ;oBACjB,OAAO,EAAE,EAAE;oBACX,OAAO,EAAE,CAAC,EAAE;iBACb,CAAC,CAAC,CAAC;YAEN,aAAa,CAAC,EAAC,gBAAgB,kBAAA,EAAC,CAAC,CAAC;YAElC,IAAM,UAAU,GAAG,aAAa,CAAC,qBAAqB,EAAE,CAAC;YACzD,IAAM,aAAa,GAAG,UAAU,CAAC,IAAI,GAAG,CAAC,aAAa,GAAG,CAAC,CAAC,CAAC;YAC5D,IAAM,aAAa,GAAG,UAAU,CAAC,GAAG,GAAG,CAAC,cAAc,GAAG,CAAC,CAAC,CAAC;YAE5D,IAAM,WAAW,GAAG,UAAU,CAAC,cAAc,CAAC,qBAAqB,EAAE,CAAC;YACtE,IAAM,cAAc,GAAG,WAAW,CAAC,GAAG,GAAG,CAAC,cAAc,GAAG,CAAC,CAAC,CAAC;YAC9D,IAAM,cAAc,GAAG,WAAW,CAAC,IAAI,GAAG,CAAC,aAAa,GAAG,CAAC,CAAC,CAAC;YAE9D,MAAM,CAAC,UAAU,CAAC,cAAc,CAAC,KAAK,CAAC,SAAS,CAAC;iBACxC,IAAI,CAAC,oCAAoC,CAAC,CAAC;YACpD,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,GAAG,EAAE,CAAC,CAAC;YACxE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,GAAG,EAAE,CAAC,CAAC;SACzE,CAAC,CAAC;QAEH,EAAE,CAAC,gFAAgF,EAAE;YACnF,aAAa,CAAC,KAAK,CAAC,IAAI,GAAG,OAAO,CAAC;YACnC,aAAa,CAAC,KAAK,CAAC,MAAM,GAAM,cAAc,GAAG,EAAE,OAAI,CAAC;YAExD,gBAAgB;iBACb,sBAAsB,EAAE;iBACxB,QAAQ,CAAC,KAAK,CAAC;iBACf,aAAa,CAAC,CAAC;oBACd,QAAQ,EAAE,KAAK;oBACf,QAAQ,EAAE,OAAO;oBACjB,OAAO,EAAE,QAAQ;oBACjB,OAAO,EAAE,OAAO;iBACjB,CAAC,CAAC,CAAC;YAEN,aAAa,CAAC,EAAC,gBAAgB,kBAAA,EAAC,CAAC,CAAC;YAElC,IAAM,WAAW,GAAG,UAAU,CAAC,cAAc,CAAC,qBAAqB,EAAE,CAAC;YACtE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC,CAAC;YACjE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,eAAe,EAAE,CAAC,MAAM,CAAC,CAAC;SAChF,CAAC,CAAC;QAEH,EAAE,CAAC,+EAA+E,EAAE;YAClF,aAAa,CAAC,KAAK,CAAC,GAAG,GAAG,OAAO,CAAC;YAClC,aAAa,CAAC,KAAK,CAAC,KAAK,GAAG,OAAO,CAAC;YAEpC,gBAAgB;iBACb,sBAAsB,EAAE;iBACxB,QAAQ,CAAC,KAAK,CAAC;iBACf,aAAa,CAAC,CAAC;oBACd,QAAQ,EAAE,KAAK;oBACf,QAAQ,EAAE,OAAO;oBACjB,OAAO,EAAE,QAAQ;oBACjB,OAAO,EAAE,OAAO;iBACjB,CAAC,CAAC,CAAC;YAEN,aAAa,CAAC,EAAC,gBAAgB,kBAAA,EAAC,CAAC,CAAC;YAElC,IAAM,WAAW,GAAG,UAAU,CAAC,cAAc,CAAC,qBAAqB,EAAE,CAAC;YACtE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC,CAAC;YAC/D,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,eAAe,EAAE,CAAC,KAAK,CAAC,CAAC;SAC9E,CAAC,CAAC;QAEH,EAAE,CAAC,uEAAuE,EAAE;YAC1E,aAAa,CAAC,KAAK,CAAC,IAAI,GAAG,OAAO,CAAC;YACnC,aAAa,CAAC,KAAK,CAAC,MAAM,GAAM,cAAc,GAAG,EAAE,OAAI,CAAC;YAExD,gBAAgB;iBACb,sBAAsB,EAAE;iBACxB,aAAa,CAAC,CAAC;oBACd,QAAQ,EAAE,KAAK;oBACf,QAAQ,EAAE,OAAO;oBACjB,OAAO,EAAE,QAAQ;oBACjB,OAAO,EAAE,OAAO;iBACjB,CAAC,CAAC,CAAC;YAEN,aAAa,CAAC;gBACZ,gBAAgB,kBAAA;gBAChB,SAAS,EAAE,cAAc,GAAG,CAAC;aAC9B,CAAC,CAAC;YAEH,IAAM,WAAW,GAAG,UAAU,CAAC,cAAc,CAAC,qBAAqB,EAAE,CAAC;YACtE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;SAC7D,CAAC,CAAC;QAEH,EAAE,CAAC,qEAAqE,EAAE;YACxE,aAAa,CAAC,KAAK,CAAC,GAAG,GAAG,OAAO,CAAC;YAClC,aAAa,CAAC,KAAK,CAAC,KAAK,GAAG,OAAO,CAAC;YAEpC,gBAAgB;iBACb,sBAAsB,EAAE;iBACxB,aAAa,CAAC,CAAC;oBACd,QAAQ,EAAE,KAAK;oBACf,QAAQ,EAAE,OAAO;oBACjB,OAAO,EAAE,QAAQ;oBACjB,OAAO,EAAE,OAAO;iBACjB,CAAC,CAAC,CAAC;YAEN,aAAa,CAAC;gBACZ,QAAQ,EAAE,aAAa,GAAG,EAAE;gBAC5B,gBAAgB,kBAAA;aACjB,CAAC,CAAC;YAEH,IAAM,WAAW,GAAG,UAAU,CAAC,cAAc,CAAC,qBAAqB,EAAE,CAAC;YACtE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;SAC3D,CAAC,CAAC;QAEH,EAAE,CAAC,2EAA2E,EAAE;YAC9E,aAAa,CAAC,KAAK,CAAC,GAAG,GAAG,OAAO,CAAC;YAClC,aAAa,CAAC,KAAK,CAAC,KAAK,GAAG,MAAM,CAAC;YAEnC,gBAAgB;iBACb,sBAAsB,EAAE;iBACxB,QAAQ,CAAC,KAAK,CAAC;iBACf,aAAa,CAAC;gBACb;oBACE,OAAO,EAAE,KAAK;oBACd,OAAO,EAAE,KAAK;oBACd,QAAQ,EAAE,OAAO;oBACjB,QAAQ,EAAE,QAAQ;oBAClB,MAAM,EAAE,CAAC;iBACV;gBACD;oBACE,OAAO,EAAE,KAAK;oBACd,OAAO,EAAE,QAAQ;oBACjB,QAAQ,EAAE,OAAO;oBACjB,QAAQ,EAAE,QAAQ;iBACnB;aACF,CAAC,CAAC;YAEL,aAAa,CAAC,EAAC,gBAAgB,kBAAA,EAAC,CAAC,CAAC;YAElC,IAAM,UAAU,GAAG,aAAa,CAAC,qBAAqB,EAAE,CAAC;YACzD,IAAM,WAAW,GAAG,UAAU,CAAC,cAAc,CAAC,qBAAqB,EAAE,CAAC;YAEtE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC;YACxE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;SACzE,CAAC,CAAC;QAEH,EAAE,CAAC,yEAAyE,EAAE;YAC5E,aAAa,CAAC,KAAK,CAAC,IAAI,GAAG,OAAO,CAAC;YACnC,aAAa,CAAC,KAAK,CAAC,MAAM,GAAM,cAAc,GAAG,EAAE,OAAI,CAAC;YAExD,gBAAgB;iBACb,sBAAsB,EAAE;iBACxB,QAAQ,CAAC,KAAK,CAAC;iBACf,iBAAiB,EAAE;iBACnB,aAAa,CAAC,CAAC;oBACd,QAAQ,EAAE,KAAK;oBACf,QAAQ,EAAE,OAAO;oBACjB,OAAO,EAAE,QAAQ;oBACjB,OAAO,EAAE,OAAO;iBACjB,CAAC,CAAC,CAAC;YAEN,aAAa,CAAC,EAAC,gBAAgB,kBAAA,EAAC,CAAC,CAAC;YAElC,IAAI,WAAW,GAAG,UAAU,CAAC,cAAc,CAAC,qBAAqB,EAAE,CAAC;;YAGpE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC,CAAC;YAEjE,aAAa,CAAC,KAAK,CAAC,MAAM,GAAG,OAAO,CAAC;YACrC,UAAU,CAAC,cAAc,EAAE,CAAC;YAC5B,WAAW,GAAG,UAAU,CAAC,cAAc,CAAC,qBAAqB,EAAE,CAAC;;YAGhE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;SAC7D,CAAC,CAAC;QAEH,EAAE,CAAC,4EAA4E;YAC7E,qBAAqB,EAAE;YACrB,IAAM,gBAAgB,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YAEvD,aAAa,CAAC,KAAK,CAAC,IAAI,GAAG,OAAO,CAAC;YACnC,aAAa,CAAC,KAAK,CAAC,GAAG,GAAG,OAAO,CAAC;YAElC,gBAAgB,CAAC,KAAK,CAAC,KAAK,GAAG,MAAM,CAAC;YACtC,gBAAgB,CAAC,KAAK,CAAC,MAAM,GAAG,QAAQ,CAAC;YACzC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,CAAC;YAC5C,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;YAErB,gBAAgB;iBACb,sBAAsB,EAAE;iBACxB,QAAQ,CAAC,KAAK,CAAC;iBACf,aAAa,CAAC,CAAC;oBACd,QAAQ,EAAE,QAAQ;oBAClB,QAAQ,EAAE,OAAO;oBACjB,OAAO,EAAE,QAAQ;oBACjB,OAAO,EAAE,OAAO;iBACjB,CAAC,CAAC,CAAC;YAEN,aAAa,CAAC,EAAC,gBAAgB,kBAAA,EAAC,CAAC,CAAC;YAElC,IAAM,WAAW,GAAG,UAAU,CAAC,cAAc,CAAC,qBAAqB,EAAE,CAAC;YACtE,IAAM,UAAU,GAAG,aAAa,CAAC,qBAAqB,EAAE,CAAC;YAEzD,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;YAE3E,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YACpB,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,CAAC;SAC7C,CAAC,CAAC;QAEL,EAAE,CAAC,sEAAsE,EAAE;YACzE,aAAa,CAAC,KAAK,CAAC,QAAQ,GAAG,OAAO,CAAC;YACvC,aAAa,CAAC,KAAK,CAAC,MAAM,GAAG,GAAG,CAAC;YACjC,aAAa,CAAC,KAAK,CAAC,IAAI,GAAG,OAAO,CAAC;YAEnC,gBAAgB;iBACb,sBAAsB,EAAE;iBACxB,QAAQ,CAAC,KAAK,CAAC;iBACf,aAAa,CAAC,CAAC;oBACd,QAAQ,EAAE,QAAQ;oBAClB,QAAQ,EAAE,OAAO;oBACjB,OAAO,EAAE,QAAQ;oBACjB,OAAO,EAAE,OAAO;iBACjB,CAAC,CAAC,CAAC;YAEN,aAAa,CAAC,EAAC,gBAAgB,kBAAA,EAAC,CAAC,CAAC;YAElC,IAAM,WAAW,GAAG,gBAAgB;iBACjC,mBAAmB,EAAE;iBACrB,aAAa,CAAC,8CAA8C,CAAgB,CAAC;;;YAIhF,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SAC9C,CAAC,CAAC;QAEH,EAAE,CAAC,mEAAmE,EAAE;YACtE,aAAa,CAAC,KAAK,CAAC,QAAQ,GAAG,OAAO,CAAC;YACvC,aAAa,CAAC,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC;YAC9B,aAAa,CAAC,KAAK,CAAC,IAAI,GAAG,OAAO,CAAC;YAEnC,gBAAgB;iBACb,sBAAsB,EAAE;iBACxB,QAAQ,CAAC,KAAK,CAAC;iBACf,aAAa,CAAC,CAAC;oBACd,QAAQ,EAAE,KAAK;oBACf,QAAQ,EAAE,OAAO;oBACjB,OAAO,EAAE,KAAK;oBACd,OAAO,EAAE,OAAO;iBACjB,CAAC,CAAC,CAAC;YAEN,aAAa,CAAC,EAAC,gBAAgB,kBAAA,EAAC,CAAC,CAAC;YAElC,IAAM,WAAW,GAAG,gBAAgB;iBACjC,mBAAmB,EAAE;iBACrB,aAAa,CAAC,8CAA8C,CAAgB,CAAC;;;YAIhF,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SAC3C,CAAC,CAAC;QAEH,EAAE,CAAC,oEAAoE,EAAE;YACvE,aAAa,CAAC,KAAK,CAAC,QAAQ,GAAG,OAAO,CAAC;YACvC,aAAa,CAAC,KAAK,CAAC,IAAI,GAAG,GAAG,CAAC;YAC/B,aAAa,CAAC,KAAK,CAAC,GAAG,GAAG,OAAO,CAAC;YAElC,gBAAgB;iBACb,sBAAsB,EAAE;iBACxB,QAAQ,CAAC,KAAK,CAAC;iBACf,aAAa,CAAC,CAAC;oBACd,QAAQ,EAAE,KAAK;oBACf,QAAQ,EAAE,OAAO;oBACjB,OAAO,EAAE,KAAK;oBACd,OAAO,EAAE,OAAO;iBACjB,CAAC,CAAC,CAAC;YAEN,aAAa,CAAC,EAAC,gBAAgB,kBAAA,EAAC,CAAC,CAAC;YAElC,IAAM,WAAW,GAAG,gBAAgB;iBACjC,mBAAmB,EAAE;iBACrB,aAAa,CAAC,8CAA8C,CAAgB,CAAC;;;YAIhF,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SAC5C,CAAC,CAAC;QAEH,EAAE,CAAC,qEAAqE,EAAE;YACxE,aAAa,CAAC,KAAK,CAAC,QAAQ,GAAG,OAAO,CAAC;YACvC,aAAa,CAAC,KAAK,CAAC,KAAK,GAAG,GAAG,CAAC;YAChC,aAAa,CAAC,KAAK,CAAC,GAAG,GAAG,OAAO,CAAC;YAElC,gBAAgB;iBACb,sBAAsB,EAAE;iBACxB,QAAQ,CAAC,KAAK,CAAC;iBACf,aAAa,CAAC,CAAC;oBACd,QAAQ,EAAE,KAAK;oBACf,QAAQ,EAAE,KAAK;oBACf,OAAO,EAAE,KAAK;oBACd,OAAO,EAAE,KAAK;iBACf,CAAC,CAAC,CAAC;YAEN,aAAa,CAAC,EAAC,gBAAgB,kBAAA,EAAC,CAAC,CAAC;YAElC,IAAM,WAAW,GAAG,gBAAgB;iBACjC,mBAAmB,EAAE;iBACrB,aAAa,CAAC,8CAA8C,CAAgB,CAAC;;;YAIhF,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SAC7C,CAAC,CAAC;QAEH,EAAE,CAAC,qEAAqE,EAAE;YACxE,IAAM,cAAc,GAAG,CAAC,CAAC;YAEzB,aAAa,CAAC,KAAK,CAAC,GAAG,GAAM,cAAc,GAAG,CAAC,OAAI,CAAC;YACpD,aAAa,CAAC,KAAK,CAAC,KAAK,GAAG,OAAO,CAAC;YAEpC,gBAAgB;iBACb,sBAAsB,EAAE;iBACxB,QAAQ,CAAC,KAAK,CAAC;iBACf,kBAAkB,CAAC,cAAc,CAAC;iBAClC,aAAa,CAAC;gBACb;oBACE,OAAO,EAAE,OAAO;oBAChB,OAAO,EAAE,KAAK;oBACd,QAAQ,EAAE,OAAO;oBACjB,QAAQ,EAAE,QAAQ;iBACnB;aACF,CAAC,CAAC;YAEL,aAAa,CAAC,EAAC,gBAAgB,kBAAA,EAAC,CAAC,CAAC;YAElC,IAAM,UAAU,GAAG,aAAa,CAAC,qBAAqB,EAAE,CAAC;YACzD,IAAM,WAAW,GAAG,UAAU,CAAC,cAAc,CAAC,qBAAqB,EAAE,CAAC;YAEtE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC;YACxE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;SAC1D,CAAC,CAAC;KAEJ,CAAC,CAAC;IAEH,QAAQ,CAAC,kDAAkD,EAAE;QAC3D,IAAI,UAA0B,CAAC;QAC/B,IAAI,qBAAkC,CAAC;QACvC,IAAI,4BAA0C,CAAC;QAE/C,UAAU,CAAC;;YAET,IAAM,aAAa,GAAG,kBAAkB,EAAE,CAAC;YAC3C,aAAa,CAAC,KAAK,CAAC,MAAM,GAAG,mBAAmB,CAAC;;YAGjD,UAAU,GAAG,8BAA8B,EAAE,CAAC;YAC9C,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;YACtC,UAAU,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC;;YAGtC,IAAM,QAAQ,GAAG,OAAO,CAAC,QAAQ,EAAE;iBAChC,mBAAmB,CAAC,aAAa,CAAC;iBAClC,QAAQ,CAAC,KAAK,CAAC;iBACf,aAAa,CAAC,CAAC;oBACd,OAAO,EAAE,OAAO;oBAChB,OAAO,EAAE,QAAQ;oBACjB,QAAQ,EAAE,OAAO;oBACjB,QAAQ,EAAE,KAAK;iBAChB,CAAC,CAAC,CAAC;YAEN,QAAQ,CAAC,wBAAwB,CAAC;gBAChC,IAAI,yBAAa,CAAC,IAAI,iBAAU,CAAC,UAAU,CAAC,EAAE,CAAA,IAAK,CAAA,EAAE,CAAA,IAAK,CAAA,CAAC;aAC5D,CAAC,CAAC;YAEH,qBAAqB,GAAG,OAAO,CAAC,SAAS,CAAC,wBAAwB,CAAC,CAAC;YACpE,4BAA4B,GAAG,QAAQ,CAAC,eAAe;iBACpD,IAAI,CAAC,eAAG,CAAC,UAAA,KAAK,IAAI,OAAA,KAAK,CAAC,wBAAwB,EAA9B,CAA8B,CAAC,CAAC;iBAClD,SAAS,CAAC,qBAAqB,CAAC,CAAC;YAEpC,aAAa,CAAC,EAAC,gBAAgB,EAAE,QAAQ,EAAC,CAAC,CAAC;SAC7C,CAAC,CAAC;QAEH,SAAS,CAAC;YACR,4BAA4B,CAAC,WAAW,EAAE,CAAC;YAC3C,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,CAAC;SACvC,CAAC,CAAC;QAEH,EAAE,CAAC,yEAAyE,EAAE;YAC5E,MAAM,CAAC,qBAAqB,CAAC,CAAC,oBAAoB,CAAC,OAAO,CAAC,gBAAgB,CAAC;gBAC1E,eAAe,EAAE,KAAK;gBACtB,mBAAmB,EAAE,KAAK;gBAC1B,gBAAgB,EAAE,KAAK;gBACvB,oBAAoB,EAAE,KAAK;aAC5B,CAAC,CAAC,CAAC;SACL,CAAC,CAAC;QAEH,EAAE,CAAC,gEAAgE,EAAE;YACnE,UAAU,CAAC,SAAS,GAAG,EAAE,CAAC;YAC1B,UAAU,CAAC,cAAc,EAAE,CAAC;YAE5B,MAAM,CAAC,qBAAqB,CAAC,CAAC,oBAAoB,CAAC,OAAO,CAAC,gBAAgB,CAAC;gBAC1E,eAAe,EAAE,IAAI;gBACrB,mBAAmB,EAAE,KAAK;gBAC1B,gBAAgB,EAAE,KAAK;gBACvB,oBAAoB,EAAE,KAAK;aAC5B,CAAC,CAAC,CAAC;SACL,CAAC,CAAC;QAEH,EAAE,CAAC,oFAAoF,EAAE;YACvF,UAAU,CAAC,SAAS,GAAG,EAAE,CAAC;YAC1B,UAAU,CAAC,cAAc,EAAE,CAAC;YAE5B,MAAM,CAAC,qBAAqB,CAAC,CAAC,oBAAoB,CAAC,OAAO,CAAC,gBAAgB,CAAC;gBAC1E,eAAe,EAAE,IAAI;gBACrB,mBAAmB,EAAE,IAAI;gBACzB,gBAAgB,EAAE,IAAI;gBACtB,oBAAoB,EAAE,KAAK;aAC5B,CAAC,CAAC,CAAC;SACL,CAAC,CAAC;QAEH,EAAE,CAAC,iEAAiE,EAAE;YACpE,UAAU,CAAC,SAAS,GAAG,EAAE,CAAC;YAC1B,UAAU,CAAC,cAAc,EAAE,CAAC;YAE5B,MAAM,CAAC,qBAAqB,CAAC,CAAC,oBAAoB,CAAC,OAAO,CAAC,gBAAgB,CAAC;gBAC1E,eAAe,EAAE,IAAI;gBACrB,mBAAmB,EAAE,IAAI;gBACzB,gBAAgB,EAAE,IAAI;gBACtB,oBAAoB,EAAE,IAAI;aAC3B,CAAC,CAAC,CAAC;SACL,CAAC,CAAC;KACJ,CAAC,CAAC;IAEH,QAAQ,CAAC,wBAAwB,EAAE;QACjC,IAAI,aAA0B,CAAC;QAC/B,IAAI,gBAAmD,CAAC;QAExD,UAAU,CAAC;YACT,aAAa,GAAG,4BAA4B,EAAE,CAAC;YAC/C,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC;YACzC,gBAAgB,GAAG,OAAO,CAAC,QAAQ,EAAE,CAAC,mBAAmB,CAAC,aAAa,CAAC,CAAC;SAC1E,CAAC,CAAC;QAEH,SAAS,CAAC;YACR,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC;SAC1C,CAAC,CAAC;QAEH,QAAQ,CAAC,QAAQ,EAAE;YACjB,EAAE,CAAC,4DAA4D,EAAE;gBAC/D,gBAAgB,CAAC,aAAa,CAAC,CAAC;wBAC9B,OAAO,EAAE,OAAO;wBAChB,OAAO,EAAE,KAAK;wBACd,QAAQ,EAAE,OAAO;wBACjB,QAAQ,EAAE,KAAK;qBAChB,CAAC,CAAC,CAAC;gBAEJ,aAAa,CAAC,EAAC,gBAAgB,kBAAA,EAAC,CAAC,CAAC;gBAElC,MAAM,CAAC,UAAU,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,UAAU,EAAE,CAAC;gBACvD,MAAM,CAAC,UAAU,CAAC,WAAW,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,SAAS,EAAE,CAAC;aACxD,CAAC,CAAC;YAEH,EAAE,CAAC,2DAA2D,EAAE;gBAC9D,gBAAgB,CAAC,aAAa,CAAC,CAAC;wBAC9B,OAAO,EAAE,KAAK;wBACd,OAAO,EAAE,KAAK;wBACd,QAAQ,EAAE,KAAK;wBACf,QAAQ,EAAE,KAAK;qBAChB,CAAC,CAAC,CAAC;gBAEJ,aAAa,CAAC,EAAC,gBAAgB,kBAAA,EAAC,CAAC,CAAC;gBAElC,MAAM,CAAC,UAAU,CAAC,WAAW,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,UAAU,EAAE,CAAC;gBACxD,MAAM,CAAC,UAAU,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,SAAS,EAAE,CAAC;aACvD,CAAC,CAAC;SAEJ,CAAC,CAAC;QAEH,QAAQ,CAAC,QAAQ,EAAE;YACjB,EAAE,CAAC,6DAA6D,EAAE;gBAChE,gBAAgB,CAAC,aAAa,CAAC,CAAC;wBAC9B,OAAO,EAAE,OAAO;wBAChB,OAAO,EAAE,KAAK;wBACd,QAAQ,EAAE,OAAO;wBACjB,QAAQ,EAAE,KAAK;qBAChB,CAAC,CAAC,CAAC;gBAEJ,aAAa,CAAC;oBACZ,gBAAgB,kBAAA;oBAChB,SAAS,EAAE,KAAK;iBACjB,CAAC,CAAC;gBAEH,MAAM,CAAC,UAAU,CAAC,WAAW,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,UAAU,EAAE,CAAC;gBACxD,MAAM,CAAC,UAAU,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,SAAS,EAAE,CAAC;aACvD,CAAC,CAAC;YAEH,EAAE,CAAC,0DAA0D,EAAE;gBAC7D,gBAAgB,CAAC,aAAa,CAAC,CAAC;wBAC9B,OAAO,EAAE,KAAK;wBACd,OAAO,EAAE,KAAK;wBACd,QAAQ,EAAE,KAAK;wBACf,QAAQ,EAAE,KAAK;qBAChB,CAAC,CAAC,CAAC;gBAEJ,aAAa,CAAC,EAAC,gBAAgB,kBAAA,EAAE,SAAS,EAAE,KAAK,EAAC,CAAC,CAAC;gBAEpD,MAAM,CAAC,UAAU,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,UAAU,EAAE,CAAC;gBACvD,MAAM,CAAC,UAAU,CAAC,WAAW,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,SAAS,EAAE,CAAC;aACxD,CAAC,CAAC;SACJ,CAAC,CAAC;QAEH,QAAQ,CAAC,UAAU,EAAE;YACnB,EAAE,CAAC,4DAA4D,EAAE;gBAC/D,gBAAgB,CAAC,aAAa,CAAC,CAAC;wBAC9B,OAAO,EAAE,OAAO;wBAChB,OAAO,EAAE,KAAK;wBACd,QAAQ,EAAE,OAAO;wBACjB,QAAQ,EAAE,KAAK;qBAChB,CAAC,CAAC,CAAC;gBAEJ,aAAa,CAAC,EAAC,gBAAgB,kBAAA,EAAC,CAAC,CAAC;gBAElC,MAAM,CAAC,UAAU,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,UAAU,EAAE,CAAC;gBACtD,MAAM,CAAC,UAAU,CAAC,WAAW,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,SAAS,EAAE,CAAC;aACzD,CAAC,CAAC;YAEH,EAAE,CAAC,kEAAkE,EAAE;gBACrE,gBAAgB,CAAC,aAAa,CAAC,CAAC;wBAC9B,OAAO,EAAE,OAAO;wBAChB,OAAO,EAAE,QAAQ;wBACjB,QAAQ,EAAE,OAAO;wBACjB,QAAQ,EAAE,QAAQ;qBACnB,CAAC,CAAC,CAAC;gBAEJ,aAAa,CAAC,EAAC,gBAAgB,kBAAA,EAAC,CAAC,CAAC;gBAElC,MAAM,CAAC,UAAU,CAAC,WAAW,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,UAAU,EAAE,CAAC;gBACzD,MAAM,CAAC,UAAU,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,SAAS,EAAE,CAAC;aACtD,CAAC,CAAC;SACJ,CAAC,CAAC;KAEJ,CAAC,CAAC;IAEH,QAAQ,CAAC,aAAa,EAAE;QACtB,IAAI,aAA0B,CAAC;QAC/B,IAAI,gBAAmD,CAAC;QAExD,UAAU,CAAC;YACT,aAAa,GAAG,4BAA4B,EAAE,CAAC;YAC/C,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC;YACzC,gBAAgB,GAAG,OAAO,CAAC,QAAQ,EAAE,CAAC,mBAAmB,CAAC,aAAa,CAAC,CAAC;SAC1E,CAAC,CAAC;QAEH,SAAS,CAAC;YACR,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC;YACzC,gBAAgB,CAAC,OAAO,EAAE,CAAC;SAC5B,CAAC,CAAC;QAEH,EAAE,CAAC,mDAAmD,EAAE;YACtD,MAAM,CAAC,cAAM,OAAA,gBAAgB,CAAC,aAAa,CAAC,EAAE,CAAC,EAAlC,CAAkC,CAAC,CAAC,OAAO,EAAE,CAAC;SAC5D,CAAC,CAAC;QAEH,EAAE,CAAC,2EAA2E,EAAE;YAC9E,MAAM,CAAC;gBACL,gBAAgB,CAAC,aAAa,CAAC,CAAC;wBAC9B,OAAO,EAAE,KAAK;wBACd,QAAQ,EAAE,OAAO;wBACjB,QAAQ,EAAE,KAAK;qBACT,CAAC,CAAC,CAAC;aACZ,CAAC,CAAC,OAAO,EAAE,CAAC;SACd,CAAC,CAAC;QAEH,EAAE,CAAC,uEAAuE,EAAE;YAC1E,MAAM,CAAC;gBACL,gBAAgB,CAAC,aAAa,CAAC,CAAC;wBAC9B,OAAO,EAAE,MAAM;wBACf,OAAO,EAAE,KAAK;wBACd,QAAQ,EAAE,MAAM;wBAChB,QAAQ,EAAE,KAAK;qBACT,CAAC,CAAC,CAAC;aACZ,CAAC,CAAC,OAAO,EAAE,CAAC;SACd,CAAC,CAAC;QAEH,EAAE,CAAC,uEAAuE,EAAE;YAC1E,MAAM,CAAC;gBACL,gBAAgB,CAAC,aAAa,CAAC,CAAC;wBAC9B,OAAO,EAAE,OAAO;wBAChB,OAAO,EAAE,QAAQ;wBACjB,QAAQ,EAAE,OAAO;wBACjB,QAAQ,EAAE,QAAQ;qBACZ,CAAC,CAAC,CAAC;aACZ,CAAC,CAAC,OAAO,EAAE,CAAC;SACd,CAAC,CAAC;KACJ,CAAC,CAAC;CAEJ,CAAC,CAAC;;AAGH;IACE,IAAM,OAAO,GAAG,kBAAkB,EAAE,CAAC;IACrC,OAAO,CAAC,KAAK,CAAC,QAAQ,GAAG,UAAU,CAAC;IACpC,MAAM,CAAC,OAAO,CAAC;CAChB;;AAGD;IACE,IAAM,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;IAC9C,OAAO,CAAC,KAAK,CAAC,KAAK,GAAM,aAAa,OAAI,CAAC;IAC3C,OAAO,CAAC,KAAK,CAAC,MAAM,GAAM,cAAc,OAAI,CAAC;IAC7C,OAAO,CAAC,KAAK,CAAC,eAAe,GAAG,eAAe,CAAC;IAChD,OAAO,CAAC,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC;IAC7B,MAAM,CAAC,OAAO,CAAC;CAChB;;AAGD;IACE,IAAM,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;IAC9C,OAAO,CAAC,KAAK,CAAC,QAAQ,GAAG,UAAU,CAAC;IACpC,OAAO,CAAC,KAAK,CAAC,QAAQ,GAAG,MAAM,CAAC;IAChC,OAAO,CAAC,KAAK,CAAC,MAAM,GAAG,OAAO,CAAC;IAC/B,OAAO,CAAC,KAAK,CAAC,KAAK,GAAG,OAAO,CAAC;IAC9B,OAAO,CAAC,KAAK,CAAC,MAAM,GAAG,OAAO,CAAC;IAC/B,MAAM,CAAC,OAAO,CAAC;CAChB;;;;;gBAGA,gBAAS,SAAC;oBACT,QAAQ,EAAE,wEAGU,aAAa,oBAAe,cAAc,qBAC7D;iBACF;;sBA9yDD;;;;;;gBAkzDC,eAAQ,SAAC;oBACR,OAAO,EAAE,CAAC,qBAAa,EAAE,qBAAY,CAAC;oBACtC,OAAO,EAAE,CAAC,WAAW,CAAC;oBACtB,YAAY,EAAE,CAAC,WAAW,CAAC;oBAC3B,eAAe,EAAE,CAAC,WAAW,CAAC;iBAC/B;;4BAvzDD","sourcesContent":["import {ComponentPortal, PortalModule} from '@angular/cdk/portal';\r\nimport {CdkScrollable, ScrollingModule} from '@angular/cdk/scrolling';\r\nimport {MockNgZone} from '@angular/cdk/testing';\r\nimport {Component, ElementRef, NgModule, NgZone} from '@angular/core';\r\nimport {inject, TestBed} from '@angular/core/testing';\r\nimport {Subscription} from 'rxjs';\r\nimport {map} from 'rxjs/operators';\r\nimport {\r\n  ConnectedOverlayPositionChange,\r\n  FlexibleConnectedPositionStrategy,\r\n  Overlay,\r\n  OverlayConfig,\r\n  OverlayContainer,\r\n  OverlayModule,\r\n  OverlayRef,\r\n  ViewportRuler,\r\n} from '../index';\r\n\r\n\r\n// Default width and height of the overlay and origin panels throughout these tests.\r\nconst DEFAULT_HEIGHT = 30;\r\nconst DEFAULT_WIDTH = 60;\r\n\r\ndescribe('FlexibleConnectedPositionStrategy', () => {\r\n  let overlay: Overlay;\r\n  let overlayContainer: OverlayContainer;\r\n  let zone: MockNgZone;\r\n  let overlayRef: OverlayRef;\r\n  let viewport: ViewportRuler;\r\n\r\n  beforeEach(() => {\r\n    TestBed.configureTestingModule({\r\n      imports: [ScrollingModule, OverlayModule, OverlayTestModule],\r\n      providers: [{provide: NgZone, useFactory: () => zone = new MockNgZone()}]\r\n    });\r\n\r\n    inject([Overlay, OverlayContainer, ViewportRuler],\r\n      (o: Overlay, oc: OverlayContainer, v: ViewportRuler) => {\r\n        overlay = o;\r\n        overlayContainer = oc;\r\n        viewport = v;\r\n      })();\r\n  });\r\n\r\n  afterEach(() => {\r\n    overlayContainer.ngOnDestroy();\r\n\r\n    if (overlayRef) {\r\n      overlayRef.dispose();\r\n    }\r\n  });\r\n\r\n  function attachOverlay(config: OverlayConfig) {\r\n    overlayRef = overlay.create(config);\r\n    overlayRef.attach(new ComponentPortal(TestOverlay));\r\n    zone.simulateZoneExit();\r\n  }\r\n\r\n  it('should throw when attempting to attach to multiple different overlays', () => {\r\n    const origin = document.createElement('div');\r\n    const positionStrategy = overlay.position()\r\n        .flexibleConnectedTo(origin)\r\n        .withPositions([{\r\n          overlayX: 'start',\r\n          overlayY: 'top',\r\n          originX: 'start',\r\n          originY: 'bottom'\r\n        }]);\r\n\r\n    // Needs to be in the DOM for IE not to throw an \"Unspecified error\".\r\n    document.body.appendChild(origin);\r\n    attachOverlay({positionStrategy});\r\n\r\n    expect(() => attachOverlay({positionStrategy})).toThrow();\r\n\r\n    document.body.removeChild(origin);\r\n  });\r\n\r\n  it('should not throw when trying to apply after being disposed', () => {\r\n    const origin = document.createElement('div');\r\n    const positionStrategy = overlay.position()\r\n        .flexibleConnectedTo(origin)\r\n        .withPositions([{\r\n          overlayX: 'start',\r\n          overlayY: 'top',\r\n          originX: 'start',\r\n          originY: 'bottom'\r\n        }]);\r\n\r\n    // Needs to be in the DOM for IE not to throw an \"Unspecified error\".\r\n    document.body.appendChild(origin);\r\n    attachOverlay({positionStrategy});\r\n    overlayRef.dispose();\r\n\r\n    expect(() => positionStrategy.apply()).not.toThrow();\r\n\r\n    document.body.removeChild(origin);\r\n  });\r\n\r\n  it('should not throw when trying to re-apply the last position after being disposed', () => {\r\n    const origin = document.createElement('div');\r\n    const positionStrategy = overlay.position()\r\n        .flexibleConnectedTo(origin)\r\n        .withPositions([{\r\n          overlayX: 'start',\r\n          overlayY: 'top',\r\n          originX: 'start',\r\n          originY: 'bottom'\r\n        }]);\r\n\r\n    // Needs to be in the DOM for IE not to throw an \"Unspecified error\".\r\n    document.body.appendChild(origin);\r\n    attachOverlay({positionStrategy});\r\n    overlayRef.dispose();\r\n\r\n    expect(() => positionStrategy.reapplyLastPosition()).not.toThrow();\r\n\r\n    document.body.removeChild(origin);\r\n  });\r\n\r\n  it('should for the virtual keyboard offset when positioning the overlay', () => {\r\n    const originElement = createPositionedBlockElement();\r\n    document.body.appendChild(originElement);\r\n\r\n    // Position the element so it would have enough space to fit.\r\n    originElement.style.top = '200px';\r\n    originElement.style.left = '70px';\r\n\r\n    // Pull the element up ourselves to simulate what a mobile\r\n    // browser would do when the virtual keyboard is being shown.\r\n    overlayContainer.getContainerElement().style.top = '-100px';\r\n\r\n    attachOverlay({\r\n      positionStrategy: overlay.position()\r\n        .flexibleConnectedTo(originElement)\r\n        .withFlexibleDimensions(false)\r\n        .withPush(false)\r\n        .withPositions([{\r\n          originX: 'start',\r\n          originY: 'bottom',\r\n          overlayX: 'start',\r\n          overlayY: 'top'\r\n        }])\r\n    });\r\n\r\n    const originRect = originElement.getBoundingClientRect();\r\n    const overlayRect = overlayRef.overlayElement.getBoundingClientRect();\r\n\r\n    expect(Math.floor(overlayRect.top)).toBe(Math.floor(originRect.bottom));\r\n\r\n    document.body.removeChild(originElement);\r\n  });\r\n\r\n  describe('without flexible dimensions and pushing', () => {\r\n    const ORIGIN_HEIGHT = DEFAULT_HEIGHT;\r\n    const ORIGIN_WIDTH = DEFAULT_WIDTH;\r\n    const OVERLAY_HEIGHT = DEFAULT_HEIGHT;\r\n    const OVERLAY_WIDTH = DEFAULT_WIDTH;\r\n\r\n    let originElement: HTMLElement;\r\n    let positionStrategy: FlexibleConnectedPositionStrategy;\r\n\r\n    beforeEach(() => {\r\n      // The origin and overlay elements need to be in the document body in order to have geometry.\r\n      originElement = createPositionedBlockElement();\r\n      document.body.appendChild(originElement);\r\n      positionStrategy = overlay.position()\r\n          .flexibleConnectedTo(originElement)\r\n          .withFlexibleDimensions(false)\r\n          .withPush(false);\r\n    });\r\n\r\n    afterEach(() => {\r\n      document.body.removeChild(originElement);\r\n    });\r\n\r\n    describe('when not near viewport edge, not scrolled', () => {\r\n      // Place the original element close to the center of the window.\r\n      // (1024 / 2, 768 / 2). It's not exact, since outerWidth/Height includes browser\r\n      // chrome, but it doesn't really matter for these tests.\r\n      const ORIGIN_LEFT = 500;\r\n      const ORIGIN_TOP = 350;\r\n\r\n      beforeEach(() => {\r\n        originElement.style.left = `${ORIGIN_LEFT}px`;\r\n        originElement.style.top = `${ORIGIN_TOP}px`;\r\n      });\r\n\r\n      // Preconditions are set, now just run the full set of simple position tests.\r\n      runSimplePositionTests();\r\n    });\r\n\r\n    describe('when scrolled', () => {\r\n      // Place the original element decently far outside the unscrolled document (1024x768).\r\n      const ORIGIN_LEFT = 2500;\r\n      const ORIGIN_TOP = 2500;\r\n\r\n      // Create a very large element that will make the page scrollable.\r\n      let veryLargeElement: HTMLElement = document.createElement('div');\r\n      veryLargeElement.style.width = '4000px';\r\n      veryLargeElement.style.height = '4000px';\r\n\r\n      beforeEach(() => {\r\n        // Scroll the page such that the origin element is roughly in the\r\n        // center of the visible viewport (2500 - 1024/2, 2500 - 768/2).\r\n        document.body.appendChild(veryLargeElement);\r\n        window.scroll(2100, 2100);\r\n\r\n        originElement.style.top = `${ORIGIN_TOP}px`;\r\n        originElement.style.left = `${ORIGIN_LEFT}px`;\r\n      });\r\n\r\n      afterEach(() => {\r\n        window.scroll(0, 0);\r\n        document.body.removeChild(veryLargeElement);\r\n      });\r\n\r\n      // Preconditions are set, now just run the full set of simple position tests.\r\n      runSimplePositionTests();\r\n    });\r\n\r\n    describe('when near viewport edge', () => {\r\n      it('should reposition the overlay if it would go off the top of the screen', () => {\r\n        originElement.style.top = '5px';\r\n        originElement.style.left = '200px';\r\n        const originRect = originElement.getBoundingClientRect();\r\n\r\n        positionStrategy.withPositions([\r\n          {\r\n            originX: 'end',\r\n            originY: 'top',\r\n            overlayX: 'end',\r\n            overlayY: 'bottom'\r\n          },\r\n          {\r\n            originX: 'start',\r\n            originY: 'bottom',\r\n            overlayX: 'start',\r\n            overlayY: 'top'\r\n          }\r\n        ]);\r\n\r\n        attachOverlay({positionStrategy});\r\n\r\n        const overlayRect = overlayRef.overlayElement.getBoundingClientRect();\r\n        expect(Math.floor(overlayRect.top)).toBe(Math.floor(originRect.bottom));\r\n        expect(Math.floor(overlayRect.left)).toBe(Math.floor(originRect.left));\r\n      });\r\n\r\n      it('should reposition the overlay if it would go off the left of the screen', () => {\r\n        originElement.style.top = '200px';\r\n        originElement.style.left = '5px';\r\n\r\n        const originRect = originElement.getBoundingClientRect();\r\n        const originCenterY = originRect.top + (ORIGIN_HEIGHT / 2);\r\n\r\n        positionStrategy.withPositions([\r\n          {\r\n            originX: 'start',\r\n            originY: 'bottom',\r\n            overlayX: 'end',\r\n            overlayY: 'top'\r\n          },\r\n          {\r\n            originX: 'end',\r\n            originY: 'center',\r\n            overlayX: 'start',\r\n            overlayY: 'center'\r\n          }\r\n        ]);\r\n\r\n        attachOverlay({positionStrategy});\r\n\r\n        const overlayRect = overlayRef.overlayElement.getBoundingClientRect();\r\n        expect(Math.floor(overlayRect.top)).toBe(Math.floor(originCenterY - (OVERLAY_HEIGHT / 2)));\r\n        expect(Math.floor(overlayRect.left)).toBe(Math.floor(originRect.right));\r\n      });\r\n\r\n      it('should reposition the overlay if it would go off the bottom of the screen', () => {\r\n        originElement.style.bottom = '25px';\r\n        originElement.style.left = '200px';\r\n\r\n        const originRect = originElement.getBoundingClientRect();\r\n\r\n        positionStrategy.withPositions([\r\n          {\r\n            originX: 'start',\r\n            originY: 'bottom',\r\n            overlayX: 'start',\r\n            overlayY: 'top'\r\n          },\r\n          {\r\n            originX: 'end',\r\n            originY: 'top',\r\n            overlayX: 'end',\r\n            overlayY: 'bottom'\r\n          }\r\n        ]);\r\n\r\n        attachOverlay({positionStrategy});\r\n\r\n        const overlayRect = overlayRef.overlayElement.getBoundingClientRect();\r\n        expect(Math.floor(overlayRect.bottom)).toBe(Math.floor(originRect.top));\r\n        expect(Math.floor(overlayRect.right)).toBe(Math.floor(originRect.right));\r\n      });\r\n\r\n      it('should reposition the overlay if it would go off the right of the screen', () => {\r\n        originElement.style.top = '200px';\r\n        originElement.style.right = '25px';\r\n\r\n        const originRect = originElement.getBoundingClientRect();\r\n\r\n        positionStrategy.withPositions([\r\n          {\r\n            originX: 'end',\r\n            originY: 'center',\r\n            overlayX: 'start',\r\n            overlayY: 'center'\r\n          },\r\n          {\r\n            originX: 'start',\r\n            originY: 'bottom',\r\n            overlayX: 'end',\r\n            overlayY: 'top'\r\n          }\r\n        ]);\r\n\r\n        attachOverlay({positionStrategy});\r\n\r\n        const overlayRect = overlayRef.overlayElement.getBoundingClientRect();\r\n        expect(Math.floor(overlayRect.top)).toBe(Math.floor(originRect.bottom));\r\n        expect(Math.floor(overlayRect.right)).toBe(Math.floor(originRect.left));\r\n      });\r\n\r\n      it('should recalculate and set the last position with recalculateLastPosition()', () => {\r\n        // Push the trigger down so the overlay doesn't have room to open on the bottom.\r\n        originElement.style.bottom = '25px';\r\n\r\n        const originRect = originElement.getBoundingClientRect();\r\n\r\n        positionStrategy.withPositions([\r\n          {\r\n            originX: 'start',\r\n            originY: 'bottom',\r\n            overlayX: 'start',\r\n            overlayY: 'top'\r\n          },\r\n          {\r\n            originX: 'start',\r\n            originY: 'top',\r\n            overlayX: 'start',\r\n            overlayY: 'bottom'\r\n          }\r\n        ]);\r\n\r\n        // This should apply the fallback position, as the original position won't fit.\r\n        attachOverlay({positionStrategy});\r\n\r\n        // Now make the overlay small enough to fit in the first preferred position.\r\n        overlayRef.overlayElement.style.height = '15px';\r\n\r\n        // This should only re-align in the last position, even though the first would fit.\r\n        positionStrategy.reapplyLastPosition();\r\n\r\n        const overlayRect = overlayRef.overlayElement.getBoundingClientRect();\r\n        expect(Math.floor(overlayRect.bottom)).toBe(Math.floor(originRect.top),\r\n            'Expected overlay to be re-aligned to the trigger in the previous position.');\r\n      });\r\n\r\n      it('should default to the initial position, if no positions fit in the viewport', () => {\r\n        // Make the origin element taller than the viewport.\r\n        originElement.style.height = '1000px';\r\n        originElement.style.top = '0';\r\n\r\n        const originRect = originElement.getBoundingClientRect();\r\n\r\n        positionStrategy.withPositions([{\r\n          originX: 'start',\r\n          originY: 'top',\r\n          overlayX: 'start',\r\n          overlayY: 'bottom'\r\n        }]);\r\n\r\n        attachOverlay({positionStrategy});\r\n        positionStrategy.reapplyLastPosition();\r\n\r\n        const overlayRect = overlayRef.overlayElement.getBoundingClientRect();\r\n        expect(Math.floor(overlayRect.bottom)).toBe(Math.floor(originRect.top),\r\n            'Expected overlay to be re-aligned to the trigger in the initial position.');\r\n      });\r\n\r\n      it('should position a panel properly when rtl', () => {\r\n        const originRect = originElement.getBoundingClientRect();\r\n\r\n        positionStrategy.withPositions([{\r\n          originX: 'start',\r\n          originY: 'bottom',\r\n          overlayX: 'start',\r\n          overlayY: 'top'\r\n        }]);\r\n\r\n        attachOverlay({\r\n          positionStrategy,\r\n          direction: 'rtl'\r\n        });\r\n\r\n        // must make the overlay longer than the origin to properly test attachment\r\n        overlayRef.overlayElement.style.width = `500px`;\r\n\r\n        const overlayRect = overlayRef.overlayElement.getBoundingClientRect();\r\n        expect(Math.floor(overlayRect.top)).toBe(Math.floor(originRect.bottom));\r\n        expect(Math.floor(overlayRect.right)).toBe(Math.floor(originRect.right));\r\n      });\r\n\r\n      it('should position a panel with the x offset provided', () => {\r\n        const originRect = originElement.getBoundingClientRect();\r\n\r\n        positionStrategy.withPositions([{\r\n          originX: 'start',\r\n          originY: 'top',\r\n          overlayX: 'start',\r\n          overlayY: 'top',\r\n          offsetX: 10\r\n        }]);\r\n\r\n        attachOverlay({positionStrategy});\r\n\r\n        const overlayRect = overlayRef.overlayElement.getBoundingClientRect();\r\n        expect(Math.floor(overlayRect.top)).toBe(Math.floor(originRect.top));\r\n        expect(Math.floor(overlayRect.left)).toBe(Math.floor(originRect.left + 10));\r\n      });\r\n\r\n      it('should be able to set the default x offset', () => {\r\n        const originRect = originElement.getBoundingClientRect();\r\n\r\n        positionStrategy.withDefaultOffsetX(20).withPositions([{\r\n          originX: 'start',\r\n          originY: 'top',\r\n          overlayX: 'start',\r\n          overlayY: 'top',\r\n        }]);\r\n\r\n        attachOverlay({positionStrategy});\r\n\r\n        const overlayRect = overlayRef.overlayElement.getBoundingClientRect();\r\n        expect(Math.floor(overlayRect.top)).toBe(Math.floor(originRect.top));\r\n        expect(Math.floor(overlayRect.left)).toBe(Math.floor(originRect.left + 20));\r\n      });\r\n\r\n      it('should have the position offset x take precedence over the default offset x', () => {\r\n        const originRect = originElement.getBoundingClientRect();\r\n\r\n        positionStrategy.withDefaultOffsetX(20).withPositions([{\r\n          originX: 'start',\r\n          originY: 'top',\r\n          overlayX: 'start',\r\n          overlayY: 'top',\r\n          offsetX: 10\r\n        }]);\r\n\r\n        attachOverlay({positionStrategy});\r\n\r\n        const overlayRect = overlayRef.overlayElement.getBoundingClientRect();\r\n        expect(Math.floor(overlayRect.top)).toBe(Math.floor(originRect.top));\r\n        expect(Math.floor(overlayRect.left)).toBe(Math.floor(originRect.left + 10));\r\n      });\r\n\r\n      it('should position a panel with the y offset provided', () => {\r\n        const originRect = originElement.getBoundingClientRect();\r\n\r\n        positionStrategy.withPositions([{\r\n          originX: 'start',\r\n          originY: 'top',\r\n          overlayX: 'start',\r\n          overlayY: 'top',\r\n          offsetY: 50\r\n        }]);\r\n\r\n        attachOverlay({positionStrategy});\r\n\r\n        const overlayRect = overlayRef.overlayElement.getBoundingClientRect();\r\n        expect(Math.floor(overlayRect.top)).toBe(Math.floor(originRect.top + 50));\r\n        expect(Math.floor(overlayRect.left)).toBe(Math.floor(originRect.left));\r\n      });\r\n\r\n      it('should be able to set the default y offset', () => {\r\n        const originRect = originElement.getBoundingClientRect();\r\n\r\n        positionStrategy.withDefaultOffsetY(60).withPositions([{\r\n          originX: 'start',\r\n          originY: 'top',\r\n          overlayX: 'start',\r\n          overlayY: 'top',\r\n        }]);\r\n\r\n        attachOverlay({positionStrategy});\r\n\r\n        const overlayRect = overlayRef.overlayElement.getBoundingClientRect();\r\n        expect(Math.floor(overlayRect.top)).toBe(Math.floor(originRect.top + 60));\r\n        expect(Math.floor(overlayRect.left)).toBe(Math.floor(originRect.left));\r\n      });\r\n\r\n      it('should have the position offset y take precedence over the default offset y', () => {\r\n        const originRect = originElement.getBoundingClientRect();\r\n\r\n        positionStrategy.withDefaultOffsetY(60).withPositions([{\r\n          originX: 'start',\r\n          originY: 'top',\r\n          overlayX: 'start',\r\n          overlayY: 'top',\r\n          offsetY: 50\r\n        }]);\r\n\r\n        attachOverlay({positionStrategy});\r\n\r\n        const overlayRect = overlayRef.overlayElement.getBoundingClientRect();\r\n        expect(Math.floor(overlayRect.top)).toBe(Math.floor(originRect.top + 50));\r\n        expect(Math.floor(overlayRect.left)).toBe(Math.floor(originRect.left));\r\n      });\r\n\r\n      it('should allow for the fallback positions to specify their own offsets', () => {\r\n        originElement.style.bottom = '0';\r\n        originElement.style.left = '50%';\r\n        originElement.style.position = 'fixed';\r\n\r\n        const originRect = originElement.getBoundingClientRect();\r\n\r\n        positionStrategy.withPositions([\r\n          {\r\n            originX: 'start',\r\n            originY: 'top',\r\n            overlayX: 'start',\r\n            overlayY: 'top',\r\n            offsetX: 50,\r\n            offsetY: 50\r\n          },\r\n          {\r\n            originX: 'start',\r\n            originY: 'top',\r\n            overlayX: 'start',\r\n            overlayY: 'bottom',\r\n            offsetX: -100,\r\n            offsetY: -100\r\n          }\r\n        ]);\r\n\r\n        attachOverlay({positionStrategy});\r\n\r\n        const overlayRect = overlayRef.overlayElement.getBoundingClientRect();\r\n        expect(Math.floor(overlayRect.bottom)).toBe(Math.floor(originRect.top - 100));\r\n        expect(Math.floor(overlayRect.left)).toBe(Math.floor(originRect.left - 100));\r\n      });\r\n\r\n    });\r\n\r\n    describe('with transform origin', () => {\r\n      it('should set the proper transform-origin when aligning to start/bottom', () => {\r\n        positionStrategy.withTransformOriginOn('.transform-origin').withPositions([{\r\n          originX: 'start',\r\n          originY: 'bottom',\r\n          overlayX: 'start',\r\n          overlayY: 'top'\r\n        }]);\r\n\r\n        attachOverlay({positionStrategy});\r\n\r\n        const target = overlayRef.overlayElement.querySelector('.transform-origin')! as HTMLElement;\r\n\r\n        expect(target.style.transformOrigin).toContain('left top');\r\n      });\r\n\r\n      it('should set the proper transform-origin when aligning to end/bottom', () => {\r\n        positionStrategy.withTransformOriginOn('.transform-origin').withPositions([{\r\n          originX: 'end',\r\n          originY: 'bottom',\r\n          overlayX: 'end',\r\n          overlayY: 'top'\r\n        }]);\r\n\r\n        attachOverlay({positionStrategy});\r\n\r\n        const target = overlayRef.overlayElement.querySelector('.transform-origin')! as HTMLElement;\r\n\r\n        expect(target.style.transformOrigin).toContain('right top');\r\n      });\r\n\r\n      it('should set the proper transform-origin when centering vertically', () => {\r\n        positionStrategy.withTransformOriginOn('.transform-origin').withPositions([{\r\n          originX: 'start',\r\n          originY: 'center',\r\n          overlayX: 'start',\r\n          overlayY: 'center'\r\n        }]);\r\n\r\n        attachOverlay({positionStrategy});\r\n\r\n        const target = overlayRef.overlayElement.querySelector('.transform-origin')! as HTMLElement;\r\n\r\n        expect(target.style.transformOrigin).toContain('left center');\r\n      });\r\n\r\n      it('should set the proper transform-origin when centering horizontally', () => {\r\n        positionStrategy.withTransformOriginOn('.transform-origin').withPositions([{\r\n          originX: 'center',\r\n          originY: 'top',\r\n          overlayX: 'center',\r\n          overlayY: 'top'\r\n        }]);\r\n\r\n        attachOverlay({positionStrategy});\r\n\r\n        const target = overlayRef.overlayElement.querySelector('.transform-origin')! as HTMLElement;\r\n\r\n        expect(target.style.transformOrigin).toContain('center top');\r\n      });\r\n\r\n      it('should set the proper transform-origin when aligning to start/top', () => {\r\n        positionStrategy.withTransformOriginOn('.transform-origin').withPositions([{\r\n          originX: 'start',\r\n          originY: 'top',\r\n          overlayX: 'start',\r\n          overlayY: 'bottom'\r\n        }]);\r\n\r\n        attachOverlay({positionStrategy});\r\n\r\n        const target = overlayRef.overlayElement.querySelector('.transform-origin')! as HTMLElement;\r\n\r\n        expect(target.style.transformOrigin).toContain('left bottom');\r\n      });\r\n\r\n      it('should set the proper transform-origin when aligning to start/bottom in rtl', () => {\r\n        positionStrategy.withTransformOriginOn('.transform-origin').withPositions([{\r\n          originX: 'start',\r\n          originY: 'bottom',\r\n          overlayX: 'start',\r\n          overlayY: 'top'\r\n        }]);\r\n\r\n        attachOverlay({positionStrategy, direction: 'rtl'});\r\n\r\n        const target = overlayRef.overlayElement.querySelector('.transform-origin')! as HTMLElement;\r\n\r\n        expect(target.style.transformOrigin).toContain('right top');\r\n      });\r\n\r\n      it('should set the proper transform-origin when aligning to end/bottom in rtl', () => {\r\n        positionStrategy.withTransformOriginOn('.transform-origin').withPositions([{\r\n          originX: 'end',\r\n          originY: 'bottom',\r\n          overlayX: 'end',\r\n          overlayY: 'top'\r\n        }]);\r\n\r\n        attachOverlay({positionStrategy, direction: 'rtl'});\r\n\r\n        const target = overlayRef.overlayElement.querySelector('.transform-origin')! as HTMLElement;\r\n\r\n        expect(target.style.transformOrigin).toContain('left top');\r\n      });\r\n\r\n    });\r\n\r\n    it('should account for the `offsetX` pushing the overlay out of the screen', () => {\r\n      // Position the element so it would have enough space to fit.\r\n      originElement.style.top = '200px';\r\n      originElement.style.left = '70px';\r\n\r\n      const originRect = originElement.getBoundingClientRect();\r\n\r\n      positionStrategy.withPositions([\r\n        {\r\n          originX: 'start',\r\n          originY: 'top',\r\n          overlayX: 'end',\r\n          overlayY: 'top',\r\n          offsetX: -20 // Add enough of an offset to pull the element out of the viewport.\r\n        },\r\n        {\r\n          originX: 'end',\r\n          originY: 'top',\r\n          overlayX: 'start',\r\n          overlayY: 'top'\r\n        }\r\n      ]);\r\n\r\n      attachOverlay({positionStrategy});\r\n\r\n      const overlayRect = overlayRef.overlayElement.getBoundingClientRect();\r\n      expect(Math.floor(overlayRect.top)).toBe(Math.floor(originRect.top));\r\n      expect(Math.floor(overlayRect.left)).toBe(Math.floor(originRect.right));\r\n    });\r\n\r\n    it('should account for the `offsetY` pushing the overlay out of the screen', () => {\r\n      // Position the overlay so it would normally have enough space to fit.\r\n      originElement.style.bottom = '40px';\r\n      originElement.style.left = '200px';\r\n\r\n      const originRect = originElement.getBoundingClientRect();\r\n\r\n      positionStrategy.withPositions([\r\n        {\r\n          originX: 'start',\r\n          originY: 'bottom',\r\n          overlayX: 'start',\r\n          overlayY: 'top',\r\n          offsetY: 20 // Add enough of an offset for it to go off-screen.\r\n        },\r\n        {\r\n          originX: 'end',\r\n          originY: 'top',\r\n          overlayX: 'end',\r\n          overlayY: 'bottom'\r\n        }\r\n      ]);\r\n\r\n      attachOverlay({positionStrategy});\r\n\r\n      const overlayRect = overlayRef.overlayElement.getBoundingClientRect();\r\n      expect(Math.floor(overlayRect.bottom)).toBe(Math.floor(originRect.top));\r\n      expect(Math.floor(overlayRect.right)).toBe(Math.floor(originRect.right));\r\n    });\r\n\r\n    it('should emit onPositionChange event when the position changes', () => {\r\n      originElement.style.top = '200px';\r\n      originElement.style.right = '25px';\r\n\r\n      positionStrategy.withPositions([\r\n        {\r\n          originX: 'end',\r\n          originY: 'center',\r\n          overlayX: 'start',\r\n          overlayY: 'center'\r\n        },\r\n        {\r\n          originX: 'start',\r\n          originY: 'bottom',\r\n          overlayX: 'end',\r\n          overlayY: 'top'\r\n        }\r\n      ]);\r\n\r\n      const positionChangeHandler = jasmine.createSpy('positionChangeHandler');\r\n      const subscription = positionStrategy.positionChanges.subscribe(positionChangeHandler);\r\n\r\n      attachOverlay({positionStrategy});\r\n\r\n      const latestCall = positionChangeHandler.calls.mostRecent();\r\n\r\n      expect(positionChangeHandler).toHaveBeenCalled();\r\n      expect(latestCall.args[0] instanceof ConnectedOverlayPositionChange)\r\n          .toBe(true, `Expected strategy to emit an instance of ConnectedOverlayPositionChange.`);\r\n\r\n      // If the strategy is re-applied and the initial position would now fit,\r\n      // the position change event should be emitted again.\r\n      originElement.style.top = '200px';\r\n      originElement.style.left = '200px';\r\n\r\n      overlayRef.updatePosition();\r\n\r\n      expect(positionChangeHandler).toHaveBeenCalledTimes(2);\r\n\r\n      subscription.unsubscribe();\r\n    });\r\n\r\n    it('should emit the onPositionChange event even if none of the positions fit', () => {\r\n      originElement.style.bottom = '25px';\r\n      originElement.style.right = '25px';\r\n\r\n      positionStrategy.withPositions([\r\n        {\r\n          originX: 'end',\r\n          originY: 'bottom',\r\n          overlayX: 'start',\r\n          overlayY: 'top'\r\n        },\r\n        {\r\n          originX: 'start',\r\n          originY: 'bottom',\r\n          overlayX: 'end',\r\n          overlayY: 'top'\r\n        }\r\n      ]);\r\n\r\n      const positionChangeHandler = jasmine.createSpy('positionChangeHandler');\r\n      const subscription = positionStrategy.positionChanges.subscribe(positionChangeHandler);\r\n\r\n      attachOverlay({positionStrategy});\r\n\r\n      expect(positionChangeHandler).toHaveBeenCalled();\r\n\r\n      subscription.unsubscribe();\r\n    });\r\n\r\n    it('should pick the fallback position that shows the largest area of the element', () => {\r\n      originElement.style.top = '200px';\r\n      originElement.style.right = '25px';\r\n\r\n      const originRect = originElement.getBoundingClientRect();\r\n\r\n      positionStrategy.withPositions([\r\n        {\r\n          originX: 'end',\r\n          originY: 'center',\r\n          overlayX: 'start',\r\n          overlayY: 'center'\r\n        },\r\n        {\r\n          originX: 'end',\r\n          originY: 'top',\r\n          overlayX: 'start',\r\n          overlayY: 'bottom'\r\n        },\r\n        {\r\n          originX: 'end',\r\n          originY: 'top',\r\n          overlayX: 'end',\r\n          overlayY: 'top'\r\n        }\r\n      ]);\r\n\r\n      attachOverlay({positionStrategy});\r\n\r\n      const overlayRect = overlayRef.overlayElement.getBoundingClientRect();\r\n      expect(Math.floor(overlayRect.top)).toBe(Math.floor(originRect.top));\r\n      expect(Math.floor(overlayRect.left)).toBe(Math.floor(originRect.left));\r\n    });\r\n\r\n    it('should re-use the preferred position when re-applying while locked in', () => {\r\n      positionStrategy.withPositions([\r\n        {\r\n          originX: 'end',\r\n          originY: 'center',\r\n          overlayX: 'start',\r\n          overlayY: 'center'\r\n        },\r\n        {\r\n          originX: 'start',\r\n          originY: 'bottom',\r\n          overlayX: 'end',\r\n          overlayY: 'top'\r\n        }\r\n      ])\r\n      .withLockedPosition();\r\n\r\n      const recalcSpy = spyOn(positionStrategy, 'reapplyLastPosition');\r\n\r\n      attachOverlay({positionStrategy});\r\n\r\n      expect(recalcSpy).not.toHaveBeenCalled();\r\n\r\n      positionStrategy.apply();\r\n\r\n      expect(recalcSpy).toHaveBeenCalled();\r\n    });\r\n\r\n    it('should not retain the last preferred position when overriding the positions', () => {\r\n      originElement.style.top = '100px';\r\n      originElement.style.left = '100px';\r\n\r\n      const originRect = originElement.getBoundingClientRect();\r\n\r\n      positionStrategy.withPositions([{\r\n        originX: 'start',\r\n        originY: 'top',\r\n        overlayX: 'start',\r\n        overlayY: 'top',\r\n        offsetX: 10,\r\n        offsetY: 20\r\n      }]);\r\n\r\n      attachOverlay({positionStrategy});\r\n\r\n      let overlayRect = overlayRef.overlayElement.getBoundingClientRect();\r\n\r\n      expect(Math.floor(overlayRect.top)).toBe(Math.floor(originRect.top) + 20);\r\n      expect(Math.floor(overlayRect.left)).toBe(Math.floor(originRect.left) + 10);\r\n\r\n      positionStrategy.withPositions([{\r\n        originX: 'start',\r\n        originY: 'top',\r\n        overlayX: 'start',\r\n        overlayY: 'top',\r\n        offsetX: 20,\r\n        offsetY: 40\r\n      }]);\r\n\r\n      positionStrategy.reapplyLastPosition();\r\n\r\n      overlayRect = overlayRef.overlayElement.getBoundingClientRect();\r\n\r\n      expect(Math.floor(overlayRect.top)).toBe(Math.floor(originRect.top) + 40);\r\n      expect(Math.floor(overlayRect.left)).toBe(Math.floor(originRect.left) + 20);\r\n    });\r\n\r\n    /**\r\n     * Run all tests for connecting the overlay to the origin such that first preferred\r\n     * position does not go off-screen. We do this because there are several cases where we\r\n     * want to run the exact same tests with different preconditions (e.g., not scroll, scrolled,\r\n     * different element sized, etc.).\r\n     */\r\n    function runSimplePositionTests() {\r\n      it('should position a panel below, left-aligned', () => {\r\n        const originRect = originElement.getBoundingClientRect();\r\n\r\n        positionStrategy.withPositions([{\r\n          originX: 'start',\r\n          originY: 'bottom',\r\n          overlayX: 'start',\r\n          overlayY: 'top'\r\n        }]);\r\n\r\n        attachOverlay({positionStrategy});\r\n\r\n        const overlayRect = overlayRef.overlayElement.getBoundingClientRect();\r\n        expect(Math.floor(overlayRect.top)).toBe(Math.floor(originRect.bottom));\r\n        expect(Math.floor(overlayRect.left)).toBe(Math.floor(originRect.left));\r\n      });\r\n\r\n      it('should position to the right, center aligned vertically', () => {\r\n        const originRect = originElement.getBoundingClientRect();\r\n        const originCenterY = originRect.top + (ORIGIN_HEIGHT / 2);\r\n\r\n        positionStrategy.withPositions([{\r\n          originX: 'end',\r\n          originY: 'center',\r\n          overlayX: 'start',\r\n          overlayY: 'center'\r\n        }]);\r\n\r\n        attachOverlay({positionStrategy});\r\n\r\n        const overlayRect = overlayRef.overlayElement.getBoundingClientRect();\r\n        expect(Math.floor(overlayRect.top)).toBe(Math.floor(originCenterY - (OVERLAY_HEIGHT / 2)));\r\n        expect(Math.floor(overlayRect.left)).toBe(Math.floor(originRect.right));\r\n      });\r\n\r\n      it('should position to the left, below', () => {\r\n        const originRect = originElement.getBoundingClientRect();\r\n\r\n        positionStrategy.withPositions([{\r\n          originX: 'start',\r\n          originY: 'bottom',\r\n          overlayX: 'end',\r\n          overlayY: 'top'\r\n        }]);\r\n\r\n        attachOverlay({positionStrategy});\r\n\r\n        const overlayRect = overlayRef.overlayElement.getBoundingClientRect();\r\n        expect(Math.floor(overlayRect.top)).toBe(Math.floor(originRect.bottom));\r\n        expect(Math.round(overlayRect.right)).toBe(Math.round(originRect.left));\r\n      });\r\n\r\n      it('should position above, right aligned', () => {\r\n        const originRect = originElement.getBoundingClientRect();\r\n\r\n        positionStrategy.withPositions([{\r\n          originX: 'end',\r\n          originY: 'top',\r\n          overlayX: 'end',\r\n          overlayY: 'bottom'\r\n        }]);\r\n\r\n        attachOverlay({positionStrategy});\r\n\r\n        const overlayRect = overlayRef.overlayElement.getBoundingClientRect();\r\n        expect(Math.round(overlayRect.bottom)).toBe(Math.round(originRect.top));\r\n        expect(Math.round(overlayRect.right)).toBe(Math.round(originRect.right));\r\n      });\r\n\r\n      it('should position below, centered', () => {\r\n        const originRect = originElement.getBoundingClientRect();\r\n        const originCenterX = originRect.left + (ORIGIN_WIDTH / 2);\r\n\r\n        positionStrategy.withPositions([{\r\n          originX: 'center',\r\n          originY: 'bottom',\r\n          overlayX: 'center',\r\n          overlayY: 'top'\r\n        }]);\r\n\r\n        attachOverlay({positionStrategy});\r\n\r\n        const overlayRect = overlayRef.overlayElement.getBoundingClientRect();\r\n        expect(Math.floor(overlayRect.top)).toBe(Math.floor(originRect.bottom));\r\n        expect(Math.floor(overlayRect.left)).toBe(Math.floor(originCenterX - (OVERLAY_WIDTH / 2)));\r\n      });\r\n\r\n      it('should center the overlay on the origin', () => {\r\n        const originRect = originElement.getBoundingClientRect();\r\n\r\n        positionStrategy.withPositions([{\r\n          originX: 'center',\r\n          originY: 'center',\r\n          overlayX: 'center',\r\n          overlayY: 'center'\r\n        }]);\r\n\r\n        attachOverlay({positionStrategy});\r\n\r\n        const overlayRect = overlayRef.overlayElement.getBoundingClientRect();\r\n        expect(Math.floor(overlayRect.top)).toBe(Math.floor(originRect.top));\r\n        expect(Math.floor(overlayRect.left)).toBe(Math.floor(originRect.left));\r\n      });\r\n    }\r\n  });\r\n\r\n  describe('with pushing', () => {\r\n    const OVERLAY_HEIGHT = DEFAULT_HEIGHT;\r\n    const OVERLAY_WIDTH = DEFAULT_WIDTH;\r\n\r\n    let originElement: HTMLElement;\r\n    let positionStrategy: FlexibleConnectedPositionStrategy;\r\n\r\n    beforeEach(() => {\r\n      originElement = createPositionedBlockElement();\r\n      document.body.appendChild(originElement);\r\n      positionStrategy = overlay.position()\r\n          .flexibleConnectedTo(originElement)\r\n          .withFlexibleDimensions(false)\r\n          .withPush();\r\n    });\r\n\r\n    afterEach(() => {\r\n      document.body.removeChild(originElement);\r\n    });\r\n\r\n    it('should be able to push an overlay into the viewport when it goes out on the right', () => {\r\n      originElement.style.top = '200px';\r\n      originElement.style.right = `${-OVERLAY_WIDTH / 2}px`;\r\n\r\n      positionStrategy.withPositions([{\r\n        originX: 'start',\r\n        originY: 'bottom',\r\n        overlayX: 'start',\r\n        overlayY: 'top'\r\n      }]);\r\n\r\n      attachOverlay({positionStrategy});\r\n\r\n      const overlayRect = overlayRef.overlayElement.getBoundingClientRect();\r\n      expect(Math.floor(overlayRect.right)).toBe(viewport.getViewportSize().width);\r\n    });\r\n\r\n    it('should be able to push an overlay into the viewport when it goes out on the left', () => {\r\n      originElement.style.top = '200px';\r\n      originElement.style.left = `${-OVERLAY_WIDTH / 2}px`;\r\n\r\n      positionStrategy.withPositions([{\r\n        originX: 'start',\r\n        originY: 'bottom',\r\n        overlayX: 'start',\r\n        overlayY: 'top'\r\n      }]);\r\n\r\n      attachOverlay({positionStrategy});\r\n\r\n      const overlayRect = overlayRef.overlayElement.getBoundingClientRect();\r\n      expect(Math.floor(overlayRect.left)).toBe(0);\r\n    });\r\n\r\n    it('should be able to push an overlay into the viewport when it goes out on the top', () => {\r\n      originElement.style.top = `${-OVERLAY_HEIGHT * 2}px`;\r\n      originElement.style.left = '200px';\r\n\r\n      positionStrategy.withPositions([{\r\n        originX: 'start',\r\n        originY: 'bottom',\r\n        overlayX: 'start',\r\n        overlayY: 'top'\r\n      }]);\r\n\r\n      attachOverlay({positionStrategy});\r\n\r\n      const overlayRect = overlayRef.overlayElement.getBoundingClientRect();\r\n      expect(Math.floor(overlayRect.top)).toBe(0);\r\n    });\r\n\r\n    it('should be able to push an overlay into the viewport when it goes out on the bottom', () => {\r\n      originElement.style.bottom = `${-OVERLAY_HEIGHT / 2}px`;\r\n      originElement.style.left = '200px';\r\n\r\n      positionStrategy.withPositions([{\r\n        originX: 'start',\r\n        originY: 'bottom',\r\n        overlayX: 'start',\r\n        overlayY: 'top'\r\n      }]);\r\n\r\n      attachOverlay({positionStrategy});\r\n\r\n      const overlayRect = overlayRef.overlayElement.getBoundingClientRect();\r\n      expect(Math.floor(overlayRect.bottom)).toBe(viewport.getViewportSize().height);\r\n    });\r\n\r\n    it('should set a margin when pushing the overlay into the viewport horizontally', () => {\r\n      originElement.style.top = '200px';\r\n      originElement.style.left = `${-OVERLAY_WIDTH / 2}px`;\r\n\r\n      positionStrategy\r\n        .withViewportMargin(15)\r\n        .withPositions([{\r\n          originX: 'start',\r\n          originY: 'bottom',\r\n          overlayX: 'start',\r\n          overlayY: 'top'\r\n        }]);\r\n\r\n      attachOverlay({positionStrategy});\r\n\r\n      const overlayRect = overlayRef.overlayElement.getBoundingClientRect();\r\n      expect(Math.floor(overlayRect.left)).toBe(15);\r\n    });\r\n\r\n    it('should set a margin when pushing the overlay into the viewport vertically', () => {\r\n      positionStrategy.withViewportMargin(15);\r\n\r\n      originElement.style.top = `${-OVERLAY_HEIGHT * 2}px`;\r\n      originElement.style.left = '200px';\r\n\r\n      positionStrategy\r\n        .withViewportMargin(15)\r\n        .withPositions([{\r\n          originX: 'start',\r\n          originY: 'bottom',\r\n          overlayX: 'start',\r\n          overlayY: 'top'\r\n        }]);\r\n\r\n      attachOverlay({positionStrategy});\r\n\r\n      const overlayRect = overlayRef.overlayElement.getBoundingClientRect();\r\n      expect(Math.floor(overlayRect.top)).toBe(15);\r\n    });\r\n\r\n  });\r\n\r\n  describe('with flexible dimensions', () => {\r\n    const OVERLAY_HEIGHT = DEFAULT_HEIGHT;\r\n    const OVERLAY_WIDTH = DEFAULT_WIDTH;\r\n\r\n    let originElement: HTMLElement;\r\n    let positionStrategy: FlexibleConnectedPositionStrategy;\r\n\r\n    beforeEach(() => {\r\n      originElement = createPositionedBlockElement();\r\n      document.body.appendChild(originElement);\r\n      positionStrategy = overlay.position().flexibleConnectedTo(originElement);\r\n    });\r\n\r\n    afterEach(() => {\r\n      document.body.removeChild(originElement);\r\n    });\r\n\r\n    it('should align the overlay to `flex-start` when the content is flowing to the right', () => {\r\n      positionStrategy\r\n        .withFlexibleDimensions()\r\n        .withPush(false)\r\n        .withPositions([{\r\n          overlayY: 'top',\r\n          overlayX: 'start',\r\n          originY: 'bottom',\r\n          originX: 'start'\r\n        }]);\r\n\r\n      attachOverlay({positionStrategy});\r\n\r\n      expect(overlayRef.hostElement.style.alignItems).toBe('flex-start');\r\n    });\r\n\r\n    it('should align the overlay to `flex-end` when the content is flowing to the left', () => {\r\n      positionStrategy\r\n        .withFlexibleDimensions()\r\n        .withPush(false)\r\n        .withPositions([{\r\n          overlayY: 'top',\r\n          overlayX: 'end',\r\n          originY: 'bottom',\r\n          originX: 'end'\r\n        }]);\r\n\r\n      attachOverlay({positionStrategy});\r\n\r\n      expect(overlayRef.hostElement.style.alignItems).toBe('flex-end');\r\n    });\r\n\r\n    it('should align the overlay to `center` when the content is centered', () => {\r\n      positionStrategy\r\n        .withFlexibleDimensions()\r\n        .withPush(false)\r\n        .withPositions([{\r\n          overlayY: 'top',\r\n          overlayX: 'center',\r\n          originY: 'bottom',\r\n          originX: 'center'\r\n        }]);\r\n\r\n      attachOverlay({positionStrategy});\r\n\r\n      expect(overlayRef.hostElement.style.alignItems).toBe('center');\r\n    });\r\n\r\n    it('should support offsets when centering', () => {\r\n      originElement.style.top = '200px';\r\n      originElement.style.left = '200px';\r\n\r\n      positionStrategy\r\n        .withFlexibleDimensions()\r\n        .withPush(false)\r\n        .withPositions([{\r\n          overlayY: 'center',\r\n          overlayX: 'center',\r\n          originY: 'center',\r\n          originX: 'center',\r\n          offsetY: 20,\r\n          offsetX: -15\r\n        }]);\r\n\r\n      attachOverlay({positionStrategy});\r\n\r\n      const originRect = originElement.getBoundingClientRect();\r\n      const originCenterX = originRect.left + (DEFAULT_WIDTH / 2);\r\n      const originCenterY = originRect.top + (DEFAULT_HEIGHT / 2);\r\n\r\n      const overlayRect = overlayRef.overlayElement.getBoundingClientRect();\r\n      const overlayCenterY = overlayRect.top + (OVERLAY_HEIGHT / 2);\r\n      const overlayCenterX = overlayRect.left + (OVERLAY_WIDTH / 2);\r\n\r\n      expect(overlayRef.overlayElement.style.transform)\r\n              .toBe('translateX(-15px) translateY(20px)');\r\n      expect(Math.floor(overlayCenterY)).toBe(Math.floor(originCenterY) + 20);\r\n      expect(Math.floor(overlayCenterX)).toBe(Math.floor(originCenterX) - 15);\r\n    });\r\n\r\n    it('should become scrollable when it hits the viewport edge with a flexible height', () => {\r\n      originElement.style.left = '200px';\r\n      originElement.style.bottom = `${OVERLAY_HEIGHT - 10}px`;\r\n\r\n      positionStrategy\r\n        .withFlexibleDimensions()\r\n        .withPush(false)\r\n        .withPositions([{\r\n          overlayY: 'top',\r\n          overlayX: 'start',\r\n          originY: 'bottom',\r\n          originX: 'start'\r\n        }]);\r\n\r\n      attachOverlay({positionStrategy});\r\n\r\n      const overlayRect = overlayRef.overlayElement.getBoundingClientRect();\r\n      expect(Math.floor(overlayRect.height)).toBe(OVERLAY_HEIGHT - 10);\r\n      expect(Math.floor(overlayRect.bottom)).toBe(viewport.getViewportSize().height);\r\n    });\r\n\r\n    it('should become scrollable when it hits the viewport edge with a flexible width', () => {\r\n      originElement.style.top = '200px';\r\n      originElement.style.right = '-20px';\r\n\r\n      positionStrategy\r\n        .withFlexibleDimensions()\r\n        .withPush(false)\r\n        .withPositions([{\r\n          overlayY: 'top',\r\n          overlayX: 'start',\r\n          originY: 'bottom',\r\n          originX: 'start'\r\n        }]);\r\n\r\n      attachOverlay({positionStrategy});\r\n\r\n      const overlayRect = overlayRef.overlayElement.getBoundingClientRect();\r\n      expect(Math.floor(overlayRect.width)).toBe(OVERLAY_WIDTH - 20);\r\n      expect(Math.floor(overlayRect.right)).toBe(viewport.getViewportSize().width);\r\n    });\r\n\r\n    it('should not collapse the height if the size is less than the minHeight', () => {\r\n      originElement.style.left = '200px';\r\n      originElement.style.bottom = `${OVERLAY_HEIGHT - 10}px`;\r\n\r\n      positionStrategy\r\n        .withFlexibleDimensions()\r\n        .withPositions([{\r\n          overlayY: 'top',\r\n          overlayX: 'start',\r\n          originY: 'bottom',\r\n          originX: 'start'\r\n        }]);\r\n\r\n      attachOverlay({\r\n        positionStrategy,\r\n        minHeight: OVERLAY_HEIGHT - 5\r\n      });\r\n\r\n      const overlayRect = overlayRef.overlayElement.getBoundingClientRect();\r\n      expect(Math.floor(overlayRect.height)).toBe(OVERLAY_HEIGHT);\r\n    });\r\n\r\n    it('should not collapse the width if the size is less than the minWidth', () => {\r\n      originElement.style.top = '200px';\r\n      originElement.style.right = '-20px';\r\n\r\n      positionStrategy\r\n        .withFlexibleDimensions()\r\n        .withPositions([{\r\n          overlayY: 'top',\r\n          overlayX: 'start',\r\n          originY: 'bottom',\r\n          originX: 'start'\r\n        }]);\r\n\r\n      attachOverlay({\r\n        minWidth: OVERLAY_WIDTH - 10,\r\n        positionStrategy\r\n      });\r\n\r\n      const overlayRect = overlayRef.overlayElement.getBoundingClientRect();\r\n      expect(Math.floor(overlayRect.width)).toBe(OVERLAY_WIDTH);\r\n    });\r\n\r\n    it('should take `weight` into account when determining which position to pick', () => {\r\n      originElement.style.top = '200px';\r\n      originElement.style.right = '25px';\r\n\r\n      positionStrategy\r\n        .withFlexibleDimensions()\r\n        .withPush(false)\r\n        .withPositions([\r\n          {\r\n            originX: 'end',\r\n            originY: 'top',\r\n            overlayX: 'start',\r\n            overlayY: 'bottom',\r\n            weight: 3\r\n          },\r\n          {\r\n            originX: 'end',\r\n            originY: 'center',\r\n            overlayX: 'start',\r\n            overlayY: 'center'\r\n          }\r\n        ]);\r\n\r\n      attachOverlay({positionStrategy});\r\n\r\n      const originRect = originElement.getBoundingClientRect();\r\n      const overlayRect = overlayRef.overlayElement.getBoundingClientRect();\r\n\r\n      expect(Math.floor(overlayRect.bottom)).toBe(Math.floor(originRect.top));\r\n      expect(Math.floor(overlayRect.left)).toBe(Math.floor(originRect.right));\r\n    });\r\n\r\n    it('should be able to opt-in to having the overlay grow after it was opened', () => {\r\n      originElement.style.left = '200px';\r\n      originElement.style.bottom = `${OVERLAY_HEIGHT - 10}px`;\r\n\r\n      positionStrategy\r\n        .withFlexibleDimensions()\r\n        .withPush(false)\r\n        .withGrowAfterOpen()\r\n        .withPositions([{\r\n          overlayY: 'top',\r\n          overlayX: 'start',\r\n          originY: 'bottom',\r\n          originX: 'start'\r\n        }]);\r\n\r\n      attachOverlay({positionStrategy});\r\n\r\n      let overlayRect = overlayRef.overlayElement.getBoundingClientRect();\r\n\r\n      // The overlay should be scrollable, because it hit the viewport edge.\r\n      expect(Math.floor(overlayRect.height)).toBe(OVERLAY_HEIGHT - 10);\r\n\r\n      originElement.style.bottom = '200px';\r\n      overlayRef.updatePosition();\r\n      overlayRect = overlayRef.overlayElement.getBoundingClientRect();\r\n\r\n      // The overlay should be back to full height.\r\n      expect(Math.floor(overlayRect.height)).toBe(OVERLAY_HEIGHT);\r\n    });\r\n\r\n    it('should calculate the `bottom` value correctly with upward-flowing content ' +\r\n      'and a scrolled page', () => {\r\n        const veryLargeElement = document.createElement('div');\r\n\r\n        originElement.style.left = '200px';\r\n        originElement.style.top = `200px`;\r\n\r\n        veryLargeElement.style.width = '100%';\r\n        veryLargeElement.style.height = '2000px';\r\n        document.body.appendChild(veryLargeElement);\r\n        window.scroll(0, 50);\r\n\r\n        positionStrategy\r\n          .withFlexibleDimensions()\r\n          .withPush(false)\r\n          .withPositions([{\r\n            overlayY: 'bottom',\r\n            overlayX: 'start',\r\n            originY: 'bottom',\r\n            originX: 'start'\r\n          }]);\r\n\r\n        attachOverlay({positionStrategy});\r\n\r\n        const overlayRect = overlayRef.overlayElement.getBoundingClientRect();\r\n        const originRect = originElement.getBoundingClientRect();\r\n\r\n        expect(Math.floor(overlayRect.bottom)).toBe(Math.floor(originRect.bottom));\r\n\r\n        window.scroll(0, 0);\r\n        document.body.removeChild(veryLargeElement);\r\n      });\r\n\r\n    it('should set the proper styles when the `bottom` value is exactly zero', () => {\r\n      originElement.style.position = 'fixed';\r\n      originElement.style.bottom = '0';\r\n      originElement.style.left = '200px';\r\n\r\n      positionStrategy\r\n        .withFlexibleDimensions()\r\n        .withPush(false)\r\n        .withPositions([{\r\n          overlayY: 'bottom',\r\n          overlayX: 'start',\r\n          originY: 'bottom',\r\n          originX: 'start'\r\n        }]);\r\n\r\n      attachOverlay({positionStrategy});\r\n\r\n      const boundingBox = overlayContainer\r\n        .getContainerElement()\r\n        .querySelector('.cdk-overlay-connected-position-bounding-box') as HTMLElement;\r\n\r\n      // Ensure that `0px` is set explicitly, rather than the\r\n      // property being left blank due to zero being falsy.\r\n      expect(boundingBox.style.bottom).toBe('0px');\r\n    });\r\n\r\n    it('should set the proper styles when the `top` value is exactly zero', () => {\r\n      originElement.style.position = 'fixed';\r\n      originElement.style.top = '0';\r\n      originElement.style.left = '200px';\r\n\r\n      positionStrategy\r\n        .withFlexibleDimensions()\r\n        .withPush(false)\r\n        .withPositions([{\r\n          overlayY: 'top',\r\n          overlayX: 'start',\r\n          originY: 'top',\r\n          originX: 'start'\r\n        }]);\r\n\r\n      attachOverlay({positionStrategy});\r\n\r\n      const boundingBox = overlayContainer\r\n        .getContainerElement()\r\n        .querySelector('.cdk-overlay-connected-position-bounding-box') as HTMLElement;\r\n\r\n      // Ensure that `0px` is set explicitly, rather than the\r\n      // property being left blank due to zero being falsy.\r\n      expect(boundingBox.style.top).toBe('0px');\r\n    });\r\n\r\n    it('should set the proper styles when the `left` value is exactly zero', () => {\r\n      originElement.style.position = 'fixed';\r\n      originElement.style.left = '0';\r\n      originElement.style.top = '200px';\r\n\r\n      positionStrategy\r\n        .withFlexibleDimensions()\r\n        .withPush(false)\r\n        .withPositions([{\r\n          overlayY: 'top',\r\n          overlayX: 'start',\r\n          originY: 'top',\r\n          originX: 'start'\r\n        }]);\r\n\r\n      attachOverlay({positionStrategy});\r\n\r\n      const boundingBox = overlayContainer\r\n        .getContainerElement()\r\n        .querySelector('.cdk-overlay-connected-position-bounding-box') as HTMLElement;\r\n\r\n      // Ensure that `0px` is set explicitly, rather than the\r\n      // property being left blank due to zero being falsy.\r\n      expect(boundingBox.style.left).toBe('0px');\r\n    });\r\n\r\n    it('should set the proper styles when the `right` value is exactly zero', () => {\r\n      originElement.style.position = 'fixed';\r\n      originElement.style.right = '0';\r\n      originElement.style.top = '200px';\r\n\r\n      positionStrategy\r\n        .withFlexibleDimensions()\r\n        .withPush(false)\r\n        .withPositions([{\r\n          overlayY: 'top',\r\n          overlayX: 'end',\r\n          originY: 'top',\r\n          originX: 'end'\r\n        }]);\r\n\r\n      attachOverlay({positionStrategy});\r\n\r\n      const boundingBox = overlayContainer\r\n        .getContainerElement()\r\n        .querySelector('.cdk-overlay-connected-position-bounding-box') as HTMLElement;\r\n\r\n      // Ensure that `0px` is set explicitly, rather than the\r\n      // property being left blank due to zero being falsy.\r\n      expect(boundingBox.style.right).toBe('0px');\r\n    });\r\n\r\n    it('should calculate the bottom offset correctly with a viewport margin', () => {\r\n      const viewportMargin = 5;\r\n\r\n      originElement.style.top = `${OVERLAY_HEIGHT / 2}px`;\r\n      originElement.style.right = '200px';\r\n\r\n      positionStrategy\r\n        .withFlexibleDimensions()\r\n        .withPush(false)\r\n        .withViewportMargin(viewportMargin)\r\n        .withPositions([\r\n          {\r\n            originX: 'start',\r\n            originY: 'top',\r\n            overlayX: 'start',\r\n            overlayY: 'bottom'\r\n          }\r\n        ]);\r\n\r\n      attachOverlay({positionStrategy});\r\n\r\n      const originRect = originElement.getBoundingClientRect();\r\n      const overlayRect = overlayRef.overlayElement.getBoundingClientRect();\r\n\r\n      expect(Math.floor(overlayRect.bottom)).toBe(Math.floor(originRect.top));\r\n      expect(Math.floor(overlayRect.top)).toBe(viewportMargin);\r\n    });\r\n\r\n  });\r\n\r\n  describe('onPositionChange with scrollable view properties', () => {\r\n    let scrollable: HTMLDivElement;\r\n    let positionChangeHandler: jasmine.Spy;\r\n    let onPositionChangeSubscription: Subscription;\r\n\r\n    beforeEach(() => {\r\n      // Set up the origin\r\n      const originElement = createBlockElement();\r\n      originElement.style.margin = '0 1000px 1000px 0';  // Added so that the container scrolls\r\n\r\n      // Create a scrollable container and put the origin inside\r\n      scrollable = createOverflowContainerElement();\r\n      document.body.appendChild(scrollable);\r\n      scrollable.appendChild(originElement);\r\n\r\n      // Create a strategy with knowledge of the scrollable container\r\n      const strategy = overlay.position()\r\n        .flexibleConnectedTo(originElement)\r\n        .withPush(false)\r\n        .withPositions([{\r\n          originX: 'start',\r\n          originY: 'bottom',\r\n          overlayX: 'start',\r\n          overlayY: 'top'\r\n        }]);\r\n\r\n      strategy.withScrollableContainers([\r\n        new CdkScrollable(new ElementRef(scrollable), null!, null!)\r\n      ]);\r\n\r\n      positionChangeHandler = jasmine.createSpy('positionChange handler');\r\n      onPositionChangeSubscription = strategy.positionChanges\r\n        .pipe(map(event => event.scrollableViewProperties))\r\n        .subscribe(positionChangeHandler);\r\n\r\n      attachOverlay({positionStrategy: strategy});\r\n    });\r\n\r\n    afterEach(() => {\r\n      onPositionChangeSubscription.unsubscribe();\r\n      document.body.removeChild(scrollable);\r\n    });\r\n\r\n    it('should not have origin or overlay clipped or out of view without scroll', () => {\r\n      expect(positionChangeHandler).toHaveBeenCalledWith(jasmine.objectContaining({\r\n        isOriginClipped: false,\r\n        isOriginOutsideView: false,\r\n        isOverlayClipped: false,\r\n        isOverlayOutsideView: false\r\n      }));\r\n    });\r\n\r\n    it('should evaluate if origin is clipped if scrolled slightly down', () => {\r\n      scrollable.scrollTop = 10;  // Clip the origin by 10 pixels\r\n      overlayRef.updatePosition();\r\n\r\n      expect(positionChangeHandler).toHaveBeenCalledWith(jasmine.objectContaining({\r\n        isOriginClipped: true,\r\n        isOriginOutsideView: false,\r\n        isOverlayClipped: false,\r\n        isOverlayOutsideView: false\r\n      }));\r\n    });\r\n\r\n    it('should evaluate if origin is out of view and overlay is clipped if scrolled enough', () => {\r\n      scrollable.scrollTop = 31;  // Origin is 30 pixels, move out of view and clip the overlay 1px\r\n      overlayRef.updatePosition();\r\n\r\n      expect(positionChangeHandler).toHaveBeenCalledWith(jasmine.objectContaining({\r\n        isOriginClipped: true,\r\n        isOriginOutsideView: true,\r\n        isOverlayClipped: true,\r\n        isOverlayOutsideView: false\r\n      }));\r\n    });\r\n\r\n    it('should evaluate the overlay and origin are both out of the view', () => {\r\n      scrollable.scrollTop = 61;  // Scroll by overlay height + origin height + 1px\r\n      overlayRef.updatePosition();\r\n\r\n      expect(positionChangeHandler).toHaveBeenCalledWith(jasmine.objectContaining({\r\n        isOriginClipped: true,\r\n        isOriginOutsideView: true,\r\n        isOverlayClipped: true,\r\n        isOverlayOutsideView: true\r\n      }));\r\n    });\r\n  });\r\n\r\n  describe('positioning properties', () => {\r\n    let originElement: HTMLElement;\r\n    let positionStrategy: FlexibleConnectedPositionStrategy;\r\n\r\n    beforeEach(() => {\r\n      originElement = createPositionedBlockElement();\r\n      document.body.appendChild(originElement);\r\n      positionStrategy = overlay.position().flexibleConnectedTo(originElement);\r\n    });\r\n\r\n    afterEach(() => {\r\n      document.body.removeChild(originElement);\r\n    });\r\n\r\n    describe('in ltr', () => {\r\n      it('should use `left` when positioning an element at the start', () => {\r\n        positionStrategy.withPositions([{\r\n          originX: 'start',\r\n          originY: 'top',\r\n          overlayX: 'start',\r\n          overlayY: 'top'\r\n        }]);\r\n\r\n        attachOverlay({positionStrategy});\r\n\r\n        expect(overlayRef.hostElement.style.left).toBeTruthy();\r\n        expect(overlayRef.hostElement.style.right).toBeFalsy();\r\n      });\r\n\r\n      it('should use `right` when positioning an element at the end', () => {\r\n        positionStrategy.withPositions([{\r\n          originX: 'end',\r\n          originY: 'top',\r\n          overlayX: 'end',\r\n          overlayY: 'top'\r\n        }]);\r\n\r\n        attachOverlay({positionStrategy});\r\n\r\n        expect(overlayRef.hostElement.style.right).toBeTruthy();\r\n        expect(overlayRef.hostElement.style.left).toBeFalsy();\r\n      });\r\n\r\n    });\r\n\r\n    describe('in rtl', () => {\r\n      it('should use `right` when positioning an element at the start', () => {\r\n        positionStrategy.withPositions([{\r\n          originX: 'start',\r\n          originY: 'top',\r\n          overlayX: 'start',\r\n          overlayY: 'top'\r\n        }]);\r\n\r\n        attachOverlay({\r\n          positionStrategy,\r\n          direction: 'rtl'\r\n        });\r\n\r\n        expect(overlayRef.hostElement.style.right).toBeTruthy();\r\n        expect(overlayRef.hostElement.style.left).toBeFalsy();\r\n      });\r\n\r\n      it('should use `left` when positioning an element at the end', () => {\r\n        positionStrategy.withPositions([{\r\n          originX: 'end',\r\n          originY: 'top',\r\n          overlayX: 'end',\r\n          overlayY: 'top'\r\n        }]);\r\n\r\n        attachOverlay({positionStrategy, direction: 'rtl'});\r\n\r\n        expect(overlayRef.hostElement.style.left).toBeTruthy();\r\n        expect(overlayRef.hostElement.style.right).toBeFalsy();\r\n      });\r\n    });\r\n\r\n    describe('vertical', () => {\r\n      it('should use `top` when positioning at element along the top', () => {\r\n        positionStrategy.withPositions([{\r\n          originX: 'start',\r\n          originY: 'top',\r\n          overlayX: 'start',\r\n          overlayY: 'top'\r\n        }]);\r\n\r\n        attachOverlay({positionStrategy});\r\n\r\n        expect(overlayRef.hostElement.style.top).toBeTruthy();\r\n        expect(overlayRef.hostElement.style.bottom).toBeFalsy();\r\n      });\r\n\r\n      it('should use `bottom` when positioning at element along the bottom', () => {\r\n        positionStrategy.withPositions([{\r\n          originX: 'start',\r\n          originY: 'bottom',\r\n          overlayX: 'start',\r\n          overlayY: 'bottom'\r\n        }]);\r\n\r\n        attachOverlay({positionStrategy});\r\n\r\n        expect(overlayRef.hostElement.style.bottom).toBeTruthy();\r\n        expect(overlayRef.hostElement.style.top).toBeFalsy();\r\n      });\r\n    });\r\n\r\n  });\r\n\r\n  describe('validations', () => {\r\n    let originElement: HTMLElement;\r\n    let positionStrategy: FlexibleConnectedPositionStrategy;\r\n\r\n    beforeEach(() => {\r\n      originElement = createPositionedBlockElement();\r\n      document.body.appendChild(originElement);\r\n      positionStrategy = overlay.position().flexibleConnectedTo(originElement);\r\n    });\r\n\r\n    afterEach(() => {\r\n      document.body.removeChild(originElement);\r\n      positionStrategy.dispose();\r\n    });\r\n\r\n    it('should throw when attaching without any positions', () => {\r\n      expect(() => positionStrategy.withPositions([])).toThrow();\r\n    });\r\n\r\n    it('should throw when passing in something that is missing a connection point', () => {\r\n      expect(() => {\r\n        positionStrategy.withPositions([{\r\n          originY: 'top',\r\n          overlayX: 'start',\r\n          overlayY: 'top'\r\n        } as any]);\r\n      }).toThrow();\r\n    });\r\n\r\n    it('should throw when passing in something that has an invalid X position', () => {\r\n      expect(() => {\r\n        positionStrategy.withPositions([{\r\n          originX: 'left',\r\n          originY: 'top',\r\n          overlayX: 'left',\r\n          overlayY: 'top'\r\n        } as any]);\r\n      }).toThrow();\r\n    });\r\n\r\n    it('should throw when passing in something that has an invalid Y position', () => {\r\n      expect(() => {\r\n        positionStrategy.withPositions([{\r\n          originX: 'start',\r\n          originY: 'middle',\r\n          overlayX: 'start',\r\n          overlayY: 'middle'\r\n        } as any]);\r\n      }).toThrow();\r\n    });\r\n  });\r\n\r\n});\r\n\r\n/** Creates an absolutely positioned, display: block element with a default size. */\r\nfunction createPositionedBlockElement() {\r\n  const element = createBlockElement();\r\n  element.style.position = 'absolute';\r\n  return element;\r\n}\r\n\r\n/** Creates a block element with a default size. */\r\nfunction createBlockElement() {\r\n  const element = document.createElement('div');\r\n  element.style.width = `${DEFAULT_WIDTH}px`;\r\n  element.style.height = `${DEFAULT_HEIGHT}px`;\r\n  element.style.backgroundColor = 'rebeccapurple';\r\n  element.style.zIndex = '100';\r\n  return element;\r\n}\r\n\r\n/** Creates an overflow container with a set height and width with margin. */\r\nfunction createOverflowContainerElement() {\r\n  const element = document.createElement('div');\r\n  element.style.position = 'relative';\r\n  element.style.overflow = 'auto';\r\n  element.style.height = '300px';\r\n  element.style.width = '300px';\r\n  element.style.margin = '100px';\r\n  return element;\r\n}\r\n\r\n\r\n@Component({\r\n  template: `\r\n    <div\r\n      class=\"transform-origin\"\r\n      style=\"width: ${DEFAULT_WIDTH}px; height: ${DEFAULT_HEIGHT}px;\"></div>\r\n  `\r\n})\r\nclass TestOverlay { }\r\n\r\n\r\n@NgModule({\r\n  imports: [OverlayModule, PortalModule],\r\n  exports: [TestOverlay],\r\n  declarations: [TestOverlay],\r\n  entryComponents: [TestOverlay],\r\n})\r\nclass OverlayTestModule { }\r\n"]}