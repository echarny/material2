{"version":3,"file":"block-scroll-strategy.spec.js","sourceRoot":"","sources":["../../../../../src/cdk/overlay/scroll/block-scroll-strategy.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import {Component, NgModule} from '@angular/core';\r\nimport {async, inject, TestBed} from '@angular/core/testing';\r\nimport {ComponentPortal, PortalModule} from '@angular/cdk/portal';\r\nimport {Platform} from '@angular/cdk/platform';\r\nimport {ViewportRuler} from '@angular/cdk/scrolling';\r\nimport {Overlay, OverlayContainer, OverlayModule, OverlayRef, OverlayConfig} from '../index';\r\n\r\n\r\ndescribe('BlockScrollStrategy', () => {\r\n  let platform: Platform;\r\n  let viewport: ViewportRuler;\r\n  let overlayRef: OverlayRef;\r\n  let componentPortal: ComponentPortal<FocacciaMsg>;\r\n  let forceScrollElement: HTMLElement;\r\n\r\n  beforeEach(async(() => {\r\n    // Ensure a clean state for every test.\r\n    document.documentElement.classList.remove('cdk-global-scrollblock');\r\n\r\n    TestBed.configureTestingModule({\r\n      imports: [OverlayModule, PortalModule, OverlayTestModule]\r\n    }).compileComponents();\r\n  }));\r\n\r\n  beforeEach(inject([Overlay, ViewportRuler, Platform],\r\n    (overlay: Overlay, viewportRuler: ViewportRuler, _platform: Platform) => {\r\n    let overlayConfig = new OverlayConfig({scrollStrategy: overlay.scrollStrategies.block()});\r\n\r\n    overlayRef = overlay.create(overlayConfig);\r\n    componentPortal = new ComponentPortal(FocacciaMsg);\r\n\r\n    viewport = viewportRuler;\r\n    forceScrollElement = document.createElement('div');\r\n    document.body.appendChild(forceScrollElement);\r\n    forceScrollElement.style.width = '100px';\r\n    forceScrollElement.style.height = '3000px';\r\n    forceScrollElement.style.background = 'rebeccapurple';\r\n    platform = _platform;\r\n  }));\r\n\r\n  afterEach(inject([OverlayContainer], (container: OverlayContainer) => {\r\n    overlayRef.dispose();\r\n    document.body.removeChild(forceScrollElement);\r\n    window.scroll(0, 0);\r\n    container.getContainerElement().parentNode!.removeChild(container.getContainerElement());\r\n  }));\r\n\r\n  it('should toggle scroll blocking along the y axis', skipIOS(() => {\r\n    window.scroll(0, 100);\r\n    expect(viewport.getViewportScrollPosition().top)\r\n        .toBe(100, 'Expected viewport to be scrollable initially.');\r\n\r\n    overlayRef.attach(componentPortal);\r\n    expect(document.documentElement.style.top)\r\n        .toBe('-100px', 'Expected <html> element to be offset by the previous scroll amount.');\r\n\r\n    window.scroll(0, 300);\r\n    expect(viewport.getViewportScrollPosition().top)\r\n        .toBe(100, 'Expected the viewport not to scroll.');\r\n\r\n    overlayRef.detach();\r\n    expect(viewport.getViewportScrollPosition().top)\r\n        .toBe(100, 'Expected old scroll position to have bee restored after disabling.');\r\n\r\n    window.scroll(0, 300);\r\n    expect(viewport.getViewportScrollPosition().top)\r\n        .toBe(300, 'Expected user to be able to scroll after disabling.');\r\n  }));\r\n\r\n\r\n  it('should toggle scroll blocking along the x axis', skipIOS(() => {\r\n    forceScrollElement.style.height = '100px';\r\n    forceScrollElement.style.width = '3000px';\r\n\r\n    window.scroll(100, 0);\r\n    expect(viewport.getViewportScrollPosition().left)\r\n        .toBe(100, 'Expected viewport to be scrollable initially.');\r\n\r\n    overlayRef.attach(componentPortal);\r\n    expect(document.documentElement.style.left)\r\n        .toBe('-100px', 'Expected <html> element to be offset by the previous scroll amount.');\r\n\r\n    window.scroll(300, 0);\r\n    expect(viewport.getViewportScrollPosition().left)\r\n        .toBe(100, 'Expected the viewport not to scroll.');\r\n\r\n    overlayRef.detach();\r\n    expect(viewport.getViewportScrollPosition().left)\r\n        .toBe(100, 'Expected old scroll position to have bee restored after disabling.');\r\n\r\n    window.scroll(300, 0);\r\n    expect(viewport.getViewportScrollPosition().left)\r\n        .toBe(300, 'Expected user to be able to scroll after disabling.');\r\n  }));\r\n\r\n\r\n  it('should toggle the `cdk-global-scrollblock` class', skipIOS(() => {\r\n    expect(document.documentElement.classList).not.toContain('cdk-global-scrollblock');\r\n\r\n    overlayRef.attach(componentPortal);\r\n    expect(document.documentElement.classList).toContain('cdk-global-scrollblock');\r\n\r\n    overlayRef.detach();\r\n    expect(document.documentElement.classList).not.toContain('cdk-global-scrollblock');\r\n  }));\r\n\r\n  it('should restore any previously-set inline styles', skipIOS(() => {\r\n    const root = document.documentElement;\r\n\r\n    root.style.top = '13px';\r\n    root.style.left = '37px';\r\n\r\n    overlayRef.attach(componentPortal);\r\n\r\n    expect(root.style.top).not.toBe('13px');\r\n    expect(root.style.left).not.toBe('37px');\r\n\r\n    overlayRef.detach();\r\n\r\n    expect(root.style.top).toBe('13px');\r\n    expect(root.style.left).toBe('37px');\r\n  }));\r\n\r\n  it(`should't do anything if the page isn't scrollable`, skipIOS(() => {\r\n    forceScrollElement.style.display = 'none';\r\n    overlayRef.attach(componentPortal);\r\n    expect(document.documentElement.classList).not.toContain('cdk-global-scrollblock');\r\n  }));\r\n\r\n\r\n  it('should keep the content width', () => {\r\n    forceScrollElement.style.width = '100px';\r\n\r\n    const previousContentWidth = document.documentElement.getBoundingClientRect().width;\r\n\r\n    overlayRef.attach(componentPortal);\r\n\r\n    expect(document.documentElement.getBoundingClientRect().width).toBe(previousContentWidth);\r\n  });\r\n\r\n  it('should not clobber user-defined scroll-behavior', skipIOS(() => {\r\n    const root = document.documentElement;\r\n    const body = document.body;\r\n\r\n    root.style['scrollBehavior'] = body.style['scrollBehavior'] = 'smooth';\r\n\r\n    // Get the value via the style declaration in order to\r\n    // handle browsers that don't support the property yet.\r\n    const initialRootValue = root.style['scrollBehavior'];\r\n    const initialBodyValue = root.style['scrollBehavior'];\r\n\r\n    overlayRef.attach(componentPortal);\r\n    overlayRef.detach();\r\n\r\n    expect(root.style['scrollBehavior']).toBe(initialRootValue);\r\n    expect(body.style['scrollBehavior']).toBe(initialBodyValue);\r\n\r\n    // Avoid bleeding styles into other tests.\r\n    root.style['scrollBehavior'] = body.style['scrollBehavior'] = '';\r\n  }));\r\n\r\n  /**\r\n   * Skips the specified test, if it is being executed on iOS. This is necessary, because\r\n   * programmatic scrolling inside the Karma iframe doesn't work on iOS, which renders these\r\n   * tests unusable. For example, something as basic as the following won't work:\r\n   * ```\r\n   * window.scroll(0, 100);\r\n   * expect(viewport.getViewportScrollPosition().top).toBe(100);\r\n   * ```\r\n   * @param spec Test to be executed or skipped.\r\n   */\r\n  function skipIOS(spec: Function) {\r\n    return () => {\r\n      if (!platform.IOS) {\r\n        spec();\r\n      }\r\n    };\r\n  }\r\n\r\n});\r\n\r\n\r\n/** Simple component that we can attach to the overlay. */\r\n@Component({template: '<p>Focaccia</p>'})\r\nclass FocacciaMsg { }\r\n\r\n\r\n/** Test module to hold the component. */\r\n@NgModule({\r\n  imports: [OverlayModule, PortalModule],\r\n  declarations: [FocacciaMsg],\r\n  entryComponents: [FocacciaMsg],\r\n})\r\nclass OverlayTestModule { }\r\n"]}