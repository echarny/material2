{"version":3,"file":"overlay-container.spec.js","sourceRoot":"","sources":["../../../../src/cdk/overlay/overlay-container.spec.ts"],"names":[],"mappings":";;AAAA,iDAA6D;AAC7D,sCAA+E;AAC/E,8CAA4D;AAC5D,iCAAiE;AAEjE,QAAQ,CAAC,kBAAkB,EAAE;IAC3B,IAAI,OAAgB,CAAC;IACrB,IAAI,gBAAkC,CAAC;IAEvC,UAAU,CAAC,eAAK,CAAC;QACf,iBAAO,CAAC,sBAAsB,CAAC;YAC7B,OAAO,EAAE,CAAC,iBAAiB,CAAC;SAC7B,CAAC,CAAC,iBAAiB,EAAE,CAAC;KACxB,CAAC,CAAC,CAAC;IAEJ,UAAU,CAAC,gBAAM,CAAC,CAAC,eAAO,EAAE,wBAAgB,CAAC,EAAE,UAAC,CAAU,EAAE,EAAoB;QAC9E,OAAO,GAAG,CAAC,CAAC;QACZ,gBAAgB,GAAG,EAAE,CAAC;KACvB,CAAC,CAAC,CAAC;IAEJ,SAAS,CAAC;QACR,gBAAgB,CAAC,WAAW,EAAE,CAAC;KAChC,CAAC,CAAC;IAEH,EAAE,CAAC,yEAAyE,EAAE;QAC5E,IAAM,OAAO,GAAG,iBAAO,CAAC,eAAe,CAAC,gCAAgC,CAAC,CAAC;QAE1E,IAAM,UAAU,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC;QACpC,UAAU,CAAC,MAAM,CAAC,OAAO,CAAC,iBAAiB,CAAC,cAAc,CAAC,CAAC;QAC5D,OAAO,CAAC,aAAa,EAAE,CAAC;QAExB,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,wBAAwB,CAAC,CAAC;aACnD,GAAG,CAAC,QAAQ,CAAC,0EAA0E,CAAC,CAAC;;;QAI9F,gBAAgB,CAAC,WAAW,EAAE,CAAC;QAE/B,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,wBAAwB,CAAC,CAAC;aACnD,QAAQ,CAAC,yEAAyE,CAAC,CAAC;KAC1F,CAAC,CAAC;IAEH,EAAE,CAAC,8DAA8D,EAAE;QACjE,gBAAgB,CAAC,mBAAmB,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC;QAE1E,IAAM,gBAAgB,GAAG,CAAA,QAAQ,CAAC,aAAa,CAAC,wBAAwB,CAAE,CAAA,CAAC;QAC3E,MAAM,CAAC,gBAAgB,CAAC,SAAS,CAAC,QAAQ,CAAC,mBAAmB,CAAC,CAAC;aAC3D,IAAI,CAAC,IAAI,EAAE,kEAAkE,CAAC,CAAC;QAEpF,gBAAgB,CAAC,mBAAmB,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,mBAAmB,CAAC,CAAC;QAE7E,MAAM,CAAC,gBAAgB,CAAC,SAAS,CAAC,QAAQ,CAAC,mBAAmB,CAAC,CAAC;aAC3D,IAAI,CAAC,KAAK,EAAE,sEAAsE,CAAC,CAAC;KAC1F,CAAC,CAAC;CACJ,CAAC,CAAC;;;IAUD,0CAAmB,gBAAkC;QAAlC,qBAAgB,GAAhB,gBAAgB,CAAkB;KAAK;;gBAP3D,gBAAS,SAAC;oBACT,QAAQ,EAAE,4CAA4C;oBACtD,SAAS,EAAE,CAAC,eAAO,CAAC;iBACrB;;;;gBA3DuC,uBAAgB;;;mCA6DrD,gBAAS,SAAC,kBAAS;;2CA9DtB;;;;;;gBAmEC,eAAQ,SAAC;oBACR,OAAO,EAAE,CAAC,qBAAa,EAAE,qBAAY,CAAC;oBACtC,YAAY,EAAE,CAAC,gCAAgC,CAAC;iBACjD;;4BAtED","sourcesContent":["import {async, inject, TestBed} from '@angular/core/testing';\r\nimport {Component, NgModule, ViewChild, ViewContainerRef} from '@angular/core';\r\nimport {PortalModule, CdkPortal} from '@angular/cdk/portal';\r\nimport {Overlay, OverlayContainer, OverlayModule} from './index';\r\n\r\ndescribe('OverlayContainer', () => {\r\n  let overlay: Overlay;\r\n  let overlayContainer: OverlayContainer;\r\n\r\n  beforeEach(async(() => {\r\n    TestBed.configureTestingModule({\r\n      imports: [OverlayTestModule]\r\n    }).compileComponents();\r\n  }));\r\n\r\n  beforeEach(inject([Overlay, OverlayContainer], (o: Overlay, oc: OverlayContainer) => {\r\n    overlay = o;\r\n    overlayContainer = oc;\r\n  }));\r\n\r\n  afterEach(() => {\r\n    overlayContainer.ngOnDestroy();\r\n  });\r\n\r\n  it('should remove the overlay container element from the DOM on destruction', () => {\r\n    const fixture = TestBed.createComponent(TestComponentWithTemplatePortals);\r\n\r\n    const overlayRef = overlay.create();\r\n    overlayRef.attach(fixture.componentInstance.templatePortal);\r\n    fixture.detectChanges();\r\n\r\n    expect(document.querySelector('.cdk-overlay-container'))\r\n        .not.toBeNull('Expected the overlay container to be in the DOM after opening an overlay');\r\n\r\n    // Manually call `ngOnDestroy` because there is no way to force Angular to destroy an\r\n    // injectable in a unit test.\r\n    overlayContainer.ngOnDestroy();\r\n\r\n    expect(document.querySelector('.cdk-overlay-container'))\r\n        .toBeNull('Expected the overlay container *not* to be in the DOM after destruction');\r\n  });\r\n\r\n  it('should add and remove css classes from the container element', () => {\r\n    overlayContainer.getContainerElement().classList.add('commander-shepard');\r\n\r\n    const containerElement = document.querySelector('.cdk-overlay-container')!;\r\n    expect(containerElement.classList.contains('commander-shepard'))\r\n        .toBe(true, 'Expected the overlay container to have class \"commander-shepard\"');\r\n\r\n    overlayContainer.getContainerElement().classList.remove('commander-shepard');\r\n\r\n    expect(containerElement.classList.contains('commander-shepard'))\r\n        .toBe(false, 'Expected the overlay container not to have class \"commander-shepard\"');\r\n  });\r\n});\r\n\r\n/** Test-bed component that contains a TempatePortal and an ElementRef. */\r\n@Component({\r\n  template: `<ng-template cdk-portal>Cake</ng-template>`,\r\n  providers: [Overlay],\r\n})\r\nclass TestComponentWithTemplatePortals {\r\n  @ViewChild(CdkPortal) templatePortal: CdkPortal;\r\n\r\n  constructor(public viewContainerRef: ViewContainerRef) { }\r\n}\r\n\r\n@NgModule({\r\n  imports: [OverlayModule, PortalModule],\r\n  declarations: [TestComponentWithTemplatePortals]\r\n})\r\nclass OverlayTestModule { }\r\n"]}