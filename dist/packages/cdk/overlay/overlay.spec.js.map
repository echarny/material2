{"version":3,"file":"overlay.spec.js","sourceRoot":"","sources":["../../../../src/cdk/overlay/overlay.spec.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,iDAAgG;AAChG,sCASuB;AACvB,0CAA4D;AAC5D,gDAAmE;AACnE,8CAK6B;AAC7B,iCAQiB;AAGjB,QAAQ,CAAC,SAAS,EAAE;IAClB,IAAI,OAAgB,CAAC;IACrB,IAAI,eAA0C,CAAC;IAC/C,IAAI,cAA8B,CAAC;IACnC,IAAI,uBAAoC,CAAC;IACzC,IAAI,gBAAkC,CAAC;IACvC,IAAI,oBAAwE,CAAC;IAC7E,IAAI,GAAc,CAAC;IACnB,IAAI,IAAgB,CAAC;IAErB,UAAU,CAAC,eAAK,CAAC;QACf,GAAG,GAAG,KAAK,CAAC;QACZ,iBAAO,CAAC,sBAAsB,CAAC;YAC7B,OAAO,EAAE,CAAC,qBAAa,EAAE,qBAAY,EAAE,iBAAiB,CAAC;YACzD,SAAS,EAAE;gBACT;oBACE,OAAO,EAAE,qBAAc;oBACvB,UAAU,EAAE;wBACV,IAAM,kBAAkB,GAAG,EAAE,CAAC;wBAC9B,MAAM,CAAC,cAAc,CAAC,kBAAkB,EAAE,OAAO,EAAE,EAAC,GAAG,EAAE,cAAM,OAAA,GAAG,EAAH,CAAG,EAAC,CAAC,CAAC;wBACrE,MAAM,CAAC,kBAAkB,CAAC;qBAC3B;iBACF;gBACD;oBACE,OAAO,EAAE,aAAM;oBACf,UAAU,EAAE,cAAM,OAAA,IAAI,GAAG,IAAI,oBAAU,EAAE,EAAvB,CAAuB;iBAC1C;aACF;SACF,CAAC,CAAC,iBAAiB,EAAE,CAAC;KACxB,CAAC,CAAC,CAAC;IAEJ,UAAU,CAAC,gBAAM,CAAC,CAAC,eAAO,EAAE,wBAAgB,CAAC,EAAE,UAAC,CAAU,EAAE,EAAoB;QAC9E,OAAO,GAAG,CAAC,CAAC;QACZ,gBAAgB,GAAG,EAAE,CAAC;QACtB,uBAAuB,GAAG,EAAE,CAAC,mBAAmB,EAAE,CAAC;QAEnD,IAAI,OAAO,GAAG,iBAAO,CAAC,eAAe,CAAC,gCAAgC,CAAC,CAAC;QACxE,OAAO,CAAC,aAAa,EAAE,CAAC;QACxB,cAAc,GAAG,OAAO,CAAC,iBAAiB,CAAC,cAAc,CAAC;QAC1D,eAAe,GAAG,IAAI,wBAAe,CAAC,QAAQ,EAAE,OAAO,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,CAAC;QAC5F,oBAAoB,GAAG,OAAO,CAAC;KAChC,CAAC,CAAC,CAAC;IAEJ,SAAS,CAAC;QACR,gBAAgB,CAAC,WAAW,EAAE,CAAC;KAChC,CAAC,CAAC;IAEH,EAAE,CAAC,yCAAyC,EAAE;QAC5C,IAAI,UAAU,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC;QAClC,UAAU,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;QAEnC,MAAM,CAAC,uBAAuB,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;QAE/D,UAAU,CAAC,OAAO,EAAE,CAAC;QACrB,MAAM,CAAC,uBAAuB,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC1D,MAAM,CAAC,uBAAuB,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;KACtD,CAAC,CAAC;IAEH,EAAE,CAAC,+CAA+C,EAAE;QAClD,IAAI,UAAU,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC;QAClC,UAAU,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;QAElC,MAAM,CAAC,uBAAuB,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;QAE9D,UAAU,CAAC,OAAO,EAAE,CAAC;QACrB,MAAM,CAAC,uBAAuB,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC1D,MAAM,CAAC,uBAAuB,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;KACtD,CAAC,CAAC;IAEH,EAAE,CAAC,+DAA+D,EAAE;QAClE,IAAI,UAAU,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC;QAClC,IAAI,WAAW,GAAG,UAAU,CAAC,cAAc,CAAC;QAE5C,UAAU,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;QACnC,oBAAoB,CAAC,aAAa,EAAE,CAAC;QAErC,MAAM,CAAC,WAAW,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAClD,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,aAAa,CAAC;aACpC,IAAI,CAAC,MAAM,EAAE,kEAAkE,CAAC,CAAC;QAEpF,UAAU,CAAC,MAAM,EAAE,CAAC;QAEpB,MAAM,CAAC,WAAW,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC9C,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,aAAa,CAAC;aACpC,IAAI,CAAC,MAAM,EAAE,mEAAmE,CAAC,CAAC;KACtF,CAAC,CAAC;IAEH,EAAE,CAAC,+BAA+B,EAAE;QAClC,IAAI,eAAe,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC;QACvC,eAAe,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;QAExC,IAAI,cAAc,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC;QACtC,cAAc,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;QAEtC,MAAM,CAAC,uBAAuB,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC1D,MAAM,CAAC,uBAAuB,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;QAC/D,MAAM,CAAC,uBAAuB,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;QAE9D,eAAe,CAAC,OAAO,EAAE,CAAC;QAC1B,MAAM,CAAC,uBAAuB,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC1D,MAAM,CAAC,uBAAuB,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;QAE9D,cAAc,CAAC,OAAO,EAAE,CAAC;QACzB,MAAM,CAAC,uBAAuB,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QAC1D,MAAM,CAAC,uBAAuB,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;KACtD,CAAC,CAAC;IAEH,EAAE,CAAC,iEAAiE,EAAE,CAAC;QACrE,IAAI,eAAe,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC;QACvC,IAAI,cAAc,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC;QAEtC,eAAe,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;QACxC,cAAc,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;QAEtC,MAAM,CAAC,eAAe,CAAC,WAAW,CAAC,WAAW,CAAC;aAC1C,UAAU,CAAC,qCAAqC,CAAC,CAAC;QACvD,MAAM,CAAC,cAAc,CAAC,WAAW,CAAC,WAAW,CAAC;aACzC,SAAS,CAAC,6BAA6B,CAAC,CAAC;QAE9C,eAAe,CAAC,OAAO,EAAE,CAAC;QAC1B,cAAc,CAAC,MAAM,EAAE,CAAC;QAExB,eAAe,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC;QACnC,eAAe,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;QACxC,cAAc,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;QAEtC,MAAM,CAAC,eAAe,CAAC,WAAW,CAAC,WAAW,CAAC;aAC1C,UAAU,CAAC,2CAA2C,CAAC,CAAC;QAC7D,MAAM,CAAC,cAAc,CAAC,WAAW,CAAC,WAAW,CAAC;aACzC,SAAS,CAAC,mCAAmC,CAAC,CAAC;KACrD,CAAC,CAAC,CAAC;IAEJ,EAAE,CAAC,kEAAkE,EAAE;QACrE,GAAG,GAAG,KAAK,CAAC;QACZ,IAAM,UAAU,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC;QAEpC,UAAU,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;QACnC,MAAM,CAAC,UAAU,CAAC,WAAW,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAChE,CAAC,CAAC;IAEH,EAAE,CAAC,0BAA0B,EAAE;QAC7B,IAAM,MAAM,GAAG,IAAI,qBAAa,CAAC,EAAC,SAAS,EAAE,KAAK,EAAC,CAAC,CAAC;QACrD,IAAM,UAAU,GAAG,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QAE1C,UAAU,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;QAEnC,MAAM,CAAC,UAAU,CAAC,WAAW,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAChE,CAAC,CAAC;IAEH,EAAE,CAAC,yCAAyC,EAAE;QAC5C,IAAI,UAAU,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC;QAClC,IAAI,GAAG,GAAG,OAAO,CAAC,SAAS,CAAC,iBAAiB,CAAC,CAAC;QAE/C,UAAU,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;QACxC,UAAU,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;QAEnC,MAAM,CAAC,GAAG,CAAC,CAAC,gBAAgB,EAAE,CAAC;KAChC,CAAC,CAAC;IAEH,EAAE,CAAC,uEAAuE,EAAE;QAC1E,IAAI,MAAM,GAAG,IAAI,qBAAa,CAAC,EAAC,WAAW,EAAE,IAAI,EAAC,CAAC,CAAC;QACpD,IAAI,UAAU,GAAG,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QAExC,UAAU,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC;YACjC,MAAM,CAAC,uBAAuB,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;iBACjD,UAAU,CAAC,6CAA6C,CAAC,CAAC;YAE/D,MAAM,CAAC,uBAAuB,CAAC,aAAa,CAAC,uBAAuB,CAAC,CAAC;iBACjE,UAAU,CAAC,8CAA8C,CAAC,CAAC;SACjE,CAAC,CAAC;QAEH,UAAU,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;KACpC,CAAC,CAAC;IAEH,EAAE,CAAC,yCAAyC,EAAE;QAC5C,IAAI,UAAU,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC;QAClC,IAAI,GAAG,GAAG,OAAO,CAAC,SAAS,CAAC,iBAAiB,CAAC,CAAC;QAE/C,UAAU,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;QACxC,UAAU,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;QACnC,UAAU,CAAC,MAAM,EAAE,CAAC;QAEpB,MAAM,CAAC,GAAG,CAAC,CAAC,gBAAgB,EAAE,CAAC;KAChC,CAAC,CAAC;IAEH,EAAE,CAAC,2EAA2E,EAAE;QAC9E,IAAI,UAAU,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC;QAClC,IAAI,GAAG,GAAG,OAAO,CAAC,SAAS,CAAC,iBAAiB,CAAC,CAAC;QAE/C,UAAU,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;QACxC,UAAU,CAAC,MAAM,EAAE,CAAC;QAEpB,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,gBAAgB,EAAE,CAAC;KACpC,CAAC,CAAC;IAEH,EAAE,CAAC,iFAAiF,EAAE;QACpF,IAAI,UAAU,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC;QAClC,IAAI,GAAG,GAAG,OAAO,CAAC,SAAS,CAAC,iBAAiB,CAAC,CAAC;QAE/C,UAAU,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;QACxC,UAAU,CAAC,OAAO,EAAE,CAAC;QAErB,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,gBAAgB,EAAE,CAAC;KACpC,CAAC,CAAC;IAEH,EAAE,CAAC,4EAA4E,EAAE;QAC/E,IAAI,UAAU,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC;QAElC,UAAU,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC;YACjC,MAAM,CAAC,uBAAuB,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;iBACjD,SAAS,CAAC,6CAA6C,CAAC,CAAC;SAC/D,CAAC,CAAC;QAEH,UAAU,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;QACnC,UAAU,CAAC,MAAM,EAAE,CAAC;KACrB,CAAC,CAAC;IAEH,EAAE,CAAC,sEAAsE,EAAE;QACzE,IAAI,UAAU,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC;QAClC,IAAI,UAAU,GAAG,OAAO,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;QAClD,IAAI,iBAAiB,GAAG,OAAO,CAAC,SAAS,CAAC,uBAAuB,CAAC,CAAC;QACnE,IAAI,iBAAiB,GAAG,OAAO,CAAC,SAAS,CAAC,uBAAuB,CAAC,CAAC;QAEnE,UAAU,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,SAAS,EAAE,SAAS,EAAE,iBAAiB,CAAC,CAAC;QAC5E,UAAU,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,UAAU,EAAE,SAAS,EAAE,iBAAiB,CAAC,CAAC;QAE7E,UAAU,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;QACnC,UAAU,CAAC,OAAO,EAAE,CAAC;QAErB,MAAM,CAAC,UAAU,CAAC,CAAC,gBAAgB,EAAE,CAAC;QACtC,MAAM,CAAC,iBAAiB,CAAC,CAAC,gBAAgB,EAAE,CAAC;QAC7C,MAAM,CAAC,iBAAiB,CAAC,CAAC,gBAAgB,EAAE,CAAC;KAC9C,CAAC,CAAC;IAEH,EAAE,CAAC,qEAAqE,EAAE;QACxE,IAAI,UAAU,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC;QAClC,IAAI,aAAa,GAAa,EAAE,CAAC;QAEjC,UAAU,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,SAAS,EAAE,SAAS,EAAE,cAAM,OAAA,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,EAA5B,CAA4B,CAAC,CAAC;QAC7F,UAAU,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,SAAS,EAAE,SAAS,EAAE,cAAM,OAAA,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,EAA5B,CAA4B,CAAC,CAAC;QAE7F,UAAU,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;QACnC,UAAU,CAAC,OAAO,EAAE,CAAC;QAErB,MAAM,CAAC,aAAa,CAAC,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC,CAAC;KACrD,CAAC,CAAC;IAEH,EAAE,CAAC,qCAAqC,EAAE;QACxC,IAAM,UAAU,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC;QACpC,MAAM,CAAC,UAAU,CAAC,SAAS,EAAE,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KACtD,CAAC,CAAC;IAEH,EAAE,CAAC,yDAAyD,EAAE;QAC5D,IAAM,UAAU,GAAG,OAAO,CAAC,MAAM,CAAC,EAAC,SAAS,EAAE,SAAS,EAAC,CAAC,CAAC;QAC1D,MAAM,CAAC,UAAU,CAAC,SAAS,EAAE,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KACtD,CAAC,CAAC;IAEH,EAAE,CAAC,wDAAwD,EAAE,mBAAS,CAAC;QACrE,IAAM,UAAU,GAAG,OAAO,CAAC,MAAM,CAAC,EAAC,WAAW,EAAE,IAAI,EAAC,CAAC,CAAC;QACvD,UAAU,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;QAEnC,MAAM,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,UAAU,CAAC,sCAAsC,CAAC,CAAC;QAClF,MAAM,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC,UAAU,CAAC,yCAAyC,CAAC,CAAC;QACxF,MAAM,CAAC,UAAU,CAAC,eAAe,CAAC,CAAC,UAAU,CAAC,0CAA0C,CAAC,CAAC;QAE1F,UAAU,CAAC,OAAO,EAAE,CAAC;QACrB,cAAI,CAAC,GAAG,CAAC,CAAC;QAEV,MAAM,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,6CAA6C,CAAC,CAAC;QACxF,MAAM,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC,SAAS,CAAC,gDAAgD,CAAC,CAAC;QAC9F,MAAM,CAAC,UAAU,CAAC,eAAe,CAAC,CAAC,SAAS,CAAC,iDAAiD,CAAC,CAAC;KACjG,CAAC,CAAC,CAAC;IAEJ,EAAE,CAAC,oEAAoE,EAAE,mBAAS,CAAC;QACjF,IAAM,UAAU,GAAG,OAAO,CAAC,MAAM,CAAC,EAAC,WAAW,EAAE,IAAI,EAAC,CAAC,CAAC;QAEvD,UAAU,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;QACnC,UAAU,CAAC,MAAM,EAAE,CAAC;QAEpB,IAAM,QAAQ,GAAG,CAAA,uBAAuB,CAAC,aAAa,CAAC,uBAAuB,CAAE,CAAA,CAAC;QACjF,2BAAiB,CAAC,QAAQ,EAAE,eAAe,CAAC,CAAC;;;KAI9C,CAAC,CAAC,CAAC;IAEJ,EAAE,CAAC,wEAAwE,EAAE;;;YAG1C,sCAAY;YAC3C,4BAAoB,QAAiB;gBAArC,YAAyC,iBAAO,SAAG;gBAA/B,cAAQ,GAAR,QAAQ,CAAS;;aAAc;YAEnD,wCAAW,GAAX,UAAY,KAAU;gBACpB,IAAM,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAC,WAAW,EAAE,CAAC,CAAC,KAAK,EAAC,CAAC,CAAC;gBAChE,UAAU,CAAC,OAAO,EAAE,CAAC;aACtB;;wBAPF,iBAAU;;;;wBA1Sb,eAAO;;qCApBT;UA+TqC,mBAAY;QAS7C,gBAAgB,CAAC,WAAW,EAAE,CAAC;QAE/B,iBAAO;aACJ,kBAAkB,EAAE;aACpB,sBAAsB,CAAC;YACtB,OAAO,EAAE,CAAC,qBAAa,CAAC;YACxB,SAAS,EAAE;gBACT,kBAAkB;gBAClB,EAAC,OAAO,EAAE,mBAAY,EAAE,WAAW,EAAE,kBAAkB,EAAC;aACzD;SACF,CAAC,CAAC;QAEL,MAAM,CAAC,cAAM,OAAA,iBAAO,CAAC,iBAAiB,EAAE,EAA3B,CAA2B,CAAC,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC;KACzD,CAAC,CAAC;IAEH,EAAE,CAAC,qEAAqE,EAAE;QACxE,IAAM,oBAAoB,GAAG,EAAC,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,mBAAY,EAAE,EAAC,CAAC;QACxE,IAAM,UAAU,GAAG,OAAO,CAAC,MAAM,CAAC,EAAC,SAAS,EAAE,oBAAsC,EAAC,CAAC,CAAC;QAEvF,MAAM,CAAC,UAAU,CAAC,YAAY,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC9C,oBAAoB,CAAC,KAAK,GAAG,KAAK,CAAC;QACnC,MAAM,CAAC,UAAU,CAAC,YAAY,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAC/C,CAAC,CAAC;IAEH,EAAE,CAAC,kFAAkF,EAAE;QACrF,IAAM,UAAU,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC;QAEpC,UAAU,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;QACnC,oBAAoB,CAAC,aAAa,EAAE,CAAC;QAErC,MAAM,CAAC,UAAU,CAAC,WAAW,CAAC,aAAa,CAAC;aACvC,UAAU,CAAC,yCAAyC,CAAC,CAAC;QAE3D,UAAU,CAAC,MAAM,EAAE,CAAC;QAEpB,MAAM,CAAC,UAAU,CAAC,WAAW,CAAC,aAAa,CAAC;aACvC,UAAU,CAAC,6DAA6D,CAAC,CAAC;QAE/E,oBAAoB,CAAC,aAAa,EAAE,CAAC;QACrC,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAExB,MAAM,CAAC,UAAU,CAAC,WAAW,CAAC,aAAa,CAAC;aACvC,SAAS,CAAC,sEAAsE,CAAC,CAAC;QAEvF,UAAU,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;QACnC,oBAAoB,CAAC,aAAa,EAAE,CAAC;QAErC,MAAM,CAAC,UAAU,CAAC,WAAW,CAAC,aAAa,CAAC;aACvC,UAAU,CAAC,8CAA8C,CAAC,CAAC;KACjE,CAAC,CAAC;IAEH,QAAQ,CAAC,aAAa,EAAE;QACtB,IAAI,MAAqB,CAAC;QAE1B,UAAU,CAAC;YACT,MAAM,GAAG,IAAI,qBAAa,EAAE,CAAC;SAC9B,CAAC,CAAC;QAEH,EAAE,CAAC,uCAAuC,EAAE,mBAAS,CAAC;YACpD,MAAM,CAAC,gBAAgB,GAAG,IAAI,oBAAoB,EAAE,CAAC;YAErD,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;YAC/C,oBAAoB,CAAC,aAAa,EAAE,CAAC;YACrC,IAAI,CAAC,gBAAgB,EAAE,CAAC;YACxB,cAAI,EAAE,CAAC;YAEP,MAAM,CAAC,uBAAuB,CAAC,gBAAgB,CAAC,kBAAkB,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SACrF,CAAC,CAAC,CAAC;QAEJ,EAAE,CAAC,yEAAyE,EAAE,mBAAS,CAAC;YACtF,MAAM,CAAC,gBAAgB,GAAG,IAAI,oBAAoB,EAAE,CAAC;YAErD,IAAM,UAAU,GAAG,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YAE1C,KAAK,CAAC,MAAM,CAAC,gBAAgB,EAAE,OAAO,CAAC,CAAC;YAExC,UAAU,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;YACnC,UAAU,CAAC,MAAM,EAAE,CAAC;YACpB,oBAAoB,CAAC,aAAa,EAAE,CAAC;YACrC,cAAI,EAAE,CAAC;YAEP,MAAM,CAAC,MAAM,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,gBAAgB,EAAE,CAAC;SAC9D,CAAC,CAAC,CAAC;KAEL,CAAC,CAAC;IAEH,QAAQ,CAAC,MAAM,EAAE;QACf,IAAI,MAAqB,CAAC;QAE1B,UAAU,CAAC;YACT,MAAM,GAAG,IAAI,qBAAa,EAAE,CAAC;SAC9B,CAAC,CAAC;QAEH,EAAE,CAAC,0CAA0C,EAAE;YAC7C,MAAM,CAAC,KAAK,GAAG,GAAG,CAAC;YAEnB,IAAM,UAAU,GAAG,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YAE1C,UAAU,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;YACnC,MAAM,CAAC,UAAU,CAAC,cAAc,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SAC7D,CAAC,CAAC;QAEH,EAAE,CAAC,gEAAgE,EAAE;YACnE,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC;YAEtB,IAAM,UAAU,GAAG,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YAE1C,UAAU,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;YACnC,MAAM,CAAC,UAAU,CAAC,cAAc,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SAC5D,CAAC,CAAC;QAEH,EAAE,CAAC,2CAA2C,EAAE;YAC9C,MAAM,CAAC,MAAM,GAAG,GAAG,CAAC;YAEpB,IAAM,UAAU,GAAG,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YAE1C,UAAU,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;YACnC,MAAM,CAAC,UAAU,CAAC,cAAc,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SAC9D,CAAC,CAAC;QAEH,EAAE,CAAC,iEAAiE,EAAE;YACpE,MAAM,CAAC,MAAM,GAAG,OAAO,CAAC;YAExB,IAAM,UAAU,GAAG,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YAE1C,UAAU,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;YACnC,MAAM,CAAC,UAAU,CAAC,cAAc,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SAC9D,CAAC,CAAC;QAEH,EAAE,CAAC,8CAA8C,EAAE;YACjD,MAAM,CAAC,QAAQ,GAAG,GAAG,CAAC;YAEtB,IAAM,UAAU,GAAG,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YAE1C,UAAU,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;YACnC,MAAM,CAAC,UAAU,CAAC,cAAc,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SAChE,CAAC,CAAC;QAEH,EAAE,CAAC,+CAA+C,EAAE;YAClD,MAAM,CAAC,SAAS,GAAG,GAAG,CAAC;YAEvB,IAAM,UAAU,GAAG,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YAE1C,UAAU,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;YACnC,MAAM,CAAC,UAAU,CAAC,cAAc,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SACjE,CAAC,CAAC;QAEH,EAAE,CAAC,8CAA8C,EAAE;YACjD,MAAM,CAAC,QAAQ,GAAG,GAAG,CAAC;YAEtB,IAAM,UAAU,GAAG,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YAE1C,UAAU,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;YACnC,MAAM,CAAC,UAAU,CAAC,cAAc,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SAChE,CAAC,CAAC;QAGH,EAAE,CAAC,+CAA+C,EAAE;YAClD,MAAM,CAAC,SAAS,GAAG,GAAG,CAAC;YAEvB,IAAM,UAAU,GAAG,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YAE1C,UAAU,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;YACnC,MAAM,CAAC,UAAU,CAAC,cAAc,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SACjE,CAAC,CAAC;QAEH,EAAE,CAAC,wCAAwC,EAAE;YAC3C,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC;YACjB,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;YAElB,IAAM,UAAU,GAAG,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YAE1C,UAAU,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;YACnC,MAAM,CAAC,UAAU,CAAC,cAAc,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAC1D,MAAM,CAAC,UAAU,CAAC,cAAc,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SAC5D,CAAC,CAAC;QAEH,EAAE,CAAC,qDAAqD,EAAE;YACxD,MAAM,CAAC,QAAQ,GAAG,MAAM,CAAC,SAAS,GAAG,GAAG,CAAC;YACzC,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC,MAAM,GAAG,GAAG,CAAC;YACnC,MAAM,CAAC,QAAQ,GAAG,MAAM,CAAC,SAAS,GAAG,GAAG,CAAC;YAEzC,IAAM,UAAU,GAAG,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YAC1C,UAAU,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;YACnC,IAAM,KAAK,GAAG,UAAU,CAAC,cAAc,CAAC,KAAK,CAAC;YAE9C,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACrC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACtC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAClC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACnC,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACrC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAEtC,UAAU,CAAC,UAAU,CAAC;gBACpB,QAAQ,EAAE,EAAE;gBACZ,SAAS,EAAE,EAAE;gBACb,KAAK,EAAE,EAAE;gBACT,MAAM,EAAE,EAAE;gBACV,QAAQ,EAAE,EAAE;gBACZ,SAAS,EAAE,EAAE;aACd,CAAC,CAAC;YAEH,UAAU,CAAC,cAAc,EAAE,CAAC;YAE5B,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,SAAS,EAAE,CAAC;YACnC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,SAAS,EAAE,CAAC;YACpC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,SAAS,EAAE,CAAC;YAChC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,SAAS,EAAE,CAAC;YACjC,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,SAAS,EAAE,CAAC;YACnC,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,SAAS,EAAE,CAAC;SACrC,CAAC,CAAC;KAEJ,CAAC,CAAC;IAEH,QAAQ,CAAC,UAAU,EAAE;QACnB,IAAI,MAAqB,CAAC;QAE1B,UAAU,CAAC;YACT,MAAM,GAAG,IAAI,qBAAa,EAAE,CAAC;YAC7B,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC;SAC3B,CAAC,CAAC;QAEH,EAAE,CAAC,+CAA+C,EAAE;YAClD,IAAI,UAAU,GAAG,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YACxC,UAAU,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;YAEnC,oBAAoB,CAAC,aAAa,EAAE,CAAC;YACrC,IAAI,QAAQ,GAAG,uBAAuB,CAAC,aAAa,CAAC,uBAAuB,CAAgB,CAAC;YAC7F,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,EAAE,CAAC;YAC9B,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,8BAA8B,CAAC,CAAC;YAEzE,IAAI,oBAAoB,GAAG,OAAO,CAAC,SAAS,CAAC,qBAAqB,CAAC,CAAC;YACpE,UAAU,CAAC,aAAa,EAAE,CAAC,SAAS,CAAC,oBAAoB,CAAC,CAAC;YAE3D,QAAQ,CAAC,KAAK,EAAE,CAAC;YACjB,MAAM,CAAC,oBAAoB,CAAC,CAAC,oBAAoB,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC;SAC5E,CAAC,CAAC;QAEH,EAAE,CAAC,yEAAyE,EAAE;YAC5E,IAAI,UAAU,GAAG,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YAExC,UAAU,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;YACnC,oBAAoB,CAAC,aAAa,EAAE,CAAC;YAErC,IAAI,eAAe,GAAG,OAAO,CAAC,SAAS,CAAC,2BAA2B,CAAC,CAAC;YAErE,UAAU,CAAC,aAAa,EAAE,CAAC,SAAS,CAAC,SAAS,EAAE,SAAS,EAAE,eAAe,CAAC,CAAC;YAC5E,UAAU,CAAC,OAAO,EAAE,CAAC;YAErB,MAAM,CAAC,eAAe,CAAC,CAAC,gBAAgB,EAAE,CAAC;SAC5C,CAAC,CAAC;QAEH,EAAE,CAAC,iDAAiD,EAAE;YACpD,IAAI,UAAU,GAAG,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YACxC,UAAU,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;YACnC,oBAAoB,CAAC,aAAa,EAAE,CAAC;YAErC,IAAI,QAAQ,GAAG,uBAAuB,CAAC,aAAa,CAAC,uBAAuB,CAAgB,CAAC;YAC7F,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,2BAA2B,CAAC,CAAC;SACnE,CAAC,CAAC;QAEH,EAAE,CAAC,6CAA6C,EAAE;YAChD,MAAM,CAAC,aAAa,GAAG,kCAAkC,CAAC;YAE1D,IAAI,UAAU,GAAG,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YACxC,UAAU,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;YACnC,oBAAoB,CAAC,aAAa,EAAE,CAAC;YAErC,IAAI,QAAQ,GAAG,uBAAuB,CAAC,aAAa,CAAC,uBAAuB,CAAgB,CAAC;YAC7F,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,kCAAkC,CAAC,CAAC;SAC1E,CAAC,CAAC;QAEH,EAAE,CAAC,qDAAqD,EAAE;YACxD,MAAM,CAAC,aAAa,GAAG,CAAC,gBAAgB,EAAE,gBAAgB,CAAC,CAAC;YAE5D,IAAI,UAAU,GAAG,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YACxC,UAAU,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;YACnC,oBAAoB,CAAC,aAAa,EAAE,CAAC;YAErC,IAAI,QAAQ,GAAG,uBAAuB,CAAC,aAAa,CAAC,uBAAuB,CAAgB,CAAC;YAC7F,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC;YACvD,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC;SACxD,CAAC,CAAC;QAEH,EAAE,CAAC,uEAAuE,EAAE;YAC1E,IAAI,UAAU,GAAG,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YACxC,UAAU,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;YAEnC,oBAAoB,CAAC,aAAa,EAAE,CAAC;YACrC,IAAI,QAAQ,GAAG,uBAAuB,CAAC,aAAa,CAAC,uBAAuB,CAAgB,CAAC;YAE7F,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,SAAS,EAAE,CAAC;YAEjD,UAAU,CAAC,MAAM,EAAE,CAAC;YAEpB,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SACnD,CAAC,CAAC;QAEH,EAAE,CAAC,qEAAqE,EAAE;YACxE,IAAM,UAAU,GAAG,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YAE1C,UAAU,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;YACnC,oBAAoB,CAAC,aAAa,EAAE,CAAC;YAErC,IAAM,QAAQ,GAAG,uBAAuB,CAAC,aAAa,CAAC,uBAAuB,CAAC,CAAC;YAChF,IAAM,IAAI,GAAG,CAAA,uBAAuB,CAAC,aAAa,CAAC,mBAAmB,CAAE,CAAC,aAAc,CAAA,CAAC;YACxF,IAAM,QAAQ,GAAG,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,uBAAuB,CAAC,QAAQ,CAAC,CAAC;YAE9E,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC;YACvD,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC;YACnD,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;iBAC/B,YAAY,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,oDAAoD,CAAC,CAAC;SAC/F,CAAC,CAAC;KAEJ,CAAC,CAAC;IAEH,QAAQ,CAAC,YAAY,EAAE;QACrB,EAAE,CAAC,0CAA0C,EAAE;YAC7C,IAAM,MAAM,GAAG,IAAI,qBAAa,CAAC,EAAC,UAAU,EAAE,oBAAoB,EAAC,CAAC,CAAC;YAErE,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;YAC/C,oBAAoB,CAAC,aAAa,EAAE,CAAC;YAErC,IAAM,IAAI,GAAG,uBAAuB,CAAC,aAAa,CAAC,mBAAmB,CAAgB,CAAC;YACvF,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,oBAAoB,CAAC,CAAC;SACxD,CAAC,CAAC;QAEH,EAAE,CAAC,0CAA0C,EAAE;YAC7C,IAAM,MAAM,GAAG,IAAI,qBAAa,CAAC,EAAC,UAAU,EAAE,CAAC,kBAAkB,EAAE,kBAAkB,CAAC,EAAC,CAAC,CAAC;YAEzF,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;YAC/C,oBAAoB,CAAC,aAAa,EAAE,CAAC;YAErC,IAAM,IAAI,GAAG,uBAAuB,CAAC,aAAa,CAAC,mBAAmB,CAAgB,CAAC;YAEvF,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,kBAAkB,CAAC,CAAC;YACrD,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,kBAAkB,CAAC,CAAC;SACtD,CAAC,CAAC;QAEH,EAAE,CAAC,mEAAmE,EAAE;YACtE,IAAM,MAAM,GAAG,IAAI,qBAAa,CAAC,EAAC,UAAU,EAAE,oBAAoB,EAAC,CAAC,CAAC;YACrE,IAAM,UAAU,GAAG,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;YAE1C,UAAU,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;YACnC,oBAAoB,CAAC,aAAa,EAAE,CAAC;YAErC,IAAM,IAAI,GAAG,uBAAuB,CAAC,aAAa,CAAC,mBAAmB,CAAgB,CAAC;YACvF,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,oBAAoB,CAAC,CAAC;YAEvD,UAAU,CAAC,MAAM,EAAE,CAAC;YACpB,oBAAoB,CAAC,aAAa,EAAE,CAAC;YACrC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,CAAC,SAAS,CAAC,oBAAoB,CAAC,CAAC;YAE3D,UAAU,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;YACnC,oBAAoB,CAAC,aAAa,EAAE,CAAC;YACrC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,oBAAoB,CAAC,CAAC;SACxD,CAAC,CAAC;KAEJ,CAAC,CAAC;IAEH,QAAQ,CAAC,iBAAiB,EAAE;QAC1B,IAAI,kBAAsC,CAAC;QAC3C,IAAI,MAAqB,CAAC;QAC1B,IAAI,UAAsB,CAAC;QAE3B,UAAU,CAAC;YACT,kBAAkB,GAAG,IAAI,kBAAkB,EAAE,CAAC;YAC9C,MAAM,GAAG,IAAI,qBAAa,CAAC,EAAC,cAAc,EAAE,kBAAkB,EAAC,CAAC,CAAC;YACjE,UAAU,GAAG,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;SACrC,CAAC,CAAC;QAEH,EAAE,CAAC,sDAAsD,EAAE;YACzD,MAAM,CAAC,kBAAkB,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,UAAU,EACjD,4EAA4E,CAAC,CAAC;SACnF,CAAC,CAAC;QAEH,EAAE,CAAC,gEAAgE,EAAE;YACnE,UAAU,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;YACnC,MAAM,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,yCAAyC,CAAC,CAAC;SAC5F,CAAC,CAAC;QAEH,EAAE,CAAC,iEAAiE,EAAE;YACpE,UAAU,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;YACnC,MAAM,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,yCAAyC,CAAC,CAAC;YAE3F,UAAU,CAAC,MAAM,EAAE,CAAC;YACpB,MAAM,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,KAAK,EAAE,0CAA0C,CAAC,CAAC;SAC9F,CAAC,CAAC;QAEH,EAAE,CAAC,kEAAkE,EAAE;YACrE,UAAU,CAAC,OAAO,EAAE,CAAC;YACrB,MAAM,CAAC,kBAAkB,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,KAAK,EAAE,0CAA0C,CAAC,CAAC;SAC9F,CAAC,CAAC;KACJ,CAAC,CAAC;CACJ,CAAC,CAAC;;;;;;gBAGF,gBAAS,SAAC;oBACT,QAAQ,EAAE,OAAO;oBACjB,QAAQ,EAAE,cAAc;iBACzB;;mBAxtBD;;;;IAiuBE,0CAAmB,gBAAkC;QAAlC,qBAAgB,GAAhB,gBAAgB,CAAkB;KAAK;;gBAJ3D,gBAAS,SAAC,EAAC,QAAQ,EAAE,4CAA4C,EAAC;;;;gBAxtBjE,uBAAgB;;;mCA0tBf,gBAAS,SAAC,kBAAS;;2CA/tBtB;;;;AAsuBA,IAAM,eAAe,GAAG,CAAC,QAAQ,EAAE,gCAAgC,CAAC,CAAC;;;;;gBACpE,eAAQ,SAAC;oBACR,OAAO,EAAE,CAAC,qBAAa,EAAE,qBAAY,CAAC;oBACtC,OAAO,EAAE,eAAe;oBACxB,YAAY,EAAE,eAAe;oBAC7B,eAAe,EAAE,eAAe;iBACjC;;4BA5uBD;;AA+uBA,IAAA;;;IAGE,oCAAK,GAAL;QACE,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC;KAC/C;IAED,qCAAM,GAAN,UAAO,UAAsB;QAC3B,IAAI,CAAC,OAAO,GAAG,UAAU,CAAC,cAAc,CAAC;KAC1C;IAED,sCAAO,GAAP,eAAY;+BA1vBd;IA2vBC,CAAA;AAGD,IAAA;;yBACc,KAAK;;IAGjB,mCAAM,GAAN,UAAO,UAAsB;QAC3B,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;KAC9B;IAED,mCAAM,GAAN;QACE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;KACvB;IAED,oCAAO,GAAP;QACE,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;KACxB;6BA5wBH;IA6wBC,CAAA","sourcesContent":["import {async, fakeAsync, tick, ComponentFixture, inject, TestBed} from '@angular/core/testing';\r\nimport {\r\n  Component,\r\n  NgModule,\r\n  ViewChild,\r\n  ViewContainerRef,\r\n  ErrorHandler,\r\n  Injectable,\r\n  EventEmitter,\r\n  NgZone,\r\n} from '@angular/core';\r\nimport {Direction, Directionality} from '@angular/cdk/bidi';\r\nimport {dispatchFakeEvent, MockNgZone} from '@angular/cdk/testing';\r\nimport {\r\n  ComponentPortal,\r\n  PortalModule,\r\n  TemplatePortal,\r\n  CdkPortal\r\n} from '@angular/cdk/portal';\r\nimport {\r\n  Overlay,\r\n  OverlayContainer,\r\n  OverlayModule,\r\n  OverlayRef,\r\n  OverlayConfig,\r\n  PositionStrategy,\r\n  ScrollStrategy,\r\n} from './index';\r\n\r\n\r\ndescribe('Overlay', () => {\r\n  let overlay: Overlay;\r\n  let componentPortal: ComponentPortal<PizzaMsg>;\r\n  let templatePortal: TemplatePortal;\r\n  let overlayContainerElement: HTMLElement;\r\n  let overlayContainer: OverlayContainer;\r\n  let viewContainerFixture: ComponentFixture<TestComponentWithTemplatePortals>;\r\n  let dir: Direction;\r\n  let zone: MockNgZone;\r\n\r\n  beforeEach(async(() => {\r\n    dir = 'ltr';\r\n    TestBed.configureTestingModule({\r\n      imports: [OverlayModule, PortalModule, OverlayTestModule],\r\n      providers: [\r\n        {\r\n          provide: Directionality,\r\n          useFactory: () => {\r\n            const fakeDirectionality = {};\r\n            Object.defineProperty(fakeDirectionality, 'value', {get: () => dir});\r\n            return fakeDirectionality;\r\n          }\r\n        },\r\n        {\r\n          provide: NgZone,\r\n          useFactory: () => zone = new MockNgZone()\r\n        },\r\n      ],\r\n    }).compileComponents();\r\n  }));\r\n\r\n  beforeEach(inject([Overlay, OverlayContainer], (o: Overlay, oc: OverlayContainer) => {\r\n    overlay = o;\r\n    overlayContainer = oc;\r\n    overlayContainerElement = oc.getContainerElement();\r\n\r\n    let fixture = TestBed.createComponent(TestComponentWithTemplatePortals);\r\n    fixture.detectChanges();\r\n    templatePortal = fixture.componentInstance.templatePortal;\r\n    componentPortal = new ComponentPortal(PizzaMsg, fixture.componentInstance.viewContainerRef);\r\n    viewContainerFixture = fixture;\r\n  }));\r\n\r\n  afterEach(() => {\r\n    overlayContainer.ngOnDestroy();\r\n  });\r\n\r\n  it('should load a component into an overlay', () => {\r\n    let overlayRef = overlay.create();\r\n    overlayRef.attach(componentPortal);\r\n\r\n    expect(overlayContainerElement.textContent).toContain('Pizza');\r\n\r\n    overlayRef.dispose();\r\n    expect(overlayContainerElement.childNodes.length).toBe(0);\r\n    expect(overlayContainerElement.textContent).toBe('');\r\n  });\r\n\r\n  it('should load a template portal into an overlay', () => {\r\n    let overlayRef = overlay.create();\r\n    overlayRef.attach(templatePortal);\r\n\r\n    expect(overlayContainerElement.textContent).toContain('Cake');\r\n\r\n    overlayRef.dispose();\r\n    expect(overlayContainerElement.childNodes.length).toBe(0);\r\n    expect(overlayContainerElement.textContent).toBe('');\r\n  });\r\n\r\n  it('should disable pointer events of the pane element if detached', () => {\r\n    let overlayRef = overlay.create();\r\n    let paneElement = overlayRef.overlayElement;\r\n\r\n    overlayRef.attach(componentPortal);\r\n    viewContainerFixture.detectChanges();\r\n\r\n    expect(paneElement.childNodes.length).not.toBe(0);\r\n    expect(paneElement.style.pointerEvents)\r\n      .toBe('auto', 'Expected the overlay pane to enable pointerEvents when attached.');\r\n\r\n    overlayRef.detach();\r\n\r\n    expect(paneElement.childNodes.length).toBe(0);\r\n    expect(paneElement.style.pointerEvents)\r\n      .toBe('none', 'Expected the overlay pane to disable pointerEvents when detached.');\r\n  });\r\n\r\n  it('should open multiple overlays', () => {\r\n    let pizzaOverlayRef = overlay.create();\r\n    pizzaOverlayRef.attach(componentPortal);\r\n\r\n    let cakeOverlayRef = overlay.create();\r\n    cakeOverlayRef.attach(templatePortal);\r\n\r\n    expect(overlayContainerElement.childNodes.length).toBe(2);\r\n    expect(overlayContainerElement.textContent).toContain('Pizza');\r\n    expect(overlayContainerElement.textContent).toContain('Cake');\r\n\r\n    pizzaOverlayRef.dispose();\r\n    expect(overlayContainerElement.childNodes.length).toBe(1);\r\n    expect(overlayContainerElement.textContent).toContain('Cake');\r\n\r\n    cakeOverlayRef.dispose();\r\n    expect(overlayContainerElement.childNodes.length).toBe(0);\r\n    expect(overlayContainerElement.textContent).toBe('');\r\n  });\r\n\r\n  it('should ensure that the most-recently-attached overlay is on top', (() => {\r\n    let pizzaOverlayRef = overlay.create();\r\n    let cakeOverlayRef = overlay.create();\r\n\r\n    pizzaOverlayRef.attach(componentPortal);\r\n    cakeOverlayRef.attach(templatePortal);\r\n\r\n    expect(pizzaOverlayRef.hostElement.nextSibling)\r\n        .toBeTruthy('Expected pizza to be on the bottom.');\r\n    expect(cakeOverlayRef.hostElement.nextSibling)\r\n        .toBeFalsy('Expected cake to be on top.');\r\n\r\n    pizzaOverlayRef.dispose();\r\n    cakeOverlayRef.detach();\r\n\r\n    pizzaOverlayRef = overlay.create();\r\n    pizzaOverlayRef.attach(componentPortal);\r\n    cakeOverlayRef.attach(templatePortal);\r\n\r\n    expect(pizzaOverlayRef.hostElement.nextSibling)\r\n        .toBeTruthy('Expected pizza to still be on the bottom.');\r\n    expect(cakeOverlayRef.hostElement.nextSibling)\r\n        .toBeFalsy('Expected cake to still be on top.');\r\n  }));\r\n\r\n  it('should take the default direction from the global Directionality', () => {\r\n    dir = 'rtl';\r\n    const overlayRef = overlay.create();\r\n\r\n    overlayRef.attach(componentPortal);\r\n    expect(overlayRef.hostElement.getAttribute('dir')).toBe('rtl');\r\n  });\r\n\r\n  it('should set the direction', () => {\r\n    const config = new OverlayConfig({direction: 'rtl'});\r\n    const overlayRef = overlay.create(config);\r\n\r\n    overlayRef.attach(componentPortal);\r\n\r\n    expect(overlayRef.hostElement.getAttribute('dir')).toBe('rtl');\r\n  });\r\n\r\n  it('should emit when an overlay is attached', () => {\r\n    let overlayRef = overlay.create();\r\n    let spy = jasmine.createSpy('attachments spy');\r\n\r\n    overlayRef.attachments().subscribe(spy);\r\n    overlayRef.attach(componentPortal);\r\n\r\n    expect(spy).toHaveBeenCalled();\r\n  });\r\n\r\n  it('should emit the attachment event after everything is added to the DOM', () => {\r\n    let config = new OverlayConfig({hasBackdrop: true});\r\n    let overlayRef = overlay.create(config);\r\n\r\n    overlayRef.attachments().subscribe(() => {\r\n      expect(overlayContainerElement.querySelector('pizza'))\r\n          .toBeTruthy('Expected the overlay to have been attached.');\r\n\r\n      expect(overlayContainerElement.querySelector('.cdk-overlay-backdrop'))\r\n          .toBeTruthy('Expected the backdrop to have been attached.');\r\n    });\r\n\r\n    overlayRef.attach(componentPortal);\r\n  });\r\n\r\n  it('should emit when an overlay is detached', () => {\r\n    let overlayRef = overlay.create();\r\n    let spy = jasmine.createSpy('detachments spy');\r\n\r\n    overlayRef.detachments().subscribe(spy);\r\n    overlayRef.attach(componentPortal);\r\n    overlayRef.detach();\r\n\r\n    expect(spy).toHaveBeenCalled();\r\n  });\r\n\r\n  it('should not emit to the detach stream if the overlay has not been attached', () => {\r\n    let overlayRef = overlay.create();\r\n    let spy = jasmine.createSpy('detachments spy');\r\n\r\n    overlayRef.detachments().subscribe(spy);\r\n    overlayRef.detach();\r\n\r\n    expect(spy).not.toHaveBeenCalled();\r\n  });\r\n\r\n  it('should not emit to the detach stream on dispose if the overlay was not attached', () => {\r\n    let overlayRef = overlay.create();\r\n    let spy = jasmine.createSpy('detachments spy');\r\n\r\n    overlayRef.detachments().subscribe(spy);\r\n    overlayRef.dispose();\r\n\r\n    expect(spy).not.toHaveBeenCalled();\r\n  });\r\n\r\n  it('should emit the detachment event after the overlay is removed from the DOM', () => {\r\n    let overlayRef = overlay.create();\r\n\r\n    overlayRef.detachments().subscribe(() => {\r\n      expect(overlayContainerElement.querySelector('pizza'))\r\n          .toBeFalsy('Expected the overlay to have been detached.');\r\n    });\r\n\r\n    overlayRef.attach(componentPortal);\r\n    overlayRef.detach();\r\n  });\r\n\r\n  it('should emit and complete the observables when an overlay is disposed', () => {\r\n    let overlayRef = overlay.create();\r\n    let disposeSpy = jasmine.createSpy('dispose spy');\r\n    let attachCompleteSpy = jasmine.createSpy('attachCompleteSpy spy');\r\n    let detachCompleteSpy = jasmine.createSpy('detachCompleteSpy spy');\r\n\r\n    overlayRef.attachments().subscribe(undefined, undefined, attachCompleteSpy);\r\n    overlayRef.detachments().subscribe(disposeSpy, undefined, detachCompleteSpy);\r\n\r\n    overlayRef.attach(componentPortal);\r\n    overlayRef.dispose();\r\n\r\n    expect(disposeSpy).toHaveBeenCalled();\r\n    expect(attachCompleteSpy).toHaveBeenCalled();\r\n    expect(detachCompleteSpy).toHaveBeenCalled();\r\n  });\r\n\r\n  it('should complete the attachment observable before the detachment one', () => {\r\n    let overlayRef = overlay.create();\r\n    let callbackOrder: string[] = [];\r\n\r\n    overlayRef.attachments().subscribe(undefined, undefined, () => callbackOrder.push('attach'));\r\n    overlayRef.detachments().subscribe(undefined, undefined, () => callbackOrder.push('detach'));\r\n\r\n    overlayRef.attach(componentPortal);\r\n    overlayRef.dispose();\r\n\r\n    expect(callbackOrder).toEqual(['attach', 'detach']);\r\n  });\r\n\r\n  it('should default to the ltr direction', () => {\r\n    const overlayRef = overlay.create();\r\n    expect(overlayRef.getConfig().direction).toBe('ltr');\r\n  });\r\n\r\n  it('should skip undefined values when applying the defaults', () => {\r\n    const overlayRef = overlay.create({direction: undefined});\r\n    expect(overlayRef.getConfig().direction).toBe('ltr');\r\n  });\r\n\r\n  it('should clear out all DOM element references on dispose', fakeAsync(() => {\r\n    const overlayRef = overlay.create({hasBackdrop: true});\r\n    overlayRef.attach(componentPortal);\r\n\r\n    expect(overlayRef.hostElement).toBeTruthy('Expected overlay host to be defined.');\r\n    expect(overlayRef.overlayElement).toBeTruthy('Expected overlay element to be defined.');\r\n    expect(overlayRef.backdropElement).toBeTruthy('Expected backdrop element to be defined.');\r\n\r\n    overlayRef.dispose();\r\n    tick(500);\r\n\r\n    expect(overlayRef.hostElement).toBeFalsy('Expected overlay host not to be referenced.');\r\n    expect(overlayRef.overlayElement).toBeFalsy('Expected overlay element not to be referenced.');\r\n    expect(overlayRef.backdropElement).toBeFalsy('Expected backdrop element not to be referenced.');\r\n  }));\r\n\r\n  it('should clear the backdrop timeout if the transition finishes first', fakeAsync(() => {\r\n    const overlayRef = overlay.create({hasBackdrop: true});\r\n\r\n    overlayRef.attach(componentPortal);\r\n    overlayRef.detach();\r\n\r\n    const backdrop = overlayContainerElement.querySelector('.cdk-overlay-backdrop')!;\r\n    dispatchFakeEvent(backdrop, 'transitionend');\r\n\r\n    // Note: we don't `tick` or `flush` here. The assertion is that\r\n    // `fakeAsync` will throw if we have an unflushed timer.\r\n  }));\r\n\r\n  it('should be able to use the `Overlay` provider during app initialization', () => {\r\n    /** Dummy provider that depends on `Overlay`. */\r\n    @Injectable()\r\n    class CustomErrorHandler extends ErrorHandler {\r\n      constructor(private _overlay: Overlay) { super(); }\r\n\r\n      handleError(error: any) {\r\n        const overlayRef = this._overlay.create({hasBackdrop: !!error});\r\n        overlayRef.dispose();\r\n      }\r\n    }\r\n\r\n    overlayContainer.ngOnDestroy();\r\n\r\n    TestBed\r\n      .resetTestingModule()\r\n      .configureTestingModule({\r\n        imports: [OverlayModule],\r\n        providers: [\r\n          CustomErrorHandler,\r\n          {provide: ErrorHandler, useExisting: CustomErrorHandler}\r\n        ]\r\n      });\r\n\r\n    expect(() => TestBed.compileComponents()).not.toThrow();\r\n  });\r\n\r\n  it('should keep the direction in sync with the passed in Directionality', () => {\r\n    const customDirectionality = {value: 'rtl', change: new EventEmitter()};\r\n    const overlayRef = overlay.create({direction: customDirectionality as Directionality});\r\n\r\n    expect(overlayRef.getDirection()).toBe('rtl');\r\n    customDirectionality.value = 'ltr';\r\n    expect(overlayRef.getDirection()).toBe('ltr');\r\n  });\r\n\r\n  it('should add and remove the overlay host as the ref is being attached and detached', () => {\r\n    const overlayRef = overlay.create();\r\n\r\n    overlayRef.attach(componentPortal);\r\n    viewContainerFixture.detectChanges();\r\n\r\n    expect(overlayRef.hostElement.parentElement)\r\n        .toBeTruthy('Expected host element to be in the DOM.');\r\n\r\n    overlayRef.detach();\r\n\r\n    expect(overlayRef.hostElement.parentElement)\r\n        .toBeTruthy('Expected host element not to have been removed immediately.');\r\n\r\n    viewContainerFixture.detectChanges();\r\n    zone.simulateZoneExit();\r\n\r\n    expect(overlayRef.hostElement.parentElement)\r\n        .toBeFalsy('Expected host element to have been removed once the zone stabilizes.');\r\n\r\n    overlayRef.attach(componentPortal);\r\n    viewContainerFixture.detectChanges();\r\n\r\n    expect(overlayRef.hostElement.parentElement)\r\n        .toBeTruthy('Expected host element to be back in the DOM.');\r\n  });\r\n\r\n  describe('positioning', () => {\r\n    let config: OverlayConfig;\r\n\r\n    beforeEach(() => {\r\n      config = new OverlayConfig();\r\n    });\r\n\r\n    it('should apply the positioning strategy', fakeAsync(() => {\r\n      config.positionStrategy = new FakePositionStrategy();\r\n\r\n      overlay.create(config).attach(componentPortal);\r\n      viewContainerFixture.detectChanges();\r\n      zone.simulateZoneExit();\r\n      tick();\r\n\r\n      expect(overlayContainerElement.querySelectorAll('.fake-positioned').length).toBe(1);\r\n    }));\r\n\r\n    it('should not apply the position if it detaches before the zone stabilizes', fakeAsync(() => {\r\n      config.positionStrategy = new FakePositionStrategy();\r\n\r\n      const overlayRef = overlay.create(config);\r\n\r\n      spyOn(config.positionStrategy, 'apply');\r\n\r\n      overlayRef.attach(componentPortal);\r\n      overlayRef.detach();\r\n      viewContainerFixture.detectChanges();\r\n      tick();\r\n\r\n      expect(config.positionStrategy.apply).not.toHaveBeenCalled();\r\n    }));\r\n\r\n  });\r\n\r\n  describe('size', () => {\r\n    let config: OverlayConfig;\r\n\r\n    beforeEach(() => {\r\n      config = new OverlayConfig();\r\n    });\r\n\r\n    it('should apply the width set in the config', () => {\r\n      config.width = 500;\r\n\r\n      const overlayRef = overlay.create(config);\r\n\r\n      overlayRef.attach(componentPortal);\r\n      expect(overlayRef.overlayElement.style.width).toBe('500px');\r\n    });\r\n\r\n    it('should support using other units if a string width is provided', () => {\r\n      config.width = '200%';\r\n\r\n      const overlayRef = overlay.create(config);\r\n\r\n      overlayRef.attach(componentPortal);\r\n      expect(overlayRef.overlayElement.style.width).toBe('200%');\r\n    });\r\n\r\n    it('should apply the height set in the config', () => {\r\n      config.height = 500;\r\n\r\n      const overlayRef = overlay.create(config);\r\n\r\n      overlayRef.attach(componentPortal);\r\n      expect(overlayRef.overlayElement.style.height).toBe('500px');\r\n    });\r\n\r\n    it('should support using other units if a string height is provided', () => {\r\n      config.height = '100vh';\r\n\r\n      const overlayRef = overlay.create(config);\r\n\r\n      overlayRef.attach(componentPortal);\r\n      expect(overlayRef.overlayElement.style.height).toBe('100vh');\r\n    });\r\n\r\n    it('should apply the min width set in the config', () => {\r\n      config.minWidth = 200;\r\n\r\n      const overlayRef = overlay.create(config);\r\n\r\n      overlayRef.attach(componentPortal);\r\n      expect(overlayRef.overlayElement.style.minWidth).toBe('200px');\r\n    });\r\n\r\n    it('should apply the min height set in the config', () => {\r\n      config.minHeight = 500;\r\n\r\n      const overlayRef = overlay.create(config);\r\n\r\n      overlayRef.attach(componentPortal);\r\n      expect(overlayRef.overlayElement.style.minHeight).toBe('500px');\r\n    });\r\n\r\n    it('should apply the max width set in the config', () => {\r\n      config.maxWidth = 200;\r\n\r\n      const overlayRef = overlay.create(config);\r\n\r\n      overlayRef.attach(componentPortal);\r\n      expect(overlayRef.overlayElement.style.maxWidth).toBe('200px');\r\n    });\r\n\r\n\r\n    it('should apply the max height set in the config', () => {\r\n      config.maxHeight = 500;\r\n\r\n      const overlayRef = overlay.create(config);\r\n\r\n      overlayRef.attach(componentPortal);\r\n      expect(overlayRef.overlayElement.style.maxHeight).toBe('500px');\r\n    });\r\n\r\n    it('should support zero widths and heights', () => {\r\n      config.width = 0;\r\n      config.height = 0;\r\n\r\n      const overlayRef = overlay.create(config);\r\n\r\n      overlayRef.attach(componentPortal);\r\n      expect(overlayRef.overlayElement.style.width).toBe('0px');\r\n      expect(overlayRef.overlayElement.style.height).toBe('0px');\r\n    });\r\n\r\n    it('should be able to reset the various size properties', () => {\r\n      config.minWidth = config.minHeight = 100;\r\n      config.width = config.height = 200;\r\n      config.maxWidth = config.maxHeight = 300;\r\n\r\n      const overlayRef = overlay.create(config);\r\n      overlayRef.attach(componentPortal);\r\n      const style = overlayRef.overlayElement.style;\r\n\r\n      expect(style.minWidth).toBe('100px');\r\n      expect(style.minHeight).toBe('100px');\r\n      expect(style.width).toBe('200px');\r\n      expect(style.height).toBe('200px');\r\n      expect(style.maxWidth).toBe('300px');\r\n      expect(style.maxHeight).toBe('300px');\r\n\r\n      overlayRef.updateSize({\r\n        minWidth: '',\r\n        minHeight: '',\r\n        width: '',\r\n        height: '',\r\n        maxWidth: '',\r\n        maxHeight: ''\r\n      });\r\n\r\n      overlayRef.updatePosition();\r\n\r\n      expect(style.minWidth).toBeFalsy();\r\n      expect(style.minHeight).toBeFalsy();\r\n      expect(style.width).toBeFalsy();\r\n      expect(style.height).toBeFalsy();\r\n      expect(style.maxWidth).toBeFalsy();\r\n      expect(style.maxHeight).toBeFalsy();\r\n    });\r\n\r\n  });\r\n\r\n  describe('backdrop', () => {\r\n    let config: OverlayConfig;\r\n\r\n    beforeEach(() => {\r\n      config = new OverlayConfig();\r\n      config.hasBackdrop = true;\r\n    });\r\n\r\n    it('should create and destroy an overlay backdrop', () => {\r\n      let overlayRef = overlay.create(config);\r\n      overlayRef.attach(componentPortal);\r\n\r\n      viewContainerFixture.detectChanges();\r\n      let backdrop = overlayContainerElement.querySelector('.cdk-overlay-backdrop') as HTMLElement;\r\n      expect(backdrop).toBeTruthy();\r\n      expect(backdrop.classList).not.toContain('cdk-overlay-backdrop-showing');\r\n\r\n      let backdropClickHandler = jasmine.createSpy('backdropClickHander');\r\n      overlayRef.backdropClick().subscribe(backdropClickHandler);\r\n\r\n      backdrop.click();\r\n      expect(backdropClickHandler).toHaveBeenCalledWith(jasmine.any(MouseEvent));\r\n    });\r\n\r\n    it('should complete the backdrop click stream once the overlay is destroyed', () => {\r\n      let overlayRef = overlay.create(config);\r\n\r\n      overlayRef.attach(componentPortal);\r\n      viewContainerFixture.detectChanges();\r\n\r\n      let completeHandler = jasmine.createSpy('backdrop complete handler');\r\n\r\n      overlayRef.backdropClick().subscribe(undefined, undefined, completeHandler);\r\n      overlayRef.dispose();\r\n\r\n      expect(completeHandler).toHaveBeenCalled();\r\n    });\r\n\r\n    it('should apply the default overlay backdrop class', () => {\r\n      let overlayRef = overlay.create(config);\r\n      overlayRef.attach(componentPortal);\r\n      viewContainerFixture.detectChanges();\r\n\r\n      let backdrop = overlayContainerElement.querySelector('.cdk-overlay-backdrop') as HTMLElement;\r\n      expect(backdrop.classList).toContain('cdk-overlay-dark-backdrop');\r\n    });\r\n\r\n    it('should apply a custom class to the backdrop', () => {\r\n      config.backdropClass = 'cdk-overlay-transparent-backdrop';\r\n\r\n      let overlayRef = overlay.create(config);\r\n      overlayRef.attach(componentPortal);\r\n      viewContainerFixture.detectChanges();\r\n\r\n      let backdrop = overlayContainerElement.querySelector('.cdk-overlay-backdrop') as HTMLElement;\r\n      expect(backdrop.classList).toContain('cdk-overlay-transparent-backdrop');\r\n    });\r\n\r\n    it('should apply multiple custom classes to the overlay', () => {\r\n      config.backdropClass = ['custom-class-1', 'custom-class-2'];\r\n\r\n      let overlayRef = overlay.create(config);\r\n      overlayRef.attach(componentPortal);\r\n      viewContainerFixture.detectChanges();\r\n\r\n      let backdrop = overlayContainerElement.querySelector('.cdk-overlay-backdrop') as HTMLElement;\r\n      expect(backdrop.classList).toContain('custom-class-1');\r\n      expect(backdrop.classList).toContain('custom-class-2');\r\n    });\r\n\r\n    it('should disable the pointer events of a backdrop that is being removed', () => {\r\n      let overlayRef = overlay.create(config);\r\n      overlayRef.attach(componentPortal);\r\n\r\n      viewContainerFixture.detectChanges();\r\n      let backdrop = overlayContainerElement.querySelector('.cdk-overlay-backdrop') as HTMLElement;\r\n\r\n      expect(backdrop.style.pointerEvents).toBeFalsy();\r\n\r\n      overlayRef.detach();\r\n\r\n      expect(backdrop.style.pointerEvents).toBe('none');\r\n    });\r\n\r\n    it('should insert the backdrop before the overlay host in the DOM order', () => {\r\n      const overlayRef = overlay.create(config);\r\n\r\n      overlayRef.attach(componentPortal);\r\n      viewContainerFixture.detectChanges();\r\n\r\n      const backdrop = overlayContainerElement.querySelector('.cdk-overlay-backdrop');\r\n      const host = overlayContainerElement.querySelector('.cdk-overlay-pane')!.parentElement!;\r\n      const children = Array.prototype.slice.call(overlayContainerElement.children);\r\n\r\n      expect(children.indexOf(backdrop)).toBeGreaterThan(-1);\r\n      expect(children.indexOf(host)).toBeGreaterThan(-1);\r\n      expect(children.indexOf(backdrop))\r\n        .toBeLessThan(children.indexOf(host), 'Expected backdrop to be before the host in the DOM');\r\n    });\r\n\r\n  });\r\n\r\n  describe('panelClass', () => {\r\n    it('should apply a custom overlay pane class', () => {\r\n      const config = new OverlayConfig({panelClass: 'custom-panel-class'});\r\n\r\n      overlay.create(config).attach(componentPortal);\r\n      viewContainerFixture.detectChanges();\r\n\r\n      const pane = overlayContainerElement.querySelector('.cdk-overlay-pane') as HTMLElement;\r\n      expect(pane.classList).toContain('custom-panel-class');\r\n    });\r\n\r\n    it('should be able to apply multiple classes', () => {\r\n      const config = new OverlayConfig({panelClass: ['custom-class-one', 'custom-class-two']});\r\n\r\n      overlay.create(config).attach(componentPortal);\r\n      viewContainerFixture.detectChanges();\r\n\r\n      const pane = overlayContainerElement.querySelector('.cdk-overlay-pane') as HTMLElement;\r\n\r\n      expect(pane.classList).toContain('custom-class-one');\r\n      expect(pane.classList).toContain('custom-class-two');\r\n    });\r\n\r\n    it('should remove the custom panel class when the overlay is detached', () => {\r\n      const config = new OverlayConfig({panelClass: 'custom-panel-class'});\r\n      const overlayRef = overlay.create(config);\r\n\r\n      overlayRef.attach(componentPortal);\r\n      viewContainerFixture.detectChanges();\r\n\r\n      const pane = overlayContainerElement.querySelector('.cdk-overlay-pane') as HTMLElement;\r\n      expect(pane.classList).toContain('custom-panel-class');\r\n\r\n      overlayRef.detach();\r\n      viewContainerFixture.detectChanges();\r\n      expect(pane.classList).not.toContain('custom-panel-class');\r\n\r\n      overlayRef.attach(componentPortal);\r\n      viewContainerFixture.detectChanges();\r\n      expect(pane.classList).toContain('custom-panel-class');\r\n    });\r\n\r\n  });\r\n\r\n  describe('scroll strategy', () => {\r\n    let fakeScrollStrategy: FakeScrollStrategy;\r\n    let config: OverlayConfig;\r\n    let overlayRef: OverlayRef;\r\n\r\n    beforeEach(() => {\r\n      fakeScrollStrategy = new FakeScrollStrategy();\r\n      config = new OverlayConfig({scrollStrategy: fakeScrollStrategy});\r\n      overlayRef = overlay.create(config);\r\n    });\r\n\r\n    it('should attach the overlay ref to the scroll strategy', () => {\r\n      expect(fakeScrollStrategy.overlayRef).toBe(overlayRef,\r\n          'Expected scroll strategy to have been attached to the current overlay ref.');\r\n    });\r\n\r\n    it('should enable the scroll strategy when the overlay is attached', () => {\r\n      overlayRef.attach(componentPortal);\r\n      expect(fakeScrollStrategy.isEnabled).toBe(true, 'Expected scroll strategy to be enabled.');\r\n    });\r\n\r\n    it('should disable the scroll strategy once the overlay is detached', () => {\r\n      overlayRef.attach(componentPortal);\r\n      expect(fakeScrollStrategy.isEnabled).toBe(true, 'Expected scroll strategy to be enabled.');\r\n\r\n      overlayRef.detach();\r\n      expect(fakeScrollStrategy.isEnabled).toBe(false, 'Expected scroll strategy to be disabled.');\r\n    });\r\n\r\n    it('should disable the scroll strategy when the overlay is destroyed', () => {\r\n      overlayRef.dispose();\r\n      expect(fakeScrollStrategy.isEnabled).toBe(false, 'Expected scroll strategy to be disabled.');\r\n    });\r\n  });\r\n});\r\n\r\n/** Simple component for testing ComponentPortal. */\r\n@Component({\r\n  selector: 'pizza',\r\n  template: '<p>Pizza</p>'\r\n})\r\nclass PizzaMsg { }\r\n\r\n\r\n/** Test-bed component that contains a TempatePortal and an ElementRef. */\r\n@Component({template: `<ng-template cdk-portal>Cake</ng-template>`})\r\nclass TestComponentWithTemplatePortals {\r\n  @ViewChild(CdkPortal) templatePortal: CdkPortal;\r\n\r\n  constructor(public viewContainerRef: ViewContainerRef) { }\r\n}\r\n\r\n// Create a real (non-test) NgModule as a workaround for\r\n// https://github.com/angular/angular/issues/10760\r\nconst TEST_COMPONENTS = [PizzaMsg, TestComponentWithTemplatePortals];\r\n@NgModule({\r\n  imports: [OverlayModule, PortalModule],\r\n  exports: TEST_COMPONENTS,\r\n  declarations: TEST_COMPONENTS,\r\n  entryComponents: TEST_COMPONENTS,\r\n})\r\nclass OverlayTestModule { }\r\n\r\nclass FakePositionStrategy implements PositionStrategy {\r\n  element: HTMLElement;\r\n\r\n  apply(): void {\r\n    this.element.classList.add('fake-positioned');\r\n  }\r\n\r\n  attach(overlayRef: OverlayRef) {\r\n    this.element = overlayRef.overlayElement;\r\n  }\r\n\r\n  dispose() {}\r\n}\r\n\r\n\r\nclass FakeScrollStrategy implements ScrollStrategy {\r\n  isEnabled = false;\r\n  overlayRef: OverlayRef;\r\n\r\n  attach(overlayRef: OverlayRef) {\r\n    this.overlayRef = overlayRef;\r\n  }\r\n\r\n  enable() {\r\n    this.isEnabled = true;\r\n  }\r\n\r\n  disable() {\r\n    this.isEnabled = false;\r\n  }\r\n}\r\n"]}