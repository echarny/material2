{"version":3,"file":"overlay-directives.spec.js","sourceRoot":"","sources":["../../../../src/cdk/overlay/overlay-directives.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import {Component, ViewChild} from '@angular/core';\r\nimport {By} from '@angular/platform-browser';\r\nimport {ComponentFixture, TestBed, async, inject} from '@angular/core/testing';\r\nimport {Directionality} from '@angular/cdk/bidi';\r\nimport {dispatchKeyboardEvent} from '@angular/cdk/testing';\r\nimport {ESCAPE, A} from '@angular/cdk/keycodes';\r\nimport {CdkConnectedOverlay, OverlayModule, CdkOverlayOrigin} from './index';\r\nimport {OverlayContainer} from './overlay-container';\r\nimport {\r\n  ConnectedOverlayPositionChange,\r\n  ConnectionPositionPair,\r\n} from './position/connected-position';\r\nimport {FlexibleConnectedPositionStrategy} from './position/flexible-connected-position-strategy';\r\n\r\n\r\ndescribe('Overlay directives', () => {\r\n  let overlayContainer: OverlayContainer;\r\n  let overlayContainerElement: HTMLElement;\r\n  let fixture: ComponentFixture<ConnectedOverlayDirectiveTest>;\r\n  let dir: {value: string};\r\n\r\n  beforeEach(() => {\r\n    TestBed.configureTestingModule({\r\n      imports: [OverlayModule],\r\n      declarations: [ConnectedOverlayDirectiveTest, ConnectedOverlayPropertyInitOrder],\r\n      providers: [{provide: Directionality, useFactory: () => dir = {value: 'ltr'}}],\r\n    });\r\n  });\r\n\r\n  beforeEach(() => {\r\n    fixture = TestBed.createComponent(ConnectedOverlayDirectiveTest);\r\n    fixture.detectChanges();\r\n  });\r\n\r\n  beforeEach(inject([OverlayContainer], (oc: OverlayContainer) => {\r\n    overlayContainer = oc;\r\n    overlayContainerElement = oc.getContainerElement();\r\n  }));\r\n\r\n  afterEach(() => {\r\n    overlayContainer.ngOnDestroy();\r\n  });\r\n\r\n  /** Returns the current open overlay pane element. */\r\n  function getPaneElement() {\r\n    return overlayContainerElement.querySelector('.cdk-overlay-pane') as HTMLElement;\r\n  }\r\n\r\n  it(`should attach the overlay based on the open property`, () => {\r\n    fixture.componentInstance.isOpen = true;\r\n    fixture.detectChanges();\r\n\r\n    expect(overlayContainerElement.textContent).toContain('Menu content');\r\n\r\n    fixture.componentInstance.isOpen = false;\r\n    fixture.detectChanges();\r\n\r\n    expect(overlayContainerElement.textContent).toBe('');\r\n  });\r\n\r\n  it('should destroy the overlay when the directive is destroyed', () => {\r\n    fixture.componentInstance.isOpen = true;\r\n    fixture.detectChanges();\r\n    fixture.destroy();\r\n\r\n    expect(overlayContainerElement.textContent!.trim()).toBe('');\r\n    expect(getPaneElement())\r\n      .toBeFalsy('Expected the overlay pane element to be removed when disposed.');\r\n  });\r\n\r\n  it('should use a connected position strategy with a default set of positions', () => {\r\n    fixture.componentInstance.isOpen = true;\r\n    fixture.detectChanges();\r\n\r\n    let testComponent: ConnectedOverlayDirectiveTest =\r\n        fixture.debugElement.componentInstance;\r\n    let overlayDirective = testComponent.connectedOverlayDirective;\r\n    let strategy =\r\n      overlayDirective.overlayRef.getConfig().positionStrategy as FlexibleConnectedPositionStrategy;\r\n\r\n    expect(strategy instanceof FlexibleConnectedPositionStrategy).toBe(true);\r\n    expect(strategy.positions.length).toBeGreaterThan(0);\r\n  });\r\n\r\n  it('should set and update the `dir` attribute', () => {\r\n    dir.value = 'rtl';\r\n    fixture.componentInstance.isOpen = true;\r\n    fixture.detectChanges();\r\n\r\n    let boundingBox =\r\n        overlayContainerElement.querySelector('.cdk-overlay-connected-position-bounding-box')!;\r\n\r\n    expect(boundingBox.getAttribute('dir')).toBe('rtl');\r\n\r\n    fixture.componentInstance.isOpen = false;\r\n    fixture.detectChanges();\r\n\r\n    dir.value = 'ltr';\r\n    fixture.componentInstance.isOpen = true;\r\n    fixture.detectChanges();\r\n\r\n    boundingBox =\r\n        overlayContainerElement.querySelector('.cdk-overlay-connected-position-bounding-box')!;\r\n\r\n    expect(boundingBox.getAttribute('dir')).toBe('ltr');\r\n  });\r\n\r\n  it('should close when pressing escape', () => {\r\n    fixture.componentInstance.isOpen = true;\r\n    fixture.detectChanges();\r\n\r\n    dispatchKeyboardEvent(document.body, 'keydown', ESCAPE);\r\n    fixture.detectChanges();\r\n\r\n    expect(overlayContainerElement.textContent!.trim()).toBe('',\r\n        'Expected overlay to have been detached.');\r\n  });\r\n\r\n  it('should not depend on the order in which the `origin` and `open` are set', async(() => {\r\n    fixture.destroy();\r\n\r\n    const propOrderFixture = TestBed.createComponent(ConnectedOverlayPropertyInitOrder);\r\n    propOrderFixture.detectChanges();\r\n\r\n    const overlayDirective = propOrderFixture.componentInstance.connectedOverlayDirective;\r\n\r\n    expect(() => {\r\n      overlayDirective.open = true;\r\n      overlayDirective.origin = propOrderFixture.componentInstance.trigger;\r\n      propOrderFixture.detectChanges();\r\n    }).not.toThrow();\r\n  }));\r\n\r\n  describe('inputs', () => {\r\n\r\n    it('should set the width', () => {\r\n      fixture.componentInstance.width = 250;\r\n      fixture.componentInstance.isOpen = true;\r\n      fixture.detectChanges();\r\n\r\n      const pane = overlayContainerElement.querySelector('.cdk-overlay-pane') as HTMLElement;\r\n      expect(pane.style.width).toEqual('250px');\r\n\r\n      fixture.componentInstance.isOpen = false;\r\n      fixture.detectChanges();\r\n\r\n      fixture.componentInstance.width = 500;\r\n      fixture.componentInstance.isOpen = true;\r\n      fixture.detectChanges();\r\n\r\n      expect(pane.style.width).toEqual('500px');\r\n    });\r\n\r\n    it('should set the height', () => {\r\n      fixture.componentInstance.height = '100vh';\r\n      fixture.componentInstance.isOpen = true;\r\n      fixture.detectChanges();\r\n\r\n      const pane = overlayContainerElement.querySelector('.cdk-overlay-pane') as HTMLElement;\r\n      expect(pane.style.height).toEqual('100vh');\r\n\r\n      fixture.componentInstance.isOpen = false;\r\n      fixture.detectChanges();\r\n\r\n      fixture.componentInstance.height = '50vh';\r\n      fixture.componentInstance.isOpen = true;\r\n      fixture.detectChanges();\r\n\r\n      expect(pane.style.height).toEqual('50vh');\r\n    });\r\n\r\n    it('should set the min width', () => {\r\n      fixture.componentInstance.minWidth = 250;\r\n      fixture.componentInstance.isOpen = true;\r\n      fixture.detectChanges();\r\n\r\n      const pane = overlayContainerElement.querySelector('.cdk-overlay-pane') as HTMLElement;\r\n      expect(pane.style.minWidth).toEqual('250px');\r\n\r\n      fixture.componentInstance.isOpen = false;\r\n      fixture.detectChanges();\r\n\r\n      fixture.componentInstance.minWidth = 500;\r\n      fixture.componentInstance.isOpen = true;\r\n      fixture.detectChanges();\r\n\r\n      expect(pane.style.minWidth).toEqual('500px');\r\n    });\r\n\r\n    it('should set the min height', () => {\r\n      fixture.componentInstance.minHeight = '500px';\r\n      fixture.componentInstance.isOpen = true;\r\n      fixture.detectChanges();\r\n\r\n      const pane = overlayContainerElement.querySelector('.cdk-overlay-pane') as HTMLElement;\r\n      expect(pane.style.minHeight).toEqual('500px');\r\n\r\n      fixture.componentInstance.isOpen = false;\r\n      fixture.detectChanges();\r\n\r\n      fixture.componentInstance.minHeight = '250px';\r\n      fixture.componentInstance.isOpen = true;\r\n      fixture.detectChanges();\r\n\r\n      expect(pane.style.minHeight).toEqual('250px');\r\n    });\r\n\r\n    it('should create the backdrop if designated', () => {\r\n      fixture.componentInstance.hasBackdrop = true;\r\n      fixture.componentInstance.isOpen = true;\r\n      fixture.detectChanges();\r\n\r\n      let backdrop = overlayContainerElement.querySelector('.cdk-overlay-backdrop');\r\n      expect(backdrop).toBeTruthy();\r\n    });\r\n\r\n    it('should not create the backdrop by default', () => {\r\n      fixture.componentInstance.isOpen = true;\r\n      fixture.detectChanges();\r\n\r\n      let backdrop = overlayContainerElement.querySelector('.cdk-overlay-backdrop');\r\n      expect(backdrop).toBeNull();\r\n    });\r\n\r\n    it('should set the custom backdrop class', () => {\r\n      fixture.componentInstance.hasBackdrop = true;\r\n      fixture.componentInstance.isOpen = true;\r\n      fixture.detectChanges();\r\n\r\n      const backdrop =\r\n          overlayContainerElement.querySelector('.cdk-overlay-backdrop') as HTMLElement;\r\n      expect(backdrop.classList).toContain('mat-test-class');\r\n    });\r\n\r\n    it('should set the offsetX', () => {\r\n      fixture.componentInstance.offsetX = 5;\r\n      fixture.componentInstance.isOpen = true;\r\n      fixture.detectChanges();\r\n\r\n      const pane = overlayContainerElement.querySelector('.cdk-overlay-pane') as HTMLElement;\r\n\r\n      expect(pane.style.transform).toContain('translateX(5px)');\r\n\r\n      fixture.componentInstance.isOpen = false;\r\n      fixture.detectChanges();\r\n\r\n      fixture.componentInstance.offsetX = 15;\r\n      fixture.componentInstance.isOpen = true;\r\n      fixture.detectChanges();\r\n\r\n      expect(pane.style.transform).toContain('translateX(15px)');\r\n    });\r\n\r\n    it('should set the offsetY', () => {\r\n      const trigger = fixture.debugElement.query(By.css('button')).nativeElement;\r\n      trigger.style.position = 'absolute';\r\n      trigger.style.top = '30px';\r\n      trigger.style.height = '20px';\r\n\r\n      fixture.componentInstance.offsetY = 45;\r\n      fixture.componentInstance.isOpen = true;\r\n      fixture.detectChanges();\r\n\r\n      const pane = overlayContainerElement.querySelector('.cdk-overlay-pane') as HTMLElement;\r\n\r\n      expect(pane.style.transform).toContain('translateY(45px)');\r\n\r\n      fixture.componentInstance.isOpen = false;\r\n      fixture.detectChanges();\r\n\r\n      fixture.componentInstance.offsetY = 55;\r\n      fixture.componentInstance.isOpen = true;\r\n      fixture.detectChanges();\r\n      expect(pane.style.transform).toContain('translateY(55px)');\r\n    });\r\n\r\n    it('should be able to update the origin after init', () => {\r\n      const testComponent = fixture.componentInstance;\r\n\r\n      testComponent.isOpen = true;\r\n      fixture.detectChanges();\r\n\r\n      let triggerRect = fixture.nativeElement.querySelector('#trigger').getBoundingClientRect();\r\n      let overlayRect = getPaneElement().getBoundingClientRect();\r\n\r\n      expect(Math.floor(triggerRect.left)).toBe(Math.floor(overlayRect.left));\r\n      expect(Math.floor(triggerRect.bottom)).toBe(Math.floor(overlayRect.top));\r\n\r\n      testComponent.triggerOverride = testComponent.otherTrigger;\r\n      fixture.detectChanges();\r\n\r\n      triggerRect = fixture.nativeElement.querySelector('#otherTrigger').getBoundingClientRect();\r\n      overlayRect = getPaneElement().getBoundingClientRect();\r\n\r\n      expect(Math.floor(triggerRect.left)).toBe(Math.floor(overlayRect.left));\r\n      expect(Math.floor(triggerRect.bottom)).toBe(Math.floor(overlayRect.top));\r\n    });\r\n\r\n    it('should update the positions if they change after init', () => {\r\n      const trigger = fixture.nativeElement.querySelector('#trigger');\r\n\r\n      trigger.style.position = 'fixed';\r\n      trigger.style.top = '200px';\r\n      trigger.style.left = '200px';\r\n\r\n      fixture.componentInstance.isOpen = true;\r\n      fixture.detectChanges();\r\n\r\n      let triggerRect = trigger.getBoundingClientRect();\r\n      let overlayRect = getPaneElement().getBoundingClientRect();\r\n\r\n      expect(Math.floor(triggerRect.left)).toBe(Math.floor(overlayRect.left));\r\n      expect(Math.floor(triggerRect.bottom)).toBe(Math.floor(overlayRect.top));\r\n\r\n      fixture.componentInstance.isOpen = false;\r\n      fixture.detectChanges();\r\n\r\n      fixture.componentInstance.positionOverrides = [{\r\n        originX: 'end',\r\n        originY: 'bottom',\r\n        overlayX: 'start',\r\n        overlayY: 'top',\r\n        // TODO(jelbourn) figure out why, when compiling with bazel, these offsets are required.\r\n        offsetX: 0,\r\n        offsetY: 0,\r\n      }];\r\n\r\n      fixture.componentInstance.isOpen = true;\r\n      fixture.detectChanges();\r\n\r\n      triggerRect = trigger.getBoundingClientRect();\r\n      overlayRect = getPaneElement().getBoundingClientRect();\r\n\r\n      expect(Math.floor(triggerRect.right)).toBe(Math.floor(overlayRect.left));\r\n      expect(Math.floor(triggerRect.bottom)).toBe(Math.floor(overlayRect.top));\r\n    });\r\n\r\n    it('should take the offset from the position', () => {\r\n      const trigger = fixture.nativeElement.querySelector('#trigger');\r\n\r\n      trigger.style.position = 'fixed';\r\n      trigger.style.top = '200px';\r\n      trigger.style.left = '200px';\r\n\r\n      fixture.componentInstance.positionOverrides = [{\r\n        originX: 'start',\r\n        originY: 'top',\r\n        overlayX: 'start',\r\n        overlayY: 'top',\r\n        offsetX: 20,\r\n        offsetY: 10\r\n      }];\r\n\r\n      fixture.componentInstance.isOpen = true;\r\n      fixture.detectChanges();\r\n\r\n      const triggerRect = trigger.getBoundingClientRect();\r\n      const overlayRect = getPaneElement().getBoundingClientRect();\r\n\r\n      expect(Math.floor(overlayRect.top)).toBe(Math.floor(triggerRect.top) + 10);\r\n      expect(Math.floor(overlayRect.left)).toBe(Math.floor(triggerRect.left) + 20);\r\n    });\r\n\r\n    it('should be able to set the viewport margin', () => {\r\n      expect(fixture.componentInstance.connectedOverlayDirective.viewportMargin).not.toBe(10);\r\n\r\n      fixture.componentInstance.viewportMargin = 10;\r\n      fixture.detectChanges();\r\n\r\n      expect(fixture.componentInstance.connectedOverlayDirective.viewportMargin).toBe(10);\r\n    });\r\n\r\n    it('should allow for flexible positioning to be enabled', () => {\r\n      expect(fixture.componentInstance.connectedOverlayDirective.flexibleDiemsions).not.toBe(true);\r\n\r\n      fixture.componentInstance.flexibleDimensions = true;\r\n      fixture.detectChanges();\r\n\r\n      expect(fixture.componentInstance.connectedOverlayDirective.flexibleDiemsions).toBe(true);\r\n    });\r\n\r\n    it('should allow for growing after open to be enabled', () => {\r\n      expect(fixture.componentInstance.connectedOverlayDirective.growAfterOpen).not.toBe(true);\r\n\r\n      fixture.componentInstance.growAfterOpen = true;\r\n      fixture.detectChanges();\r\n\r\n      expect(fixture.componentInstance.connectedOverlayDirective.growAfterOpen).toBe(true);\r\n    });\r\n\r\n    it('should allow for pushing to be enabled', () => {\r\n      expect(fixture.componentInstance.connectedOverlayDirective.push).not.toBe(true);\r\n\r\n      fixture.componentInstance.push = true;\r\n      fixture.detectChanges();\r\n\r\n      expect(fixture.componentInstance.connectedOverlayDirective.push).toBe(true);\r\n    });\r\n\r\n  });\r\n\r\n  describe('outputs', () => {\r\n    it('should emit backdropClick appropriately', () => {\r\n      fixture.componentInstance.hasBackdrop = true;\r\n      fixture.componentInstance.isOpen = true;\r\n      fixture.detectChanges();\r\n\r\n      const backdrop =\r\n          overlayContainerElement.querySelector('.cdk-overlay-backdrop') as HTMLElement;\r\n      backdrop.click();\r\n      fixture.detectChanges();\r\n\r\n      expect(fixture.componentInstance.backdropClickHandler)\r\n          .toHaveBeenCalledWith(jasmine.any(MouseEvent));\r\n    });\r\n\r\n    it('should emit positionChange appropriately', () => {\r\n      expect(fixture.componentInstance.positionChangeHandler).not.toHaveBeenCalled();\r\n      fixture.componentInstance.isOpen = true;\r\n      fixture.detectChanges();\r\n\r\n      expect(fixture.componentInstance.positionChangeHandler).toHaveBeenCalled();\r\n\r\n      const latestCall = fixture.componentInstance.positionChangeHandler.calls.mostRecent();\r\n\r\n      expect(latestCall.args[0] instanceof ConnectedOverlayPositionChange)\r\n          .toBe(true, `Expected directive to emit an instance of ConnectedOverlayPositionChange.`);\r\n    });\r\n\r\n    it('should emit attach and detach appropriately', () => {\r\n      expect(fixture.componentInstance.attachHandler).not.toHaveBeenCalled();\r\n      expect(fixture.componentInstance.detachHandler).not.toHaveBeenCalled();\r\n      fixture.componentInstance.isOpen = true;\r\n      fixture.detectChanges();\r\n\r\n      expect(fixture.componentInstance.attachHandler).toHaveBeenCalled();\r\n      expect(fixture.componentInstance.attachResult instanceof HTMLElement)\r\n          .toBe(true, `Expected pane to be populated with HTML elements when attach was called.`);\r\n      expect(fixture.componentInstance.detachHandler).not.toHaveBeenCalled();\r\n\r\n      fixture.componentInstance.isOpen = false;\r\n      fixture.detectChanges();\r\n      expect(fixture.componentInstance.detachHandler).toHaveBeenCalled();\r\n    });\r\n\r\n    it('should emit the keydown events from the overlay', () => {\r\n      expect(fixture.componentInstance.keydownHandler).not.toHaveBeenCalled();\r\n\r\n      fixture.componentInstance.isOpen = true;\r\n      fixture.detectChanges();\r\n\r\n      const event = dispatchKeyboardEvent(document.body, 'keydown', A);\r\n      fixture.detectChanges();\r\n\r\n      expect(fixture.componentInstance.keydownHandler).toHaveBeenCalledWith(event);\r\n    });\r\n\r\n  });\r\n\r\n});\r\n\r\n\r\n@Component({\r\n  template: `\r\n  <button cdk-overlay-origin id=\"trigger\" #trigger=\"cdkOverlayOrigin\">Toggle menu</button>\r\n  <button cdk-overlay-origin id=\"otherTrigger\" #otherTrigger=\"cdkOverlayOrigin\">Toggle menu</button>\r\n\r\n  <ng-template cdk-connected-overlay\r\n            [cdkConnectedOverlayOpen]=\"isOpen\"\r\n            [cdkConnectedOverlayWidth]=\"width\"\r\n            [cdkConnectedOverlayHeight]=\"height\"\r\n            [cdkConnectedOverlayOrigin]=\"triggerOverride || trigger\"\r\n            [cdkConnectedOverlayHasBackdrop]=\"hasBackdrop\"\r\n            [cdkConnectedOverlayViewportMargin]=\"viewportMargin\"\r\n            [cdkConnectedOverlayFlexibleDimensions]=\"flexibleDimensions\"\r\n            [cdkConnectedOverlayGrowAfterOpen]=\"growAfterOpen\"\r\n            [cdkConnectedOverlayPush]=\"push\"\r\n            cdkConnectedOverlayBackdropClass=\"mat-test-class\"\r\n            (backdropClick)=\"backdropClickHandler($event)\"\r\n            [cdkConnectedOverlayOffsetX]=\"offsetX\"\r\n            [cdkConnectedOverlayOffsetY]=\"offsetY\"\r\n            (positionChange)=\"positionChangeHandler($event)\"\r\n            (attach)=\"attachHandler()\"\r\n            (detach)=\"detachHandler()\"\r\n            (overlayKeydown)=\"keydownHandler($event)\"\r\n            [cdkConnectedOverlayMinWidth]=\"minWidth\"\r\n            [cdkConnectedOverlayMinHeight]=\"minHeight\"\r\n            [cdkConnectedOverlayPositions]=\"positionOverrides\">\r\n    <p>Menu content</p>\r\n  </ng-template>`,\r\n})\r\nclass ConnectedOverlayDirectiveTest {\r\n  @ViewChild(CdkConnectedOverlay) connectedOverlayDirective: CdkConnectedOverlay;\r\n  @ViewChild('trigger') trigger: CdkOverlayOrigin;\r\n  @ViewChild('otherTrigger') otherTrigger: CdkOverlayOrigin;\r\n\r\n  isOpen = false;\r\n  width: number | string;\r\n  height: number | string;\r\n  minWidth: number | string;\r\n  minHeight: number | string;\r\n  offsetX: number;\r\n  offsetY: number;\r\n  triggerOverride: CdkOverlayOrigin;\r\n  hasBackdrop: boolean;\r\n  viewportMargin: number;\r\n  flexibleDimensions: boolean;\r\n  growAfterOpen: boolean;\r\n  push: boolean;\r\n  backdropClickHandler = jasmine.createSpy('backdropClick handler');\r\n  positionChangeHandler = jasmine.createSpy('positionChange handler');\r\n  keydownHandler = jasmine.createSpy('keydown handler');\r\n  positionOverrides: ConnectionPositionPair[];\r\n  attachHandler = jasmine.createSpy('attachHandler').and.callFake(() => {\r\n    this.attachResult =\r\n        this.connectedOverlayDirective.overlayRef.overlayElement.querySelector('p') as HTMLElement;\r\n  });\r\n  detachHandler = jasmine.createSpy('detachHandler');\r\n  attachResult: HTMLElement;\r\n}\r\n\r\n@Component({\r\n  template: `\r\n  <button cdk-overlay-origin #trigger=\"cdkOverlayOrigin\">Toggle menu</button>\r\n  <ng-template cdk-connected-overlay>Menu content</ng-template>`,\r\n})\r\nclass ConnectedOverlayPropertyInitOrder {\r\n  @ViewChild(CdkConnectedOverlay) connectedOverlayDirective: CdkConnectedOverlay;\r\n  @ViewChild('trigger') trigger: CdkOverlayOrigin;\r\n}\r\n"]}