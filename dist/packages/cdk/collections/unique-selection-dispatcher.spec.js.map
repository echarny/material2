{"version":3,"file":"unique-selection-dispatcher.spec.js","sourceRoot":"","sources":["../../../../src/cdk/collections/unique-selection-dispatcher.spec.ts"],"names":[],"mappings":";;AAAA,6EAAwE;AAGxE,QAAQ,CAAC,6BAA6B,EAAE;IACtC,IAAI,UAAqC,CAAC;IAE1C,UAAU,CAAC,cAAM,OAAA,UAAU,GAAG,IAAI,uDAAyB,EAAE,EAA5C,CAA4C,CAAC,CAAC;IAE/D,EAAE,CAAC,oCAAoC,EAAE;QACvC,IAAM,GAAG,GAAG,OAAO,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC;QAEhD,UAAU,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QACvB,UAAU,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QAEhC,MAAM,CAAC,GAAG,CAAC,CAAC,oBAAoB,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;KAChD,CAAC,CAAC;IAEH,EAAE,CAAC,0CAA0C,EAAE;QAC7C,IAAM,GAAG,GAAG,OAAO,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC;QAChD,IAAM,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QAE1C,UAAU,EAAE,CAAC;QACb,UAAU,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QAEhC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,gBAAgB,EAAE,CAAC;KACpC,CAAC,CAAC;IAEH,EAAE,CAAC,4CAA4C,EAAE;QAC/C,IAAM,GAAG,GAAG,OAAO,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC;QAChD,UAAU,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;QAEvB,UAAU,CAAC,WAAW,EAAE,CAAC;QACzB,UAAU,CAAC,MAAM,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;QAEhC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,gBAAgB,EAAE,CAAC;KACpC,CAAC,CAAC;CACJ,CAAC,CAAC","sourcesContent":["import {UniqueSelectionDispatcher} from './unique-selection-dispatcher';\r\n\r\n\r\ndescribe('Unique selection dispatcher', () => {\r\n  let dispatcher: UniqueSelectionDispatcher;\r\n\r\n  beforeEach(() => dispatcher = new UniqueSelectionDispatcher());\r\n\r\n  it('should notify registered listeners', () => {\r\n    const spy = jasmine.createSpy('listen handler');\r\n\r\n    dispatcher.listen(spy);\r\n    dispatcher.notify('id', 'name');\r\n\r\n    expect(spy).toHaveBeenCalledWith('id', 'name');\r\n  });\r\n\r\n  it('should not notify unregistered listeners', () => {\r\n    const spy = jasmine.createSpy('listen handler');\r\n    const unregister = dispatcher.listen(spy);\r\n\r\n    unregister();\r\n    dispatcher.notify('id', 'name');\r\n\r\n    expect(spy).not.toHaveBeenCalled();\r\n  });\r\n\r\n  it('should remove all listeners when destroyed', () => {\r\n    const spy = jasmine.createSpy('listen handler');\r\n    dispatcher.listen(spy);\r\n\r\n    dispatcher.ngOnDestroy();\r\n    dispatcher.notify('id', 'name');\r\n\r\n    expect(spy).not.toHaveBeenCalled();\r\n  });\r\n});\r\n"]}