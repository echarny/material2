{"version":3,"file":"array-data-source.js","sourceRoot":"","sources":["../../../../src/cdk/collections/array-data-source.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAQA,6BAAoD;AACpD,6CAAyC;;AAIzC;AAAA;IAAwC,mCAAa;IACnD,yBAAoB,KAA4B;QAAhD,YACE,iBAAO,SACR;QAFmB,WAAK,GAAL,KAAK,CAAuB;;KAE/C;IAED,iCAAO,GAAP;QACE,MAAM,CAAC,IAAI,CAAC,KAAK,YAAY,iBAAU,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,SAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KACjF;IAED,oCAAU,GAAV,eAAe;0BAtBjB;EAawC,wBAAU,EAUjD,CAAA;AAVY,0CAAe","sourcesContent":["/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {Observable, of as observableOf} from 'rxjs';\r\nimport {DataSource} from './data-source';\r\n\r\n\r\n/** DataSource wrapper for a native array. */\r\nexport class ArrayDataSource<T> extends DataSource<T> {\r\n  constructor(private _data: T[] | Observable<T[]>) {\r\n    super();\r\n  }\r\n\r\n  connect(): Observable<T[]> {\r\n    return this._data instanceof Observable ? this._data : observableOf(this._data);\r\n  }\r\n\r\n  disconnect() {}\r\n}\r\n"]}