{"version":3,"file":"live-announcer.js","sourceRoot":"","sources":["../../../../../../src/cdk/a11y/live-announcer/live-announcer.ts"],"names":[],"mappings":";;;;;;;;;;;AAQA,OAAO,EAAC,eAAe,EAAC,MAAM,wBAAwB,CAAC;AACvD,OAAO,EAAC,QAAQ,EAAC,MAAM,iBAAiB,CAAC;AACzC,OAAO,EACL,SAAS,EACT,UAAU,EACV,MAAM,EACN,UAAU,EACV,KAAK,EACL,MAAM,EAEN,QAAQ,EAER,QAAQ,GACT,MAAM,eAAe,CAAC;AAEvB,OAAO,EAAC,4BAA4B,EAAC,MAAM,wBAAwB,CAAC;;;;;IAWlE,uBACsD,cAChC;;;;QAKpB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,YAAY,GAAG,YAAY,IAAI,IAAI,CAAC,kBAAkB,EAAE,CAAC;KAC/D;IAED;;;;;OAKG;;;;;;;IACH,gCAAQ;;;;;;IAAR,UAAS,OAAe,EAAE,UAAyC;QAAnE,iBAiBC;QAjByB,2BAAA,EAAA,qBAAyC;QACjE,IAAI,CAAC,YAAY,CAAC,WAAW,GAAG,EAAE,CAAC;;QAGnC,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,WAAW,EAAE,UAAU,CAAC,CAAC;;;;;;QAOxD,MAAM,CAAC,IAAI,OAAO,CAAC,UAAA,OAAO;YACxB,UAAU,CAAC;gBACT,KAAI,CAAC,YAAY,CAAC,WAAW,GAAG,OAAO,CAAC;gBACxC,OAAO,EAAE,CAAC;aACX,EAAE,GAAG,CAAC,CAAC;SACT,CAAC,CAAC;KACJ;;;;IAED,mCAAW;;;IAAX;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC,CAAC;YACtD,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;SAC7D;KACF;;;;IAEO,0CAAkB;;;;QACxB,qBAAM,YAAY,GAAG,4BAA4B,CAAC;QAClD,qBAAM,gBAAgB,GAAG,IAAI,CAAC,SAAS,CAAC,sBAAsB,CAAC,YAAY,CAAC,CAAC;;QAG7E,GAAG,CAAC,CAAC,qBAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,gBAAgB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;+BACjD,gBAAgB,CAAC,CAAC,CAAC,CAAC,UAAU,GAAE,WAAW,CAAC,gBAAgB,CAAC,CAAC,CAAC;SAChE;QAED,qBAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QACnD,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;QACnC,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;QAE5C,MAAM,CAAC,YAAY,CAAC,aAAa,EAAE,MAAM,CAAC,CAAC;QAC3C,MAAM,CAAC,YAAY,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;QAE3C,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;QAExC,MAAM,CAAC,MAAM,CAAC;;;gBAjEjB,UAAU,SAAC,EAAC,UAAU,EAAE,MAAM,EAAC;;;;gDAMzB,QAAQ,YAAI,MAAM,SAAC,4BAA4B;gDAC/C,MAAM,SAAC,QAAQ;;;wBApCtB;;SA8Ba,aAAa;;;;;;;;;;;;;;;;;;;IAsGxB,qBAAoB,WAAuB,EAAU,cAA6B,EAC9D,kBAA2C,OAAe;QAD1D,gBAAW,GAAX,WAAW,CAAY;QAAU,mBAAc,GAAd,cAAc,CAAe;QAC9D,qBAAgB,GAAhB,gBAAgB;QAA2B,YAAO,GAAP,OAAO,CAAQ;2BALpC,KAAK;KAKmC;0BAtB9E,mCAAU;;;;;sBAAyB,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC;;;;;QAC/D,UAAe,KAAyB;YAAxC,iBAeC;YAdC,IAAI,CAAC,WAAW,GAAG,KAAK,KAAK,QAAQ,IAAI,KAAK,KAAK,WAAW,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC;YAC/E,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,KAAK,KAAK,CAAC,CAAC,CAAC;gBAC/B,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;oBACvB,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;oBACjC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;iBAC3B;aACF;YAAC,IAAI,CAAC,CAAC;gBACN,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;oBACxB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAC/C;wBAAM,OAAA,KAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,KAAI,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC,SAAS,CACzE;4BAAM,OAAA,KAAI,CAAC,cAAc,CAAC,QAAQ,CAC9B,KAAI,CAAC,WAAW,CAAC,aAAa,CAAC,SAAS,EAAE,KAAI,CAAC,WAAW,CAAC;wBADzD,CACyD,CAAC;oBAF9D,CAE8D,CAAC,CAAC;iBAC3E;aACF;SACF;;;;;;;IAQD,iCAAW;;;IAAX;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;YACvB,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;SAClC;KACF;;gBAnCF,SAAS,SAAC;oBACT,QAAQ,EAAE,eAAe;oBACzB,QAAQ,EAAE,aAAa;iBACxB;;;;gBA/FC,UAAU;gBAkBC,aAAa;gBAtBlB,eAAe;gBAQrB,MAAM;;;+BA8FL,KAAK,SAAC,aAAa;;sBA9GtB;;SA4Ga,WAAW;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCxB,MAAM,0CACF,gBAA+B,EAAE,WAAgB,EAAE,SAAc;IACnE,MAAM,CAAC,gBAAgB,IAAI,IAAI,aAAa,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;CACtE;;;;AAID,MAAM,CAAC,qBAAM,uBAAuB,GAAa;;IAE/C,OAAO,EAAE,aAAa;IACtB,IAAI,EAAE;QACJ,CAAC,IAAI,QAAQ,EAAE,EAAE,IAAI,QAAQ,EAAE,EAAE,aAAa,CAAC;QAC/C,CAAC,IAAI,QAAQ,EAAE,EAAE,IAAI,MAAM,CAAC,4BAA4B,CAAC,CAAC;QAC1D,QAAQ;KACT;IACD,UAAU,EAAE,+BAA+B;CAC5C,CAAC","sourcesContent":["/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {ContentObserver} from '@angular/cdk/observers';\r\nimport {DOCUMENT} from '@angular/common';\r\nimport {\r\n  Directive,\r\n  ElementRef,\r\n  Inject,\r\n  Injectable,\r\n  Input,\r\n  NgZone,\r\n  OnDestroy,\r\n  Optional,\r\n  Provider,\r\n  SkipSelf,\r\n} from '@angular/core';\r\nimport {Subscription} from 'rxjs';\r\nimport {LIVE_ANNOUNCER_ELEMENT_TOKEN} from './live-announcer-token';\r\n\r\n\r\n/** Possible politeness levels. */\r\nexport type AriaLivePoliteness = 'off' | 'polite' | 'assertive';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class LiveAnnouncer implements OnDestroy {\r\n  private readonly _liveElement: HTMLElement;\r\n  private _document: Document;\r\n\r\n  constructor(\r\n      @Optional() @Inject(LIVE_ANNOUNCER_ELEMENT_TOKEN) elementToken: any,\r\n      @Inject(DOCUMENT) _document: any) {\r\n\r\n    // We inject the live element and document as `any` because the constructor signature cannot\r\n    // reference browser globals (HTMLElement, Document) on non-browser environments, since having\r\n    // a class decorator causes TypeScript to preserve the constructor signature types.\r\n    this._document = _document;\r\n    this._liveElement = elementToken || this._createLiveElement();\r\n  }\r\n\r\n  /**\r\n   * Announces a message to screenreaders.\r\n   * @param message Message to be announced to the screenreader\r\n   * @param politeness The politeness of the announcer element\r\n   * @returns Promise that will be resolved when the message is added to the DOM.\r\n   */\r\n  announce(message: string, politeness: AriaLivePoliteness = 'polite'): Promise<void> {\r\n    this._liveElement.textContent = '';\r\n\r\n    // TODO: ensure changing the politeness works on all environments we support.\r\n    this._liveElement.setAttribute('aria-live', politeness);\r\n\r\n    // This 100ms timeout is necessary for some browser + screen-reader combinations:\r\n    // - Both JAWS and NVDA over IE11 will not announce anything without a non-zero timeout.\r\n    // - With Chrome and IE11 with NVDA or JAWS, a repeated (identical) message won't be read a\r\n    //   second time without clearing and then using a non-zero delay.\r\n    // (using JAWS 17 at time of this writing).\r\n    return new Promise(resolve => {\r\n      setTimeout(() => {\r\n        this._liveElement.textContent = message;\r\n        resolve();\r\n      }, 100);\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this._liveElement && this._liveElement.parentNode) {\r\n      this._liveElement.parentNode.removeChild(this._liveElement);\r\n    }\r\n  }\r\n\r\n  private _createLiveElement(): HTMLElement {\r\n    const elementClass = 'cdk-live-announcer-element';\r\n    const previousElements = this._document.getElementsByClassName(elementClass);\r\n\r\n    // Remove any old containers. This can happen when coming in from a server-side-rendered page.\r\n    for (let i = 0; i < previousElements.length; i++) {\r\n      previousElements[i].parentNode!.removeChild(previousElements[i]);\r\n    }\r\n\r\n    const liveEl = this._document.createElement('div');\r\n    liveEl.classList.add(elementClass);\r\n    liveEl.classList.add('cdk-visually-hidden');\r\n\r\n    liveEl.setAttribute('aria-atomic', 'true');\r\n    liveEl.setAttribute('aria-live', 'polite');\r\n\r\n    this._document.body.appendChild(liveEl);\r\n\r\n    return liveEl;\r\n  }\r\n\r\n}\r\n\r\n\r\n/**\r\n * A directive that works similarly to aria-live, but uses the LiveAnnouncer to ensure compatibility\r\n * with a wider range of browsers and screen readers.\r\n */\r\n@Directive({\r\n  selector: '[cdkAriaLive]',\r\n  exportAs: 'cdkAriaLive',\r\n})\r\nexport class CdkAriaLive implements OnDestroy {\r\n  /** The aria-live politeness level to use when announcing messages. */\r\n  @Input('cdkAriaLive')\r\n  get politeness(): AriaLivePoliteness { return this._politeness; }\r\n  set politeness(value: AriaLivePoliteness) {\r\n    this._politeness = value === 'polite' || value === 'assertive' ? value : 'off';\r\n    if (this._politeness === 'off') {\r\n      if (this._subscription) {\r\n        this._subscription.unsubscribe();\r\n        this._subscription = null;\r\n      }\r\n    } else {\r\n      if (!this._subscription) {\r\n        this._subscription = this._ngZone.runOutsideAngular(\r\n            () => this._contentObserver.observe(this._elementRef.nativeElement).subscribe(\r\n                () => this._liveAnnouncer.announce(\r\n                    this._elementRef.nativeElement.innerText, this._politeness)));\r\n      }\r\n    }\r\n  }\r\n  private _politeness: AriaLivePoliteness = 'off';\r\n\r\n  private _subscription: Subscription | null;\r\n\r\n  constructor(private _elementRef: ElementRef, private _liveAnnouncer: LiveAnnouncer,\r\n              private _contentObserver: ContentObserver, private _ngZone: NgZone) {}\r\n\r\n  ngOnDestroy() {\r\n    if (this._subscription) {\r\n      this._subscription.unsubscribe();\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/** @docs-private @deprecated @breaking-change 7.0.0 */\r\nexport function LIVE_ANNOUNCER_PROVIDER_FACTORY(\r\n    parentDispatcher: LiveAnnouncer, liveElement: any, _document: any) {\r\n  return parentDispatcher || new LiveAnnouncer(liveElement, _document);\r\n}\r\n\r\n\r\n/** @docs-private @deprecated @breaking-change 7.0.0 */\r\nexport const LIVE_ANNOUNCER_PROVIDER: Provider = {\r\n  // If there is already a LiveAnnouncer available, use that. Otherwise, provide a new one.\r\n  provide: LiveAnnouncer,\r\n  deps: [\r\n    [new Optional(), new SkipSelf(), LiveAnnouncer],\r\n    [new Optional(), new Inject(LIVE_ANNOUNCER_ELEMENT_TOKEN)],\r\n    DOCUMENT,\r\n  ],\r\n  useFactory: LIVE_ANNOUNCER_PROVIDER_FACTORY\r\n};\r\n"]}