{"version":3,"file":"focus-trap.js","sourceRoot":"","sources":["../../../../../../src/cdk/a11y/focus-trap/focus-trap.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\r\nimport {DOCUMENT} from '@angular/common';\r\nimport {\r\n  AfterContentInit,\r\n  Directive,\r\n  ElementRef,\r\n  Inject,\r\n  Injectable,\r\n  Input,\r\n  NgZone,\r\n  OnDestroy,\r\n  DoCheck,\r\n} from '@angular/core';\r\nimport {take} from 'rxjs/operators';\r\nimport {InteractivityChecker} from '../interactivity-checker/interactivity-checker';\r\n\r\n\r\n/**\r\n * Class that allows for trapping focus within a DOM element.\r\n *\r\n * This class currently uses a relatively simple approach to focus trapping.\r\n * It assumes that the tab order is the same as DOM order, which is not necessarily true.\r\n * Things like `tabIndex > 0`, flex `order`, and shadow roots can cause to two to misalign.\r\n */\r\nexport class FocusTrap {\r\n  private _startAnchor: HTMLElement | null;\r\n  private _endAnchor: HTMLElement | null;\r\n  private _hasAttached = false;\r\n\r\n  /** Whether the focus trap is active. */\r\n  get enabled(): boolean { return this._enabled; }\r\n  set enabled(val: boolean) {\r\n    this._enabled = val;\r\n\r\n    if (this._startAnchor && this._endAnchor) {\r\n      this._startAnchor.tabIndex = this._endAnchor.tabIndex = this._enabled ? 0 : -1;\r\n    }\r\n  }\r\n  private _enabled: boolean = true;\r\n\r\n  constructor(\r\n    private _element: HTMLElement,\r\n    private _checker: InteractivityChecker,\r\n    private _ngZone: NgZone,\r\n    private _document: Document,\r\n    deferAnchors = false) {\r\n\r\n    if (!deferAnchors) {\r\n      this.attachAnchors();\r\n    }\r\n  }\r\n\r\n  /** Destroys the focus trap by cleaning up the anchors. */\r\n  destroy() {\r\n    if (this._startAnchor && this._startAnchor.parentNode) {\r\n      this._startAnchor.parentNode.removeChild(this._startAnchor);\r\n    }\r\n\r\n    if (this._endAnchor && this._endAnchor.parentNode) {\r\n      this._endAnchor.parentNode.removeChild(this._endAnchor);\r\n    }\r\n\r\n    this._startAnchor = this._endAnchor = null;\r\n  }\r\n\r\n  /**\r\n   * Inserts the anchors into the DOM. This is usually done automatically\r\n   * in the constructor, but can be deferred for cases like directives with `*ngIf`.\r\n   * @returns Whether the focus trap managed to attach successfuly. This may not be the case\r\n   * if the target element isn't currently in the DOM.\r\n   */\r\n  attachAnchors(): boolean {\r\n    // If we're not on the browser, there can be no focus to trap.\r\n    if (this._hasAttached) {\r\n      return true;\r\n    }\r\n\r\n    this._ngZone.runOutsideAngular(() => {\r\n      if (!this._startAnchor) {\r\n        this._startAnchor = this._createAnchor();\r\n        this._startAnchor!.addEventListener('focus', () => this.focusLastTabbableElement());\r\n      }\r\n\r\n      if (!this._endAnchor) {\r\n        this._endAnchor = this._createAnchor();\r\n        this._endAnchor!.addEventListener('focus', () => this.focusFirstTabbableElement());\r\n      }\r\n    });\r\n\r\n    if (this._element.parentNode) {\r\n      this._element.parentNode.insertBefore(this._startAnchor!, this._element);\r\n      this._element.parentNode.insertBefore(this._endAnchor!, this._element.nextSibling);\r\n      this._hasAttached = true;\r\n    }\r\n\r\n    return this._hasAttached;\r\n  }\r\n\r\n  /**\r\n   * Waits for the zone to stabilize, then either focuses the first element that the\r\n   * user specified, or the first tabbable element.\r\n   * @returns Returns a promise that resolves with a boolean, depending\r\n   * on whether focus was moved successfuly.\r\n   */\r\n  focusInitialElementWhenReady(): Promise<boolean> {\r\n    return new Promise<boolean>(resolve => {\r\n      this._executeOnStable(() => resolve(this.focusInitialElement()));\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Waits for the zone to stabilize, then focuses\r\n   * the first tabbable element within the focus trap region.\r\n   * @returns Returns a promise that resolves with a boolean, depending\r\n   * on whether focus was moved successfuly.\r\n   */\r\n  focusFirstTabbableElementWhenReady(): Promise<boolean> {\r\n    return new Promise<boolean>(resolve => {\r\n      this._executeOnStable(() => resolve(this.focusFirstTabbableElement()));\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Waits for the zone to stabilize, then focuses\r\n   * the last tabbable element within the focus trap region.\r\n   * @returns Returns a promise that resolves with a boolean, depending\r\n   * on whether focus was moved successfuly.\r\n   */\r\n  focusLastTabbableElementWhenReady(): Promise<boolean> {\r\n    return new Promise<boolean>(resolve => {\r\n      this._executeOnStable(() => resolve(this.focusLastTabbableElement()));\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get the specified boundary element of the trapped region.\r\n   * @param bound The boundary to get (start or end of trapped region).\r\n   * @returns The boundary element.\r\n   */\r\n  private _getRegionBoundary(bound: 'start' | 'end'): HTMLElement | null {\r\n    // Contains the deprecated version of selector, for temporary backwards comparability.\r\n    let markers = this._element.querySelectorAll(`[cdk-focus-region-${bound}], ` +\r\n                                                 `[cdkFocusRegion${bound}], ` +\r\n                                                 `[cdk-focus-${bound}]`) as NodeListOf<HTMLElement>;\r\n\r\n    for (let i = 0; i < markers.length; i++) {\r\n      // @breaking-change 7.0.0\r\n      if (markers[i].hasAttribute(`cdk-focus-${bound}`)) {\r\n        console.warn(`Found use of deprecated attribute 'cdk-focus-${bound}', ` +\r\n                     `use 'cdkFocusRegion${bound}' instead. The deprecated ` +\r\n                     `attribute will be removed in 7.0.0.`, markers[i]);\r\n      } else if (markers[i].hasAttribute(`cdk-focus-region-${bound}`)) {\r\n        console.warn(`Found use of deprecated attribute 'cdk-focus-region-${bound}', ` +\r\n                     `use 'cdkFocusRegion${bound}' instead. The deprecated attribute ` +\r\n                     `will be removed in 7.0.0.`, markers[i]);\r\n      }\r\n    }\r\n\r\n    if (bound == 'start') {\r\n      return markers.length ? markers[0] : this._getFirstTabbableElement(this._element);\r\n    }\r\n    return markers.length ?\r\n        markers[markers.length - 1] : this._getLastTabbableElement(this._element);\r\n  }\r\n\r\n  /**\r\n   * Focuses the element that should be focused when the focus trap is initialized.\r\n   * @returns Whether focus was moved successfuly.\r\n   */\r\n  focusInitialElement(): boolean {\r\n    // Contains the deprecated version of selector, for temporary backwards comparability.\r\n    const redirectToElement = this._element.querySelector(`[cdk-focus-initial], ` +\r\n                                                          `[cdkFocusInitial]`) as HTMLElement;\r\n\r\n    if (redirectToElement) {\r\n      // @breaking-change 7.0.0\r\n      if (redirectToElement.hasAttribute(`cdk-focus-initial`)) {\r\n        console.warn(`Found use of deprecated attribute 'cdk-focus-initial', ` +\r\n                    `use 'cdkFocusInitial' instead. The deprecated attribute ` +\r\n                    `will be removed in 7.0.0`, redirectToElement);\r\n      }\r\n\r\n      redirectToElement.focus();\r\n      return true;\r\n    }\r\n\r\n    return this.focusFirstTabbableElement();\r\n  }\r\n\r\n  /**\r\n   * Focuses the first tabbable element within the focus trap region.\r\n   * @returns Whether focus was moved successfuly.\r\n   */\r\n  focusFirstTabbableElement(): boolean {\r\n    const redirectToElement = this._getRegionBoundary('start');\r\n\r\n    if (redirectToElement) {\r\n      redirectToElement.focus();\r\n    }\r\n\r\n    return !!redirectToElement;\r\n  }\r\n\r\n  /**\r\n   * Focuses the last tabbable element within the focus trap region.\r\n   * @returns Whether focus was moved successfuly.\r\n   */\r\n  focusLastTabbableElement(): boolean {\r\n    const redirectToElement = this._getRegionBoundary('end');\r\n\r\n    if (redirectToElement) {\r\n      redirectToElement.focus();\r\n    }\r\n\r\n    return !!redirectToElement;\r\n  }\r\n\r\n  /**\r\n   * Checks whether the focus trap has successfuly been attached.\r\n   */\r\n  hasAttached(): boolean {\r\n    return this._hasAttached;\r\n  }\r\n\r\n  /** Get the first tabbable element from a DOM subtree (inclusive). */\r\n  private _getFirstTabbableElement(root: HTMLElement): HTMLElement | null {\r\n    if (this._checker.isFocusable(root) && this._checker.isTabbable(root)) {\r\n      return root;\r\n    }\r\n\r\n    // Iterate in DOM order. Note that IE doesn't have `children` for SVG so we fall\r\n    // back to `childNodes` which includes text nodes, comments etc.\r\n    let children = root.children || root.childNodes;\r\n\r\n    for (let i = 0; i < children.length; i++) {\r\n      let tabbableChild = children[i].nodeType === this._document.ELEMENT_NODE ?\r\n        this._getFirstTabbableElement(children[i] as HTMLElement) :\r\n        null;\r\n\r\n      if (tabbableChild) {\r\n        return tabbableChild;\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  /** Get the last tabbable element from a DOM subtree (inclusive). */\r\n  private _getLastTabbableElement(root: HTMLElement): HTMLElement | null {\r\n    if (this._checker.isFocusable(root) && this._checker.isTabbable(root)) {\r\n      return root;\r\n    }\r\n\r\n    // Iterate in reverse DOM order.\r\n    let children = root.children || root.childNodes;\r\n\r\n    for (let i = children.length - 1; i >= 0; i--) {\r\n      let tabbableChild = children[i].nodeType === this._document.ELEMENT_NODE ?\r\n        this._getLastTabbableElement(children[i] as HTMLElement) :\r\n        null;\r\n\r\n      if (tabbableChild) {\r\n        return tabbableChild;\r\n      }\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  /** Creates an anchor element. */\r\n  private _createAnchor(): HTMLElement {\r\n    const anchor = this._document.createElement('div');\r\n    anchor.tabIndex = this._enabled ? 0 : -1;\r\n    anchor.classList.add('cdk-visually-hidden');\r\n    anchor.classList.add('cdk-focus-trap-anchor');\r\n    return anchor;\r\n  }\r\n\r\n  /** Executes a function when the zone is stable. */\r\n  private _executeOnStable(fn: () => any): void {\r\n    if (this._ngZone.isStable) {\r\n      fn();\r\n    } else {\r\n      this._ngZone.onStable.asObservable().pipe(take(1)).subscribe(fn);\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/** Factory that allows easy instantiation of focus traps. */\r\n@Injectable({providedIn: 'root'})\r\nexport class FocusTrapFactory {\r\n  private _document: Document;\r\n\r\n  constructor(\r\n      private _checker: InteractivityChecker,\r\n      private _ngZone: NgZone,\r\n      @Inject(DOCUMENT) _document: any) {\r\n\r\n    this._document = _document;\r\n  }\r\n\r\n  /**\r\n   * Creates a focus-trapped region around the given element.\r\n   * @param element The element around which focus will be trapped.\r\n   * @param deferCaptureElements Defers the creation of focus-capturing elements to be done\r\n   *     manually by the user.\r\n   * @returns The created focus trap instance.\r\n   */\r\n  create(element: HTMLElement, deferCaptureElements: boolean = false): FocusTrap {\r\n    return new FocusTrap(\r\n        element, this._checker, this._ngZone, this._document, deferCaptureElements);\r\n  }\r\n}\r\n\r\n/** Directive for trapping focus within a region. */\r\n@Directive({\r\n  selector: '[cdkTrapFocus]',\r\n  exportAs: 'cdkTrapFocus',\r\n})\r\nexport class CdkTrapFocus implements OnDestroy, AfterContentInit, DoCheck {\r\n  private _document: Document;\r\n\r\n  /** Underlying FocusTrap instance. */\r\n  focusTrap: FocusTrap;\r\n\r\n  /** Previously focused element to restore focus to upon destroy when using autoCapture. */\r\n  private _previouslyFocusedElement: HTMLElement | null = null;\r\n\r\n  /** Whether the focus trap is active. */\r\n  @Input('cdkTrapFocus')\r\n  get enabled(): boolean { return this.focusTrap.enabled; }\r\n  set enabled(value: boolean) { this.focusTrap.enabled = coerceBooleanProperty(value); }\r\n\r\n  /**\r\n   * Whether the directive should automatially move focus into the trapped region upon\r\n   * initialization and return focus to the previous activeElement upon destruction.\r\n   */\r\n  @Input('cdkTrapFocusAutoCapture')\r\n  get autoCapture(): boolean { return this._autoCapture; }\r\n  set autoCapture(value: boolean) { this._autoCapture = coerceBooleanProperty(value); }\r\n  private _autoCapture: boolean;\r\n\r\n  constructor(\r\n      private _elementRef: ElementRef,\r\n      private _focusTrapFactory: FocusTrapFactory,\r\n      @Inject(DOCUMENT) _document: any) {\r\n\r\n    this._document = _document;\r\n    this.focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement, true);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.focusTrap.destroy();\r\n\r\n    // If we stored a previously focused element when using autoCapture, return focus to that\r\n    // element now that the trapped region is being destroyed.\r\n    if (this._previouslyFocusedElement) {\r\n      this._previouslyFocusedElement.focus();\r\n      this._previouslyFocusedElement = null;\r\n    }\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    this.focusTrap.attachAnchors();\r\n\r\n    if (this.autoCapture) {\r\n      this._previouslyFocusedElement = this._document.activeElement as HTMLElement;\r\n      this.focusTrap.focusInitialElementWhenReady();\r\n    }\r\n  }\r\n\r\n  ngDoCheck() {\r\n    if (!this.focusTrap.hasAttached()) {\r\n      this.focusTrap.attachAnchors();\r\n    }\r\n  }\r\n}\r\n"]}