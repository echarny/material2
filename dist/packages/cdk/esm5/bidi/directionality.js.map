{"version":3,"file":"directionality.js","sourceRoot":"","sources":["../../../../../src/cdk/bidi/directionality.ts"],"names":[],"mappings":";;;;;;;;;;;AAQA,OAAO,EAAC,YAAY,EAAE,MAAM,EAAE,UAAU,EAAE,QAAQ,EAAY,MAAM,eAAe,CAAC;AACpF,OAAO,EAAC,YAAY,EAAC,MAAM,sBAAsB,CAAC;;;;;;;;IAkBhD,wBAA8C;;;;qBALlB,KAAK;;;;sBAGf,IAAI,YAAY,EAAa;QAG7C,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;;;;;YAKd,qBAAM,OAAO,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC;YAC3D,qBAAM,OAAO,GAAG,SAAS,CAAC,eAAe,CAAC,CAAC,CAAC,SAAS,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC;YACjF,qBAAM,KAAK,GAAG,OAAO,IAAI,OAAO,CAAC;YACjC,IAAI,CAAC,KAAK,GAAG,CAAC,KAAK,KAAK,KAAK,IAAI,KAAK,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC;SACnE;KACF;;;;IAED,oCAAW;;;IAAX;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;KACxB;;gBAvBF,UAAU,SAAC,EAAC,UAAU,EAAE,MAAM,EAAC;;;;gDAQjB,QAAQ,YAAI,MAAM,SAAC,YAAY;;;yBA3B9C;;SAoBa,cAAc","sourcesContent":["/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {EventEmitter, Inject, Injectable, Optional, OnDestroy} from '@angular/core';\r\nimport {DIR_DOCUMENT} from './dir-document-token';\r\n\r\n\r\nexport type Direction = 'ltr' | 'rtl';\r\n\r\n\r\n/**\r\n * The directionality (LTR / RTL) context for the application (or a subtree of it).\r\n * Exposes the current direction and a stream of direction changes.\r\n */\r\n@Injectable({providedIn: 'root'})\r\nexport class Directionality implements OnDestroy {\r\n  /** The current 'ltr' or 'rtl' value. */\r\n  readonly value: Direction = 'ltr';\r\n\r\n  /** Stream that emits whenever the 'ltr' / 'rtl' state changes. */\r\n  readonly change = new EventEmitter<Direction>();\r\n\r\n  constructor(@Optional() @Inject(DIR_DOCUMENT) _document?: any) {\r\n    if (_document) {\r\n      // TODO: handle 'auto' value -\r\n      // We still need to account for dir=\"auto\".\r\n      // It looks like HTMLElemenet.dir is also \"auto\" when that's set to the attribute,\r\n      // but getComputedStyle return either \"ltr\" or \"rtl\". avoiding getComputedStyle for now\r\n      const bodyDir = _document.body ? _document.body.dir : null;\r\n      const htmlDir = _document.documentElement ? _document.documentElement.dir : null;\r\n      const value = bodyDir || htmlDir;\r\n      this.value = (value === 'ltr' || value === 'rtl') ? value : 'ltr';\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.change.complete();\r\n  }\r\n}\r\n"]}