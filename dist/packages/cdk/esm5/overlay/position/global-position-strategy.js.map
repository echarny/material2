{"version":3,"file":"global-position-strategy.js","sourceRoot":"","sources":["../../../../../../src/cdk/overlay/position/global-position-strategy.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {PositionStrategy} from './position-strategy';\r\nimport {OverlayReference} from '../overlay-reference';\r\n\r\n\r\n/**\r\n * A strategy for positioning overlays. Using this strategy, an overlay is given an\r\n * explicit position relative to the browser's viewport. We use flexbox, instead of\r\n * transforms, in order to avoid issues with subpixel rendering which can cause the\r\n * element to become blurry.\r\n */\r\nexport class GlobalPositionStrategy implements PositionStrategy {\r\n  /** The overlay to which this strategy is attached. */\r\n  private _overlayRef: OverlayReference;\r\n  private _cssPosition: string = 'static';\r\n  private _topOffset: string = '';\r\n  private _bottomOffset: string = '';\r\n  private _leftOffset: string = '';\r\n  private _rightOffset: string = '';\r\n  private _alignItems: string = '';\r\n  private _justifyContent: string = '';\r\n  private _width: string = '';\r\n  private _height: string = '';\r\n\r\n  attach(overlayRef: OverlayReference): void {\r\n    const config = overlayRef.getConfig();\r\n\r\n    this._overlayRef = overlayRef;\r\n\r\n    if (this._width && !config.width) {\r\n      overlayRef.updateSize({width: this._width});\r\n    }\r\n\r\n    if (this._height && !config.height) {\r\n      overlayRef.updateSize({height: this._height});\r\n    }\r\n\r\n    overlayRef.hostElement.classList.add('cdk-global-overlay-wrapper');\r\n  }\r\n\r\n  /**\r\n   * Sets the top position of the overlay. Clears any previously set vertical position.\r\n   * @param value New top offset.\r\n   */\r\n  top(value: string = ''): this {\r\n    this._bottomOffset = '';\r\n    this._topOffset = value;\r\n    this._alignItems = 'flex-start';\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Sets the left position of the overlay. Clears any previously set horizontal position.\r\n   * @param value New left offset.\r\n   */\r\n  left(value: string = ''): this {\r\n    this._rightOffset = '';\r\n    this._leftOffset = value;\r\n    this._justifyContent = 'flex-start';\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Sets the bottom position of the overlay. Clears any previously set vertical position.\r\n   * @param value New bottom offset.\r\n   */\r\n  bottom(value: string = ''): this {\r\n    this._topOffset = '';\r\n    this._bottomOffset = value;\r\n    this._alignItems = 'flex-end';\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Sets the right position of the overlay. Clears any previously set horizontal position.\r\n   * @param value New right offset.\r\n   */\r\n  right(value: string = ''): this {\r\n    this._leftOffset = '';\r\n    this._rightOffset = value;\r\n    this._justifyContent = 'flex-end';\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Sets the overlay width and clears any previously set width.\r\n   * @param value New width for the overlay\r\n   * @deprecated Pass the `width` through the `OverlayConfig`.\r\n   * @breaking-change 7.0.0\r\n   */\r\n  width(value: string = ''): this {\r\n    if (this._overlayRef) {\r\n      this._overlayRef.updateSize({width: value});\r\n    } else {\r\n      this._width = value;\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Sets the overlay height and clears any previously set height.\r\n   * @param value New height for the overlay\r\n   * @deprecated Pass the `height` through the `OverlayConfig`.\r\n   * @breaking-change 7.0.0\r\n   */\r\n  height(value: string = ''): this {\r\n    if (this._overlayRef) {\r\n      this._overlayRef.updateSize({height: value});\r\n    } else {\r\n      this._height = value;\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Centers the overlay horizontally with an optional offset.\r\n   * Clears any previously set horizontal position.\r\n   *\r\n   * @param offset Overlay offset from the horizontal center.\r\n   */\r\n  centerHorizontally(offset: string = ''): this {\r\n    this.left(offset);\r\n    this._justifyContent = 'center';\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Centers the overlay vertically with an optional offset.\r\n   * Clears any previously set vertical position.\r\n   *\r\n   * @param offset Overlay offset from the vertical center.\r\n   */\r\n  centerVertically(offset: string = ''): this {\r\n    this.top(offset);\r\n    this._alignItems = 'center';\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Apply the position to the element.\r\n   * @docs-private\r\n   */\r\n  apply(): void {\r\n    // Since the overlay ref applies the strategy asynchronously, it could\r\n    // have been disposed before it ends up being applied. If that is the\r\n    // case, we shouldn't do anything.\r\n    if (!this._overlayRef.hasAttached()) {\r\n      return;\r\n    }\r\n\r\n    const styles = this._overlayRef.overlayElement.style;\r\n    const parentStyles = this._overlayRef.hostElement.style;\r\n    const config = this._overlayRef.getConfig();\r\n\r\n    styles.position = this._cssPosition;\r\n    styles.marginLeft = config.width === '100%' ? '0' : this._leftOffset;\r\n    styles.marginTop = config.height === '100%' ? '0' : this._topOffset;\r\n    styles.marginBottom = this._bottomOffset;\r\n    styles.marginRight = this._rightOffset;\r\n\r\n    if (config.width === '100%') {\r\n      parentStyles.justifyContent = 'flex-start';\r\n    } else if (this._justifyContent === 'center') {\r\n        parentStyles.justifyContent = 'center';\r\n    } else if (this._overlayRef.getConfig().direction === 'rtl') {\r\n      // In RTL the browser will invert `flex-start` and `flex-end` automatically, but we\r\n      // don't want that because our positioning is explicitly `left` and `right`, hence\r\n      // why we do another inversion to ensure that the overlay stays in the same position.\r\n      // TODO: reconsider this if we add `start` and `end` methods.\r\n      if (this._justifyContent === 'flex-start') {\r\n        parentStyles.justifyContent = 'flex-end';\r\n      } else if (this._justifyContent === 'flex-end') {\r\n        parentStyles.justifyContent = 'flex-start';\r\n      }\r\n    } else {\r\n      parentStyles.justifyContent = this._justifyContent;\r\n    }\r\n\r\n    parentStyles.alignItems = config.height === '100%' ? 'flex-start' : this._alignItems;\r\n  }\r\n\r\n  /**\r\n   * Noop implemented as a part of the PositionStrategy interface.\r\n   * @docs-private\r\n   */\r\n  dispose(): void { }\r\n}\r\n"]}