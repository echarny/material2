{"version":3,"file":"overlay-position-builder.js","sourceRoot":"","sources":["../../../../../../src/cdk/overlay/position/overlay-position-builder.ts"],"names":[],"mappings":";;;;;;;;;;;AAQA,OAAO,EAAC,aAAa,EAAC,MAAM,wBAAwB,CAAC;AACrD,OAAO,EAAC,QAAQ,EAAC,MAAM,iBAAiB,CAAC;AACzC,OAAO,EAAa,MAAM,EAAE,UAAU,EAAE,QAAQ,EAAC,MAAM,eAAe,CAAC;AAEvE,OAAO,EAAC,yBAAyB,EAAC,MAAM,+BAA+B,CAAC;AACxE,OAAO,EAAC,iCAAiC,EAAC,MAAM,wCAAwC,CAAC;AACzF,OAAO,EAAC,sBAAsB,EAAC,MAAM,4BAA4B,CAAC;AAClE,OAAO,EAAC,QAAQ,EAAC,MAAM,uBAAuB,CAAC;AAC/C,OAAO,EAAC,gBAAgB,EAAC,MAAM,sBAAsB,CAAC;;;;;;;;;;IAMpD,gCACU,gBACkB;;IAEN,WACA;QAJZ,mBAAc,GAAd,cAAc;QACI,cAAS,GAAT,SAAS;QAEf,cAAS,GAAT,SAAS;QACT,sBAAiB,GAAjB,iBAAiB;KAAwB;IAE/D;;OAEG;;;;;IACH,uCAAM;;;;IAAN;QACE,MAAM,CAAC,IAAI,sBAAsB,EAAE,CAAC;KACrC;IAED;;;;;;;OAOG;;;;;;;;;;IACH,4CAAW;;;;;;;;;IAAX,UACI,UAAsB,EACtB,SAAmC,EACnC,UAAqC;QAEvC,MAAM,CAAC,IAAI,yBAAyB,CAAC,SAAS,EAAE,UAAU,EAAE,UAAU,EAAE,IAAI,CAAC,cAAc,EACvF,IAAI,CAAC,SAAS,CAAC,CAAC;KACrB;IAED;;;OAGG;;;;;;IACH,oDAAmB;;;;;IAAnB,UAAoB,UAAoC;QACtD,MAAM,CAAC,IAAI,iCAAiC,CAAC,UAAU,EAAE,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,SAAS,EACxF,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;KAC7C;;gBAxCF,UAAU,SAAC,EAAC,UAAU,EAAE,MAAM,EAAC;;;;gBAZxB,aAAa;gDAgBhB,MAAM,SAAC,QAAQ;gBATZ,QAAQ,uBAWX,QAAQ;gBAVL,gBAAgB,uBAWnB,QAAQ;;;iCA3Bb;;SAqBa,sBAAsB","sourcesContent":["/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {ViewportRuler} from '@angular/cdk/scrolling';\r\nimport {DOCUMENT} from '@angular/common';\r\nimport {ElementRef, Inject, Injectable, Optional} from '@angular/core';\r\nimport {OriginConnectionPosition, OverlayConnectionPosition} from './connected-position';\r\nimport {ConnectedPositionStrategy} from './connected-position-strategy';\r\nimport {FlexibleConnectedPositionStrategy} from './flexible-connected-position-strategy';\r\nimport {GlobalPositionStrategy} from './global-position-strategy';\r\nimport {Platform} from '@angular/cdk/platform';\r\nimport {OverlayContainer} from '../overlay-container';\r\n\r\n\r\n/** Builder for overlay position strategy. */\r\n@Injectable({providedIn: 'root'})\r\nexport class OverlayPositionBuilder {\r\n  constructor(\r\n    private _viewportRuler: ViewportRuler,\r\n    @Inject(DOCUMENT) private _document: any,\r\n    // @breaking-change 7.0.0 `_platform` and `_overlayContainer` parameters to be made required.\r\n    @Optional() private _platform?: Platform,\r\n    @Optional() private _overlayContainer?: OverlayContainer) { }\r\n\r\n  /**\r\n   * Creates a global position strategy.\r\n   */\r\n  global(): GlobalPositionStrategy {\r\n    return new GlobalPositionStrategy();\r\n  }\r\n\r\n  /**\r\n   * Creates a relative position strategy.\r\n   * @param elementRef\r\n   * @param originPos\r\n   * @param overlayPos\r\n   * @deprecated Use `flexibleConnectedTo` instead.\r\n   * @breaking-change 7.0.0\r\n   */\r\n  connectedTo(\r\n      elementRef: ElementRef,\r\n      originPos: OriginConnectionPosition,\r\n      overlayPos: OverlayConnectionPosition): ConnectedPositionStrategy {\r\n\r\n    return new ConnectedPositionStrategy(originPos, overlayPos, elementRef, this._viewportRuler,\r\n        this._document);\r\n  }\r\n\r\n  /**\r\n   * Creates a flexible position strategy.\r\n   * @param elementRef\r\n   */\r\n  flexibleConnectedTo(elementRef: ElementRef | HTMLElement): FlexibleConnectedPositionStrategy {\r\n    return new FlexibleConnectedPositionStrategy(elementRef, this._viewportRuler, this._document,\r\n        this._platform, this._overlayContainer);\r\n  }\r\n\r\n}\r\n"]}