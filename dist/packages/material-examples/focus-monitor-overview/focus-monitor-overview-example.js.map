{"version":3,"file":"focus-monitor-overview-example.js","sourceRoot":"","sources":["../../../../src/material-examples/focus-monitor-overview/focus-monitor-overview-example.ts"],"names":[],"mappings":";;AAAA,0CAA4D;AAC5D,sCAQuB;;;IAerB,qCAAoB,YAA0B,EAC1B,GAAsB,EACtB,MAAc;QAFd,iBAAY,GAAZ,YAAY,CAAc;QAC1B,QAAG,GAAH,GAAG,CAAmB;QACtB,WAAM,GAAN,MAAM,CAAQ;6BALlB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC;6BACvB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC;KAID;IAEtC,8CAAQ,GAAR;QAAA,iBAWC;QAVC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC;aAChD,SAAS,CAAC,UAAA,MAAM;YAAI,OAAA,KAAI,CAAC,MAAM,CAAC,GAAG,CAAC;gBACnC,KAAI,CAAC,aAAa,GAAG,KAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;gBAC/C,KAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC;aACzB,CAAC;QAHmB,CAGnB,CAAC,CAAC;QACR,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,IAAI,CAAC;aACtD,SAAS,CAAC,UAAA,MAAM;YAAI,OAAA,KAAI,CAAC,MAAM,CAAC,GAAG,CAAC;gBACnC,KAAI,CAAC,aAAa,GAAG,KAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;gBAC/C,KAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC;aACzB,CAAC;QAHmB,CAGnB,CAAC,CAAC;KACT;IAED,iDAAW,GAAX;QACE,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;QAC7D,IAAI,CAAC,YAAY,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;KAC9D;IAED,kDAAY,GAAZ,UAAa,MAAmB;QAC9B,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,GAAG,UAAU,CAAC,CAAC,CAAC,SAAS,CAAC;KACjD;;gBApCF,gBAAS,SAAC;oBACT,QAAQ,EAAE,gCAAgC;oBAC1C,WAAW,EAAE,qCAAqC;oBAClD,SAAS,EAAE,CAAC,oCAAoC,CAAC;iBAClD;;;;gBAhBO,mBAAY;gBAElB,wBAAiB;gBAGjB,aAAM;;;4BAaL,gBAAS,SAAC,SAAS;4BACnB,gBAAS,SAAC,SAAS;;sCAnBtB;;AAiBa,kEAA2B","sourcesContent":["import {FocusMonitor, FocusOrigin} from '@angular/cdk/a11y';\r\nimport {\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  NgZone,\r\n  OnDestroy,\r\n  OnInit,\r\n  ViewChild\r\n} from '@angular/core';\r\n\r\n/** @title Monitoring focus with FocusMonitor */\r\n@Component({\r\n  selector: 'focus-monitor-overview-example',\r\n  templateUrl: 'focus-monitor-overview-example.html',\r\n  styleUrls: ['focus-monitor-overview-example.css']\r\n})\r\nexport class FocusMonitorOverviewExample implements OnDestroy, OnInit {\r\n  @ViewChild('element') element: ElementRef;\r\n  @ViewChild('subtree') subtree: ElementRef;\r\n\r\n  elementOrigin = this.formatOrigin(null);\r\n  subtreeOrigin = this.formatOrigin(null);\r\n\r\n  constructor(private focusMonitor: FocusMonitor,\r\n              private cdr: ChangeDetectorRef,\r\n              private ngZone: NgZone) {}\r\n\r\n  ngOnInit() {\r\n    this.focusMonitor.monitor(this.element.nativeElement)\r\n        .subscribe(origin => this.ngZone.run(() => {\r\n          this.elementOrigin = this.formatOrigin(origin);\r\n          this.cdr.markForCheck();\r\n        }));\r\n    this.focusMonitor.monitor(this.subtree.nativeElement, true)\r\n        .subscribe(origin => this.ngZone.run(() => {\r\n          this.subtreeOrigin = this.formatOrigin(origin);\r\n          this.cdr.markForCheck();\r\n        }));\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.focusMonitor.stopMonitoring(this.element.nativeElement);\r\n    this.focusMonitor.stopMonitoring(this.subtree.nativeElement);\r\n  }\r\n\r\n  formatOrigin(origin: FocusOrigin): string {\r\n    return origin ? origin + ' focused' : 'blurred';\r\n  }\r\n}\r\n"]}