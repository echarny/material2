{"version":3,"file":"datepicker-views-selection-example.js","sourceRoot":"","sources":["../../../../src/material-examples/datepicker-views-selection/datepicker-views-selection-example.ts"],"names":[],"mappings":";;AAAA,sCAAwC;AACxC,wCAA2C;AAC3C,4EAAmE;AACnE,+CAAsF;AAOtF,gCAAkC;AAElC,iCAAwD;AAExD,IAAM,MAAM,GAAG,gBAAa,IAAI,OAAO,CAAC;;;AAI3B,QAAA,UAAU,GAAG;IACxB,KAAK,EAAE;QACL,SAAS,EAAE,SAAS;KACrB;IACD,OAAO,EAAE;QACP,SAAS,EAAE,SAAS;QACpB,cAAc,EAAE,UAAU;QAC1B,aAAa,EAAE,IAAI;QACnB,kBAAkB,EAAE,WAAW;KAChC;CACF;;;;oBAiBQ,IAAI,mBAAW,CAAC,MAAM,EAAE,CAAC;;IAEhC,2DAAiB,GAAjB,UAAkB,cAAsB;QACtC,IAAM,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;QAClC,SAAS,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,CAAC,CAAC;QACtC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;KAC/B;IAED,4DAAkB,GAAlB,UAAmB,cAAsB,EAAE,UAAiC;QAC1E,IAAM,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC;QAClC,SAAS,CAAC,KAAK,CAAC,cAAc,CAAC,KAAK,EAAE,CAAC,CAAC;QACxC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;QAC9B,UAAU,CAAC,KAAK,EAAE,CAAC;KACpB;;gBA3BF,gBAAS,SAAC;oBACT,QAAQ,EAAE,oCAAoC;oBAC9C,WAAW,EAAE,yCAAyC;oBACtD,SAAS,EAAE,CAAC,wCAAwC,CAAC;oBACrD,SAAS,EAAE;;;;wBAIT,EAAC,OAAO,EAAE,kBAAW,EAAE,QAAQ,EAAE,2CAAiB,EAAE,IAAI,EAAE,CAAC,sBAAe,CAAC,EAAC;wBAE5E,EAAC,OAAO,EAAE,uBAAgB,EAAE,QAAQ,EAAE,kBAAU,EAAC;qBAClD;iBACF;;0CA3CD;;AA4Ca,0EAA+B","sourcesContent":["import {Component} from '@angular/core';\r\nimport {FormControl} from '@angular/forms';\r\nimport {MomentDateAdapter} from '@angular/material-moment-adapter';\r\nimport {DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE} from '@angular/material/core';\r\nimport {MatDatepicker} from '@angular/material/datepicker';\r\n\r\n// Depending on whether rollup is used, moment needs to be imported differently.\r\n// Since Moment.js doesn't have a default export, we normally need to import using the `* as`\r\n// syntax. However, rollup creates a synthetic default module and we thus need to import it using\r\n// the `default as` syntax.\r\nimport * as _moment from 'moment';\r\n// tslint:disable-next-line:no-duplicate-imports\r\nimport {default as _rollupMoment, Moment} from 'moment';\r\n\r\nconst moment = _rollupMoment || _moment;\r\n\r\n// See the Moment.js docs for the meaning of these formats:\r\n// https://momentjs.com/docs/#/displaying/format/\r\nexport const MY_FORMATS = {\r\n  parse: {\r\n    dateInput: 'MM/YYYY',\r\n  },\r\n  display: {\r\n    dateInput: 'MM/YYYY',\r\n    monthYearLabel: 'MMM YYYY',\r\n    dateA11yLabel: 'LL',\r\n    monthYearA11yLabel: 'MMMM YYYY',\r\n  },\r\n};\r\n\r\n/** @title Datepicker emulating a Year and month picker */\r\n@Component({\r\n  selector: 'datepicker-views-selection-example',\r\n  templateUrl: 'datepicker-views-selection-example.html',\r\n  styleUrls: ['datepicker-views-selection-example.css'],\r\n  providers: [\r\n    // `MomentDateAdapter` can be automatically provided by importing `MomentDateModule` in your\r\n    // application's root module. We provide it at the component level here, due to limitations of\r\n    // our example generation script.\r\n    {provide: DateAdapter, useClass: MomentDateAdapter, deps: [MAT_DATE_LOCALE]},\r\n\r\n    {provide: MAT_DATE_FORMATS, useValue: MY_FORMATS},\r\n  ],\r\n})\r\nexport class DatepickerViewsSelectionExample {\r\n  date = new FormControl(moment());\r\n\r\n  chosenYearHandler(normalizedYear: Moment) {\r\n    const ctrlValue = this.date.value;\r\n    ctrlValue.year(normalizedYear.year());\r\n    this.date.setValue(ctrlValue);\r\n  }\r\n\r\n  chosenMonthHandler(normlizedMonth: Moment, datepicker: MatDatepicker<Moment>) {\r\n    const ctrlValue = this.date.value;\r\n    ctrlValue.month(normlizedMonth.month());\r\n    this.date.setValue(ctrlValue);\r\n    datepicker.close();\r\n  }\r\n}\r\n"]}