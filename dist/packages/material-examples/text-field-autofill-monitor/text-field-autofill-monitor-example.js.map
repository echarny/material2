{"version":3,"file":"text-field-autofill-monitor-example.js","sourceRoot":"","sources":["../../../../src/material-examples/text-field-autofill-monitor/text-field-autofill-monitor-example.ts"],"names":[],"mappings":";;AAAA,sDAAwD;AACxD,sCAAkF;;;IAchF,yCAAoB,QAAyB;QAAzB,aAAQ,GAAR,QAAQ,CAAiB;KAAI;IAEjD,kDAAQ,GAAR;QAAA,iBAKC;QAJC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC;aAC9C,SAAS,CAAC,UAAA,CAAC,IAAI,OAAA,KAAI,CAAC,mBAAmB,GAAG,CAAC,CAAC,YAAY,EAAzC,CAAyC,CAAC,CAAC;QAC/D,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC;aAC7C,SAAS,CAAC,UAAA,CAAC,IAAI,OAAA,KAAI,CAAC,kBAAkB,GAAG,CAAC,CAAC,YAAY,EAAxC,CAAwC,CAAC,CAAC;KAC/D;IAED,qDAAW,GAAX;QACE,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;QAC3D,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;KAC3D;;gBAvBF,gBAAS,SAAC;oBACT,QAAQ,EAAE,qCAAqC;oBAC/C,WAAW,EAAE,4CAA4C;oBACzD,SAAS,EAAE,CAAC,2CAA2C,CAAC;iBACzD;;;;gBARO,4BAAe;;;8BAUpB,gBAAS,SAAC,OAAO,EAAE,EAAC,IAAI,EAAE,iBAAU,EAAC;6BACrC,gBAAS,SAAC,MAAM,EAAE,EAAC,IAAI,EAAE,iBAAU,EAAC;;0CAXvC;;AASa,0EAA+B","sourcesContent":["import {AutofillMonitor} from '@angular/cdk/text-field';\r\nimport {Component, ElementRef, OnDestroy, OnInit, ViewChild} from '@angular/core';\r\n\r\n/** @title Monitoring autofill state with AutofillMonitor */\r\n@Component({\r\n  selector: 'text-field-autofill-monitor-example',\r\n  templateUrl: './text-field-autofill-monitor-example.html',\r\n  styleUrls: ['./text-field-autofill-monitor-example.css'],\r\n})\r\nexport class TextFieldAutofillMonitorExample implements OnDestroy, OnInit {\r\n  @ViewChild('first', {read: ElementRef}) firstName: ElementRef;\r\n  @ViewChild('last', {read: ElementRef}) lastName: ElementRef;\r\n  firstNameAutofilled: boolean;\r\n  lastNameAutofilled: boolean;\r\n\r\n  constructor(private autofill: AutofillMonitor) {}\r\n\r\n  ngOnInit() {\r\n    this.autofill.monitor(this.firstName.nativeElement)\r\n        .subscribe(e => this.firstNameAutofilled = e.isAutofilled);\r\n    this.autofill.monitor(this.lastName.nativeElement)\r\n        .subscribe(e => this.lastNameAutofilled = e.isAutofilled);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.autofill.stopMonitoring(this.firstName.nativeElement);\r\n    this.autofill.stopMonitoring(this.lastName.nativeElement);\r\n  }\r\n}\r\n"]}