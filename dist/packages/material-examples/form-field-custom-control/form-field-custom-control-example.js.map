{"version":3,"file":"form-field-custom-control-example.js","sourceRoot":"","sources":["../../../../src/material-examples/form-field-custom-control/form-field-custom-control-example.ts"],"names":[],"mappings":"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","sourcesContent":["import {FocusMonitor} from '@angular/cdk/a11y';\r\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\r\nimport {Component, ElementRef, Input, OnDestroy} from '@angular/core';\r\nimport {FormBuilder, FormGroup} from '@angular/forms';\r\nimport {MatFormFieldControl} from '@angular/material';\r\nimport {Subject} from 'rxjs';\r\n\r\n/** Data structure for holding telephone number. */\r\nexport class MyTel {\r\n  constructor(public area: string, public exchange: string, public subscriber: string) {}\r\n}\r\n\r\n\r\n/** Custom `MatFormFieldControl` for telephone number input. */\r\n@Component({\r\n  selector: 'my-tel-input',\r\n  templateUrl: 'form-field-custom-control-example.html',\r\n  styleUrls: ['form-field-custom-control-example.css'],\r\n  providers: [{provide: MatFormFieldControl, useExisting: MyTelInput}],\r\n  host: {\r\n    '[class.floating]': 'shouldLabelFloat',\r\n    '[id]': 'id',\r\n    '[attr.aria-describedby]': 'describedBy',\r\n  }\r\n})\r\nexport class MyTelInput implements MatFormFieldControl<MyTel>, OnDestroy {\r\n  static nextId = 0;\r\n\r\n  parts: FormGroup;\r\n  stateChanges = new Subject<void>();\r\n  focused = false;\r\n  ngControl = null;\r\n  errorState = false;\r\n  controlType = 'my-tel-input';\r\n  id = `my-tel-input-${MyTelInput.nextId++}`;\r\n  describedBy = '';\r\n\r\n  get empty() {\r\n    const {value: {area, exchange, subscriber}} = this.parts;\r\n\r\n    return !area && !exchange && !subscriber;\r\n  }\r\n\r\n  get shouldLabelFloat() { return this.focused || !this.empty; }\r\n\r\n  @Input()\r\n  get placeholder(): string { return this._placeholder; }\r\n  set placeholder(value: string) {\r\n    this._placeholder = value;\r\n    this.stateChanges.next();\r\n  }\r\n  private _placeholder: string;\r\n\r\n  @Input()\r\n  get required(): boolean { return this._required; }\r\n  set required(value: boolean) {\r\n    this._required = coerceBooleanProperty(value);\r\n    this.stateChanges.next();\r\n  }\r\n  private _required = false;\r\n\r\n  @Input()\r\n  get disabled(): boolean { return this._disabled; }\r\n  set disabled(value: boolean) {\r\n    this._disabled = coerceBooleanProperty(value);\r\n    this.stateChanges.next();\r\n  }\r\n  private _disabled = false;\r\n\r\n  @Input()\r\n  get value(): MyTel | null {\r\n    const {value: {area, exchange, subscriber}} = this.parts;\r\n    if (area.length === 3 && exchange.length === 3 && subscriber.length === 4) {\r\n      return new MyTel(area, exchange, subscriber);\r\n    }\r\n    return null;\r\n  }\r\n  set value(tel: MyTel | null) {\r\n    const {area, exchange, subscriber} = tel || new MyTel('', '', '');\r\n    this.parts.setValue({area, exchange, subscriber});\r\n    this.stateChanges.next();\r\n  }\r\n\r\n  constructor(fb: FormBuilder, private fm: FocusMonitor, private elRef: ElementRef) {\r\n    this.parts = fb.group({\r\n      area: '',\r\n      exchange: '',\r\n      subscriber: '',\r\n    });\r\n\r\n    fm.monitor(elRef.nativeElement, true).subscribe(origin => {\r\n      this.focused = !!origin;\r\n      this.stateChanges.next();\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.stateChanges.complete();\r\n    this.fm.stopMonitoring(this.elRef.nativeElement);\r\n  }\r\n\r\n  setDescribedByIds(ids: string[]) {\r\n    this.describedBy = ids.join(' ');\r\n  }\r\n\r\n  onContainerClick(event: MouseEvent) {\r\n    if ((event.target as Element).tagName.toLowerCase() != 'input') {\r\n      this.elRef.nativeElement.querySelector('input').focus();\r\n    }\r\n  }\r\n}\r\n\r\n\r\n/** @title Form field with custom telephone number input control. */\r\n@Component({\r\n  selector: 'form-field-custom-control-example',\r\n  template: `\r\n    <mat-form-field>\r\n      <my-tel-input placeholder=\"Phone number\" required></my-tel-input>\r\n      <mat-icon matSuffix>phone</mat-icon>\r\n      <mat-hint>Include area code</mat-hint>\r\n    </mat-form-field>\r\n  `\r\n})\r\nexport class FormFieldCustomControlExample {}\r\n"]}