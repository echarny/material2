{"version":3,"file":"input-error-state-matcher-example.js","sourceRoot":"","sources":["../../../../src/material-examples/input-error-state-matcher/input-error-state-matcher-example.ts"],"names":[],"mappings":";;AAAA,sCAAwC;AACxC,wCAAmF;;AAInF;AAAA;;;IACE,0CAAY,GAAZ,UAAa,OAA2B,EAAE,IAAwC;QAChF,IAAM,WAAW,GAAG,IAAI,IAAI,IAAI,CAAC,SAAS,CAAC;QAC3C,MAAM,CAAC,CAAC,CAAC,CAAC,OAAO,IAAI,OAAO,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,OAAO,IAAI,WAAW,CAAC,CAAC,CAAC;KAC5F;8BATH;IAUC,CAAA;AALY,kDAAmB;;;;gCAcX,IAAI,mBAAW,CAAC,EAAE,EAAE;YACrC,kBAAU,CAAC,QAAQ;YACnB,kBAAU,CAAC,KAAK;SACjB,CAAC;uBAEQ,IAAI,mBAAmB,EAAE;;;gBAXpC,gBAAS,SAAC;oBACT,QAAQ,EAAE,mCAAmC;oBAC7C,WAAW,EAAE,0CAA0C;oBACvD,SAAS,EAAE,CAAC,yCAAyC,CAAC;iBACvD;;wCAjBD;;AAkBa,sEAA6B","sourcesContent":["import {Component} from '@angular/core';\r\nimport {FormControl, FormGroupDirective, NgForm, Validators} from '@angular/forms';\r\nimport {ErrorStateMatcher} from '@angular/material/core';\r\n\r\n/** Error when invalid control is dirty, touched, or submitted. */\r\nexport class MyErrorStateMatcher implements ErrorStateMatcher {\r\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\r\n    const isSubmitted = form && form.submitted;\r\n    return !!(control && control.invalid && (control.dirty || control.touched || isSubmitted));\r\n  }\r\n}\r\n\r\n/** @title Input with a custom ErrorStateMatcher */\r\n@Component({\r\n  selector: 'input-error-state-matcher-example',\r\n  templateUrl: './input-error-state-matcher-example.html',\r\n  styleUrls: ['./input-error-state-matcher-example.css'],\r\n})\r\nexport class InputErrorStateMatcherExample {\r\n  emailFormControl = new FormControl('', [\r\n    Validators.required,\r\n    Validators.email,\r\n  ]);\r\n\r\n  matcher = new MyErrorStateMatcher();\r\n}\r\n"]}