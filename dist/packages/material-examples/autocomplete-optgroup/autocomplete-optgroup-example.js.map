{"version":3,"file":"autocomplete-optgroup-example.js","sourceRoot":"","sources":["../../../../src/material-examples/autocomplete-optgroup/autocomplete-optgroup-example.ts"],"names":[],"mappings":"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","sourcesContent":["import {Component, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormGroup} from '@angular/forms';\r\nimport {Observable} from 'rxjs';\r\nimport {startWith, map} from 'rxjs/operators';\r\n\r\nexport interface StateGroup {\r\n  letter: string;\r\n  names: string[];\r\n}\r\n\r\nexport const _filter = (opt: string[], value: string): string[] => {\r\n  const filterValue = value.toLowerCase();\r\n\r\n  return opt.filter(item => item.toLowerCase().indexOf(filterValue) === 0);\r\n};\r\n\r\n/**\r\n * @title Option groups autocomplete\r\n */\r\n@Component({\r\n  templateUrl: './autocomplete-optgroup-example.html',\r\n  styleUrls: ['./autocomplete-optgroup-example.css'],\r\n})\r\n\r\nexport class AutocompleteOptgroupExample implements OnInit {\r\n  stateForm: FormGroup = this.fb.group({\r\n    stateGroup: '',\r\n  });\r\n\r\n  stateGroups: StateGroup[] = [{\r\n    letter: 'A',\r\n    names: ['Alabama', 'Alaska', 'Arizona', 'Arkansas']\r\n  }, {\r\n    letter: 'C',\r\n    names: ['California', 'Colorado', 'Connecticut']\r\n  }, {\r\n    letter: 'D',\r\n    names: ['Delaware']\r\n  }, {\r\n    letter: 'F',\r\n    names: ['Florida']\r\n  }, {\r\n    letter: 'G',\r\n    names: ['Georgia']\r\n  }, {\r\n    letter: 'H',\r\n    names: ['Hawaii']\r\n  }, {\r\n    letter: 'I',\r\n    names: ['Idaho', 'Illinois', 'Indiana', 'Iowa']\r\n  }, {\r\n    letter: 'K',\r\n    names: ['Kansas', 'Kentucky']\r\n  }, {\r\n    letter: 'L',\r\n    names: ['Louisiana']\r\n  }, {\r\n    letter: 'M',\r\n    names: ['Maine', 'Maryland', 'Massachusetts', 'Michigan',\r\n      'Minnesota', 'Mississippi', 'Missouri', 'Montana']\r\n  }, {\r\n    letter: 'N',\r\n    names: ['Nebraska', 'Nevada', 'New Hampshire', 'New Jersey',\r\n      'New Mexico', 'New York', 'North Carolina', 'North Dakota']\r\n  }, {\r\n    letter: 'O',\r\n    names: ['Ohio', 'Oklahoma', 'Oregon']\r\n  }, {\r\n    letter: 'P',\r\n    names: ['Pennsylvania']\r\n  }, {\r\n    letter: 'R',\r\n    names: ['Rhode Island']\r\n  }, {\r\n    letter: 'S',\r\n    names: ['South Carolina', 'South Dakota']\r\n  }, {\r\n    letter: 'T',\r\n    names: ['Tennessee', 'Texas']\r\n  }, {\r\n    letter: 'U',\r\n    names: ['Utah']\r\n  }, {\r\n    letter: 'V',\r\n    names: ['Vermont', 'Virginia']\r\n  }, {\r\n    letter: 'W',\r\n    names: ['Washington', 'West Virginia', 'Wisconsin', 'Wyoming']\r\n  }];\r\n\r\n  stateGroupOptions: Observable<StateGroup[]>;\r\n\r\n  constructor(private fb: FormBuilder) {}\r\n\r\n  ngOnInit() {\r\n    this.stateGroupOptions = this.stateForm.get('stateGroup')!.valueChanges\r\n      .pipe(\r\n        startWith(''),\r\n        map(value => this._filterGroup(value))\r\n      );\r\n  }\r\n\r\n  private _filterGroup(value: string): StateGroup[] {\r\n    if (value) {\r\n      return this.stateGroups\r\n        .map(group => ({letter: group.letter, names: _filter(group.names, value)}))\r\n        .filter(group => group.names.length > 0);\r\n    }\r\n\r\n    return this.stateGroups;\r\n  }\r\n}\r\n"]}