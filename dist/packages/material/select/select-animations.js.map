{"version":3,"file":"select-animations.js","sourceRoot":"","sources":["../../../../src/lib/select/select-animations.ts"],"names":[],"mappings":";;;;;;;;;AAQA,kDAU6B;;;;;;;AAQhB,QAAA,mBAAmB,GAG5B;;;;;;;;;;IAUF,cAAc,EAAE,oBAAO,CAAC,gBAAgB,EAAE;QACxC,kBAAK,CAAC,MAAM,EAAE,kBAAK,CAAC;YAClB,SAAS,EAAE,WAAW;YACtB,QAAQ,EAAE,MAAM;YAChB,OAAO,EAAE,CAAC;SACX,CAAC,CAAC;QACH,kBAAK,CAAC,SAAS,EAAE,kBAAK,CAAC;YACrB,OAAO,EAAE,CAAC;YACV,QAAQ,EAAE,mBAAmB;;YAC7B,SAAS,EAAE,WAAW;SACvB,CAAC,CAAC;QACH,kBAAK,CAAC,kBAAkB,EAAE,kBAAK,CAAC;YAC9B,OAAO,EAAE,CAAC;YACV,QAAQ,EAAE,mBAAmB;;YAC7B,SAAS,EAAE,WAAW;SACvB,CAAC,CAAC;QACH,uBAAU,CAAC,WAAW,EAAE,kBAAK,CAAC;YAC5B,kBAAK,CAAC,gBAAgB,EAAE,yBAAY,EAAE,CAAC;YACvC,oBAAO,CAAC,wCAAwC,CAAC;SAClD,CAAC,CAAC;QACH,uBAAU,CAAC,WAAW,EAAE;YACtB,oBAAO,CAAC,oBAAoB,EAAE,kBAAK,CAAC,EAAC,OAAO,EAAE,CAAC,EAAC,CAAC,CAAC;SACnD,CAAC;KACH,CAAC;;;;;;IAOF,aAAa,EAAE,oBAAO,CAAC,eAAe,EAAE;QACtC,kBAAK,CAAC,SAAS,EAAE,kBAAK,CAAC,EAAC,OAAO,EAAE,CAAC,EAAC,CAAC,CAAC;QACrC,uBAAU,CAAC,iBAAiB,EAAE;YAC5B,kBAAK,CAAC,EAAC,OAAO,EAAE,CAAC,EAAC,CAAC;YACnB,oBAAO,CAAC,8CAA8C,CAAC;SACxD,CAAC;KACH,CAAC;CACH;;;;;AAOY,QAAA,cAAc,GAAG,2BAAmB,CAAC,cAAc;;;;;AAMnD,QAAA,aAAa,GAAG,2BAAmB,CAAC,aAAa","sourcesContent":["/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {\r\n  animate,\r\n  AnimationTriggerMetadata,\r\n  state,\r\n  style,\r\n  transition,\r\n  trigger,\r\n  query,\r\n  animateChild,\r\n  group,\r\n} from '@angular/animations';\r\n\r\n/**\r\n * The following are all the animations for the mat-select component, with each\r\n * const containing the metadata for one animation.\r\n *\r\n * The values below match the implementation of the AngularJS Material mat-select animation.\r\n */\r\nexport const matSelectAnimations: {\r\n  readonly transformPanel: AnimationTriggerMetadata;\r\n  readonly fadeInContent: AnimationTriggerMetadata;\r\n} = {\r\n  /**\r\n   * This animation transforms the select's overlay panel on and off the page.\r\n   *\r\n   * When the panel is attached to the DOM, it expands its width by the amount of padding, scales it\r\n   * up to 100% on the Y axis, fades in its border, and translates slightly up and to the\r\n   * side to ensure the option text correctly overlaps the trigger text.\r\n   *\r\n   * When the panel is removed from the DOM, it simply fades out linearly.\r\n   */\r\n  transformPanel: trigger('transformPanel', [\r\n    state('void', style({\r\n      transform: 'scaleY(0)',\r\n      minWidth: '100%',\r\n      opacity: 0\r\n    })),\r\n    state('showing', style({\r\n      opacity: 1,\r\n      minWidth: 'calc(100% + 32px)', // 32px = 2 * 16px padding\r\n      transform: 'scaleY(1)'\r\n    })),\r\n    state('showing-multiple', style({\r\n      opacity: 1,\r\n      minWidth: 'calc(100% + 64px)', // 64px = 48px padding on the left + 16px padding on the right\r\n      transform: 'scaleY(1)'\r\n    })),\r\n    transition('void => *', group([\r\n      query('@fadeInContent', animateChild()),\r\n      animate('150ms cubic-bezier(0.25, 0.8, 0.25, 1)')\r\n    ])),\r\n    transition('* => void', [\r\n      animate('250ms 100ms linear', style({opacity: 0}))\r\n    ])\r\n  ]),\r\n\r\n  /**\r\n   * This animation fades in the background color and text content of the\r\n   * select's options. It is time delayed to occur 100ms after the overlay\r\n   * panel has transformed in.\r\n   */\r\n  fadeInContent: trigger('fadeInContent', [\r\n    state('showing', style({opacity: 1})),\r\n    transition('void => showing', [\r\n      style({opacity: 0}),\r\n      animate('150ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)')\r\n    ])\r\n  ])\r\n};\r\n\r\n\r\n/**\r\n * @deprecated\r\n * @breaking-change 7.0.0\r\n */\r\nexport const transformPanel = matSelectAnimations.transformPanel;\r\n\r\n/**\r\n * @deprecated\r\n * @breaking-change 7.0.0\r\n */\r\nexport const fadeInContent = matSelectAnimations.fadeInContent;\r\n"]}