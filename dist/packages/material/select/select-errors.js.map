{"version":3,"file":"select-errors.js","sourceRoot":"","sources":["../../../../src/lib/select/select-errors.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAaA;IACE,MAAM,CAAC,KAAK,CAAC,+DAA+D,CAAC,CAAC;CAC/E;AAFD,4EAEC;;;;;;;AAQD;IACE,MAAM,CAAC,KAAK,CAAC,oDAAoD,CAAC,CAAC;CACpE;AAFD,wEAEC;;;;;;AAOD;IACE,MAAM,CAAC,KAAK,CAAC,mCAAmC,CAAC,CAAC;CACnD;AAFD,8EAEC","sourcesContent":["/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n/**\r\n * Returns an exception to be thrown when attempting to change a select's `multiple` option\r\n * after initialization.\r\n * @docs-private\r\n */\r\nexport function getMatSelectDynamicMultipleError(): Error {\r\n  return Error('Cannot change `multiple` mode of select after initialization.');\r\n}\r\n\r\n/**\r\n * Returns an exception to be thrown when attempting to assign a non-array value to a select\r\n * in `multiple` mode. Note that `undefined` and `null` are still valid values to allow for\r\n * resetting the value.\r\n * @docs-private\r\n */\r\nexport function getMatSelectNonArrayValueError(): Error {\r\n  return Error('Value must be an array in multiple-selection mode.');\r\n}\r\n\r\n/**\r\n * Returns an exception to be thrown when assigning a non-function value to the comparator\r\n * used to determine if a value corresponds to an option. Note that whether the function\r\n * actually takes two values and returns a boolean is not checked.\r\n */\r\nexport function getMatSelectNonFunctionValueError(): Error {\r\n  return Error('`compareWith` must be a function.');\r\n}\r\n"]}