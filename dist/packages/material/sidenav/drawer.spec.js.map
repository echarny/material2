{"version":3,"file":"drawer.spec.js","sourceRoot":"","sources":["../../../../src/lib/sidenav/drawer.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import {\r\n  fakeAsync,\r\n  async,\r\n  tick,\r\n  ComponentFixture,\r\n  TestBed,\r\n  discardPeriodicTasks,\r\n  flush,\r\n} from '@angular/core/testing';\r\nimport {Component, ElementRef, ViewChild} from '@angular/core';\r\nimport {By} from '@angular/platform-browser';\r\nimport {BrowserAnimationsModule, NoopAnimationsModule} from '@angular/platform-browser/animations';\r\nimport {MatDrawer, MatSidenavModule, MatDrawerContainer} from './index';\r\nimport {Direction} from '@angular/cdk/bidi';\r\nimport {A11yModule} from '@angular/cdk/a11y';\r\nimport {PlatformModule} from '@angular/cdk/platform';\r\nimport {ESCAPE} from '@angular/cdk/keycodes';\r\nimport {dispatchKeyboardEvent} from '@angular/cdk/testing';\r\nimport {CdkScrollable} from '@angular/cdk/scrolling';\r\n\r\n\r\ndescribe('MatDrawer', () => {\r\n  beforeEach(async(() => {\r\n    TestBed.configureTestingModule({\r\n      imports: [MatSidenavModule, A11yModule, PlatformModule, NoopAnimationsModule],\r\n      declarations: [\r\n        BasicTestApp,\r\n        DrawerContainerNoDrawerTestApp,\r\n        DrawerSetToOpenedFalse,\r\n        DrawerSetToOpenedTrue,\r\n        DrawerDynamicPosition,\r\n        DrawerWithFocusableElements,\r\n        DrawerOpenBinding,\r\n        DrawerWithoutFocusableElements,\r\n      ],\r\n    });\r\n\r\n    TestBed.compileComponents();\r\n  }));\r\n\r\n  describe('methods', () => {\r\n    it('should be able to open', fakeAsync(() => {\r\n      const fixture = TestBed.createComponent(BasicTestApp);\r\n\r\n      fixture.detectChanges();\r\n\r\n      const testComponent: BasicTestApp = fixture.debugElement.componentInstance;\r\n      const drawer = fixture.debugElement.query(By.directive(MatDrawer));\r\n      const drawerBackdropElement = fixture.debugElement.query(By.css('.mat-drawer-backdrop'));\r\n\r\n      drawerBackdropElement.nativeElement.style.transition = 'none';\r\n      fixture.debugElement.query(By.css('.open')).nativeElement.click();\r\n      fixture.detectChanges();\r\n\r\n      expect(testComponent.openCount).toBe(0);\r\n      expect(testComponent.openStartCount).toBe(0);\r\n\r\n      tick();\r\n      expect(testComponent.openStartCount).toBe(1);\r\n      fixture.detectChanges();\r\n\r\n      expect(testComponent.openCount).toBe(1);\r\n      expect(testComponent.openStartCount).toBe(1);\r\n      expect(getComputedStyle(drawer.nativeElement).visibility).toBe('visible');\r\n      expect(getComputedStyle(drawerBackdropElement.nativeElement).visibility).toBe('visible');\r\n    }));\r\n\r\n    it('should be able to close', fakeAsync(() => {\r\n      const fixture = TestBed.createComponent(BasicTestApp);\r\n\r\n      fixture.detectChanges();\r\n\r\n      const testComponent: BasicTestApp = fixture.debugElement.componentInstance;\r\n      const drawer = fixture.debugElement.query(By.directive(MatDrawer));\r\n      const drawerBackdropElement = fixture.debugElement.query(By.css('.mat-drawer-backdrop'));\r\n\r\n      drawerBackdropElement.nativeElement.style.transition = 'none';\r\n      fixture.debugElement.query(By.css('.open')).nativeElement.click();\r\n      fixture.detectChanges();\r\n      flush();\r\n      fixture.detectChanges();\r\n\r\n      fixture.debugElement.query(By.css('.close')).nativeElement.click();\r\n      fixture.detectChanges();\r\n\r\n      expect(testComponent.closeCount).toBe(0);\r\n      expect(testComponent.closeStartCount).toBe(0);\r\n\r\n      flush();\r\n      expect(testComponent.closeStartCount).toBe(1);\r\n      fixture.detectChanges();\r\n\r\n      expect(testComponent.closeCount).toBe(1);\r\n      expect(testComponent.closeStartCount).toBe(1);\r\n      expect(getComputedStyle(drawer.nativeElement).visibility).toBe('hidden');\r\n      expect(getComputedStyle(drawerBackdropElement.nativeElement).visibility).toBe('hidden');\r\n    }));\r\n\r\n    it('should resolve the open method promise with the new state of the drawer', fakeAsync(() => {\r\n      const fixture = TestBed.createComponent(BasicTestApp);\r\n      fixture.detectChanges();\r\n      const drawer = fixture.debugElement.query(By.directive(MatDrawer));\r\n\r\n      drawer.componentInstance.open().then(result => expect(result).toBe('open'));\r\n      fixture.detectChanges();\r\n      tick();\r\n      fixture.detectChanges();\r\n    }));\r\n\r\n    it('should resolve the close method promise with the new state of the drawer', fakeAsync(() => {\r\n      const fixture = TestBed.createComponent(BasicTestApp);\r\n      fixture.detectChanges();\r\n      const drawer = fixture.debugElement.query(By.directive(MatDrawer));\r\n\r\n      drawer.componentInstance.open();\r\n      fixture.detectChanges();\r\n      flush();\r\n      fixture.detectChanges();\r\n\r\n      drawer.componentInstance.close().then(result => expect(result).toBe('close'));\r\n      fixture.detectChanges();\r\n      flush();\r\n      fixture.detectChanges();\r\n    }));\r\n\r\n    it('should be able to close while the open animation is running', fakeAsync(() => {\r\n      const fixture = TestBed.createComponent(BasicTestApp);\r\n      fixture.detectChanges();\r\n\r\n      const testComponent: BasicTestApp = fixture.debugElement.componentInstance;\r\n      fixture.debugElement.query(By.css('.open')).nativeElement.click();\r\n      fixture.detectChanges();\r\n\r\n      expect(testComponent.openCount).toBe(0);\r\n      expect(testComponent.closeCount).toBe(0);\r\n\r\n      tick();\r\n      fixture.debugElement.query(By.css('.close')).nativeElement.click();\r\n      fixture.detectChanges();\r\n\r\n      flush();\r\n      fixture.detectChanges();\r\n\r\n      expect(testComponent.openCount).toBe(1);\r\n      expect(testComponent.closeCount).toBe(1);\r\n    }));\r\n\r\n    it('does not throw when created without a drawer', fakeAsync(() => {\r\n      expect(() => {\r\n        let fixture = TestBed.createComponent(BasicTestApp);\r\n        fixture.detectChanges();\r\n        tick();\r\n      }).not.toThrow();\r\n    }));\r\n\r\n    it('should emit the backdropClick event when the backdrop is clicked', fakeAsync(() => {\r\n      let fixture = TestBed.createComponent(BasicTestApp);\r\n      fixture.detectChanges();\r\n\r\n      let testComponent: BasicTestApp = fixture.debugElement.componentInstance;\r\n      let openButtonElement = fixture.debugElement.query(By.css('.open')).nativeElement;\r\n\r\n      openButtonElement.click();\r\n      fixture.detectChanges();\r\n      flush();\r\n\r\n      expect(testComponent.backdropClickedCount).toBe(0);\r\n\r\n      fixture.debugElement.query(By.css('.mat-drawer-backdrop')).nativeElement.click();\r\n      fixture.detectChanges();\r\n      flush();\r\n\r\n      expect(testComponent.backdropClickedCount).toBe(1);\r\n\r\n      openButtonElement.click();\r\n      fixture.detectChanges();\r\n      flush();\r\n\r\n      fixture.debugElement.query(By.css('.close')).nativeElement.click();\r\n      fixture.detectChanges();\r\n      flush();\r\n\r\n      expect(testComponent.backdropClickedCount).toBe(1);\r\n    }));\r\n\r\n    it('should close when pressing escape', fakeAsync(() => {\r\n      let fixture = TestBed.createComponent(BasicTestApp);\r\n\r\n      fixture.detectChanges();\r\n\r\n      let testComponent: BasicTestApp = fixture.debugElement.componentInstance;\r\n      let drawer = fixture.debugElement.query(By.directive(MatDrawer));\r\n\r\n      drawer.componentInstance.open();\r\n      fixture.detectChanges();\r\n      tick();\r\n\r\n      expect(testComponent.openCount).toBe(1, 'Expected one open event.');\r\n      expect(testComponent.openStartCount).toBe(1, 'Expected one open start event.');\r\n      expect(testComponent.closeCount).toBe(0, 'Expected no close events.');\r\n      expect(testComponent.closeStartCount).toBe(0, 'Expected no close start events.');\r\n\r\n      dispatchKeyboardEvent(drawer.nativeElement, 'keydown', ESCAPE);\r\n      fixture.detectChanges();\r\n      flush();\r\n\r\n      expect(testComponent.closeCount).toBe(1, 'Expected one close event.');\r\n      expect(testComponent.closeStartCount).toBe(1, 'Expected one close start event.');\r\n    }));\r\n\r\n    it('should fire the open event when open on init', fakeAsync(() => {\r\n      let fixture = TestBed.createComponent(DrawerSetToOpenedTrue);\r\n\r\n      fixture.detectChanges();\r\n      tick();\r\n\r\n      expect(fixture.componentInstance.openCallback).toHaveBeenCalledTimes(1);\r\n    }));\r\n\r\n    it('should not close by pressing escape when disableClose is set', fakeAsync(() => {\r\n      let fixture = TestBed.createComponent(BasicTestApp);\r\n      let testComponent = fixture.debugElement.componentInstance;\r\n      let drawer = fixture.debugElement.query(By.directive(MatDrawer));\r\n\r\n      drawer.componentInstance.disableClose = true;\r\n      drawer.componentInstance.open();\r\n      fixture.detectChanges();\r\n      tick();\r\n\r\n      dispatchKeyboardEvent(drawer.nativeElement, 'keydown', ESCAPE);\r\n      fixture.detectChanges();\r\n      tick();\r\n\r\n      expect(testComponent.closeCount).toBe(0);\r\n      expect(testComponent.closeStartCount).toBe(0);\r\n    }));\r\n\r\n    it('should not close by clicking on the backdrop when disableClose is set', fakeAsync(() => {\r\n      let fixture = TestBed.createComponent(BasicTestApp);\r\n      let testComponent = fixture.debugElement.componentInstance;\r\n      let drawer = fixture.debugElement.query(By.directive(MatDrawer)).componentInstance;\r\n\r\n      drawer.disableClose = true;\r\n      drawer.open();\r\n      fixture.detectChanges();\r\n      tick();\r\n\r\n      fixture.debugElement.query(By.css('.mat-drawer-backdrop')).nativeElement.click();\r\n      fixture.detectChanges();\r\n      tick();\r\n\r\n      expect(testComponent.closeCount).toBe(0);\r\n      expect(testComponent.closeStartCount).toBe(0);\r\n    }));\r\n\r\n    it('should restore focus on close if focus is inside drawer', fakeAsync(() => {\r\n      let fixture = TestBed.createComponent(BasicTestApp);\r\n\r\n      fixture.detectChanges();\r\n\r\n      let drawer = fixture.debugElement.query(By.directive(MatDrawer)).componentInstance;\r\n      let openButton = fixture.componentInstance.openButton.nativeElement;\r\n      let drawerButton = fixture.componentInstance.drawerButton.nativeElement;\r\n\r\n      openButton.focus();\r\n      drawer.open();\r\n      fixture.detectChanges();\r\n      flush();\r\n      drawerButton.focus();\r\n\r\n      drawer.close();\r\n      fixture.detectChanges();\r\n      flush();\r\n\r\n      expect(document.activeElement)\r\n          .toBe(openButton, 'Expected focus to be restored to the open button on close.');\r\n    }));\r\n\r\n    it('should not restore focus on close if focus is outside drawer', fakeAsync(() => {\r\n      let fixture = TestBed.createComponent(BasicTestApp);\r\n      let drawer: MatDrawer = fixture.debugElement\r\n          .query(By.directive(MatDrawer)).componentInstance;\r\n      let openButton = fixture.componentInstance.openButton.nativeElement;\r\n      let closeButton = fixture.componentInstance.closeButton.nativeElement;\r\n\r\n      openButton.focus();\r\n      drawer.open();\r\n\r\n      fixture.detectChanges();\r\n      tick();\r\n      closeButton.focus();\r\n\r\n      drawer.close();\r\n      fixture.detectChanges();\r\n      tick();\r\n\r\n      expect(document.activeElement)\r\n          .toBe(closeButton, 'Expected focus not to be restored to the open button on close.');\r\n    }));\r\n  });\r\n\r\n  describe('attributes', () => {\r\n    it('should correctly parse opened=\"false\"', () => {\r\n      let fixture = TestBed.createComponent(DrawerSetToOpenedFalse);\r\n\r\n      fixture.detectChanges();\r\n\r\n      let drawer = fixture.debugElement.query(By.directive(MatDrawer)).componentInstance;\r\n\r\n      expect((drawer as MatDrawer).opened).toBe(false);\r\n    });\r\n\r\n    it('should correctly parse opened=\"true\"', () => {\r\n      let fixture = TestBed.createComponent(DrawerSetToOpenedTrue);\r\n\r\n      fixture.detectChanges();\r\n\r\n      let drawer = fixture.debugElement.query(By.directive(MatDrawer)).componentInstance;\r\n\r\n      expect((drawer as MatDrawer).opened).toBe(true);\r\n    });\r\n\r\n    it('should remove align attr from DOM', () => {\r\n      const fixture = TestBed.createComponent(BasicTestApp);\r\n      fixture.detectChanges();\r\n\r\n      const drawerEl = fixture.debugElement.query(By.css('mat-drawer')).nativeElement;\r\n      expect(drawerEl.hasAttribute('align'))\r\n          .toBe(false, 'Expected drawer not to have a native align attribute.');\r\n    });\r\n\r\n    it('should throw when multiple drawers have the same position', fakeAsync(() => {\r\n      const fixture = TestBed.createComponent(DrawerDynamicPosition);\r\n      fixture.detectChanges();\r\n      tick();\r\n\r\n      const testComponent: DrawerDynamicPosition = fixture.debugElement.componentInstance;\r\n      testComponent.drawer1Position = 'end';\r\n\r\n      expect(() => {\r\n        try {\r\n          fixture.detectChanges();\r\n          tick(0);\r\n        } catch {\r\n          tick(0);\r\n        }\r\n      }).toThrow();\r\n    }));\r\n\r\n    it('should not throw when drawers swap positions', () => {\r\n      const fixture = TestBed.createComponent(DrawerDynamicPosition);\r\n      fixture.detectChanges();\r\n\r\n      const testComponent: DrawerDynamicPosition = fixture.debugElement.componentInstance;\r\n      testComponent.drawer1Position = 'end';\r\n      testComponent.drawer2Position = 'start';\r\n\r\n      expect(() => fixture.detectChanges()).not.toThrow();\r\n    });\r\n\r\n    it('should bind 2-way bind on opened property', fakeAsync(() => {\r\n      const fixture = TestBed.createComponent(DrawerOpenBinding);\r\n      fixture.detectChanges();\r\n\r\n      let drawer: MatDrawer = fixture.debugElement\r\n          .query(By.directive(MatDrawer)).componentInstance;\r\n\r\n      drawer.open();\r\n      fixture.detectChanges();\r\n      tick();\r\n\r\n      expect(fixture.componentInstance.isOpen).toBe(true);\r\n    }));\r\n\r\n    it('should not throw when a two-way binding is toggled quickly while animating',\r\n      fakeAsync(() => {\r\n        TestBed\r\n          .resetTestingModule()\r\n          .configureTestingModule({\r\n            imports: [MatSidenavModule, BrowserAnimationsModule],\r\n            declarations: [DrawerOpenBinding],\r\n          })\r\n          .compileComponents();\r\n\r\n        const fixture = TestBed.createComponent(DrawerOpenBinding);\r\n        fixture.detectChanges();\r\n\r\n        // Note that we need actual timeouts and the `BrowserAnimationsModule`\r\n        // in order to test it correctly.\r\n        setTimeout(() => {\r\n          fixture.componentInstance.isOpen = !fixture.componentInstance.isOpen;\r\n          expect(() => fixture.detectChanges()).not.toThrow();\r\n\r\n          setTimeout(() => {\r\n            fixture.componentInstance.isOpen = !fixture.componentInstance.isOpen;\r\n            expect(() => fixture.detectChanges()).not.toThrow();\r\n          }, 1);\r\n\r\n          tick(1);\r\n        }, 1);\r\n\r\n        tick(1);\r\n      }));\r\n\r\n  });\r\n\r\n  describe('focus trapping behavior', () => {\r\n    let fixture: ComponentFixture<DrawerWithFocusableElements>;\r\n    let testComponent: DrawerWithFocusableElements;\r\n    let drawer: MatDrawer;\r\n    let firstFocusableElement: HTMLElement;\r\n    let lastFocusableElement: HTMLElement;\r\n\r\n    beforeEach(() => {\r\n      fixture = TestBed.createComponent(DrawerWithFocusableElements);\r\n      fixture.detectChanges();\r\n      testComponent = fixture.debugElement.componentInstance;\r\n      drawer = fixture.debugElement.query(By.directive(MatDrawer)).componentInstance;\r\n      firstFocusableElement = fixture.debugElement.query(By.css('.input1')).nativeElement;\r\n      lastFocusableElement = fixture.debugElement.query(By.css('.input2')).nativeElement;\r\n      lastFocusableElement.focus();\r\n    });\r\n\r\n    it('should trap focus when opened in \"over\" mode', fakeAsync(() => {\r\n      testComponent.mode = 'over';\r\n      fixture.detectChanges();\r\n      lastFocusableElement.focus();\r\n\r\n      drawer.open();\r\n      fixture.detectChanges();\r\n      tick();\r\n\r\n      expect(document.activeElement).toBe(firstFocusableElement);\r\n    }));\r\n\r\n    it('should trap focus when opened in \"push\" mode', fakeAsync(() => {\r\n      testComponent.mode = 'push';\r\n      fixture.detectChanges();\r\n      lastFocusableElement.focus();\r\n\r\n      drawer.open();\r\n      fixture.detectChanges();\r\n      tick();\r\n\r\n      expect(document.activeElement).toBe(firstFocusableElement);\r\n    }));\r\n\r\n    it('should not trap focus when opened in \"side\" mode', fakeAsync(() => {\r\n      testComponent.mode = 'side';\r\n      fixture.detectChanges();\r\n      lastFocusableElement.focus();\r\n\r\n      drawer.open();\r\n      fixture.detectChanges();\r\n      tick();\r\n\r\n      expect(document.activeElement).toBe(lastFocusableElement);\r\n    }));\r\n\r\n    it('should focus the drawer if there are no focusable elements', fakeAsync(() => {\r\n      fixture.destroy();\r\n\r\n      const nonFocusableFixture = TestBed.createComponent(DrawerWithoutFocusableElements);\r\n      const drawerEl = nonFocusableFixture.debugElement.query(By.directive(MatDrawer));\r\n      nonFocusableFixture.detectChanges();\r\n\r\n      drawerEl.componentInstance.open();\r\n      nonFocusableFixture.detectChanges();\r\n      tick();\r\n\r\n      expect(document.activeElement).toBe(drawerEl.nativeElement);\r\n    }));\r\n\r\n    it('should be able to disable auto focus', fakeAsync(() => {\r\n      testComponent.autoFocus = false;\r\n      testComponent.mode = 'push';\r\n      fixture.detectChanges();\r\n      lastFocusableElement.focus();\r\n\r\n      drawer.open();\r\n      fixture.detectChanges();\r\n      tick();\r\n\r\n      expect(document.activeElement).not.toBe(firstFocusableElement);\r\n    }));\r\n\r\n  });\r\n});\r\n\r\ndescribe('MatDrawerContainer', () => {\r\n  beforeEach(async(() => {\r\n    TestBed.configureTestingModule({\r\n      imports: [MatSidenavModule, A11yModule, PlatformModule, NoopAnimationsModule],\r\n      declarations: [\r\n        DrawerContainerTwoDrawerTestApp,\r\n        DrawerDelayed,\r\n        DrawerSetToOpenedTrue,\r\n        DrawerContainerStateChangesTestApp,\r\n        AutosizeDrawer,\r\n        BasicTestApp,\r\n        DrawerContainerWithContent,\r\n      ],\r\n    });\r\n\r\n    TestBed.compileComponents();\r\n  }));\r\n\r\n  it('should be able to open and close all drawers', fakeAsync(() => {\r\n    const fixture = TestBed.createComponent(DrawerContainerTwoDrawerTestApp);\r\n\r\n    fixture.detectChanges();\r\n\r\n    const testComponent: DrawerContainerTwoDrawerTestApp =\r\n      fixture.debugElement.componentInstance;\r\n    const drawers = fixture.debugElement.queryAll(By.directive(MatDrawer));\r\n\r\n    expect(drawers.every(drawer => drawer.componentInstance.opened)).toBe(false);\r\n\r\n    testComponent.drawerContainer.open();\r\n    fixture.detectChanges();\r\n    tick();\r\n\r\n    expect(drawers.every(drawer => drawer.componentInstance.opened)).toBe(true);\r\n\r\n    testComponent.drawerContainer.close();\r\n    fixture.detectChanges();\r\n    flush();\r\n\r\n    expect(drawers.every(drawer => drawer.componentInstance.opened)).toBe(false);\r\n  }));\r\n\r\n  it('should animate the content when a drawer is added at a later point', fakeAsync(() => {\r\n    const fixture = TestBed.createComponent(DrawerDelayed);\r\n\r\n    fixture.detectChanges();\r\n\r\n    const contentElement = fixture.debugElement.nativeElement.querySelector('.mat-drawer-content');\r\n\r\n    expect(parseInt(contentElement.style.marginLeft)).toBeFalsy();\r\n\r\n    fixture.componentInstance.showDrawer = true;\r\n    fixture.detectChanges();\r\n\r\n    fixture.componentInstance.drawer.open();\r\n    fixture.detectChanges();\r\n    tick();\r\n    fixture.detectChanges();\r\n\r\n    expect(parseInt(contentElement.style.marginLeft)).toBeGreaterThan(0);\r\n  }));\r\n\r\n  it('should recalculate the margin if a drawer is destroyed', fakeAsync(() => {\r\n    const fixture = TestBed.createComponent(DrawerContainerStateChangesTestApp);\r\n\r\n    fixture.detectChanges();\r\n    fixture.componentInstance.drawer.open();\r\n    fixture.detectChanges();\r\n    tick();\r\n    fixture.detectChanges();\r\n\r\n    const contentElement = fixture.debugElement.nativeElement.querySelector('.mat-drawer-content');\r\n    const initialMargin = parseInt(contentElement.style.marginLeft);\r\n\r\n    expect(initialMargin).toBeGreaterThan(0);\r\n\r\n    fixture.componentInstance.renderDrawer = false;\r\n    fixture.detectChanges();\r\n    tick();\r\n\r\n    expect(contentElement.style.marginLeft).toBe('');\r\n  }));\r\n\r\n  it('should recalculate the margin if the drawer mode is changed', fakeAsync(() => {\r\n    const fixture = TestBed.createComponent(DrawerContainerStateChangesTestApp);\r\n\r\n    fixture.detectChanges();\r\n    fixture.componentInstance.drawer.open();\r\n    fixture.detectChanges();\r\n    tick();\r\n    fixture.detectChanges();\r\n\r\n    const contentElement = fixture.debugElement.nativeElement.querySelector('.mat-drawer-content');\r\n    const initialMargin = parseInt(contentElement.style.marginLeft);\r\n\r\n    expect(initialMargin).toBeGreaterThan(0);\r\n\r\n    fixture.componentInstance.mode = 'over';\r\n    fixture.detectChanges();\r\n\r\n    expect(contentElement.style.marginLeft).toBe('');\r\n  }));\r\n\r\n  it('should recalculate the margin if the direction has changed', fakeAsync(() => {\r\n    const fixture = TestBed.createComponent(DrawerContainerStateChangesTestApp);\r\n\r\n    fixture.detectChanges();\r\n    fixture.componentInstance.drawer.open();\r\n    fixture.detectChanges();\r\n    tick();\r\n    fixture.detectChanges();\r\n\r\n    const contentElement = fixture.debugElement.nativeElement.querySelector('.mat-drawer-content');\r\n    const margin = parseInt(contentElement.style.marginLeft);\r\n\r\n    expect(margin).toBeGreaterThan(0);\r\n\r\n    fixture.componentInstance.direction = 'rtl';\r\n    fixture.detectChanges();\r\n\r\n    expect(contentElement.style.marginLeft).toBe('');\r\n    expect(parseInt(contentElement.style.marginRight)).toBe(margin);\r\n  }));\r\n\r\n  it('should not animate when the sidenav is open on load ', fakeAsync(() => {\r\n    TestBed\r\n      .resetTestingModule()\r\n      .configureTestingModule({\r\n        imports: [MatSidenavModule, BrowserAnimationsModule],\r\n        declarations: [DrawerSetToOpenedTrue],\r\n      })\r\n      .compileComponents();\r\n\r\n    const fixture = TestBed.createComponent(DrawerSetToOpenedTrue);\r\n\r\n    fixture.detectChanges();\r\n    tick();\r\n\r\n    const container = fixture.debugElement.nativeElement.querySelector('.mat-drawer-container');\r\n\r\n    expect(container.classList).not.toContain('mat-drawer-transition');\r\n  }));\r\n\r\n  it('should recalculate the margin if a drawer changes size while open in autosize mode',\r\n    fakeAsync(() => {\r\n      const fixture = TestBed.createComponent(AutosizeDrawer);\r\n\r\n      fixture.detectChanges();\r\n      fixture.componentInstance.drawer.open();\r\n      fixture.detectChanges();\r\n      tick();\r\n      fixture.detectChanges();\r\n\r\n      const contentEl = fixture.debugElement.nativeElement.querySelector('.mat-drawer-content');\r\n      const initialMargin = parseInt(contentEl.style.marginLeft);\r\n\r\n      expect(initialMargin).toBeGreaterThan(0);\r\n\r\n      fixture.componentInstance.fillerWidth = 200;\r\n      fixture.detectChanges();\r\n      tick(10);\r\n      fixture.detectChanges();\r\n\r\n      expect(parseInt(contentEl.style.marginLeft)).toBeGreaterThan(initialMargin);\r\n      discardPeriodicTasks();\r\n    }));\r\n\r\n  it('should not set a style property if it would be zero', fakeAsync(() => {\r\n      const fixture = TestBed.createComponent(AutosizeDrawer);\r\n      fixture.detectChanges();\r\n\r\n      const content = fixture.debugElement.nativeElement.querySelector('.mat-drawer-content');\r\n      expect(content.style.marginLeft).toBe('', 'Margin should be omitted when drawer is closed');\r\n\r\n      // Open the drawer and resolve the open animation.\r\n      fixture.componentInstance.drawer.open();\r\n      fixture.detectChanges();\r\n      tick();\r\n      fixture.detectChanges();\r\n\r\n      expect(content.style.marginLeft).not.toBe('', 'Margin should be present when drawer is open');\r\n\r\n      // Close the drawer and resolve the close animation.\r\n      fixture.componentInstance.drawer.close();\r\n      fixture.detectChanges();\r\n      flush();\r\n      fixture.detectChanges();\r\n\r\n      expect(content.style.marginLeft).toBe('', 'Margin should be removed after drawer close.');\r\n\r\n      discardPeriodicTasks();\r\n    }));\r\n\r\n    it('should be able to toggle whether the container has a backdrop', fakeAsync(() => {\r\n      const fixture = TestBed.createComponent(BasicTestApp);\r\n      fixture.detectChanges();\r\n\r\n      expect(fixture.nativeElement.querySelector('.mat-drawer-backdrop')).toBeTruthy();\r\n\r\n      fixture.componentInstance.hasBackdrop = false;\r\n      fixture.detectChanges();\r\n\r\n      expect(fixture.nativeElement.querySelector('.mat-drawer-backdrop')).toBeFalsy();\r\n    }));\r\n\r\n    it('should be able to explicitly enable the backdrop in `side` mode', fakeAsync(() => {\r\n      const fixture = TestBed.createComponent(BasicTestApp);\r\n      const root = fixture.nativeElement;\r\n\r\n      fixture.componentInstance.drawer.mode = 'side';\r\n      fixture.detectChanges();\r\n      fixture.componentInstance.drawer.open();\r\n      fixture.detectChanges();\r\n      tick();\r\n      fixture.detectChanges();\r\n\r\n      let backdrop = root.querySelector('.mat-drawer-backdrop.mat-drawer-shown');\r\n\r\n      expect(backdrop).toBeFalsy();\r\n\r\n      fixture.componentInstance.hasBackdrop = true;\r\n      fixture.detectChanges();\r\n      backdrop = root.querySelector('.mat-drawer-backdrop.mat-drawer-shown');\r\n\r\n      expect(backdrop).toBeTruthy();\r\n      expect(fixture.componentInstance.drawer.opened).toBe(true);\r\n\r\n      backdrop.click();\r\n      fixture.detectChanges();\r\n      tick();\r\n\r\n      expect(fixture.componentInstance.drawer.opened).toBe(false);\r\n    }));\r\n\r\n    it('should expose a scrollable when the consumer has not specified drawer content',\r\n      fakeAsync(() => {\r\n        const fixture = TestBed.createComponent(DrawerContainerTwoDrawerTestApp);\r\n\r\n        fixture.detectChanges();\r\n\r\n        expect(fixture.componentInstance.drawerContainer.scrollable instanceof CdkScrollable)\r\n            .toBe(true);\r\n      }));\r\n\r\n    it('should expose a scrollable when the consumer has specified drawer content',\r\n      fakeAsync(() => {\r\n        const fixture = TestBed.createComponent(DrawerContainerWithContent);\r\n\r\n        fixture.detectChanges();\r\n\r\n        expect(fixture.componentInstance.drawerContainer.scrollable instanceof CdkScrollable)\r\n            .toBe(true);\r\n      }));\r\n\r\n\r\n});\r\n\r\n\r\n/** Test component that contains an MatDrawerContainer but no MatDrawer. */\r\n@Component({template: `<mat-drawer-container></mat-drawer-container>`})\r\nclass DrawerContainerNoDrawerTestApp { }\r\n\r\n/** Test component that contains an MatDrawerContainer and 2 MatDrawer in the same position. */\r\n@Component({\r\n  template: `\r\n    <mat-drawer-container>\r\n      <mat-drawer position=\"start\"></mat-drawer>\r\n      <mat-drawer position=\"end\"></mat-drawer>\r\n    </mat-drawer-container>`,\r\n})\r\nclass DrawerContainerTwoDrawerTestApp {\r\n  @ViewChild(MatDrawerContainer) drawerContainer: MatDrawerContainer;\r\n}\r\n\r\n/** Test component that contains an MatDrawerContainer and one MatDrawer. */\r\n@Component({\r\n  template: `\r\n    <mat-drawer-container (backdropClick)=\"backdropClicked()\" [hasBackdrop]=\"hasBackdrop\">\r\n      <mat-drawer #drawer=\"matDrawer\" position=\"start\"\r\n                 (opened)=\"open()\"\r\n                 (openedStart)=\"openStart()\"\r\n                 (closed)=\"close()\"\r\n                 (closedStart)=\"closeStart()\">\r\n        <button #drawerButton>Content</button>\r\n      </mat-drawer>\r\n      <button (click)=\"drawer.open()\" class=\"open\" #openButton></button>\r\n      <button (click)=\"drawer.close()\" class=\"close\" #closeButton></button>\r\n    </mat-drawer-container>`,\r\n})\r\nclass BasicTestApp {\r\n  openCount = 0;\r\n  openStartCount = 0;\r\n  closeCount = 0;\r\n  closeStartCount = 0;\r\n  backdropClickedCount = 0;\r\n  hasBackdrop: boolean | null = null;\r\n\r\n  @ViewChild('drawer') drawer: MatDrawer;\r\n  @ViewChild('drawerButton') drawerButton: ElementRef;\r\n  @ViewChild('openButton') openButton: ElementRef;\r\n  @ViewChild('closeButton') closeButton: ElementRef;\r\n\r\n  open() {\r\n    this.openCount++;\r\n  }\r\n\r\n  openStart() {\r\n    this.openStartCount++;\r\n  }\r\n\r\n  close() {\r\n    this.closeCount++;\r\n  }\r\n\r\n  closeStart() {\r\n    this.closeStartCount++;\r\n  }\r\n\r\n  backdropClicked() {\r\n    this.backdropClickedCount++;\r\n  }\r\n}\r\n\r\n@Component({\r\n  template: `\r\n    <mat-drawer-container>\r\n      <mat-drawer #drawer mode=\"side\" opened=\"false\">\r\n        Closed Drawer.\r\n      </mat-drawer>\r\n    </mat-drawer-container>`,\r\n})\r\nclass DrawerSetToOpenedFalse { }\r\n\r\n@Component({\r\n  template: `\r\n    <mat-drawer-container>\r\n      <mat-drawer #drawer mode=\"side\" opened=\"true\" (opened)=\"openCallback()\">\r\n        Closed Drawer.\r\n      </mat-drawer>\r\n    </mat-drawer-container>`,\r\n})\r\nclass DrawerSetToOpenedTrue {\r\n  openCallback = jasmine.createSpy('open callback');\r\n}\r\n\r\n@Component({\r\n  template: `\r\n    <mat-drawer-container>\r\n      <mat-drawer #drawer mode=\"side\" [(opened)]=\"isOpen\">\r\n        Closed Drawer.\r\n      </mat-drawer>\r\n    </mat-drawer-container>`,\r\n})\r\nclass DrawerOpenBinding {\r\n  isOpen = false;\r\n}\r\n\r\n@Component({\r\n  template: `\r\n    <mat-drawer-container>\r\n      <mat-drawer #drawer1 [position]=\"drawer1Position\"></mat-drawer>\r\n      <mat-drawer #drawer2 [position]=\"drawer2Position\"></mat-drawer>\r\n    </mat-drawer-container>`,\r\n})\r\nclass DrawerDynamicPosition {\r\n  drawer1Position = 'start';\r\n  drawer2Position = 'end';\r\n}\r\n\r\n@Component({\r\n  // Note: we use inputs here, because they're guaranteed\r\n  // to be focusable across all platforms.\r\n  template: `\r\n    <mat-drawer-container>\r\n      <mat-drawer position=\"start\" [mode]=\"mode\" [autoFocus]=\"autoFocus\">\r\n        <input type=\"text\" class=\"input1\"/>\r\n      </mat-drawer>\r\n      <input type=\"text\" class=\"input2\"/>\r\n    </mat-drawer-container>`,\r\n})\r\nclass DrawerWithFocusableElements {\r\n  mode: string = 'over';\r\n  autoFocus = true;\r\n}\r\n\r\n@Component({\r\n  template: `\r\n    <mat-drawer-container>\r\n      <mat-drawer position=\"start\" mode=\"over\">\r\n        <button disabled>Not focusable</button>\r\n      </mat-drawer>\r\n    </mat-drawer-container>`,\r\n})\r\nclass DrawerWithoutFocusableElements {}\r\n\r\n@Component({\r\n  template: `\r\n    <mat-drawer-container>\r\n      <mat-drawer *ngIf=\"showDrawer\" #drawer mode=\"side\">Drawer</mat-drawer>\r\n    </mat-drawer-container>\r\n  `,\r\n})\r\nclass DrawerDelayed {\r\n  @ViewChild(MatDrawer) drawer: MatDrawer;\r\n  showDrawer = false;\r\n}\r\n\r\n\r\n@Component({\r\n  template: `\r\n    <mat-drawer-container [dir]=\"direction\">\r\n      <mat-drawer *ngIf=\"renderDrawer\" [mode]=\"mode\" style=\"width:100px\"></mat-drawer>\r\n    </mat-drawer-container>`,\r\n})\r\nclass DrawerContainerStateChangesTestApp {\r\n  @ViewChild(MatDrawer) drawer: MatDrawer;\r\n  @ViewChild(MatDrawerContainer) drawerContainer: MatDrawerContainer;\r\n\r\n  direction: Direction = 'ltr';\r\n  mode = 'side';\r\n  renderDrawer = true;\r\n}\r\n\r\n\r\n@Component({\r\n  template: `\r\n    <mat-drawer-container autosize>\r\n      <mat-drawer mode=\"push\" [position]=\"drawer1Position\">\r\n        Text\r\n        <div [style.width.px]=\"fillerWidth\"></div>\r\n      </mat-drawer>\r\n    </mat-drawer-container>`,\r\n})\r\nclass AutosizeDrawer {\r\n  @ViewChild(MatDrawer) drawer: MatDrawer;\r\n  fillerWidth = 0;\r\n}\r\n\r\n\r\n@Component({\r\n  template: `\r\n    <mat-drawer-container>\r\n      <mat-drawer>Drawer</mat-drawer>\r\n      <mat-drawer-content>Content</mat-drawer-content>\r\n    </mat-drawer-container>\r\n  `,\r\n})\r\nclass DrawerContainerWithContent {\r\n  @ViewChild(MatDrawerContainer) drawerContainer: MatDrawerContainer;\r\n}\r\n"]}