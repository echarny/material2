{"version":3,"file":"list.spec.js","sourceRoot":"","sources":["../../../../src/lib/list/list.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import {async, TestBed} from '@angular/core/testing';\r\nimport {Component, QueryList, ViewChildren} from '@angular/core';\r\nimport {By} from '@angular/platform-browser';\r\nimport {MatListItem, MatListModule} from './index';\r\n\r\n\r\ndescribe('MatList', () => {\r\n\r\n  beforeEach(async(() => {\r\n    TestBed.configureTestingModule({\r\n      imports: [MatListModule],\r\n      declarations: [\r\n        ListWithOneAnchorItem,\r\n        ListWithOneItem,\r\n        ListWithTwoLineItem,\r\n        ListWithThreeLineItem,\r\n        ListWithAvatar,\r\n        ListWithItemWithCssClass,\r\n        ListWithDynamicNumberOfLines,\r\n        ListWithMultipleItems,\r\n        ListWithManyLines,\r\n        NavListWithOneAnchorItem,\r\n      ],\r\n    });\r\n\r\n    TestBed.compileComponents();\r\n  }));\r\n\r\n  it('should add and remove focus class on focus/blur', () => {\r\n    let fixture = TestBed.createComponent(ListWithOneAnchorItem);\r\n    fixture.detectChanges();\r\n    let listItem = fixture.debugElement.query(By.directive(MatListItem));\r\n    let listItemEl = fixture.debugElement.query(By.css('.mat-list-item'));\r\n\r\n    expect(listItemEl.nativeElement.classList).not.toContain('mat-list-item-focus');\r\n\r\n    listItem.componentInstance._handleFocus();\r\n    fixture.detectChanges();\r\n    expect(listItemEl.nativeElement.classList).toContain('mat-list-item-focus');\r\n\r\n    listItem.componentInstance._handleBlur();\r\n    fixture.detectChanges();\r\n    expect(listItemEl.nativeElement.classList).not.toContain('mat-list-item-focus');\r\n  });\r\n\r\n  it('should not apply any additional class to a list without lines', () => {\r\n    let fixture = TestBed.createComponent(ListWithOneItem);\r\n    let listItem = fixture.debugElement.query(By.css('mat-list-item'));\r\n    fixture.detectChanges();\r\n    expect(listItem.nativeElement.className).toBe('mat-list-item');\r\n  });\r\n\r\n  it('should apply mat-2-line class to lists with two lines', () => {\r\n    let fixture = TestBed.createComponent(ListWithTwoLineItem);\r\n    fixture.detectChanges();\r\n\r\n    let listItems = fixture.debugElement.children[0].queryAll(By.css('mat-list-item'));\r\n    expect(listItems[0].nativeElement.className).toContain('mat-2-line');\r\n    expect(listItems[1].nativeElement.className).toContain('mat-2-line');\r\n  });\r\n\r\n  it('should apply mat-3-line class to lists with three lines', () => {\r\n    let fixture = TestBed.createComponent(ListWithThreeLineItem);\r\n    fixture.detectChanges();\r\n\r\n    let listItems = fixture.debugElement.children[0].queryAll(By.css('mat-list-item'));\r\n    expect(listItems[0].nativeElement.className).toContain('mat-3-line');\r\n    expect(listItems[1].nativeElement.className).toContain('mat-3-line');\r\n  });\r\n\r\n  it('should apply mat-multi-line class to lists with more than 3 lines', () => {\r\n    let fixture = TestBed.createComponent(ListWithManyLines);\r\n    fixture.detectChanges();\r\n\r\n    let listItems = fixture.debugElement.children[0].queryAll(By.css('mat-list-item'));\r\n    expect(listItems[0].nativeElement.className).toContain('mat-multi-line');\r\n    expect(listItems[1].nativeElement.className).toContain('mat-multi-line');\r\n  });\r\n\r\n  it('should apply a class to list items with avatars', () => {\r\n    let fixture = TestBed.createComponent(ListWithAvatar);\r\n    fixture.detectChanges();\r\n\r\n    let listItems = fixture.debugElement.children[0].queryAll(By.css('mat-list-item'));\r\n    expect(listItems[0].nativeElement.className).toContain('mat-list-item-with-avatar');\r\n    expect(listItems[1].nativeElement.className).not.toContain('mat-list-item-with-avatar');\r\n  });\r\n\r\n  it('should not clear custom classes provided by user', () => {\r\n    let fixture = TestBed.createComponent(ListWithItemWithCssClass);\r\n    fixture.detectChanges();\r\n\r\n    let listItems = fixture.debugElement.children[0].queryAll(By.css('mat-list-item'));\r\n    expect(listItems[0].nativeElement.classList.contains('test-class')).toBe(true);\r\n  });\r\n\r\n  it('should update classes if number of lines change', () => {\r\n    let fixture = TestBed.createComponent(ListWithDynamicNumberOfLines);\r\n    fixture.debugElement.componentInstance.showThirdLine = false;\r\n    fixture.detectChanges();\r\n\r\n    let listItem = fixture.debugElement.children[0].query(By.css('mat-list-item'));\r\n    expect(listItem.nativeElement.classList.length).toBe(2);\r\n    expect(listItem.nativeElement.classList).toContain('mat-2-line');\r\n    expect(listItem.nativeElement.classList).toContain('mat-list-item');\r\n\r\n    fixture.debugElement.componentInstance.showThirdLine = true;\r\n    fixture.detectChanges();\r\n    expect(listItem.nativeElement.className).toContain('mat-3-line');\r\n  });\r\n\r\n  it('should add aria roles properly', () => {\r\n    let fixture = TestBed.createComponent(ListWithMultipleItems);\r\n    fixture.detectChanges();\r\n\r\n    let list = fixture.debugElement.children[0];\r\n    let listItem = fixture.debugElement.children[0].query(By.css('mat-list-item'));\r\n    expect(list.nativeElement.getAttribute('role')).toBeNull('Expect mat-list no role');\r\n    expect(listItem.nativeElement.getAttribute('role')).toBeNull('Expect mat-list-item no role');\r\n  });\r\n\r\n  it('should not show ripples for non-nav lists', () => {\r\n    let fixture = TestBed.createComponent(ListWithOneAnchorItem);\r\n    fixture.detectChanges();\r\n\r\n    const items: QueryList<MatListItem> = fixture.debugElement.componentInstance.listItems;\r\n    expect(items.length).toBeGreaterThan(0);\r\n    items.forEach(item => expect(item._isRippleDisabled()).toBe(true));\r\n  });\r\n\r\n  it('should allow disabling ripples for specific nav-list items', () => {\r\n    let fixture = TestBed.createComponent(NavListWithOneAnchorItem);\r\n    fixture.detectChanges();\r\n\r\n    const items = fixture.componentInstance.listItems;\r\n    expect(items.length).toBeGreaterThan(0);\r\n\r\n    // Ripples should be enabled by default, and can be disabled with a binding.\r\n    items.forEach(item => expect(item._isRippleDisabled()).toBe(false));\r\n\r\n    fixture.componentInstance.disableItemRipple = true;\r\n    fixture.detectChanges();\r\n\r\n    items.forEach(item => expect(item._isRippleDisabled()).toBe(true));\r\n  });\r\n\r\n  it('should allow disabling ripples for the whole nav-list', () => {\r\n    let fixture = TestBed.createComponent(NavListWithOneAnchorItem);\r\n    fixture.detectChanges();\r\n\r\n    const items = fixture.componentInstance.listItems;\r\n    expect(items.length).toBeGreaterThan(0);\r\n\r\n    // Ripples should be enabled by default, and can be disabled with a binding.\r\n    items.forEach(item => expect(item._isRippleDisabled()).toBe(false));\r\n\r\n    fixture.componentInstance.disableListRipple = true;\r\n    fixture.detectChanges();\r\n\r\n    items.forEach(item => expect(item._isRippleDisabled()).toBe(true));\r\n  });\r\n});\r\n\r\n\r\nclass BaseTestList {\r\n  items: any[] = [\r\n    {'name': 'Paprika', 'description': 'A seasoning'},\r\n    {'name': 'Pepper', 'description': 'Another seasoning'}\r\n  ];\r\n\r\n  showThirdLine: boolean = false;\r\n}\r\n\r\n@Component({template: `\r\n  <mat-list>\r\n    <a mat-list-item>\r\n      Paprika\r\n    </a>\r\n  </mat-list>`})\r\nclass ListWithOneAnchorItem extends BaseTestList {\r\n  // This needs to be declared directly on the class; if declared on the BaseTestList superclass,\r\n  // it doesn't get populated.\r\n  @ViewChildren(MatListItem) listItems: QueryList<MatListItem>;\r\n}\r\n\r\n@Component({template: `\r\n  <mat-nav-list [disableRipple]=\"disableListRipple\">\r\n    <a mat-list-item [disableRipple]=\"disableItemRipple\">\r\n      Paprika\r\n    </a>\r\n  </mat-nav-list>`})\r\nclass NavListWithOneAnchorItem extends BaseTestList {\r\n  @ViewChildren(MatListItem) listItems: QueryList<MatListItem>;\r\n  disableItemRipple: boolean = false;\r\n  disableListRipple: boolean = false;\r\n}\r\n\r\n@Component({template: `\r\n  <mat-list>\r\n    <mat-list-item>\r\n      Paprika\r\n    </mat-list-item>\r\n  </mat-list>`})\r\nclass ListWithOneItem extends BaseTestList { }\r\n\r\n@Component({template: `\r\n  <mat-list>\r\n    <mat-list-item *ngFor=\"let item of items\">\r\n      <img src=\"\">\r\n      <h3 mat-line>{{item.name}}</h3>\r\n      <p mat-line>{{item.description}}</p>\r\n    </mat-list-item>\r\n  </mat-list>`})\r\nclass ListWithTwoLineItem extends BaseTestList { }\r\n\r\n@Component({template: `\r\n  <mat-list>\r\n    <mat-list-item *ngFor=\"let item of items\">\r\n      <h3 mat-line>{{item.name}}</h3>\r\n      <p mat-line>{{item.description}}</p>\r\n      <p mat-line>Some other text</p>\r\n    </mat-list-item>\r\n  </mat-list>`})\r\nclass ListWithThreeLineItem extends BaseTestList { }\r\n\r\n@Component({template: `\r\n  <mat-list>\r\n    <mat-list-item *ngFor=\"let item of items\">\r\n      <h3 mat-line>Line 1</h3>\r\n      <p mat-line>Line 2</p>\r\n      <p mat-line>Line 3</p>\r\n      <p mat-line>Line 4</p>\r\n    </mat-list-item>\r\n  </mat-list>`})\r\nclass ListWithManyLines extends BaseTestList { }\r\n\r\n@Component({template: `\r\n  <mat-list>\r\n    <mat-list-item>\r\n      <img src=\"\" mat-list-avatar>\r\n      Paprika\r\n    </mat-list-item>\r\n    <mat-list-item>\r\n      Pepper\r\n    </mat-list-item>\r\n  </mat-list>`})\r\nclass ListWithAvatar extends BaseTestList { }\r\n\r\n@Component({template: `\r\n  <mat-list>\r\n    <mat-list-item class=\"test-class\" *ngFor=\"let item of items\">\r\n      <h3 mat-line>{{item.name}}</h3>\r\n      <p mat-line>{{item.description}}</p>\r\n    </mat-list-item>\r\n  </mat-list>`})\r\nclass ListWithItemWithCssClass extends BaseTestList { }\r\n\r\n@Component({template: `\r\n  <mat-list>\r\n    <mat-list-item *ngFor=\"let item of items\">\r\n      <h3 mat-line>{{item.name}}</h3>\r\n      <p mat-line>{{item.description}}</p>\r\n      <p mat-line *ngIf=\"showThirdLine\">Some other text</p>\r\n    </mat-list-item>\r\n  </mat-list>`})\r\nclass ListWithDynamicNumberOfLines extends BaseTestList { }\r\n\r\n@Component({template: `\r\n  <mat-list>\r\n    <mat-list-item *ngFor=\"let item of items\">\r\n      {{item.name}}\r\n    </mat-list-item>\r\n  </mat-list>`})\r\nclass ListWithMultipleItems extends BaseTestList { }\r\n"]}