{"version":3,"file":"expansion-animations.js","sourceRoot":"","sources":["../../../../src/lib/expansion/expansion-animations.ts"],"names":[],"mappings":";;AAOA,kDAU6B;;AAGhB,QAAA,gCAAgC,GAAG,mCAAmC;;AAGtE,QAAA,sBAAsB,GAI/B;;IAEF,eAAe,EAAE,oBAAO,CAAC,iBAAiB,EAAE;QAC1C,kBAAK,CAAC,WAAW,EAAE,kBAAK,CAAC,EAAC,SAAS,EAAE,cAAc,EAAC,CAAC,CAAC;QACtD,kBAAK,CAAC,UAAU,EAAE,kBAAK,CAAC,EAAC,SAAS,EAAE,gBAAgB,EAAC,CAAC,CAAC;QACvD,uBAAU,CAAC,wBAAwB,EAAE,oBAAO,CAAC,wCAAgC,CAAC,CAAC;KAChF,CAAC;;IAGF,qBAAqB,EAAE,oBAAO,CAAC,iBAAiB,EAAE;QAChD,kBAAK,CAAC,WAAW,EAAE,kBAAK,CAAC;YACvB,MAAM,EAAE,qBAAqB;SAC9B,CAAC,EAAE;YACF,MAAM,EAAE,EAAC,eAAe,EAAE,MAAM,EAAC;SAClC,CAAC;QACF,kBAAK,CAAC,UAAU,EAAE,kBAAK,CAAC;YACtB,MAAM,EAAE,oBAAoB;SAC7B,CAAC,EAAE;YACF,MAAM,EAAE,EAAC,cAAc,EAAE,MAAM,EAAC;SACjC,CAAC;QACF,uBAAU,CAAC,wBAAwB,EAAE,kBAAK,CAAC;YACzC,kBAAK,CAAC,kBAAkB,EAAE,yBAAY,EAAE,EAAE,EAAC,QAAQ,EAAE,IAAI,EAAC,CAAC;YAC3D,oBAAO,CAAC,wCAAgC,CAAC;SAC1C,CAAC,CAAC;KACJ,CAAC;;IAGF,aAAa,EAAE,oBAAO,CAAC,eAAe,EAAE;QACtC,kBAAK,CAAC,WAAW,EAAE,kBAAK,CAAC,EAAC,MAAM,EAAE,KAAK,EAAE,UAAU,EAAE,QAAQ,EAAC,CAAC,CAAC;QAChE,kBAAK,CAAC,UAAU,EAAE,kBAAK,CAAC,EAAC,MAAM,EAAE,GAAG,EAAE,UAAU,EAAE,SAAS,EAAC,CAAC,CAAC;QAC9D,uBAAU,CAAC,wBAAwB,EAAE,oBAAO,CAAC,wCAAgC,CAAC,CAAC;KAChF,CAAC;CACH","sourcesContent":["/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nimport {\r\n  animate,\r\n  animateChild,\r\n  group,\r\n  state,\r\n  style,\r\n  transition,\r\n  trigger,\r\n  query,\r\n  AnimationTriggerMetadata,\r\n} from '@angular/animations';\r\n\r\n/** Time and timing curve for expansion panel animations. */\r\nexport const EXPANSION_PANEL_ANIMATION_TIMING = '225ms cubic-bezier(0.4,0.0,0.2,1)';\r\n\r\n/** Animations used by the Material expansion panel. */\r\nexport const matExpansionAnimations: {\r\n  readonly indicatorRotate: AnimationTriggerMetadata;\r\n  readonly expansionHeaderHeight: AnimationTriggerMetadata;\r\n  readonly bodyExpansion: AnimationTriggerMetadata;\r\n} = {\r\n  /** Animation that rotates the indicator arrow. */\r\n  indicatorRotate: trigger('indicatorRotate', [\r\n    state('collapsed', style({transform: 'rotate(0deg)'})),\r\n    state('expanded', style({transform: 'rotate(180deg)'})),\r\n    transition('expanded <=> collapsed', animate(EXPANSION_PANEL_ANIMATION_TIMING)),\r\n  ]),\r\n\r\n  /** Animation that expands and collapses the panel header height. */\r\n  expansionHeaderHeight: trigger('expansionHeight', [\r\n    state('collapsed', style({\r\n      height: '{{collapsedHeight}}',\r\n    }), {\r\n      params: {collapsedHeight: '48px'},\r\n    }),\r\n    state('expanded', style({\r\n      height: '{{expandedHeight}}'\r\n    }), {\r\n      params: {expandedHeight: '64px'}\r\n    }),\r\n    transition('expanded <=> collapsed', group([\r\n      query('@indicatorRotate', animateChild(), {optional: true}),\r\n      animate(EXPANSION_PANEL_ANIMATION_TIMING),\r\n    ])),\r\n  ]),\r\n\r\n  /** Animation that expands and collapses the panel content. */\r\n  bodyExpansion: trigger('bodyExpansion', [\r\n    state('collapsed', style({height: '0px', visibility: 'hidden'})),\r\n    state('expanded', style({height: '*', visibility: 'visible'})),\r\n    transition('expanded <=> collapsed', animate(EXPANSION_PANEL_ANIMATION_TIMING)),\r\n  ])\r\n};\r\n"]}