{"version":3,"file":"common-module.js","sourceRoot":"","sources":["../../../../../src/lib/core/common-behaviors/common-module.ts"],"names":[],"mappings":";;;;;;;;;AAQA,sCAAoF;AACpF,0CAA6C;;AAIhC,QAAA,sBAAsB,GAAG,IAAI,qBAAc,CAAU,mBAAmB,EAAE;IACrF,UAAU,EAAE,MAAM;IAClB,OAAO,EAAE,8BAA8B;CACxC,CAAC;;AAGF;IACE,MAAM,CAAC,IAAI,CAAC;CACb;AAFD,wEAEC;;;;;;;;IAyBC,yBAAgE;QAAA,yBAAoB,GAApB,oBAAoB;;oCAXrD,KAAK;;iCAGR,KAAK;;yBAGb,OAAO,QAAQ,KAAK,QAAQ,IAAI,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI;;uBAG5D,OAAO,MAAM,KAAK,QAAQ,IAAI,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI;QAGpE,EAAE,CAAC,CAAC,IAAI,CAAC,iBAAiB,EAAE,IAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC,CAAC;YAC3D,IAAI,CAAC,sBAAsB,EAAE,CAAC;YAC9B,IAAI,CAAC,oBAAoB,EAAE,CAAC;YAC5B,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC;SAClC;KACF;IAED,4CAA4C;;IACpC,2CAAiB;IAAzB;QACE,MAAM,CAAC,IAAI,CAAC,oBAAoB,IAAI,gBAAS,EAAE,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC;KACvE;IAED,4CAA4C;;IACpC,oCAAU;IAAlB;QACE,MAAM,CAAC,IAAI,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC;KAC/E;IAEO,gDAAsB,GAA9B;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC;YAC9C,OAAO,CAAC,IAAI,CACV,2DAA2D;gBAC3D,6DAA6D,CAC9D,CAAC;SACH;KACF;IAEO,8CAAoB,GAA5B;;;QAGE,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,IAAI,OAAO,gBAAgB,KAAK,UAAU,CAAC,CAAC,CAAC;YACpF,IAAM,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YAExD,WAAW,CAAC,SAAS,CAAC,GAAG,CAAC,yBAAyB,CAAC,CAAC;YACrD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;YAE7C,IAAM,aAAa,GAAG,gBAAgB,CAAC,WAAW,CAAC,CAAC;;;;YAKpD,EAAE,CAAC,CAAC,aAAa,IAAI,aAAa,CAAC,OAAO,KAAK,MAAM,CAAC,CAAC,CAAC;gBACtD,OAAO,CAAC,IAAI,CACV,4DAA4D;oBAC5D,2DAA2D;oBAC3D,iEAAiE,CAClE,CAAC;aACH;YAED,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,CAAC;SAC9C;KACF;IAED,4CAA4C;;IAC5C,iDAAuB;IAAvB;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,iBAAiB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;YAC5C,MAAM,CAAC;SACR;QAED,EAAE,CAAC,CAAC,IAAI,CAAC,iBAAiB,EAAE,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YACxD,OAAO,CAAC,IAAI,CACV,sFAAsF,CAAC,CAAC;SAC3F;QACD,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;KAC/B;;gBAjFF,eAAQ,SAAC;oBACR,OAAO,EAAE,CAAC,iBAAU,CAAC;oBACrB,OAAO,EAAE,CAAC,iBAAU,CAAC;iBACtB;;;;gDAcc,eAAQ,YAAI,aAAM,SAAC,8BAAsB;;0BA9CxD;;AAiCa,0CAAe","sourcesContent":["/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {NgModule, InjectionToken, Optional, Inject, isDevMode} from '@angular/core';\r\nimport {BidiModule} from '@angular/cdk/bidi';\r\n\r\n\r\n/** Injection token that configures whether the Material sanity checks are enabled. */\r\nexport const MATERIAL_SANITY_CHECKS = new InjectionToken<boolean>('mat-sanity-checks', {\r\n  providedIn: 'root',\r\n  factory: MATERIAL_SANITY_CHECKS_FACTORY,\r\n});\r\n\r\n/** @docs-private */\r\nexport function MATERIAL_SANITY_CHECKS_FACTORY(): boolean {\r\n  return true;\r\n}\r\n\r\n/**\r\n * Module that captures anything that should be loaded and/or run for *all* Angular Material\r\n * components. This includes Bidi, etc.\r\n *\r\n * This module should be imported to each top-level component module (e.g., MatTabsModule).\r\n */\r\n@NgModule({\r\n  imports: [BidiModule],\r\n  exports: [BidiModule],\r\n})\r\nexport class MatCommonModule {\r\n  /** Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype). */\r\n  private _hasDoneGlobalChecks = false;\r\n\r\n  /** Whether we've already checked for HammerJs availability. */\r\n  private _hasCheckedHammer = false;\r\n\r\n  /** Reference to the global `document` object. */\r\n  private _document = typeof document === 'object' && document ? document : null;\r\n\r\n  /** Reference to the global 'window' object. */\r\n  private _window = typeof window === 'object' && window ? window : null;\r\n\r\n  constructor(@Optional() @Inject(MATERIAL_SANITY_CHECKS) private _sanityChecksEnabled: boolean) {\r\n    if (this._areChecksEnabled() && !this._hasDoneGlobalChecks) {\r\n      this._checkDoctypeIsDefined();\r\n      this._checkThemeIsPresent();\r\n      this._hasDoneGlobalChecks = true;\r\n    }\r\n  }\r\n\r\n  /** Whether any sanity checks are enabled */\r\n  private _areChecksEnabled(): boolean {\r\n    return this._sanityChecksEnabled && isDevMode() && !this._isTestEnv();\r\n  }\r\n\r\n  /** Whether the code is running in tests. */\r\n  private _isTestEnv() {\r\n    return this._window && (this._window['__karma__'] || this._window['jasmine']);\r\n  }\r\n\r\n  private _checkDoctypeIsDefined(): void {\r\n    if (this._document && !this._document.doctype) {\r\n      console.warn(\r\n        'Current document does not have a doctype. This may cause ' +\r\n        'some Angular Material components not to behave as expected.'\r\n      );\r\n    }\r\n  }\r\n\r\n  private _checkThemeIsPresent(): void {\r\n    // We need to assert that the `body` is defined, because these checks run very early\r\n    // and the `body` won't be defined if the consumer put their scripts in the `head`.\r\n    if (this._document && this._document.body && typeof getComputedStyle === 'function') {\r\n      const testElement = this._document.createElement('div');\r\n\r\n      testElement.classList.add('mat-theme-loaded-marker');\r\n      this._document.body.appendChild(testElement);\r\n\r\n      const computedStyle = getComputedStyle(testElement);\r\n\r\n      // In some situations the computed style of the test element can be null. For example in\r\n      // Firefox, the computed style is null if an application is running inside of a hidden iframe.\r\n      // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\r\n      if (computedStyle && computedStyle.display !== 'none') {\r\n        console.warn(\r\n          'Could not find Angular Material core theme. Most Material ' +\r\n          'components may not work as expected. For more info refer ' +\r\n          'to the theming guide: https://material.angular.io/guide/theming'\r\n        );\r\n      }\r\n\r\n      this._document.body.removeChild(testElement);\r\n    }\r\n  }\r\n\r\n  /** Checks whether HammerJS is available. */\r\n  _checkHammerIsAvailable(): void {\r\n    if (this._hasCheckedHammer || !this._window) {\r\n      return;\r\n    }\r\n\r\n    if (this._areChecksEnabled() && !this._window['Hammer']) {\r\n      console.warn(\r\n        'Could not find HammerJS. Certain Angular Material components may not work correctly.');\r\n    }\r\n    this._hasCheckedHammer = true;\r\n  }\r\n}\r\n"]}