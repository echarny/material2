{"version":3,"file":"calendar.spec.js","sourceRoot":"","sources":["../../../../src/lib/datepicker/calendar.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import {Direction, Directionality} from '@angular/cdk/bidi';\r\nimport {ENTER, RIGHT_ARROW} from '@angular/cdk/keycodes';\r\nimport {\r\n  dispatchFakeEvent,\r\n  dispatchKeyboardEvent,\r\n  dispatchMouseEvent,\r\n  MockNgZone,\r\n} from '@angular/cdk/testing';\r\nimport {Component, NgZone} from '@angular/core';\r\nimport {async, ComponentFixture, inject, TestBed} from '@angular/core/testing';\r\nimport {DateAdapter, DEC, FEB, JAN, JUL, MatNativeDateModule, NOV} from '@angular/material/core';\r\nimport {By} from '@angular/platform-browser';\r\nimport {MatCalendar} from './calendar';\r\nimport {MatDatepickerIntl} from './datepicker-intl';\r\nimport {MatDatepickerModule} from './datepicker-module';\r\n\r\ndescribe('MatCalendar', () => {\r\n  let dir: {value: Direction};\r\n  let zone: MockNgZone;\r\n\r\n  beforeEach(async(() => {\r\n    TestBed.configureTestingModule({\r\n      imports: [\r\n        MatNativeDateModule,\r\n        MatDatepickerModule,\r\n      ],\r\n      declarations: [\r\n        // Test components.\r\n        StandardCalendar,\r\n        CalendarWithMinMax,\r\n        CalendarWithDateFilter,\r\n        CalendarWithSelectableMinDate,\r\n      ],\r\n      providers: [\r\n        MatDatepickerIntl,\r\n        {provide: NgZone, useFactory: () => zone = new MockNgZone()},\r\n        {provide: Directionality, useFactory: () => dir = {value: 'ltr'}}\r\n      ],\r\n    });\r\n\r\n    TestBed.compileComponents();\r\n  }));\r\n\r\n  describe('standard calendar', () => {\r\n    let fixture: ComponentFixture<StandardCalendar>;\r\n    let testComponent: StandardCalendar;\r\n    let calendarElement: HTMLElement;\r\n    let periodButton: HTMLElement;\r\n    let calendarInstance: MatCalendar<Date>;\r\n\r\n    beforeEach(() => {\r\n      fixture = TestBed.createComponent(StandardCalendar);\r\n      fixture.detectChanges();\r\n\r\n      let calendarDebugElement = fixture.debugElement.query(By.directive(MatCalendar));\r\n      calendarElement = calendarDebugElement.nativeElement;\r\n      periodButton = calendarElement.querySelector('.mat-calendar-period-button') as HTMLElement;\r\n\r\n      calendarInstance = calendarDebugElement.componentInstance;\r\n      testComponent = fixture.componentInstance;\r\n    });\r\n\r\n    it(`should update today's date`, inject([DateAdapter], (adapter: DateAdapter<Date>) => {\r\n      let fakeToday = new Date(2018, 0, 1);\r\n      spyOn(adapter, 'today').and.callFake(() => fakeToday);\r\n\r\n      calendarInstance.activeDate = fakeToday;\r\n      calendarInstance.updateTodaysDate();\r\n      fixture.detectChanges();\r\n\r\n      let todayCell = calendarElement.querySelector('.mat-calendar-body-today')!;\r\n      expect(todayCell).not.toBeNull();\r\n      expect(todayCell.innerHTML.trim()).toBe('1');\r\n\r\n      fakeToday = new Date(2018, 0, 10);\r\n      calendarInstance.updateTodaysDate();\r\n      fixture.detectChanges();\r\n\r\n      todayCell = calendarElement.querySelector('.mat-calendar-body-today')!;\r\n      expect(todayCell).not.toBeNull();\r\n      expect(todayCell.innerHTML.trim()).toBe('10');\r\n    }));\r\n\r\n    it('should be in month view with specified month active', () => {\r\n      expect(calendarInstance.currentView).toBe('month');\r\n      expect(calendarInstance.activeDate).toEqual(new Date(2017, JAN, 31));\r\n    });\r\n\r\n    it('should select date in month view', () => {\r\n      let monthCells = calendarElement.querySelectorAll('.mat-calendar-body-cell');\r\n      (monthCells[monthCells.length - 1] as HTMLElement).click();\r\n      fixture.detectChanges();\r\n\r\n      expect(calendarInstance.currentView).toBe('month');\r\n      expect(testComponent.selected).toEqual(new Date(2017, JAN, 31));\r\n    });\r\n\r\n    it('should emit the selected month on cell clicked in year view', () => {\r\n      periodButton.click();\r\n      fixture.detectChanges();\r\n\r\n      expect(calendarInstance.currentView).toBe('multi-year');\r\n      expect(calendarInstance.activeDate).toEqual(new Date(2017, JAN, 31));\r\n\r\n      (calendarElement.querySelector('.mat-calendar-body-active') as HTMLElement).click();\r\n\r\n      fixture.detectChanges();\r\n\r\n      expect(calendarInstance.currentView).toBe('year');\r\n\r\n      (calendarElement.querySelector('.mat-calendar-body-active') as HTMLElement).click();\r\n\r\n      const normalizedMonth: Date = fixture.componentInstance.selectedMonth;\r\n      expect(normalizedMonth.getMonth()).toEqual(0);\r\n    });\r\n\r\n    it('should emit the selected year on cell clicked in multiyear view', () => {\r\n      periodButton.click();\r\n      fixture.detectChanges();\r\n\r\n      expect(calendarInstance.currentView).toBe('multi-year');\r\n      expect(calendarInstance.activeDate).toEqual(new Date(2017, JAN, 31));\r\n\r\n      (calendarElement.querySelector('.mat-calendar-body-active') as HTMLElement).click();\r\n\r\n      fixture.detectChanges();\r\n\r\n      const normalizedYear: Date = fixture.componentInstance.selectedYear;\r\n      expect(normalizedYear.getFullYear()).toEqual(2017);\r\n    });\r\n\r\n    it('should re-render when the i18n labels have changed',\r\n      inject([MatDatepickerIntl], (intl: MatDatepickerIntl) => {\r\n        const button = fixture.debugElement.nativeElement\r\n            .querySelector('.mat-calendar-period-button');\r\n\r\n        intl.switchToMultiYearViewLabel = 'Go to multi-year view?';\r\n        intl.changes.next();\r\n        fixture.detectChanges();\r\n\r\n        expect(button.getAttribute('aria-label')).toBe('Go to multi-year view?');\r\n      }));\r\n\r\n    it('should set all buttons to be `type=\"button\"`', () => {\r\n      const invalidButtons = calendarElement.querySelectorAll('button:not([type=\"button\"])');\r\n      expect(invalidButtons.length).toBe(0);\r\n    });\r\n\r\n    it('should complete the stateChanges stream', () => {\r\n      const spy = jasmine.createSpy('complete spy');\r\n      const subscription = calendarInstance.stateChanges.subscribe(undefined, undefined, spy);\r\n\r\n      fixture.destroy();\r\n\r\n      expect(spy).toHaveBeenCalled();\r\n      subscription.unsubscribe();\r\n    });\r\n\r\n    describe('a11y', () => {\r\n      describe('calendar body', () => {\r\n        let calendarBodyEl: HTMLElement;\r\n\r\n        beforeEach(() => {\r\n          calendarBodyEl = calendarElement.querySelector('.mat-calendar-content') as HTMLElement;\r\n          expect(calendarBodyEl).not.toBeNull();\r\n\r\n          dispatchFakeEvent(calendarBodyEl, 'focus');\r\n          fixture.detectChanges();\r\n        });\r\n\r\n        it('should initially set start date active', () => {\r\n          expect(calendarInstance.activeDate).toEqual(new Date(2017, JAN, 31));\r\n        });\r\n\r\n        it('should make the calendar body focusable', () => {\r\n          expect(calendarBodyEl.getAttribute('tabindex')).toBe('-1');\r\n        });\r\n\r\n        it('should not move focus to the active cell on init', () => {\r\n          const activeCell =\r\n              calendarBodyEl.querySelector('.mat-calendar-body-active')! as HTMLElement;\r\n\r\n          spyOn(activeCell, 'focus').and.callThrough();\r\n          fixture.detectChanges();\r\n          zone.simulateZoneExit();\r\n\r\n          expect(activeCell.focus).not.toHaveBeenCalled();\r\n        });\r\n\r\n        it('should move focus to the active cell when the view changes', () => {\r\n          const activeCell =\r\n              calendarBodyEl.querySelector('.mat-calendar-body-active')! as HTMLElement;\r\n\r\n          spyOn(activeCell, 'focus').and.callThrough();\r\n          fixture.detectChanges();\r\n          zone.simulateZoneExit();\r\n\r\n          expect(activeCell.focus).not.toHaveBeenCalled();\r\n\r\n          calendarInstance.currentView = 'multi-year';\r\n          fixture.detectChanges();\r\n          zone.simulateZoneExit();\r\n\r\n          expect(activeCell.focus).toHaveBeenCalled();\r\n        });\r\n\r\n        describe('year view', () => {\r\n          beforeEach(() => {\r\n            dispatchMouseEvent(periodButton, 'click');\r\n            fixture.detectChanges();\r\n\r\n            expect(calendarInstance.currentView).toBe('multi-year');\r\n\r\n            (calendarBodyEl.querySelector('.mat-calendar-body-active') as HTMLElement).click();\r\n            fixture.detectChanges();\r\n\r\n            expect(calendarInstance.currentView).toBe('year');\r\n          });\r\n\r\n          it('should return to month view on enter', () => {\r\n            const tableBodyEl = calendarBodyEl.querySelector('.mat-calendar-body') as HTMLElement;\r\n\r\n            dispatchKeyboardEvent(tableBodyEl, 'keydown', RIGHT_ARROW);\r\n            fixture.detectChanges();\r\n\r\n            dispatchKeyboardEvent(tableBodyEl, 'keydown', ENTER);\r\n            fixture.detectChanges();\r\n\r\n            expect(calendarInstance.currentView).toBe('month');\r\n            expect(calendarInstance.activeDate).toEqual(new Date(2017, FEB, 28));\r\n            expect(testComponent.selected).toBeUndefined();\r\n          });\r\n        });\r\n\r\n        describe('multi-year view', () => {\r\n          beforeEach(() => {\r\n            dispatchMouseEvent(periodButton, 'click');\r\n            fixture.detectChanges();\r\n\r\n            expect(calendarInstance.currentView).toBe('multi-year');\r\n          });\r\n\r\n          it('should go to year view on enter', () => {\r\n            const tableBodyEl = calendarBodyEl.querySelector('.mat-calendar-body') as HTMLElement;\r\n\r\n            dispatchKeyboardEvent(tableBodyEl, 'keydown', RIGHT_ARROW);\r\n            fixture.detectChanges();\r\n\r\n            dispatchKeyboardEvent(tableBodyEl, 'keydown', ENTER);\r\n            fixture.detectChanges();\r\n\r\n            expect(calendarInstance.currentView).toBe('year');\r\n            expect(calendarInstance.activeDate).toEqual(new Date(2018, JAN, 31));\r\n            expect(testComponent.selected).toBeUndefined();\r\n          });\r\n        });\r\n\r\n      });\r\n    });\r\n\r\n  });\r\n\r\n  describe('calendar with min and max date', () => {\r\n    let fixture: ComponentFixture<CalendarWithMinMax>;\r\n    let testComponent: CalendarWithMinMax;\r\n    let calendarElement: HTMLElement;\r\n    let calendarInstance: MatCalendar<Date>;\r\n\r\n    beforeEach(() => {\r\n      fixture = TestBed.createComponent(CalendarWithMinMax);\r\n\r\n      let calendarDebugElement = fixture.debugElement.query(By.directive(MatCalendar));\r\n      calendarElement = calendarDebugElement.nativeElement;\r\n      calendarInstance = calendarDebugElement.componentInstance;\r\n      testComponent = fixture.componentInstance;\r\n    });\r\n\r\n    it('should clamp startAt value below min date', () => {\r\n      testComponent.startAt = new Date(2000, JAN, 1);\r\n      fixture.detectChanges();\r\n\r\n      expect(calendarInstance.activeDate).toEqual(new Date(2016, JAN, 1));\r\n    });\r\n\r\n    it('should clamp startAt value above max date', () => {\r\n      testComponent.startAt = new Date(2020, JAN, 1);\r\n      fixture.detectChanges();\r\n\r\n      expect(calendarInstance.activeDate).toEqual(new Date(2018, JAN, 1));\r\n    });\r\n\r\n    it('should not go back past min date', () => {\r\n      testComponent.startAt = new Date(2016, FEB, 1);\r\n      fixture.detectChanges();\r\n\r\n      let prevButton =\r\n          calendarElement.querySelector('.mat-calendar-previous-button') as HTMLButtonElement;\r\n\r\n      expect(prevButton.disabled).toBe(false, 'previous button should not be disabled');\r\n      expect(calendarInstance.activeDate).toEqual(new Date(2016, FEB, 1));\r\n\r\n      prevButton.click();\r\n      fixture.detectChanges();\r\n\r\n      expect(prevButton.disabled).toBe(true, 'previous button should be disabled');\r\n      expect(calendarInstance.activeDate).toEqual(new Date(2016, JAN, 1));\r\n\r\n      prevButton.click();\r\n      fixture.detectChanges();\r\n\r\n      expect(calendarInstance.activeDate).toEqual(new Date(2016, JAN, 1));\r\n    });\r\n\r\n    it('should not go forward past max date', () => {\r\n      testComponent.startAt = new Date(2017, DEC, 1);\r\n      fixture.detectChanges();\r\n\r\n      let nextButton =\r\n          calendarElement.querySelector('.mat-calendar-next-button') as HTMLButtonElement;\r\n\r\n      expect(nextButton.disabled).toBe(false, 'next button should not be disabled');\r\n      expect(calendarInstance.activeDate).toEqual(new Date(2017, DEC, 1));\r\n\r\n      nextButton.click();\r\n      fixture.detectChanges();\r\n\r\n      expect(nextButton.disabled).toBe(true, 'next button should be disabled');\r\n      expect(calendarInstance.activeDate).toEqual(new Date(2018, JAN, 1));\r\n\r\n      nextButton.click();\r\n      fixture.detectChanges();\r\n\r\n      expect(calendarInstance.activeDate).toEqual(new Date(2018, JAN, 1));\r\n    });\r\n\r\n    it('should re-render the month view when the minDate changes', () => {\r\n      fixture.detectChanges();\r\n      spyOn(calendarInstance.monthView, '_init').and.callThrough();\r\n\r\n      testComponent.minDate = new Date(2017, NOV, 1);\r\n      fixture.detectChanges();\r\n\r\n      expect(calendarInstance.monthView._init).toHaveBeenCalled();\r\n    });\r\n\r\n    it('should re-render the month view when the maxDate changes', () => {\r\n      fixture.detectChanges();\r\n      spyOn(calendarInstance.monthView, '_init').and.callThrough();\r\n\r\n      testComponent.maxDate = new Date(2017, DEC, 1);\r\n      fixture.detectChanges();\r\n\r\n      expect(calendarInstance.monthView._init).toHaveBeenCalled();\r\n    });\r\n\r\n    it('should re-render the year view when the minDate changes', () => {\r\n      fixture.detectChanges();\r\n      const periodButton =\r\n          calendarElement.querySelector('.mat-calendar-period-button') as HTMLElement;\r\n      periodButton.click();\r\n      fixture.detectChanges();\r\n\r\n      (calendarElement.querySelector('.mat-calendar-body-active') as HTMLElement).click();\r\n      fixture.detectChanges();\r\n\r\n      spyOn(calendarInstance.yearView, '_init').and.callThrough();\r\n\r\n      testComponent.minDate = new Date(2017, NOV, 1);\r\n      fixture.detectChanges();\r\n\r\n      expect(calendarInstance.yearView._init).toHaveBeenCalled();\r\n    });\r\n\r\n    it('should re-render the year view when the maxDate changes', () => {\r\n      fixture.detectChanges();\r\n      const periodButton =\r\n          calendarElement.querySelector('.mat-calendar-period-button') as HTMLElement;\r\n      periodButton.click();\r\n      fixture.detectChanges();\r\n\r\n      (calendarElement.querySelector('.mat-calendar-body-active') as HTMLElement).click();\r\n      fixture.detectChanges();\r\n\r\n      spyOn(calendarInstance.yearView, '_init').and.callThrough();\r\n\r\n      testComponent.maxDate = new Date(2017, DEC, 1);\r\n      fixture.detectChanges();\r\n\r\n      expect(calendarInstance.yearView._init).toHaveBeenCalled();\r\n    });\r\n\r\n    it('should re-render the multi-year view when the minDate changes', () => {\r\n      fixture.detectChanges();\r\n      const periodButton =\r\n          calendarElement.querySelector('.mat-calendar-period-button') as HTMLElement;\r\n      periodButton.click();\r\n      fixture.detectChanges();\r\n\r\n      spyOn(calendarInstance.multiYearView, '_init').and.callThrough();\r\n\r\n      testComponent.minDate = new Date(2017, NOV, 1);\r\n      fixture.detectChanges();\r\n\r\n      expect(calendarInstance.multiYearView._init).toHaveBeenCalled();\r\n    });\r\n\r\n    it('should re-render the multi-year view when the maxDate changes', () => {\r\n      fixture.detectChanges();\r\n      const periodButton =\r\n          calendarElement.querySelector('.mat-calendar-period-button') as HTMLElement;\r\n      periodButton.click();\r\n      fixture.detectChanges();\r\n\r\n      spyOn(calendarInstance.multiYearView, '_init').and.callThrough();\r\n\r\n      testComponent.maxDate = new Date(2017, DEC, 1);\r\n      fixture.detectChanges();\r\n\r\n      expect(calendarInstance.multiYearView._init).toHaveBeenCalled();\r\n    });\r\n\r\n    it('should update the minDate in the child view if it changed after an interaction', () => {\r\n      fixture.destroy();\r\n\r\n      const dynamicFixture = TestBed.createComponent(CalendarWithSelectableMinDate);\r\n      dynamicFixture.detectChanges();\r\n\r\n      const calendarDebugElement = dynamicFixture.debugElement.query(By.directive(MatCalendar));\r\n      const disabledClass = 'mat-calendar-body-disabled';\r\n      calendarElement = calendarDebugElement.nativeElement;\r\n      calendarInstance = calendarDebugElement.componentInstance;\r\n\r\n      let cells = Array.from(calendarElement.querySelectorAll('.mat-calendar-body-cell'));\r\n\r\n      expect(cells.slice(0, 9).every(c => c.classList.contains(disabledClass)))\r\n          .toBe(true, 'Expected dates up to the 10th to be disabled.');\r\n\r\n      expect(cells.slice(9).every(c => c.classList.contains(disabledClass)))\r\n          .toBe(false, 'Expected dates after the 10th to be enabled.');\r\n\r\n      (cells[14] as HTMLElement).click();\r\n      dynamicFixture.detectChanges();\r\n      cells = Array.from(calendarElement.querySelectorAll('.mat-calendar-body-cell'));\r\n\r\n      expect(cells.slice(0, 14).every(c => c.classList.contains(disabledClass)))\r\n          .toBe(true, 'Expected dates up to the 14th to be disabled.');\r\n\r\n      expect(cells.slice(14).every(c => c.classList.contains(disabledClass)))\r\n          .toBe(false, 'Expected dates after the 14th to be enabled.');\r\n    });\r\n\r\n  });\r\n\r\n  describe('calendar with date filter', () => {\r\n    let fixture: ComponentFixture<CalendarWithDateFilter>;\r\n    let testComponent: CalendarWithDateFilter;\r\n    let calendarElement: HTMLElement;\r\n    let calendarInstance: MatCalendar<Date>;\r\n\r\n    beforeEach(() => {\r\n      fixture = TestBed.createComponent(CalendarWithDateFilter);\r\n      fixture.detectChanges();\r\n\r\n      let calendarDebugElement = fixture.debugElement.query(By.directive(MatCalendar));\r\n      calendarElement = calendarDebugElement.nativeElement;\r\n      calendarInstance = calendarDebugElement.componentInstance;\r\n      testComponent = fixture.componentInstance;\r\n    });\r\n\r\n    it('should disable and prevent selection of filtered dates', () => {\r\n      let cells = calendarElement.querySelectorAll('.mat-calendar-body-cell');\r\n      (cells[0] as HTMLElement).click();\r\n      fixture.detectChanges();\r\n\r\n      expect(testComponent.selected).toBeFalsy();\r\n\r\n      (cells[1] as HTMLElement).click();\r\n      fixture.detectChanges();\r\n\r\n      expect(testComponent.selected).toEqual(new Date(2017, JAN, 2));\r\n    });\r\n\r\n    describe('a11y', () => {\r\n      let tableBodyEl: HTMLElement;\r\n\r\n      beforeEach(() => {\r\n        tableBodyEl = calendarElement.querySelector('.mat-calendar-body') as HTMLElement;\r\n        expect(tableBodyEl).not.toBeNull();\r\n\r\n        dispatchFakeEvent(tableBodyEl, 'focus');\r\n        fixture.detectChanges();\r\n      });\r\n\r\n      it('should not allow selection of disabled date in month view', () => {\r\n        expect(calendarInstance.currentView).toBe('month');\r\n        expect(calendarInstance.activeDate).toEqual(new Date(2017, JAN, 1));\r\n\r\n        dispatchKeyboardEvent(tableBodyEl, 'keydown', ENTER);\r\n        fixture.detectChanges();\r\n\r\n        expect(testComponent.selected).toBeUndefined();\r\n      });\r\n\r\n      it('should allow entering month view at disabled month', () => {\r\n        let periodButton =\r\n            calendarElement.querySelector('.mat-calendar-period-button') as HTMLElement;\r\n        dispatchMouseEvent(periodButton, 'click');\r\n        fixture.detectChanges();\r\n\r\n        (calendarElement.querySelector('.mat-calendar-body-active') as HTMLElement).click();\r\n        fixture.detectChanges();\r\n\r\n        calendarInstance.activeDate = new Date(2017, NOV, 1);\r\n        fixture.detectChanges();\r\n\r\n        expect(calendarInstance.currentView).toBe('year');\r\n\r\n        tableBodyEl = calendarElement.querySelector('.mat-calendar-body') as HTMLElement;\r\n        dispatchKeyboardEvent(tableBodyEl, 'keydown', ENTER);\r\n        fixture.detectChanges();\r\n\r\n        expect(calendarInstance.currentView).toBe('month');\r\n        expect(testComponent.selected).toBeUndefined();\r\n      });\r\n    });\r\n\r\n  });\r\n});\r\n\r\n\r\n@Component({\r\n  template: `\r\n    <mat-calendar\r\n        [startAt]=\"startDate\"\r\n        [(selected)]=\"selected\"\r\n        (yearSelected)=\"selectedYear=$event\"\r\n        (monthSelected)=\"selectedMonth=$event\">\r\n    </mat-calendar>`\r\n})\r\nclass StandardCalendar {\r\n  selected: Date;\r\n  selectedYear: Date;\r\n  selectedMonth: Date;\r\n  startDate = new Date(2017, JAN, 31);\r\n}\r\n\r\n\r\n@Component({\r\n  template: `\r\n    <mat-calendar [startAt]=\"startAt\" [minDate]=\"minDate\" [maxDate]=\"maxDate\"></mat-calendar>\r\n  `\r\n})\r\nclass CalendarWithMinMax {\r\n  startAt: Date;\r\n  minDate = new Date(2016, JAN, 1);\r\n  maxDate = new Date(2018, JAN, 1);\r\n}\r\n\r\n\r\n@Component({\r\n  template: `\r\n    <mat-calendar [startAt]=\"startDate\" [(selected)]=\"selected\" [dateFilter]=\"dateFilter\">\r\n    </mat-calendar>\r\n  `\r\n})\r\nclass CalendarWithDateFilter {\r\n  selected: Date;\r\n  startDate = new Date(2017, JAN, 1);\r\n\r\n  dateFilter (date: Date) {\r\n    return !(date.getDate() % 2) && date.getMonth() !== NOV;\r\n  }\r\n}\r\n\r\n\r\n@Component({\r\n  template: `\r\n    <mat-calendar\r\n      [startAt]=\"startAt\"\r\n      (selectedChange)=\"select($event)\"\r\n      [selected]=\"selected\"\r\n      [minDate]=\"selected\">\r\n    </mat-calendar>\r\n  `\r\n})\r\nclass CalendarWithSelectableMinDate {\r\n  startAt = new Date(2018, JUL, 0);\r\n  selected: Date;\r\n  minDate: Date;\r\n\r\n  constructor() {\r\n    this.select(new Date(2018, JUL, 10));\r\n  }\r\n\r\n  select(value: Date) {\r\n    this.minDate = this.selected = value;\r\n  }\r\n}\r\n"]}