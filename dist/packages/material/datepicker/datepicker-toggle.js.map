{"version":3,"file":"datepicker-toggle.js","sourceRoot":"","sources":["../../../../src/lib/datepicker/datepicker-toggle.ts"],"names":[],"mappings":";;;;;;;;;AAQA,kDAA4D;AAC5D,sCAYuB;AACvB,6BAA6D;AAC7D,2CAA2C;AAC3C,qDAAoD;;;;;;gBAInD,gBAAS,SAAC;oBACT,QAAQ,EAAE,2BAA2B;iBACtC;;kCA9BD;;AA+Ba,0DAAuB;;IAqClC,6BAAmB,KAAwB,EAAU,kBAAqC;QAAvE,UAAK,GAAL,KAAK,CAAmB;QAAU,uBAAkB,GAAlB,kBAAkB,CAAmB;6BAlBlE,mBAAY,CAAC,KAAK;KAkBoD;0BAX1F,yCAAQ;;;YACV,MAAM,CAAC,IAAI,CAAC,SAAS,KAAK,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC;;aAEpF,UAAa,KAAc;YACzB,IAAI,CAAC,SAAS,GAAG,gCAAqB,CAAC,KAAK,CAAC,CAAC;SAC/C;;;;IAQD,yCAAW,GAAX,UAAY,OAAsB;QAChC,EAAE,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC;YACvB,IAAI,CAAC,kBAAkB,EAAE,CAAC;SAC3B;KACF;IAED,yCAAW,GAAX;QACE,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;KAClC;IAED,gDAAkB,GAAlB;QACE,IAAI,CAAC,kBAAkB,EAAE,CAAC;KAC3B;IAED,mCAAK,GAAL,UAAM,KAAY;QAChB,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YACtC,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;YACvB,KAAK,CAAC,eAAe,EAAE,CAAC;SACzB;KACF;IAEO,gDAAkB,GAA1B;QAAA,iBAeC;QAdC,IAAM,kBAAkB,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,eAAe,CAAC,CAAC,CAAC,SAAY,EAAE,CAAC;QAC9F,IAAM,aAAa,GAAG,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,CAAC;YACvE,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,eAAe,CAAC,CAAC,CAAC,SAAY,EAAE,CAAC;QACtE,IAAM,iBAAiB,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC;YACvC,YAAK,CAAC,IAAI,CAAC,UAAU,CAAC,YAAY,EAAE,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC,CAAC;YACnE,SAAY,EAAE,CAAC;QAEnB,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;QACjC,IAAI,CAAC,aAAa,GAAG,YAAK,CACxB,IAAI,CAAC,KAAK,CAAC,OAAO,EAClB,kBAAkB,EAClB,aAAa,EACb,iBAAiB,CAClB,CAAC,SAAS,CAAC,cAAM,OAAA,KAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,EAAtC,CAAsC,CAAC,CAAC;KAC3D;;gBAxEF,gBAAS,SAAC;oBACT,QAAQ,EAAE,MAAM,CAAC,EAAE;oBACnB,QAAQ,EAAE,uBAAuB;oBACjC,WAAW,EAAE,wBAAwB;oBACrC,SAAS,EAAE,CAAC,uBAAuB,CAAC;oBACpC,IAAI,EAAE;wBACJ,OAAO,EAAE,uBAAuB;wBAChC,sCAAsC,EAAE,iCAAiC;wBACzE,oBAAoB,EAAE,6CAA6C;wBACnE,kBAAkB,EAAE,2CAA2C;qBAChE;oBACD,QAAQ,EAAE,qBAAqB;oBAC/B,aAAa,EAAE,wBAAiB,CAAC,IAAI;oBACrC,eAAe,EAAE,8BAAuB,CAAC,MAAM;iBAChD;;;;gBAxBO,mCAAiB;gBAZvB,wBAAiB;;;+BAyChB,YAAK,SAAC,KAAK;6BAGX,YAAK;gCAUL,mBAAY,SAAC,uBAAuB;;8BAlEvC;;AAiDa,kDAAmB","sourcesContent":["/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\r\nimport {\r\n  AfterContentInit,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ContentChild,\r\n  Directive,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  SimpleChanges,\r\n  ViewEncapsulation,\r\n} from '@angular/core';\r\nimport {merge, of as observableOf, Subscription} from 'rxjs';\r\nimport {MatDatepicker} from './datepicker';\r\nimport {MatDatepickerIntl} from './datepicker-intl';\r\n\r\n\r\n/** Can be used to override the icon of a `matDatepickerToggle`. */\r\n@Directive({\r\n  selector: '[matDatepickerToggleIcon]'\r\n})\r\nexport class MatDatepickerToggleIcon {}\r\n\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'mat-datepicker-toggle',\r\n  templateUrl: 'datepicker-toggle.html',\r\n  styleUrls: ['datepicker-toggle.css'],\r\n  host: {\r\n    'class': 'mat-datepicker-toggle',\r\n    '[class.mat-datepicker-toggle-active]': 'datepicker && datepicker.opened',\r\n    '[class.mat-accent]': 'datepicker && datepicker.color === \"accent\"',\r\n    '[class.mat-warn]': 'datepicker && datepicker.color === \"warn\"',\r\n  },\r\n  exportAs: 'matDatepickerToggle',\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MatDatepickerToggle<D> implements AfterContentInit, OnChanges, OnDestroy {\r\n  private _stateChanges = Subscription.EMPTY;\r\n\r\n  /** Datepicker instance that the button will toggle. */\r\n  @Input('for') datepicker: MatDatepicker<D>;\r\n\r\n  /** Whether the toggle button is disabled. */\r\n  @Input()\r\n  get disabled(): boolean {\r\n    return this._disabled === undefined ? this.datepicker.disabled : !!this._disabled;\r\n  }\r\n  set disabled(value: boolean) {\r\n    this._disabled = coerceBooleanProperty(value);\r\n  }\r\n  private _disabled: boolean;\r\n\r\n  /** Custom icon set by the consumer. */\r\n  @ContentChild(MatDatepickerToggleIcon) _customIcon: MatDatepickerToggleIcon;\r\n\r\n  constructor(public _intl: MatDatepickerIntl, private _changeDetectorRef: ChangeDetectorRef) {}\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.datepicker) {\r\n      this._watchStateChanges();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._stateChanges.unsubscribe();\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    this._watchStateChanges();\r\n  }\r\n\r\n  _open(event: Event): void {\r\n    if (this.datepicker && !this.disabled) {\r\n      this.datepicker.open();\r\n      event.stopPropagation();\r\n    }\r\n  }\r\n\r\n  private _watchStateChanges() {\r\n    const datepickerDisabled = this.datepicker ? this.datepicker._disabledChange : observableOf();\r\n    const inputDisabled = this.datepicker && this.datepicker._datepickerInput ?\r\n        this.datepicker._datepickerInput._disabledChange : observableOf();\r\n    const datepickerToggled = this.datepicker ?\r\n        merge(this.datepicker.openedStream, this.datepicker.closedStream) :\r\n        observableOf();\r\n\r\n    this._stateChanges.unsubscribe();\r\n    this._stateChanges = merge(\r\n      this._intl.changes,\r\n      datepickerDisabled,\r\n      inputDisabled,\r\n      datepickerToggled\r\n    ).subscribe(() => this._changeDetectorRef.markForCheck());\r\n  }\r\n}\r\n"]}