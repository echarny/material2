{"version":3,"file":"calendar-body.spec.js","sourceRoot":"","sources":["../../../../src/lib/datepicker/calendar-body.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import {async, ComponentFixture, TestBed} from '@angular/core/testing';\r\nimport {Component} from '@angular/core';\r\nimport {MatCalendarBody, MatCalendarCell} from './calendar-body';\r\nimport {By} from '@angular/platform-browser';\r\n\r\n\r\ndescribe('MatCalendarBody', () => {\r\n  beforeEach(async(() => {\r\n    TestBed.configureTestingModule({\r\n      declarations: [\r\n        MatCalendarBody,\r\n\r\n        // Test components.\r\n        StandardCalendarBody,\r\n        CalendarBodyWithDisabledCells,\r\n      ],\r\n    });\r\n\r\n    TestBed.compileComponents();\r\n  }));\r\n\r\n  describe('standard calendar body', () => {\r\n    let fixture: ComponentFixture<StandardCalendarBody>;\r\n    let testComponent: StandardCalendarBody;\r\n    let calendarBodyNativeElement: Element;\r\n    let rowEls: Element[];\r\n    let labelEls: Element[];\r\n    let cellEls: Element[];\r\n\r\n    function refreshElementLists() {\r\n      rowEls = Array.from(calendarBodyNativeElement.querySelectorAll('tr'));\r\n      labelEls = Array.from(calendarBodyNativeElement.querySelectorAll('.mat-calendar-body-label'));\r\n      cellEls = Array.from(calendarBodyNativeElement.querySelectorAll('.mat-calendar-body-cell'));\r\n    }\r\n\r\n    beforeEach(() => {\r\n      fixture = TestBed.createComponent(StandardCalendarBody);\r\n      fixture.detectChanges();\r\n\r\n      const calendarBodyDebugElement = fixture.debugElement.query(By.directive(MatCalendarBody));\r\n      calendarBodyNativeElement = calendarBodyDebugElement.nativeElement;\r\n      testComponent = fixture.componentInstance;\r\n\r\n      refreshElementLists();\r\n    });\r\n\r\n    it('creates body', () => {\r\n      expect(rowEls.length).toBe(3);\r\n      expect(labelEls.length).toBe(1);\r\n      expect(cellEls.length).toBe(14);\r\n    });\r\n\r\n    it('highlights today', () => {\r\n      const todayCell = calendarBodyNativeElement.querySelector('.mat-calendar-body-today')!;\r\n      expect(todayCell).not.toBeNull();\r\n      expect(todayCell.innerHTML.trim()).toBe('3');\r\n    });\r\n\r\n    it('highlights selected', () => {\r\n      const selectedCell = calendarBodyNativeElement.querySelector('.mat-calendar-body-selected')!;\r\n      expect(selectedCell).not.toBeNull();\r\n      expect(selectedCell.innerHTML.trim()).toBe('4');\r\n    });\r\n\r\n    it('should set aria-selected correctly', () => {\r\n      const selectedCells = cellEls.filter(c => c.getAttribute('aria-selected') === 'true');\r\n      const deselectedCells = cellEls.filter(c => c.getAttribute('aria-selected') === 'false');\r\n\r\n      expect(selectedCells.length).toBe(1, 'Expected one cell to be marked as selected.');\r\n      expect(deselectedCells.length)\r\n          .toBe(cellEls.length - 1, 'Expected remaining cells to be marked as deselected.');\r\n    });\r\n\r\n    it('places label in first row if space is available', () => {\r\n      testComponent.rows[0] = testComponent.rows[0].slice(3);\r\n      testComponent.rows = testComponent.rows.slice();\r\n      fixture.detectChanges();\r\n      refreshElementLists();\r\n\r\n      expect(rowEls.length).toBe(2);\r\n      expect(labelEls.length).toBe(1);\r\n      expect(cellEls.length).toBe(11);\r\n      expect(rowEls[0].firstElementChild!.classList)\r\n          .toContain('mat-calendar-body-label', 'first cell should be the label');\r\n      expect(labelEls[0].getAttribute('colspan')).toBe('3');\r\n    });\r\n\r\n    it('cell should be selected on click', () => {\r\n      const todayElement =\r\n          calendarBodyNativeElement.querySelector('.mat-calendar-body-today') as HTMLElement;\r\n      todayElement.click();\r\n      fixture.detectChanges();\r\n\r\n      expect(todayElement.classList)\r\n          .toContain('mat-calendar-body-selected', 'today should be selected');\r\n    });\r\n\r\n    it('should mark active date', () => {\r\n      expect((cellEls[10] as HTMLElement).innerText.trim()).toBe('11');\r\n      expect(cellEls[10].classList).toContain('mat-calendar-body-active');\r\n    });\r\n  });\r\n\r\n  describe('calendar body with disabled cells', () => {\r\n    let fixture: ComponentFixture<CalendarBodyWithDisabledCells>;\r\n    let testComponent: CalendarBodyWithDisabledCells;\r\n    let calendarBodyNativeElement: Element;\r\n    let cellEls: HTMLElement[];\r\n\r\n    beforeEach(() => {\r\n      fixture = TestBed.createComponent(CalendarBodyWithDisabledCells);\r\n      fixture.detectChanges();\r\n\r\n      const calendarBodyDebugElement = fixture.debugElement.query(By.directive(MatCalendarBody));\r\n      calendarBodyNativeElement = calendarBodyDebugElement.nativeElement;\r\n      testComponent = fixture.componentInstance;\r\n      cellEls = Array.from(calendarBodyNativeElement.querySelectorAll('.mat-calendar-body-cell'));\r\n    });\r\n\r\n    it('should only allow selection of disabled cells when allowDisabledSelection is true', () => {\r\n      cellEls[0].click();\r\n      fixture.detectChanges();\r\n\r\n      expect(testComponent.selected).toBeFalsy();\r\n\r\n      testComponent.allowDisabledSelection = true;\r\n      fixture.detectChanges();\r\n\r\n      cellEls[0].click();\r\n      fixture.detectChanges();\r\n\r\n      expect(testComponent.selected).toBe(1);\r\n    });\r\n  });\r\n});\r\n\r\n\r\n@Component({\r\n  template: `<table mat-calendar-body\r\n                    [label]=\"label\"\r\n                    [rows]=\"rows\"\r\n                    [todayValue]=\"todayValue\"\r\n                    [selectedValue]=\"selectedValue\"\r\n                    [labelMinRequiredCells]=\"labelMinRequiredCells\"\r\n                    [numCols]=\"numCols\"\r\n                    [activeCell]=\"10\"\r\n                    (selectedValueChange)=\"onSelect($event)\">\r\n             </table>`,\r\n})\r\nclass StandardCalendarBody {\r\n  label = 'Jan 2017';\r\n  rows = [[1, 2, 3, 4, 5, 6, 7], [8, 9, 10, 11, 12, 13, 14]].map(r => r.map(createCell));\r\n  todayValue = 3;\r\n  selectedValue = 4;\r\n  labelMinRequiredCells = 3;\r\n  numCols = 7;\r\n\r\n  onSelect(value: number) {\r\n    this.selectedValue = value;\r\n  }\r\n}\r\n\r\n\r\n@Component({\r\n  template: `<table mat-calendar-body\r\n                    [rows]=\"rows\"\r\n                    [allowDisabledSelection]=\"allowDisabledSelection\"\r\n                    (selectedValueChange)=\"selected = $event\">\r\n             </table>`\r\n})\r\nclass CalendarBodyWithDisabledCells {\r\n  rows = [[1, 2, 3, 4]].map(r => r.map(d => {\r\n    let cell = createCell(d);\r\n    cell.enabled = d % 2 == 0;\r\n    return cell;\r\n  }));\r\n  allowDisabledSelection = false;\r\n  selected: number;\r\n}\r\n\r\n\r\nfunction createCell(value: number) {\r\n  return new MatCalendarCell(value, `${value}`, `${value}-label`, true);\r\n}\r\n"]}