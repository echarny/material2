{"version":3,"file":"datepicker.spec.js","sourceRoot":"","sources":["../../../../src/lib/datepicker/datepicker.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import {ENTER, ESCAPE, RIGHT_ARROW, UP_ARROW, DOWN_ARROW} from '@angular/cdk/keycodes';\r\nimport {Overlay, OverlayContainer, ScrollDispatcher} from '@angular/cdk/overlay';\r\nimport {\r\n  createKeyboardEvent,\r\n  dispatchEvent,\r\n  dispatchFakeEvent,\r\n  dispatchKeyboardEvent,\r\n  dispatchMouseEvent,\r\n} from '@angular/cdk/testing';\r\nimport {Component, FactoryProvider, Type, ValueProvider, ViewChild} from '@angular/core';\r\nimport {ComponentFixture, fakeAsync, flush, inject, TestBed} from '@angular/core/testing';\r\nimport {FormControl, FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {\r\n  DEC,\r\n  JAN,\r\n  JUL,\r\n  JUN,\r\n  MAT_DATE_LOCALE,\r\n  MatNativeDateModule,\r\n  NativeDateModule,\r\n  SEP,\r\n} from '@angular/material/core';\r\nimport {MatFormField, MatFormFieldModule} from '@angular/material/form-field';\r\nimport {By} from '@angular/platform-browser';\r\nimport {NoopAnimationsModule} from '@angular/platform-browser/animations';\r\nimport {Subject} from 'rxjs';\r\nimport {MatInputModule} from '../input/index';\r\nimport {MatDatepicker} from './datepicker';\r\nimport {MatDatepickerInput} from './datepicker-input';\r\nimport {MatDatepickerToggle} from './datepicker-toggle';\r\nimport {MAT_DATEPICKER_SCROLL_STRATEGY, MatDatepickerIntl, MatDatepickerModule} from './index';\r\nimport {Directionality} from '@angular/cdk/bidi';\r\nimport {BrowserDynamicTestingModule} from '@angular/platform-browser-dynamic/testing';\r\n\r\ndescribe('MatDatepicker', () => {\r\n  const SUPPORTS_INTL = typeof Intl != 'undefined';\r\n\r\n  // Creates a test component fixture.\r\n  function createComponent(\r\n    component: Type<any>,\r\n    imports: Type<any>[] = [],\r\n    providers: (FactoryProvider | ValueProvider)[] = [],\r\n    entryComponents: Type<any>[] = []): ComponentFixture<any> {\r\n\r\n    TestBed.configureTestingModule({\r\n      imports: [\r\n        FormsModule,\r\n        MatDatepickerModule,\r\n        MatFormFieldModule,\r\n        MatInputModule,\r\n        NoopAnimationsModule,\r\n        ReactiveFormsModule,\r\n        ...imports\r\n      ],\r\n      providers,\r\n      declarations: [component, ...entryComponents],\r\n    });\r\n\r\n    TestBed.overrideModule(BrowserDynamicTestingModule, {\r\n      set: {\r\n        entryComponents: [entryComponents]\r\n      }\r\n    }).compileComponents();\r\n\r\n    return TestBed.createComponent(component);\r\n  }\r\n\r\n  afterEach(inject([OverlayContainer], (container: OverlayContainer) => {\r\n    container.ngOnDestroy();\r\n  }));\r\n\r\n  describe('with MatNativeDateModule', () => {\r\n    describe('standard datepicker', () => {\r\n      let fixture: ComponentFixture<StandardDatepicker>;\r\n      let testComponent: StandardDatepicker;\r\n\r\n      beforeEach(fakeAsync(() => {\r\n        fixture = createComponent(StandardDatepicker, [MatNativeDateModule]);\r\n        fixture.detectChanges();\r\n\r\n        testComponent = fixture.componentInstance;\r\n      }));\r\n\r\n      afterEach(fakeAsync(() => {\r\n        testComponent.datepicker.close();\r\n        fixture.detectChanges();\r\n        flush();\r\n      }));\r\n\r\n      it('should initialize with correct value shown in input', () => {\r\n        if (SUPPORTS_INTL) {\r\n          expect(fixture.nativeElement.querySelector('input').value).toBe('1/1/2020');\r\n        }\r\n      });\r\n\r\n      it('open non-touch should open popup', () => {\r\n        expect(document.querySelector('.cdk-overlay-pane.mat-datepicker-popup')).toBeNull();\r\n\r\n        testComponent.datepicker.open();\r\n        fixture.detectChanges();\r\n\r\n        expect(document.querySelector('.cdk-overlay-pane.mat-datepicker-popup')).not.toBeNull();\r\n      });\r\n\r\n      it('open touch should open dialog', () => {\r\n        testComponent.touch = true;\r\n        fixture.detectChanges();\r\n\r\n        expect(document.querySelector('.mat-datepicker-dialog mat-dialog-container')).toBeNull();\r\n\r\n        testComponent.datepicker.open();\r\n        fixture.detectChanges();\r\n\r\n        expect(document.querySelector('.mat-datepicker-dialog mat-dialog-container'))\r\n            .not.toBeNull();\r\n      });\r\n\r\n      it('should open datepicker if opened input is set to true', fakeAsync(() => {\r\n        testComponent.opened = true;\r\n        fixture.detectChanges();\r\n        flush();\r\n\r\n        expect(document.querySelector('.mat-datepicker-content')).not.toBeNull();\r\n\r\n        testComponent.opened = false;\r\n        fixture.detectChanges();\r\n        flush();\r\n\r\n        expect(document.querySelector('.mat-datepicker-content')).toBeNull();\r\n      }));\r\n\r\n      it('open in disabled mode should not open the calendar', () => {\r\n        testComponent.disabled = true;\r\n        fixture.detectChanges();\r\n\r\n        expect(document.querySelector('.cdk-overlay-pane')).toBeNull();\r\n        expect(document.querySelector('mat-dialog-container')).toBeNull();\r\n\r\n        testComponent.datepicker.open();\r\n        fixture.detectChanges();\r\n\r\n        expect(document.querySelector('.cdk-overlay-pane')).toBeNull();\r\n        expect(document.querySelector('mat-dialog-container')).toBeNull();\r\n      });\r\n\r\n      it('disabled datepicker input should open the calendar if datepicker is enabled', () => {\r\n        testComponent.datepicker.disabled = false;\r\n        testComponent.datepickerInput.disabled = true;\r\n        fixture.detectChanges();\r\n\r\n        expect(document.querySelector('.cdk-overlay-pane')).toBeNull();\r\n\r\n        testComponent.datepicker.open();\r\n        fixture.detectChanges();\r\n\r\n        expect(document.querySelector('.cdk-overlay-pane')).not.toBeNull();\r\n      });\r\n\r\n      it('close should close popup', fakeAsync(() => {\r\n        testComponent.datepicker.open();\r\n        fixture.detectChanges();\r\n        flush();\r\n\r\n        const popup = document.querySelector('.cdk-overlay-pane')!;\r\n        expect(popup).not.toBeNull();\r\n        expect(parseInt(getComputedStyle(popup).height as string)).not.toBe(0);\r\n\r\n        testComponent.datepicker.close();\r\n        fixture.detectChanges();\r\n        flush();\r\n\r\n        expect(parseInt(getComputedStyle(popup).height as string)).toBe(0);\r\n      }));\r\n\r\n      it('should close the popup when pressing ESCAPE', fakeAsync(() => {\r\n        testComponent.datepicker.open();\r\n        fixture.detectChanges();\r\n\r\n        expect(testComponent.datepicker.opened).toBe(true, 'Expected datepicker to be open.');\r\n\r\n        dispatchKeyboardEvent(document.body, 'keydown', ESCAPE);\r\n        fixture.detectChanges();\r\n        flush();\r\n\r\n        expect(testComponent.datepicker.opened).toBe(false, 'Expected datepicker to be closed.');\r\n      }));\r\n\r\n      it('should set the proper role on the popup', fakeAsync(() => {\r\n        testComponent.datepicker.open();\r\n        fixture.detectChanges();\r\n        flush();\r\n\r\n        const popup = document.querySelector('.cdk-overlay-pane')!;\r\n        expect(popup).toBeTruthy();\r\n        expect(popup.getAttribute('role')).toBe('dialog');\r\n      }));\r\n\r\n      it('close should close dialog', fakeAsync(() => {\r\n        testComponent.touch = true;\r\n        fixture.detectChanges();\r\n\r\n        testComponent.datepicker.open();\r\n        fixture.detectChanges();\r\n\r\n        expect(document.querySelector('mat-dialog-container')).not.toBeNull();\r\n\r\n        testComponent.datepicker.close();\r\n        fixture.detectChanges();\r\n        flush();\r\n\r\n        expect(document.querySelector('mat-dialog-container')).toBeNull();\r\n      }));\r\n\r\n      it('setting selected via click should update input and close calendar', fakeAsync(() => {\r\n        testComponent.touch = true;\r\n        fixture.detectChanges();\r\n\r\n        testComponent.datepicker.open();\r\n        fixture.detectChanges();\r\n        flush();\r\n\r\n        expect(document.querySelector('mat-dialog-container')).not.toBeNull();\r\n        expect(testComponent.datepickerInput.value).toEqual(new Date(2020, JAN, 1));\r\n\r\n        let cells = document.querySelectorAll('.mat-calendar-body-cell');\r\n        dispatchMouseEvent(cells[1], 'click');\r\n        fixture.detectChanges();\r\n        flush();\r\n\r\n        expect(document.querySelector('mat-dialog-container')).toBeNull();\r\n        expect(testComponent.datepickerInput.value).toEqual(new Date(2020, JAN, 2));\r\n      }));\r\n\r\n      it('setting selected via enter press should update input and close calendar',\r\n        fakeAsync(() => {\r\n          testComponent.touch = true;\r\n          fixture.detectChanges();\r\n\r\n          testComponent.datepicker.open();\r\n          fixture.detectChanges();\r\n          flush();\r\n\r\n          expect(document.querySelector('mat-dialog-container')).not.toBeNull();\r\n          expect(testComponent.datepickerInput.value).toEqual(new Date(2020, JAN, 1));\r\n\r\n          let calendarBodyEl = document.querySelector('.mat-calendar-body') as HTMLElement;\r\n\r\n          dispatchKeyboardEvent(calendarBodyEl, 'keydown', RIGHT_ARROW);\r\n          fixture.detectChanges();\r\n          flush();\r\n          dispatchKeyboardEvent(calendarBodyEl, 'keydown', ENTER);\r\n          fixture.detectChanges();\r\n          flush();\r\n\r\n          expect(document.querySelector('mat-dialog-container')).toBeNull();\r\n          expect(testComponent.datepickerInput.value).toEqual(new Date(2020, JAN, 2));\r\n        }));\r\n\r\n      it('clicking the currently selected date should close the calendar ' +\r\n         'without firing selectedChanged', fakeAsync(() => {\r\n        const selectedChangedSpy =\r\n            spyOn(testComponent.datepicker._selectedChanged, 'next').and.callThrough();\r\n\r\n        for (let changeCount = 1; changeCount < 3; changeCount++) {\r\n          const currentDay = changeCount;\r\n          testComponent.datepicker.open();\r\n          fixture.detectChanges();\r\n\r\n          expect(document.querySelector('mat-datepicker-content')).not.toBeNull();\r\n          expect(testComponent.datepickerInput.value).toEqual(new Date(2020, JAN, currentDay));\r\n\r\n          let cells = document.querySelectorAll('.mat-calendar-body-cell');\r\n          dispatchMouseEvent(cells[1], 'click');\r\n          fixture.detectChanges();\r\n          flush();\r\n        }\r\n\r\n        expect(selectedChangedSpy.calls.count()).toEqual(1);\r\n        expect(document.querySelector('mat-dialog-container')).toBeNull();\r\n        expect(testComponent.datepickerInput.value).toEqual(new Date(2020, JAN, 2));\r\n      }));\r\n\r\n      it('pressing enter on the currently selected date should close the calendar without ' +\r\n         'firing selectedChanged', () => {\r\n        const selectedChangedSpy =\r\n            spyOn(testComponent.datepicker._selectedChanged, 'next').and.callThrough();\r\n\r\n        testComponent.datepicker.open();\r\n        fixture.detectChanges();\r\n\r\n        let calendarBodyEl = document.querySelector('.mat-calendar-body') as HTMLElement;\r\n        expect(calendarBodyEl).not.toBeNull();\r\n        expect(testComponent.datepickerInput.value).toEqual(new Date(2020, JAN, 1));\r\n\r\n        dispatchKeyboardEvent(calendarBodyEl, 'keydown', ENTER);\r\n        fixture.detectChanges();\r\n\r\n        fixture.whenStable().then(() => {\r\n          expect(selectedChangedSpy.calls.count()).toEqual(0);\r\n          expect(document.querySelector('mat-dialog-container')).toBeNull();\r\n          expect(testComponent.datepickerInput.value).toEqual(new Date(2020, JAN, 1));\r\n        });\r\n      });\r\n\r\n      it('startAt should fallback to input value', () => {\r\n        expect(testComponent.datepicker.startAt).toEqual(new Date(2020, JAN, 1));\r\n      });\r\n\r\n      it('should attach popup to native input', () => {\r\n        let attachToRef = testComponent.datepickerInput.getConnectedOverlayOrigin();\r\n        expect(attachToRef.nativeElement.tagName.toLowerCase())\r\n            .toBe('input', 'popup should be attached to native input');\r\n      });\r\n\r\n      it('input should aria-owns calendar after opened in non-touch mode', fakeAsync(() => {\r\n        let inputEl = fixture.debugElement.query(By.css('input')).nativeElement;\r\n        expect(inputEl.getAttribute('aria-owns')).toBeNull();\r\n\r\n        testComponent.datepicker.open();\r\n        fixture.detectChanges();\r\n        flush();\r\n\r\n        let ownedElementId = inputEl.getAttribute('aria-owns');\r\n        expect(ownedElementId).not.toBeNull();\r\n\r\n        let ownedElement = document.getElementById(ownedElementId);\r\n        expect(ownedElement).not.toBeNull();\r\n        expect((ownedElement as Element).tagName.toLowerCase()).toBe('mat-calendar');\r\n      }));\r\n\r\n      it('input should aria-owns calendar after opened in touch mode', () => {\r\n        testComponent.touch = true;\r\n        fixture.detectChanges();\r\n\r\n        let inputEl = fixture.debugElement.query(By.css('input')).nativeElement;\r\n        expect(inputEl.getAttribute('aria-owns')).toBeNull();\r\n\r\n        testComponent.datepicker.open();\r\n        fixture.detectChanges();\r\n\r\n        let ownedElementId = inputEl.getAttribute('aria-owns');\r\n        expect(ownedElementId).not.toBeNull();\r\n\r\n        let ownedElement = document.getElementById(ownedElementId);\r\n        expect(ownedElement).not.toBeNull();\r\n        expect((ownedElement as Element).tagName.toLowerCase()).toBe('mat-calendar');\r\n      });\r\n\r\n      it('should not throw when given wrong data type', () => {\r\n        testComponent.date = '1/1/2017' as any;\r\n\r\n        expect(() => fixture.detectChanges()).not.toThrow();\r\n      });\r\n\r\n      it('should clear out the backdrop subscriptions on close', fakeAsync(() => {\r\n        for (let i = 0; i < 3; i++) {\r\n          testComponent.datepicker.open();\r\n          fixture.detectChanges();\r\n\r\n          testComponent.datepicker.close();\r\n          fixture.detectChanges();\r\n        }\r\n\r\n        testComponent.datepicker.open();\r\n        fixture.detectChanges();\r\n\r\n        const spy = jasmine.createSpy('close event spy');\r\n        const subscription = testComponent.datepicker.closedStream.subscribe(spy);\r\n        const backdrop = document.querySelector('.cdk-overlay-backdrop')! as HTMLElement;\r\n\r\n        backdrop.click();\r\n        fixture.detectChanges();\r\n        flush();\r\n\r\n        expect(spy).toHaveBeenCalledTimes(1);\r\n        expect(testComponent.datepicker.opened).toBe(false);\r\n        subscription.unsubscribe();\r\n      }));\r\n\r\n      it('should reset the datepicker when it is closed externally',\r\n        fakeAsync(inject([OverlayContainer], (oldOverlayContainer: OverlayContainer) => {\r\n\r\n          // Destroy the old container manually since resetting the testing module won't do it.\r\n          oldOverlayContainer.ngOnDestroy();\r\n          TestBed.resetTestingModule();\r\n\r\n          const scrolledSubject = new Subject();\r\n\r\n          // Stub out a `CloseScrollStrategy` so we can trigger a detachment via the `OverlayRef`.\r\n          fixture = createComponent(StandardDatepicker, [MatNativeDateModule], [\r\n            {\r\n              provide: ScrollDispatcher,\r\n              useValue: {scrolled: () => scrolledSubject}\r\n            },\r\n            {\r\n              provide: MAT_DATEPICKER_SCROLL_STRATEGY,\r\n              deps: [Overlay],\r\n              useFactory: (overlay: Overlay) => () => overlay.scrollStrategies.close()\r\n            }\r\n          ]);\r\n\r\n          fixture.detectChanges();\r\n          testComponent = fixture.componentInstance;\r\n\r\n          testComponent.datepicker.open();\r\n          fixture.detectChanges();\r\n\r\n          expect(testComponent.datepicker.opened).toBe(true);\r\n\r\n          scrolledSubject.next();\r\n          flush();\r\n          fixture.detectChanges();\r\n\r\n          expect(testComponent.datepicker.opened).toBe(false);\r\n        }))\r\n      );\r\n\r\n      it('should close the datpeicker using ALT + UP_ARROW', fakeAsync(() => {\r\n        testComponent.datepicker.open();\r\n        fixture.detectChanges();\r\n        flush();\r\n\r\n        expect(testComponent.datepicker.opened).toBe(true);\r\n\r\n        const event = createKeyboardEvent('keydown', UP_ARROW);\r\n        Object.defineProperty(event, 'altKey', {get: () => true});\r\n\r\n        dispatchEvent(document.body, event);\r\n        fixture.detectChanges();\r\n        flush();\r\n\r\n        expect(testComponent.datepicker.opened).toBe(false);\r\n      }));\r\n\r\n      it('should open the datpeicker using ALT + DOWN_ARROW', fakeAsync(() => {\r\n        expect(testComponent.datepicker.opened).toBe(false);\r\n\r\n        const event = createKeyboardEvent('keydown', DOWN_ARROW);\r\n        Object.defineProperty(event, 'altKey', {get: () => true});\r\n\r\n        dispatchEvent(fixture.nativeElement.querySelector('input'), event);\r\n        fixture.detectChanges();\r\n        flush();\r\n\r\n        expect(testComponent.datepicker.opened).toBe(true);\r\n        expect(event.defaultPrevented).toBe(true);\r\n      }));\r\n\r\n    });\r\n\r\n    describe('datepicker with too many inputs', () => {\r\n      it('should throw when multiple inputs registered', fakeAsync(() => {\r\n        const fixture = createComponent(MultiInputDatepicker, [MatNativeDateModule]);\r\n        expect(() => fixture.detectChanges()).toThrow();\r\n      }));\r\n    });\r\n\r\n    describe('datepicker that is assigned to input at a later point', () => {\r\n      it('should not throw on ALT + DOWN_ARROW for input without datepicker', fakeAsync(() => {\r\n        const fixture = createComponent(DelayedDatepicker, [MatNativeDateModule]);\r\n        fixture.detectChanges();\r\n\r\n        expect(() => {\r\n          const event = createKeyboardEvent('keydown', DOWN_ARROW);\r\n          Object.defineProperty(event, 'altKey', {get: () => true});\r\n          dispatchEvent(fixture.nativeElement.querySelector('input'), event);\r\n          fixture.detectChanges();\r\n          flush();\r\n        }).not.toThrow();\r\n      }));\r\n\r\n      it('should handle value changes when a datepicker is assigned after init', fakeAsync(() => {\r\n        const fixture = createComponent(DelayedDatepicker, [MatNativeDateModule]);\r\n        const testComponent: DelayedDatepicker = fixture.componentInstance;\r\n        const toSelect = new Date(2017, JAN, 1);\r\n\r\n        fixture.detectChanges();\r\n\r\n        expect(testComponent.datepickerInput.value).toBeNull();\r\n        expect(testComponent.datepicker._selected).toBeNull();\r\n\r\n        testComponent.assignedDatepicker = testComponent.datepicker;\r\n        fixture.detectChanges();\r\n\r\n        testComponent.assignedDatepicker.select(toSelect);\r\n        fixture.detectChanges();\r\n        flush();\r\n        fixture.detectChanges();\r\n\r\n        expect(testComponent.datepickerInput.value).toEqual(toSelect);\r\n        expect(testComponent.datepicker._selected).toEqual(toSelect);\r\n      }));\r\n    });\r\n\r\n    describe('datepicker with no inputs', () => {\r\n      let fixture: ComponentFixture<NoInputDatepicker>;\r\n      let testComponent: NoInputDatepicker;\r\n\r\n      beforeEach(fakeAsync(() => {\r\n        fixture = createComponent(NoInputDatepicker, [MatNativeDateModule]);\r\n        fixture.detectChanges();\r\n\r\n        testComponent = fixture.componentInstance;\r\n      }));\r\n\r\n      afterEach(fakeAsync(() => {\r\n        testComponent.datepicker.close();\r\n        fixture.detectChanges();\r\n      }));\r\n\r\n      it('should not throw when accessing disabled property', () => {\r\n        expect(() => testComponent.datepicker.disabled).not.toThrow();\r\n      });\r\n\r\n      it('should throw when opened with no registered inputs', fakeAsync(() => {\r\n        expect(() => testComponent.datepicker.open()).toThrow();\r\n      }));\r\n    });\r\n\r\n    describe('datepicker with startAt', () => {\r\n      let fixture: ComponentFixture<DatepickerWithStartAt>;\r\n      let testComponent: DatepickerWithStartAt;\r\n\r\n      beforeEach(fakeAsync(() => {\r\n        fixture = createComponent(DatepickerWithStartAt, [MatNativeDateModule]);\r\n        fixture.detectChanges();\r\n\r\n        testComponent = fixture.componentInstance;\r\n      }));\r\n\r\n      afterEach(fakeAsync(() => {\r\n        testComponent.datepicker.close();\r\n        fixture.detectChanges();\r\n      }));\r\n\r\n      it('explicit startAt should override input value', () => {\r\n        expect(testComponent.datepicker.startAt).toEqual(new Date(2010, JAN, 1));\r\n      });\r\n    });\r\n\r\n    describe('datepicker with startView set to year', () => {\r\n      let fixture: ComponentFixture<DatepickerWithStartViewYear>;\r\n      let testComponent: DatepickerWithStartViewYear;\r\n\r\n      beforeEach(fakeAsync(() => {\r\n        fixture = createComponent(DatepickerWithStartViewYear, [MatNativeDateModule]);\r\n        fixture.detectChanges();\r\n\r\n        testComponent = fixture.componentInstance;\r\n      }));\r\n\r\n      afterEach(fakeAsync(() => {\r\n        testComponent.datepicker.close();\r\n        fixture.detectChanges();\r\n        flush();\r\n      }));\r\n\r\n      it('should start at the specified view', () => {\r\n        testComponent.datepicker.open();\r\n        fixture.detectChanges();\r\n\r\n        const firstCalendarCell = document.querySelector('.mat-calendar-body-cell')!;\r\n\r\n        // When the calendar is in year view, the first cell should be for a month rather than\r\n        // for a date.\r\n        expect(firstCalendarCell.textContent)\r\n            .toBe('JAN', 'Expected the calendar to be in year-view');\r\n      });\r\n\r\n      it('should fire yearSelected when user selects calendar year in year view',\r\n        fakeAsync(() => {\r\n          spyOn(testComponent, 'onYearSelection');\r\n          expect(testComponent.onYearSelection).not.toHaveBeenCalled();\r\n\r\n          testComponent.datepicker.open();\r\n          fixture.detectChanges();\r\n\r\n          const cells = document.querySelectorAll('.mat-calendar-body-cell');\r\n\r\n          dispatchMouseEvent(cells[0], 'click');\r\n          fixture.detectChanges();\r\n          flush();\r\n\r\n          expect(testComponent.onYearSelection).toHaveBeenCalled();\r\n        })\r\n      );\r\n    });\r\n\r\n    describe('datepicker with startView set to multiyear', () => {\r\n      let fixture: ComponentFixture<DatepickerWithStartViewMultiYear>;\r\n      let testComponent: DatepickerWithStartViewMultiYear;\r\n\r\n      beforeEach(fakeAsync(() => {\r\n        fixture = createComponent(DatepickerWithStartViewMultiYear, [MatNativeDateModule]);\r\n        fixture.detectChanges();\r\n\r\n        testComponent = fixture.componentInstance;\r\n\r\n        spyOn(testComponent, 'onMultiYearSelection');\r\n      }));\r\n\r\n      afterEach(fakeAsync(() => {\r\n        testComponent.datepicker.close();\r\n        fixture.detectChanges();\r\n        flush();\r\n      }));\r\n\r\n      it('should start at the specified view', () => {\r\n        testComponent.datepicker.open();\r\n        fixture.detectChanges();\r\n\r\n        const firstCalendarCell = document.querySelector('.mat-calendar-body-cell')!;\r\n\r\n        // When the calendar is in year view, the first cell should be for a month rather than\r\n        // for a date.\r\n        expect(firstCalendarCell.textContent)\r\n            .toBe('2016', 'Expected the calendar to be in multi-year-view');\r\n      });\r\n\r\n      it('should fire yearSelected when user selects calendar year in multiyear view',\r\n        fakeAsync(() => {\r\n          expect(testComponent.onMultiYearSelection).not.toHaveBeenCalled();\r\n\r\n          testComponent.datepicker.open();\r\n          fixture.detectChanges();\r\n\r\n          const cells = document.querySelectorAll('.mat-calendar-body-cell');\r\n\r\n          dispatchMouseEvent(cells[0], 'click');\r\n          fixture.detectChanges();\r\n          flush();\r\n\r\n          expect(testComponent.onMultiYearSelection).toHaveBeenCalled();\r\n        })\r\n      );\r\n    });\r\n\r\n    describe('datepicker with ngModel', () => {\r\n      let fixture: ComponentFixture<DatepickerWithNgModel>;\r\n      let testComponent: DatepickerWithNgModel;\r\n\r\n      beforeEach(fakeAsync(() => {\r\n        fixture = createComponent(DatepickerWithNgModel, [MatNativeDateModule]);\r\n        fixture.detectChanges();\r\n\r\n        fixture.whenStable().then(() => {\r\n          fixture.detectChanges();\r\n\r\n          testComponent = fixture.componentInstance;\r\n        });\r\n      }));\r\n\r\n      afterEach(fakeAsync(() => {\r\n        testComponent.datepicker.close();\r\n        fixture.detectChanges();\r\n      }));\r\n\r\n      it('should update datepicker when model changes', fakeAsync(() => {\r\n        expect(testComponent.datepickerInput.value).toBeNull();\r\n        expect(testComponent.datepicker._selected).toBeNull();\r\n\r\n        let selected = new Date(2017, JAN, 1);\r\n        testComponent.selected = selected;\r\n        fixture.detectChanges();\r\n        flush();\r\n        fixture.detectChanges();\r\n\r\n        expect(testComponent.datepickerInput.value).toEqual(selected);\r\n        expect(testComponent.datepicker._selected).toEqual(selected);\r\n      }));\r\n\r\n      it('should update model when date is selected', fakeAsync(() => {\r\n        expect(testComponent.selected).toBeNull();\r\n        expect(testComponent.datepickerInput.value).toBeNull();\r\n\r\n        let selected = new Date(2017, JAN, 1);\r\n        testComponent.datepicker.select(selected);\r\n        fixture.detectChanges();\r\n        flush();\r\n        fixture.detectChanges();\r\n\r\n        expect(testComponent.selected).toEqual(selected);\r\n        expect(testComponent.datepickerInput.value).toEqual(selected);\r\n      }));\r\n\r\n      it('should mark input dirty after input event', () => {\r\n        let inputEl = fixture.debugElement.query(By.css('input')).nativeElement;\r\n\r\n        expect(inputEl.classList).toContain('ng-pristine');\r\n\r\n        inputEl.value = '2001-01-01';\r\n        dispatchFakeEvent(inputEl, 'input');\r\n        fixture.detectChanges();\r\n\r\n        expect(inputEl.classList).toContain('ng-dirty');\r\n      });\r\n\r\n      it('should mark input dirty after date selected', fakeAsync(() => {\r\n        let inputEl = fixture.debugElement.query(By.css('input')).nativeElement;\r\n\r\n        expect(inputEl.classList).toContain('ng-pristine');\r\n\r\n        testComponent.datepicker.select(new Date(2017, JAN, 1));\r\n        fixture.detectChanges();\r\n        flush();\r\n        fixture.detectChanges();\r\n\r\n        expect(inputEl.classList).toContain('ng-dirty');\r\n      }));\r\n\r\n      it('should not mark dirty after model change', fakeAsync(() => {\r\n        let inputEl = fixture.debugElement.query(By.css('input')).nativeElement;\r\n\r\n        expect(inputEl.classList).toContain('ng-pristine');\r\n\r\n        testComponent.selected = new Date(2017, JAN, 1);\r\n        fixture.detectChanges();\r\n        flush();\r\n        fixture.detectChanges();\r\n\r\n        expect(inputEl.classList).toContain('ng-pristine');\r\n      }));\r\n\r\n      it('should mark input touched on blur', () => {\r\n        let inputEl = fixture.debugElement.query(By.css('input')).nativeElement;\r\n\r\n        expect(inputEl.classList).toContain('ng-untouched');\r\n\r\n        dispatchFakeEvent(inputEl, 'focus');\r\n        fixture.detectChanges();\r\n\r\n        expect(inputEl.classList).toContain('ng-untouched');\r\n\r\n        dispatchFakeEvent(inputEl, 'blur');\r\n        fixture.detectChanges();\r\n\r\n        expect(inputEl.classList).toContain('ng-touched');\r\n      });\r\n\r\n      it('should reformat the input value on blur', () => {\r\n        if (SUPPORTS_INTL) {\r\n          // Skip this test if the internationalization API is not supported in the current\r\n          // browser. Browsers like Safari 9 do not support the \"Intl\" API.\r\n          return;\r\n        }\r\n\r\n        const inputEl = fixture.debugElement.query(By.css('input')).nativeElement;\r\n\r\n        inputEl.value = '2001-01-01';\r\n        dispatchFakeEvent(inputEl, 'input');\r\n        fixture.detectChanges();\r\n\r\n        dispatchFakeEvent(inputEl, 'blur');\r\n        fixture.detectChanges();\r\n\r\n        expect(inputEl.value).toBe('1/1/2001');\r\n      });\r\n\r\n      it('should not reformat invalid dates on blur', () => {\r\n        const inputEl = fixture.debugElement.query(By.css('input')).nativeElement;\r\n\r\n        inputEl.value = 'very-valid-date';\r\n        dispatchFakeEvent(inputEl, 'input');\r\n        fixture.detectChanges();\r\n\r\n        dispatchFakeEvent(inputEl, 'blur');\r\n        fixture.detectChanges();\r\n\r\n        expect(inputEl.value).toBe('very-valid-date');\r\n      });\r\n\r\n      it('should mark input touched on calendar selection', fakeAsync(() => {\r\n        let inputEl = fixture.debugElement.query(By.css('input')).nativeElement;\r\n\r\n        expect(inputEl.classList).toContain('ng-untouched');\r\n\r\n        testComponent.datepicker.select(new Date(2017, JAN, 1));\r\n        fixture.detectChanges();\r\n        flush();\r\n        fixture.detectChanges();\r\n\r\n        expect(inputEl.classList).toContain('ng-touched');\r\n      }));\r\n    });\r\n\r\n    describe('datepicker with formControl', () => {\r\n      let fixture: ComponentFixture<DatepickerWithFormControl>;\r\n      let testComponent: DatepickerWithFormControl;\r\n\r\n      beforeEach(fakeAsync(() => {\r\n        fixture = createComponent(DatepickerWithFormControl, [MatNativeDateModule]);\r\n        fixture.detectChanges();\r\n\r\n        testComponent = fixture.componentInstance;\r\n      }));\r\n\r\n      afterEach(fakeAsync(() => {\r\n        testComponent.datepicker.close();\r\n        fixture.detectChanges();\r\n      }));\r\n\r\n      it('should update datepicker when formControl changes', () => {\r\n        expect(testComponent.datepickerInput.value).toBeNull();\r\n        expect(testComponent.datepicker._selected).toBeNull();\r\n\r\n        let selected = new Date(2017, JAN, 1);\r\n        testComponent.formControl.setValue(selected);\r\n        fixture.detectChanges();\r\n\r\n        expect(testComponent.datepickerInput.value).toEqual(selected);\r\n        expect(testComponent.datepicker._selected).toEqual(selected);\r\n      });\r\n\r\n      it('should update formControl when date is selected', () => {\r\n        expect(testComponent.formControl.value).toBeNull();\r\n        expect(testComponent.datepickerInput.value).toBeNull();\r\n\r\n        let selected = new Date(2017, JAN, 1);\r\n        testComponent.datepicker.select(selected);\r\n        fixture.detectChanges();\r\n\r\n        expect(testComponent.formControl.value).toEqual(selected);\r\n        expect(testComponent.datepickerInput.value).toEqual(selected);\r\n      });\r\n\r\n      it('should disable input when form control disabled', () => {\r\n        let inputEl = fixture.debugElement.query(By.css('input')).nativeElement;\r\n\r\n        expect(inputEl.disabled).toBe(false);\r\n\r\n        testComponent.formControl.disable();\r\n        fixture.detectChanges();\r\n\r\n        expect(inputEl.disabled).toBe(true);\r\n      });\r\n\r\n      it('should disable toggle when form control disabled', () => {\r\n        expect(testComponent.datepickerToggle.disabled).toBe(false);\r\n\r\n        testComponent.formControl.disable();\r\n        fixture.detectChanges();\r\n\r\n        expect(testComponent.datepickerToggle.disabled).toBe(true);\r\n      });\r\n    });\r\n\r\n    describe('datepicker with mat-datepicker-toggle', () => {\r\n      let fixture: ComponentFixture<DatepickerWithToggle>;\r\n      let testComponent: DatepickerWithToggle;\r\n\r\n      beforeEach(fakeAsync(() => {\r\n        fixture = createComponent(DatepickerWithToggle, [MatNativeDateModule]);\r\n        fixture.detectChanges();\r\n\r\n        testComponent = fixture.componentInstance;\r\n      }));\r\n\r\n      afterEach(fakeAsync(() => {\r\n        testComponent.datepicker.close();\r\n        fixture.detectChanges();\r\n        flush();\r\n      }));\r\n\r\n      it('should set `aria-haspopup` on the toggle button', () => {\r\n        const button = fixture.debugElement.query(By.css('button'));\r\n\r\n        expect(button).toBeTruthy();\r\n        expect(button.nativeElement.getAttribute('aria-haspopup')).toBe('true');\r\n      });\r\n\r\n      it('should open calendar when toggle clicked', () => {\r\n        expect(document.querySelector('mat-dialog-container')).toBeNull();\r\n\r\n        let toggle = fixture.debugElement.query(By.css('button'));\r\n        dispatchMouseEvent(toggle.nativeElement, 'click');\r\n        fixture.detectChanges();\r\n\r\n        expect(document.querySelector('mat-dialog-container')).not.toBeNull();\r\n      });\r\n\r\n      it('should not open calendar when toggle clicked if datepicker is disabled', () => {\r\n        testComponent.datepicker.disabled = true;\r\n        fixture.detectChanges();\r\n        const toggle = fixture.debugElement.query(By.css('button')).nativeElement;\r\n\r\n        expect(toggle.hasAttribute('disabled')).toBe(true);\r\n        expect(document.querySelector('mat-dialog-container')).toBeNull();\r\n\r\n        dispatchMouseEvent(toggle, 'click');\r\n        fixture.detectChanges();\r\n\r\n        expect(document.querySelector('mat-dialog-container')).toBeNull();\r\n      });\r\n\r\n      it('should not open calendar when toggle clicked if input is disabled', () => {\r\n        expect(testComponent.datepicker.disabled).toBe(false);\r\n\r\n        testComponent.input.disabled = true;\r\n        fixture.detectChanges();\r\n        const toggle = fixture.debugElement.query(By.css('button')).nativeElement;\r\n\r\n        expect(toggle.hasAttribute('disabled')).toBe(true);\r\n        expect(document.querySelector('mat-dialog-container')).toBeNull();\r\n\r\n        dispatchMouseEvent(toggle, 'click');\r\n        fixture.detectChanges();\r\n\r\n        expect(document.querySelector('mat-dialog-container')).toBeNull();\r\n      });\r\n\r\n      it('should set the `button` type on the trigger to prevent form submissions', () => {\r\n        let toggle = fixture.debugElement.query(By.css('button')).nativeElement;\r\n        expect(toggle.getAttribute('type')).toBe('button');\r\n      });\r\n\r\n      it('should remove the underlying SVG icon from the tab order', () => {\r\n        const icon = fixture.debugElement.nativeElement.querySelector('svg');\r\n        expect(icon.getAttribute('focusable')).toBe('false');\r\n      });\r\n\r\n      it('should restore focus to the toggle after the calendar is closed', () => {\r\n        let toggle = fixture.debugElement.query(By.css('button')).nativeElement;\r\n\r\n        fixture.componentInstance.touchUI = false;\r\n        fixture.detectChanges();\r\n\r\n        toggle.focus();\r\n        expect(document.activeElement).toBe(toggle, 'Expected toggle to be focused.');\r\n\r\n        fixture.componentInstance.datepicker.open();\r\n        fixture.detectChanges();\r\n\r\n        let pane = document.querySelector('.cdk-overlay-pane')!;\r\n\r\n        expect(pane).toBeTruthy('Expected calendar to be open.');\r\n        expect(pane.contains(document.activeElement))\r\n            .toBe(true, 'Expected focus to be inside the calendar.');\r\n\r\n        fixture.componentInstance.datepicker.close();\r\n        fixture.detectChanges();\r\n\r\n        expect(document.activeElement).toBe(toggle, 'Expected focus to be restored to toggle.');\r\n      });\r\n\r\n      it('should re-render when the i18n labels change',\r\n        inject([MatDatepickerIntl], (intl: MatDatepickerIntl) => {\r\n          const toggle = fixture.debugElement.query(By.css('button')).nativeElement;\r\n\r\n          intl.openCalendarLabel = 'Open the calendar, perhaps?';\r\n          intl.changes.next();\r\n          fixture.detectChanges();\r\n\r\n          expect(toggle.getAttribute('aria-label')).toBe('Open the calendar, perhaps?');\r\n        }));\r\n\r\n      it('should toggle the active state of the datepicker toggle', fakeAsync(() => {\r\n        const toggle = fixture.debugElement.query(By.css('mat-datepicker-toggle')).nativeElement;\r\n\r\n        expect(toggle.classList).not.toContain('mat-datepicker-toggle-active');\r\n\r\n        fixture.componentInstance.datepicker.open();\r\n        fixture.detectChanges();\r\n        flush();\r\n\r\n        expect(toggle.classList).toContain('mat-datepicker-toggle-active');\r\n\r\n        fixture.componentInstance.datepicker.close();\r\n        fixture.detectChanges();\r\n        flush();\r\n        fixture.detectChanges();\r\n\r\n        expect(toggle.classList).not.toContain('mat-datepicker-toggle-active');\r\n      }));\r\n    });\r\n\r\n    describe('datepicker with custom mat-datepicker-toggle icon', () => {\r\n      it('should be able to override the mat-datepicker-toggle icon', fakeAsync(() => {\r\n        const fixture = createComponent(DatepickerWithCustomIcon, [MatNativeDateModule]);\r\n        fixture.detectChanges();\r\n\r\n        expect(fixture.nativeElement.querySelector('.mat-datepicker-toggle .custom-icon'))\r\n            .toBeTruthy('Expected custom icon to be rendered.');\r\n\r\n        expect(fixture.nativeElement.querySelector('.mat-datepicker-toggle mat-icon'))\r\n            .toBeFalsy('Expected default icon to be removed.');\r\n      }));\r\n    });\r\n\r\n    describe('datepicker inside mat-form-field', () => {\r\n      let fixture: ComponentFixture<FormFieldDatepicker>;\r\n      let testComponent: FormFieldDatepicker;\r\n\r\n      beforeEach(fakeAsync(() => {\r\n        fixture = createComponent(FormFieldDatepicker, [MatNativeDateModule]);\r\n        fixture.detectChanges();\r\n        testComponent = fixture.componentInstance;\r\n      }));\r\n\r\n      afterEach(fakeAsync(() => {\r\n        testComponent.datepicker.close();\r\n        fixture.detectChanges();\r\n        flush();\r\n      }));\r\n\r\n      it('should float the placeholder when an invalid value is entered', () => {\r\n        testComponent.datepickerInput.value = 'totally-not-a-date' as any;\r\n        fixture.debugElement.nativeElement.querySelector('input').value = 'totally-not-a-date';\r\n        fixture.detectChanges();\r\n\r\n        expect(fixture.debugElement.nativeElement.querySelector('mat-form-field').classList)\r\n          .toContain('mat-form-field-should-float');\r\n      });\r\n\r\n      it('should pass the form field theme color to the overlay', fakeAsync(() => {\r\n        testComponent.formField.color = 'primary';\r\n        testComponent.datepicker.open();\r\n        fixture.detectChanges();\r\n        flush();\r\n\r\n        let contentEl = document.querySelector('.mat-datepicker-content')!;\r\n\r\n        expect(contentEl.classList).toContain('mat-primary');\r\n\r\n        testComponent.datepicker.close();\r\n        fixture.detectChanges();\r\n        flush();\r\n\r\n        testComponent.formField.color = 'warn';\r\n        testComponent.datepicker.open();\r\n\r\n        contentEl = document.querySelector('.mat-datepicker-content')!;\r\n        fixture.detectChanges();\r\n        flush();\r\n\r\n        expect(contentEl.classList).toContain('mat-warn');\r\n        expect(contentEl.classList).not.toContain('mat-primary');\r\n      }));\r\n\r\n      it('should prefer the datepicker color over the form field one', fakeAsync(() => {\r\n        testComponent.datepicker.color = 'accent';\r\n        testComponent.formField.color = 'warn';\r\n        testComponent.datepicker.open();\r\n        fixture.detectChanges();\r\n        flush();\r\n\r\n        const contentEl = document.querySelector('.mat-datepicker-content')!;\r\n\r\n        expect(contentEl.classList).toContain('mat-accent');\r\n        expect(contentEl.classList).not.toContain('mat-warn');\r\n      }));\r\n    });\r\n\r\n    describe('datepicker with min and max dates and validation', () => {\r\n      let fixture: ComponentFixture<DatepickerWithMinAndMaxValidation>;\r\n      let testComponent: DatepickerWithMinAndMaxValidation;\r\n\r\n      beforeEach(fakeAsync(() => {\r\n        fixture = createComponent(DatepickerWithMinAndMaxValidation, [MatNativeDateModule]);\r\n        fixture.detectChanges();\r\n\r\n        testComponent = fixture.componentInstance;\r\n      }));\r\n\r\n      afterEach(fakeAsync(() => {\r\n        testComponent.datepicker.close();\r\n        fixture.detectChanges();\r\n      }));\r\n\r\n      it('should use min and max dates specified by the input', () => {\r\n        expect(testComponent.datepicker._minDate).toEqual(new Date(2010, JAN, 1));\r\n        expect(testComponent.datepicker._maxDate).toEqual(new Date(2020, JAN, 1));\r\n      });\r\n\r\n      it('should mark invalid when value is before min', fakeAsync(() => {\r\n        testComponent.date = new Date(2009, DEC, 31);\r\n        fixture.detectChanges();\r\n        flush();\r\n        fixture.detectChanges();\r\n\r\n        expect(fixture.debugElement.query(By.css('input')).nativeElement.classList)\r\n            .toContain('ng-invalid');\r\n      }));\r\n\r\n      it('should mark invalid when value is after max', fakeAsync(() => {\r\n        testComponent.date = new Date(2020, JAN, 2);\r\n        fixture.detectChanges();\r\n        flush();\r\n\r\n        fixture.detectChanges();\r\n\r\n        expect(fixture.debugElement.query(By.css('input')).nativeElement.classList)\r\n            .toContain('ng-invalid');\r\n      }));\r\n\r\n      it('should not mark invalid when value equals min', fakeAsync(() => {\r\n        testComponent.date = testComponent.datepicker._minDate;\r\n        fixture.detectChanges();\r\n        flush();\r\n        fixture.detectChanges();\r\n\r\n        expect(fixture.debugElement.query(By.css('input')).nativeElement.classList)\r\n            .not.toContain('ng-invalid');\r\n      }));\r\n\r\n      it('should not mark invalid when value equals max', fakeAsync(() => {\r\n        testComponent.date = testComponent.datepicker._maxDate;\r\n        fixture.detectChanges();\r\n        flush();\r\n        fixture.detectChanges();\r\n\r\n        expect(fixture.debugElement.query(By.css('input')).nativeElement.classList)\r\n            .not.toContain('ng-invalid');\r\n      }));\r\n\r\n      it('should not mark invalid when value is between min and max', fakeAsync(() => {\r\n        testComponent.date = new Date(2010, JAN, 2);\r\n        fixture.detectChanges();\r\n        flush();\r\n        fixture.detectChanges();\r\n\r\n        expect(fixture.debugElement.query(By.css('input')).nativeElement.classList)\r\n            .not.toContain('ng-invalid');\r\n      }));\r\n    });\r\n\r\n    describe('datepicker with filter and validation', () => {\r\n      let fixture: ComponentFixture<DatepickerWithFilterAndValidation>;\r\n      let testComponent: DatepickerWithFilterAndValidation;\r\n\r\n      beforeEach(fakeAsync(() => {\r\n        fixture = createComponent(DatepickerWithFilterAndValidation, [MatNativeDateModule]);\r\n        fixture.detectChanges();\r\n\r\n        testComponent = fixture.componentInstance;\r\n      }));\r\n\r\n      afterEach(fakeAsync(() => {\r\n        testComponent.datepicker.close();\r\n        fixture.detectChanges();\r\n        flush();\r\n      }));\r\n\r\n      it('should mark input invalid', fakeAsync(() => {\r\n        testComponent.date = new Date(2017, JAN, 1);\r\n        fixture.detectChanges();\r\n        flush();\r\n        fixture.detectChanges();\r\n\r\n        expect(fixture.debugElement.query(By.css('input')).nativeElement.classList)\r\n            .toContain('ng-invalid');\r\n\r\n        testComponent.date = new Date(2017, JAN, 2);\r\n        fixture.detectChanges();\r\n        flush();\r\n        fixture.detectChanges();\r\n\r\n        expect(fixture.debugElement.query(By.css('input')).nativeElement.classList)\r\n            .not.toContain('ng-invalid');\r\n      }));\r\n\r\n      it('should disable filtered calendar cells', () => {\r\n        fixture.detectChanges();\r\n\r\n        testComponent.datepicker.open();\r\n        fixture.detectChanges();\r\n\r\n        expect(document.querySelector('mat-dialog-container')).not.toBeNull();\r\n\r\n        let cells = document.querySelectorAll('.mat-calendar-body-cell');\r\n        expect(cells[0].classList).toContain('mat-calendar-body-disabled');\r\n        expect(cells[1].classList).not.toContain('mat-calendar-body-disabled');\r\n      });\r\n    });\r\n\r\n    describe('datepicker with change and input events', () => {\r\n      let fixture: ComponentFixture<DatepickerWithChangeAndInputEvents>;\r\n      let testComponent: DatepickerWithChangeAndInputEvents;\r\n      let inputEl: HTMLInputElement;\r\n\r\n      beforeEach(fakeAsync(() => {\r\n        fixture = createComponent(DatepickerWithChangeAndInputEvents, [MatNativeDateModule]);\r\n        fixture.detectChanges();\r\n\r\n        testComponent = fixture.componentInstance;\r\n        inputEl = fixture.debugElement.query(By.css('input')).nativeElement;\r\n\r\n        spyOn(testComponent, 'onChange');\r\n        spyOn(testComponent, 'onInput');\r\n        spyOn(testComponent, 'onDateChange');\r\n        spyOn(testComponent, 'onDateInput');\r\n      }));\r\n\r\n      afterEach(fakeAsync(() => {\r\n        testComponent.datepicker.close();\r\n        fixture.detectChanges();\r\n      }));\r\n\r\n      it('should fire input and dateInput events when user types input', () => {\r\n        expect(testComponent.onChange).not.toHaveBeenCalled();\r\n        expect(testComponent.onDateChange).not.toHaveBeenCalled();\r\n        expect(testComponent.onInput).not.toHaveBeenCalled();\r\n        expect(testComponent.onDateInput).not.toHaveBeenCalled();\r\n\r\n        inputEl.value = '2001-01-01';\r\n        dispatchFakeEvent(inputEl, 'input');\r\n        fixture.detectChanges();\r\n\r\n        expect(testComponent.onChange).not.toHaveBeenCalled();\r\n        expect(testComponent.onDateChange).not.toHaveBeenCalled();\r\n        expect(testComponent.onInput).toHaveBeenCalled();\r\n        expect(testComponent.onDateInput).toHaveBeenCalled();\r\n      });\r\n\r\n      it('should fire change and dateChange events when user commits typed input', () => {\r\n        expect(testComponent.onChange).not.toHaveBeenCalled();\r\n        expect(testComponent.onDateChange).not.toHaveBeenCalled();\r\n        expect(testComponent.onInput).not.toHaveBeenCalled();\r\n        expect(testComponent.onDateInput).not.toHaveBeenCalled();\r\n\r\n        dispatchFakeEvent(inputEl, 'change');\r\n        fixture.detectChanges();\r\n\r\n        expect(testComponent.onChange).toHaveBeenCalled();\r\n        expect(testComponent.onDateChange).toHaveBeenCalled();\r\n        expect(testComponent.onInput).not.toHaveBeenCalled();\r\n        expect(testComponent.onDateInput).not.toHaveBeenCalled();\r\n      });\r\n\r\n      it('should fire dateChange and dateInput events when user selects calendar date',\r\n        fakeAsync(() => {\r\n          expect(testComponent.onChange).not.toHaveBeenCalled();\r\n          expect(testComponent.onDateChange).not.toHaveBeenCalled();\r\n          expect(testComponent.onInput).not.toHaveBeenCalled();\r\n          expect(testComponent.onDateInput).not.toHaveBeenCalled();\r\n\r\n          testComponent.datepicker.open();\r\n          fixture.detectChanges();\r\n\r\n          expect(document.querySelector('mat-dialog-container')).not.toBeNull();\r\n\r\n          const cells = document.querySelectorAll('.mat-calendar-body-cell');\r\n          dispatchMouseEvent(cells[0], 'click');\r\n          fixture.detectChanges();\r\n          flush();\r\n\r\n          expect(testComponent.onChange).not.toHaveBeenCalled();\r\n          expect(testComponent.onDateChange).toHaveBeenCalled();\r\n          expect(testComponent.onInput).not.toHaveBeenCalled();\r\n          expect(testComponent.onDateInput).toHaveBeenCalled();\r\n        })\r\n      );\r\n\r\n      it('should not fire the dateInput event if the value has not changed', () => {\r\n        expect(testComponent.onDateInput).not.toHaveBeenCalled();\r\n\r\n        inputEl.value = '12/12/2012';\r\n        dispatchFakeEvent(inputEl, 'input');\r\n        fixture.detectChanges();\r\n\r\n        expect(testComponent.onDateInput).toHaveBeenCalledTimes(1);\r\n\r\n        dispatchFakeEvent(inputEl, 'input');\r\n        fixture.detectChanges();\r\n\r\n        expect(testComponent.onDateInput).toHaveBeenCalledTimes(1);\r\n      });\r\n\r\n    });\r\n\r\n    describe('with ISO 8601 strings as input', () => {\r\n      let fixture: ComponentFixture<DatepickerWithISOStrings>;\r\n      let testComponent: DatepickerWithISOStrings;\r\n\r\n      beforeEach(fakeAsync(() => {\r\n        fixture = createComponent(DatepickerWithISOStrings, [MatNativeDateModule]);\r\n        testComponent = fixture.componentInstance;\r\n      }));\r\n\r\n      afterEach(fakeAsync(() => {\r\n        testComponent.datepicker.close();\r\n        fixture.detectChanges();\r\n      }));\r\n\r\n      it('should coerce ISO strings', fakeAsync(() => {\r\n        expect(() => fixture.detectChanges()).not.toThrow();\r\n        flush();\r\n        fixture.detectChanges();\r\n\r\n        expect(testComponent.datepicker.startAt).toEqual(new Date(2017, JUL, 1));\r\n        expect(testComponent.datepickerInput.value).toEqual(new Date(2017, JUN, 1));\r\n        expect(testComponent.datepickerInput.min).toEqual(new Date(2017, JAN, 1));\r\n        expect(testComponent.datepickerInput.max).toEqual(new Date(2017, DEC, 31));\r\n      }));\r\n    });\r\n\r\n    describe('with events', () => {\r\n      let fixture: ComponentFixture<DatepickerWithEvents>;\r\n      let testComponent: DatepickerWithEvents;\r\n\r\n      beforeEach(fakeAsync(() => {\r\n        fixture = createComponent(DatepickerWithEvents, [MatNativeDateModule]);\r\n        fixture.detectChanges();\r\n        testComponent = fixture.componentInstance;\r\n      }));\r\n\r\n      it('should dispatch an event when a datepicker is opened', () => {\r\n        testComponent.datepicker.open();\r\n        fixture.detectChanges();\r\n\r\n        expect(testComponent.openedSpy).toHaveBeenCalled();\r\n      });\r\n\r\n      it('should dispatch an event when a datepicker is closed', fakeAsync(() => {\r\n        testComponent.datepicker.open();\r\n        fixture.detectChanges();\r\n\r\n        testComponent.datepicker.close();\r\n        flush();\r\n        fixture.detectChanges();\r\n\r\n        expect(testComponent.closedSpy).toHaveBeenCalled();\r\n      }));\r\n\r\n    });\r\n\r\n    describe('datepicker that opens on focus', () => {\r\n      let fixture: ComponentFixture<DatepickerOpeningOnFocus>;\r\n      let testComponent: DatepickerOpeningOnFocus;\r\n      let input: HTMLInputElement;\r\n\r\n      beforeEach(fakeAsync(() => {\r\n        fixture = createComponent(DatepickerOpeningOnFocus, [MatNativeDateModule]);\r\n        fixture.detectChanges();\r\n        testComponent = fixture.componentInstance;\r\n        input = fixture.debugElement.query(By.css('input')).nativeElement;\r\n      }));\r\n\r\n      it('should not reopen if the browser fires the focus event asynchronously', fakeAsync(() => {\r\n        // Stub out the real focus method so we can call it reliably.\r\n        spyOn(input, 'focus').and.callFake(() => {\r\n          // Dispatch the event handler async to simulate the IE11 behavior.\r\n          Promise.resolve().then(() => dispatchFakeEvent(input, 'focus'));\r\n        });\r\n\r\n        // Open initially by focusing.\r\n        input.focus();\r\n        fixture.detectChanges();\r\n        flush();\r\n\r\n        // Due to some browser limitations we can't install a stub on `document.activeElement`\r\n        // so instead we have to override the previously-focused element manually.\r\n        (fixture.componentInstance.datepicker as any)._focusedElementBeforeOpen = input;\r\n\r\n        // Ensure that the datepicker is actually open.\r\n        expect(testComponent.datepicker.opened).toBe(true, 'Expected datepicker to be open.');\r\n\r\n        // Close the datepicker.\r\n        testComponent.datepicker.close();\r\n        fixture.detectChanges();\r\n\r\n        // Schedule the input to be focused asynchronously.\r\n        input.focus();\r\n        fixture.detectChanges();\r\n\r\n        // Flush out the scheduled tasks.\r\n        flush();\r\n\r\n        expect(testComponent.datepicker.opened).toBe(false, 'Expected datepicker to be closed.');\r\n      }));\r\n    });\r\n\r\n    describe('datepicker directionality', () => {\r\n      it('should pass along the directionality to the popup', () => {\r\n        const fixture = createComponent(StandardDatepicker, [MatNativeDateModule], [{\r\n          provide: Directionality,\r\n          useValue: ({value: 'rtl'})\r\n        }]);\r\n\r\n        fixture.detectChanges();\r\n        fixture.componentInstance.datepicker.open();\r\n        fixture.detectChanges();\r\n\r\n        const overlay = document.querySelector('.cdk-overlay-connected-position-bounding-box')!;\r\n\r\n        expect(overlay.getAttribute('dir')).toBe('rtl');\r\n      });\r\n\r\n      it('should update the popup direction if the directionality value changes', fakeAsync(() => {\r\n        const dirProvider = {value: 'ltr'};\r\n        const fixture = createComponent(StandardDatepicker, [MatNativeDateModule], [{\r\n          provide: Directionality,\r\n          useFactory: () => dirProvider\r\n        }]);\r\n\r\n        fixture.detectChanges();\r\n        fixture.componentInstance.datepicker.open();\r\n        fixture.detectChanges();\r\n\r\n        let overlay = document.querySelector('.cdk-overlay-connected-position-bounding-box')!;\r\n\r\n        expect(overlay.getAttribute('dir')).toBe('ltr');\r\n\r\n        fixture.componentInstance.datepicker.close();\r\n        fixture.detectChanges();\r\n        flush();\r\n\r\n        dirProvider.value = 'rtl';\r\n        fixture.componentInstance.datepicker.open();\r\n        fixture.detectChanges();\r\n\r\n        overlay = document.querySelector('.cdk-overlay-connected-position-bounding-box')!;\r\n\r\n        expect(overlay.getAttribute('dir')).toBe('rtl');\r\n      }));\r\n\r\n      it('should pass along the directionality to the dialog in touch mode', () => {\r\n        const fixture = createComponent(StandardDatepicker, [MatNativeDateModule], [{\r\n          provide: Directionality,\r\n          useValue: ({value: 'rtl'})\r\n        }]);\r\n\r\n        fixture.componentInstance.touch = true;\r\n        fixture.detectChanges();\r\n        fixture.componentInstance.datepicker.open();\r\n        fixture.detectChanges();\r\n\r\n        const overlay = document.querySelector('.cdk-global-overlay-wrapper')!;\r\n\r\n        expect(overlay.getAttribute('dir')).toBe('rtl');\r\n      });\r\n\r\n    });\r\n\r\n  });\r\n\r\n  describe('with missing DateAdapter and MAT_DATE_FORMATS', () => {\r\n    it('should throw when created', () => {\r\n      expect(() => createComponent(StandardDatepicker))\r\n        .toThrowError(/MatDatepicker: No provider found for .*/);\r\n    });\r\n  });\r\n\r\n  describe('popup positioning', () => {\r\n    let fixture: ComponentFixture<StandardDatepicker>;\r\n    let testComponent: StandardDatepicker;\r\n    let input: HTMLElement;\r\n\r\n    beforeEach(fakeAsync(() => {\r\n      fixture = createComponent(StandardDatepicker, [MatNativeDateModule]);\r\n      fixture.detectChanges();\r\n      testComponent = fixture.componentInstance;\r\n      input = fixture.debugElement.query(By.css('input')).nativeElement;\r\n      input.style.position = 'fixed';\r\n    }));\r\n\r\n    it('should be below and to the right when there is plenty of space', () => {\r\n      input.style.top = input.style.left = '20px';\r\n      testComponent.datepicker.open();\r\n      fixture.detectChanges();\r\n\r\n      const overlayRect = document.querySelector('.cdk-overlay-pane')!.getBoundingClientRect();\r\n      const inputRect = input.getBoundingClientRect();\r\n\r\n      expect(Math.floor(overlayRect.top))\r\n          .toBe(Math.floor(inputRect.bottom), 'Expected popup to align to input bottom.');\r\n      expect(Math.floor(overlayRect.left))\r\n          .toBe(Math.floor(inputRect.left), 'Expected popup to align to input left.');\r\n    });\r\n\r\n    it('should be above and to the right when there is no space below', () => {\r\n      input.style.bottom = input.style.left = '20px';\r\n      testComponent.datepicker.open();\r\n      fixture.detectChanges();\r\n\r\n      const overlayRect = document.querySelector('.cdk-overlay-pane')!.getBoundingClientRect();\r\n      const inputRect = input.getBoundingClientRect();\r\n\r\n      expect(Math.floor(overlayRect.bottom))\r\n          .toBe(Math.floor(inputRect.top), 'Expected popup to align to input top.');\r\n      expect(Math.floor(overlayRect.left))\r\n          .toBe(Math.floor(inputRect.left), 'Expected popup to align to input left.');\r\n    });\r\n\r\n    it('should be below and to the left when there is no space on the right', () => {\r\n      input.style.top = input.style.right = '20px';\r\n      testComponent.datepicker.open();\r\n      fixture.detectChanges();\r\n\r\n      const overlayRect = document.querySelector('.cdk-overlay-pane')!.getBoundingClientRect();\r\n      const inputRect = input.getBoundingClientRect();\r\n\r\n      expect(Math.floor(overlayRect.top))\r\n          .toBe(Math.floor(inputRect.bottom), 'Expected popup to align to input bottom.');\r\n      expect(Math.floor(overlayRect.right))\r\n          .toBe(Math.floor(inputRect.right), 'Expected popup to align to input right.');\r\n    });\r\n\r\n    it('should be above and to the left when there is no space on the bottom', () => {\r\n      input.style.bottom = input.style.right = '20px';\r\n      testComponent.datepicker.open();\r\n      fixture.detectChanges();\r\n\r\n      const overlayRect = document.querySelector('.cdk-overlay-pane')!.getBoundingClientRect();\r\n      const inputRect = input.getBoundingClientRect();\r\n\r\n      expect(Math.floor(overlayRect.bottom))\r\n          .toBe(Math.floor(inputRect.top), 'Expected popup to align to input top.');\r\n      expect(Math.floor(overlayRect.right))\r\n          .toBe(Math.floor(inputRect.right), 'Expected popup to align to input right.');\r\n    });\r\n\r\n  });\r\n\r\n  describe('internationalization', () => {\r\n    let fixture: ComponentFixture<DatepickerWithi18n>;\r\n    let testComponent: DatepickerWithi18n;\r\n    let input: HTMLInputElement;\r\n\r\n    beforeEach(fakeAsync(() => {\r\n      fixture = createComponent(DatepickerWithi18n, [MatNativeDateModule, NativeDateModule],\r\n        [{provide: MAT_DATE_LOCALE, useValue: 'de-DE'}]);\r\n      fixture.detectChanges();\r\n      testComponent = fixture.componentInstance;\r\n      input = fixture.nativeElement.querySelector('input') as HTMLInputElement;\r\n    }));\r\n\r\n    it('should have the correct input value even when inverted date format', fakeAsync(() => {\r\n      if (typeof Intl === 'undefined') {\r\n        // Skip this test if the internationalization API is not supported in the current\r\n        // browser. Browsers like Safari 9 do not support the \"Intl\" API.\r\n        return;\r\n      }\r\n\r\n      const selected = new Date(2017, SEP, 1);\r\n      testComponent.date = selected;\r\n      fixture.detectChanges();\r\n      flush();\r\n      fixture.detectChanges();\r\n\r\n      // Normally the proper date format would 01.09.2017, but some browsers seem format the\r\n      // date without the leading zero. (e.g. 1.9.2017).\r\n      expect(input.value).toMatch(/0?1\\.0?9\\.2017/);\r\n      expect(testComponent.datepickerInput.value).toBe(selected);\r\n    }));\r\n  });\r\n\r\n  describe('datepicker with custom header', () => {\r\n    let fixture: ComponentFixture<DatepickerWithCustomHeader>;\r\n    let testComponent: DatepickerWithCustomHeader;\r\n\r\n    beforeEach(fakeAsync(() => {\r\n      fixture = createComponent(\r\n        DatepickerWithCustomHeader,\r\n        [MatNativeDateModule],\r\n        [],\r\n        [CustomHeaderForDatepicker]\r\n      );\r\n      fixture.detectChanges();\r\n      testComponent = fixture.componentInstance;\r\n    }));\r\n\r\n    it('should instantiate a datepicker with a custom header', fakeAsync(() => {\r\n      expect(testComponent).toBeTruthy();\r\n    }));\r\n\r\n    it('should find the standard header element', fakeAsync(() => {\r\n      testComponent.datepicker.open();\r\n      fixture.detectChanges();\r\n      flush();\r\n      fixture.detectChanges();\r\n\r\n      expect(document.querySelector('mat-calendar-header')).toBeTruthy();\r\n    }));\r\n  });\r\n});\r\n\r\n\r\n@Component({\r\n  template: `\r\n    <input [matDatepicker]=\"d\" [value]=\"date\">\r\n    <mat-datepicker #d [touchUi]=\"touch\" [disabled]=\"disabled\" [opened]=\"opened\"></mat-datepicker>\r\n  `,\r\n})\r\nclass StandardDatepicker {\r\n  opened = false;\r\n  touch = false;\r\n  disabled = false;\r\n  date: Date | null = new Date(2020, JAN, 1);\r\n  @ViewChild('d') datepicker: MatDatepicker<Date>;\r\n  @ViewChild(MatDatepickerInput) datepickerInput: MatDatepickerInput<Date>;\r\n}\r\n\r\n\r\n@Component({\r\n  template: `\r\n    <input [matDatepicker]=\"d\"><input [matDatepicker]=\"d\"><mat-datepicker #d></mat-datepicker>\r\n  `,\r\n})\r\nclass MultiInputDatepicker {}\r\n\r\n\r\n@Component({\r\n  template: `<mat-datepicker #d></mat-datepicker>`,\r\n})\r\nclass NoInputDatepicker {\r\n  @ViewChild('d') datepicker: MatDatepicker<Date>;\r\n}\r\n\r\n\r\n@Component({\r\n  template: `\r\n    <input [matDatepicker]=\"d\" [value]=\"date\">\r\n    <mat-datepicker #d [startAt]=\"startDate\"></mat-datepicker>\r\n  `,\r\n})\r\nclass DatepickerWithStartAt {\r\n  date = new Date(2020, JAN, 1);\r\n  startDate = new Date(2010, JAN, 1);\r\n  @ViewChild('d') datepicker: MatDatepicker<Date>;\r\n}\r\n\r\n\r\n@Component({\r\n  template: `\r\n    <input [matDatepicker]=\"d\" [value]=\"date\">\r\n    <mat-datepicker #d startView=\"year\" (monthSelected)=\"onYearSelection()\"></mat-datepicker>\r\n  `,\r\n})\r\nclass DatepickerWithStartViewYear {\r\n  date = new Date(2020, JAN, 1);\r\n  @ViewChild('d') datepicker: MatDatepicker<Date>;\r\n\r\n  onYearSelection() {}\r\n}\r\n\r\n\r\n@Component({\r\n  template: `\r\n    <input [matDatepicker]=\"d\" [value]=\"date\">\r\n    <mat-datepicker #d startView=\"multi-year\"\r\n        (yearSelected)=\"onMultiYearSelection()\"></mat-datepicker>\r\n  `,\r\n})\r\nclass DatepickerWithStartViewMultiYear {\r\n  date = new Date(2020, JAN, 1);\r\n  @ViewChild('d') datepicker: MatDatepicker<Date>;\r\n\r\n  onMultiYearSelection() {}\r\n}\r\n\r\n\r\n@Component({\r\n  template: `\r\n    <input [(ngModel)]=\"selected\" [matDatepicker]=\"d\">\r\n    <mat-datepicker #d></mat-datepicker>\r\n  `,\r\n})\r\nclass DatepickerWithNgModel {\r\n  selected: Date | null = null;\r\n  @ViewChild('d') datepicker: MatDatepicker<Date>;\r\n  @ViewChild(MatDatepickerInput) datepickerInput: MatDatepickerInput<Date>;\r\n}\r\n\r\n\r\n@Component({\r\n  template: `\r\n    <input [formControl]=\"formControl\" [matDatepicker]=\"d\">\r\n    <mat-datepicker-toggle [for]=\"d\"></mat-datepicker-toggle>\r\n    <mat-datepicker #d></mat-datepicker>\r\n  `,\r\n})\r\nclass DatepickerWithFormControl {\r\n  formControl = new FormControl();\r\n  @ViewChild('d') datepicker: MatDatepicker<Date>;\r\n  @ViewChild(MatDatepickerInput) datepickerInput: MatDatepickerInput<Date>;\r\n  @ViewChild(MatDatepickerToggle) datepickerToggle: MatDatepickerToggle<Date>;\r\n}\r\n\r\n\r\n@Component({\r\n  template: `\r\n    <input [matDatepicker]=\"d\">\r\n    <mat-datepicker-toggle [for]=\"d\"></mat-datepicker-toggle>\r\n    <mat-datepicker #d [touchUi]=\"touchUI\"></mat-datepicker>\r\n  `,\r\n})\r\nclass DatepickerWithToggle {\r\n  @ViewChild('d') datepicker: MatDatepicker<Date>;\r\n  @ViewChild(MatDatepickerInput) input: MatDatepickerInput<Date>;\r\n  touchUI = true;\r\n}\r\n\r\n\r\n@Component({\r\n  template: `\r\n    <input [matDatepicker]=\"d\">\r\n    <mat-datepicker-toggle [for]=\"d\">\r\n      <div class=\"custom-icon\" matDatepickerToggleIcon></div>\r\n    </mat-datepicker-toggle>\r\n    <mat-datepicker #d></mat-datepicker>\r\n  `,\r\n})\r\nclass DatepickerWithCustomIcon {}\r\n\r\n\r\n@Component({\r\n  template: `\r\n      <mat-form-field>\r\n        <input matInput [matDatepicker]=\"d\">\r\n        <mat-datepicker #d></mat-datepicker>\r\n      </mat-form-field>\r\n  `,\r\n})\r\nclass FormFieldDatepicker {\r\n  @ViewChild('d') datepicker: MatDatepicker<Date>;\r\n  @ViewChild(MatDatepickerInput) datepickerInput: MatDatepickerInput<Date>;\r\n  @ViewChild(MatFormField) formField: MatFormField;\r\n}\r\n\r\n\r\n@Component({\r\n  template: `\r\n    <input [matDatepicker]=\"d\" [(ngModel)]=\"date\" [min]=\"minDate\" [max]=\"maxDate\">\r\n    <mat-datepicker-toggle [for]=\"d\"></mat-datepicker-toggle>\r\n    <mat-datepicker #d></mat-datepicker>\r\n  `,\r\n})\r\nclass DatepickerWithMinAndMaxValidation {\r\n  @ViewChild('d') datepicker: MatDatepicker<Date>;\r\n  date: Date | null;\r\n  minDate = new Date(2010, JAN, 1);\r\n  maxDate = new Date(2020, JAN, 1);\r\n}\r\n\r\n\r\n@Component({\r\n  template: `\r\n    <input [matDatepicker]=\"d\" [(ngModel)]=\"date\" [matDatepickerFilter]=\"filter\">\r\n    <mat-datepicker-toggle [for]=\"d\"></mat-datepicker-toggle>\r\n    <mat-datepicker #d [touchUi]=\"true\"></mat-datepicker>\r\n  `,\r\n})\r\nclass DatepickerWithFilterAndValidation {\r\n  @ViewChild('d') datepicker: MatDatepicker<Date>;\r\n  date: Date;\r\n  filter = (date: Date) => date.getDate() != 1;\r\n}\r\n\r\n\r\n@Component({\r\n  template: `\r\n    <input [matDatepicker]=\"d\" (change)=\"onChange()\" (input)=\"onInput()\"\r\n           (dateChange)=\"onDateChange()\" (dateInput)=\"onDateInput()\">\r\n    <mat-datepicker #d [touchUi]=\"true\"></mat-datepicker>\r\n  `\r\n})\r\nclass DatepickerWithChangeAndInputEvents {\r\n  @ViewChild('d') datepicker: MatDatepicker<Date>;\r\n\r\n  onChange() {}\r\n\r\n  onInput() {}\r\n\r\n  onDateChange() {}\r\n\r\n  onDateInput() {}\r\n}\r\n\r\n\r\n@Component({\r\n  template: `\r\n    <input [matDatepicker]=\"d\" [(ngModel)]=\"date\">\r\n    <mat-datepicker #d></mat-datepicker>\r\n  `\r\n})\r\nclass DatepickerWithi18n {\r\n  date: Date | null = new Date(2010, JAN, 1);\r\n  @ViewChild('d') datepicker: MatDatepicker<Date>;\r\n  @ViewChild(MatDatepickerInput) datepickerInput: MatDatepickerInput<Date>;\r\n}\r\n\r\n\r\n@Component({\r\n  template: `\r\n    <input [matDatepicker]=\"d\" [(ngModel)]=\"value\" [min]=\"min\" [max]=\"max\">\r\n    <mat-datepicker #d [startAt]=\"startAt\"></mat-datepicker>\r\n  `\r\n})\r\nclass DatepickerWithISOStrings {\r\n  value = new Date(2017, JUN, 1).toISOString();\r\n  min = new Date(2017, JAN, 1).toISOString();\r\n  max = new Date (2017, DEC, 31).toISOString();\r\n  startAt = new Date(2017, JUL, 1).toISOString();\r\n  @ViewChild('d') datepicker: MatDatepicker<Date>;\r\n  @ViewChild(MatDatepickerInput) datepickerInput: MatDatepickerInput<Date>;\r\n}\r\n\r\n\r\n@Component({\r\n  template: `\r\n    <input [(ngModel)]=\"selected\" [matDatepicker]=\"d\">\r\n    <mat-datepicker (opened)=\"openedSpy()\" (closed)=\"closedSpy()\" #d></mat-datepicker>\r\n  `,\r\n})\r\nclass DatepickerWithEvents {\r\n  selected: Date | null = null;\r\n  openedSpy = jasmine.createSpy('opened spy');\r\n  closedSpy = jasmine.createSpy('closed spy');\r\n  @ViewChild('d') datepicker: MatDatepicker<Date>;\r\n}\r\n\r\n\r\n@Component({\r\n  template: `\r\n    <input (focus)=\"d.open()\" [matDatepicker]=\"d\">\r\n    <mat-datepicker #d=\"matDatepicker\"></mat-datepicker>\r\n  `,\r\n})\r\nclass DatepickerOpeningOnFocus {\r\n  @ViewChild(MatDatepicker) datepicker: MatDatepicker<Date>;\r\n}\r\n\r\n\r\n@Component({\r\n  template: `\r\n    <input [matDatepicker]=\"ch\">\r\n    <mat-datepicker #ch [calendarHeaderComponent]=\"CustomHeaderForDatepicker\"></mat-datepicker>\r\n  `,\r\n})\r\nclass DatepickerWithCustomHeader {\r\n  @ViewChild('ch') datepicker: MatDatepicker<Date>;\r\n}\r\n\r\n@Component({\r\n  template: `\r\n    <div>Custom element</div>\r\n    <mat-calendar-header></mat-calendar-header>\r\n  `,\r\n})\r\nclass CustomHeaderForDatepicker {}\r\n\r\n\r\n\r\n@Component({\r\n  template: `\r\n    <input [matDatepicker]=\"assignedDatepicker\" [value]=\"date\">\r\n    <mat-datepicker #d [touchUi]=\"touch\"></mat-datepicker>\r\n  `,\r\n})\r\nclass DelayedDatepicker {\r\n  @ViewChild('d') datepicker: MatDatepicker<Date>;\r\n  @ViewChild(MatDatepickerInput) datepickerInput: MatDatepickerInput<Date>;\r\n  date: Date | null;\r\n  assignedDatepicker: MatDatepicker<Date>;\r\n}\r\n"]}