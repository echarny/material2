{"version":3,"file":"calendar-header.spec.js","sourceRoot":"","sources":["../../../../src/lib/datepicker/calendar-header.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import {Direction, Directionality} from '@angular/cdk/bidi';\r\nimport {MatDatepickerModule} from './datepicker-module';\r\nimport {async, ComponentFixture, TestBed} from '@angular/core/testing';\r\nimport {MatDatepickerIntl} from './datepicker-intl';\r\nimport {DEC, FEB, JAN, MatNativeDateModule} from '@angular/material/core';\r\nimport {Component} from '@angular/core';\r\nimport {MatCalendar} from './calendar';\r\nimport {By} from '@angular/platform-browser';\r\nimport {yearsPerPage} from './multi-year-view';\r\n\r\ndescribe('MatCalendarHeader', () => {\r\n  let dir: { value: Direction };\r\n\r\n  beforeEach(async(() => {\r\n    TestBed.configureTestingModule({\r\n      imports: [\r\n        MatNativeDateModule,\r\n        MatDatepickerModule,\r\n      ],\r\n      declarations: [\r\n        // Test components.\r\n        StandardCalendar,\r\n      ],\r\n      providers: [\r\n        MatDatepickerIntl,\r\n        {provide: Directionality, useFactory: () => dir = {value: 'ltr'}}\r\n      ],\r\n    });\r\n\r\n    TestBed.compileComponents();\r\n  }));\r\n\r\n  describe('standard calendar', () => {\r\n    let fixture: ComponentFixture<StandardCalendar>;\r\n    let testComponent: StandardCalendar;\r\n    let calendarElement: HTMLElement;\r\n    let periodButton: HTMLElement;\r\n    let prevButton: HTMLElement;\r\n    let nextButton: HTMLElement;\r\n    let calendarInstance: MatCalendar<Date>;\r\n\r\n    beforeEach(() => {\r\n      fixture = TestBed.createComponent(StandardCalendar);\r\n      fixture.detectChanges();\r\n\r\n      let calendarDebugElement = fixture.debugElement.query(By.directive(MatCalendar));\r\n      calendarElement = calendarDebugElement.nativeElement;\r\n      periodButton = calendarElement.querySelector('.mat-calendar-period-button') as HTMLElement;\r\n      prevButton = calendarElement.querySelector('.mat-calendar-previous-button') as HTMLElement;\r\n      nextButton = calendarElement.querySelector('.mat-calendar-next-button') as HTMLElement;\r\n\r\n      calendarInstance = calendarDebugElement.componentInstance;\r\n      testComponent = fixture.componentInstance;\r\n    });\r\n\r\n    it('should be in month view with specified month active', () => {\r\n      expect(calendarInstance.currentView).toBe('month');\r\n      expect(calendarInstance.activeDate).toEqual(new Date(2017, JAN, 31));\r\n    });\r\n\r\n    it('should toggle view when period clicked', () => {\r\n      expect(calendarInstance.currentView).toBe('month');\r\n\r\n      periodButton.click();\r\n      fixture.detectChanges();\r\n\r\n      expect(calendarInstance.currentView).toBe('multi-year');\r\n\r\n      periodButton.click();\r\n      fixture.detectChanges();\r\n\r\n      expect(calendarInstance.currentView).toBe('month');\r\n    });\r\n\r\n    it('should go to next and previous month', () => {\r\n      expect(calendarInstance.activeDate).toEqual(new Date(2017, JAN, 31));\r\n\r\n      nextButton.click();\r\n      fixture.detectChanges();\r\n\r\n      expect(calendarInstance.activeDate).toEqual(new Date(2017, FEB, 28));\r\n\r\n      prevButton.click();\r\n      fixture.detectChanges();\r\n\r\n      expect(calendarInstance.activeDate).toEqual(new Date(2017, JAN, 28));\r\n    });\r\n\r\n    it('should go to previous and next year', () => {\r\n      periodButton.click();\r\n      fixture.detectChanges();\r\n\r\n      expect(calendarInstance.currentView).toBe('multi-year');\r\n      expect(calendarInstance.activeDate).toEqual(new Date(2017, JAN, 31));\r\n\r\n      (calendarElement.querySelector('.mat-calendar-body-active') as HTMLElement).click();\r\n      fixture.detectChanges();\r\n\r\n      expect(calendarInstance.currentView).toBe('year');\r\n\r\n      nextButton.click();\r\n      fixture.detectChanges();\r\n\r\n      expect(calendarInstance.activeDate).toEqual(new Date(2018, JAN, 31));\r\n\r\n      prevButton.click();\r\n      fixture.detectChanges();\r\n\r\n      expect(calendarInstance.activeDate).toEqual(new Date(2017, JAN, 31));\r\n    });\r\n\r\n    it('should go to previous and next multi-year range', () => {\r\n      periodButton.click();\r\n      fixture.detectChanges();\r\n\r\n      expect(calendarInstance.currentView).toBe('multi-year');\r\n      expect(calendarInstance.activeDate).toEqual(new Date(2017, JAN, 31));\r\n\r\n      nextButton.click();\r\n      fixture.detectChanges();\r\n\r\n      expect(calendarInstance.activeDate).toEqual(new Date(2017 + yearsPerPage, JAN, 31));\r\n\r\n      prevButton.click();\r\n      fixture.detectChanges();\r\n\r\n      expect(calendarInstance.activeDate).toEqual(new Date(2017, JAN, 31));\r\n    });\r\n\r\n    it('should go back to month view after selecting year and month', () => {\r\n      periodButton.click();\r\n      fixture.detectChanges();\r\n\r\n      expect(calendarInstance.currentView).toBe('multi-year');\r\n      expect(calendarInstance.activeDate).toEqual(new Date(2017, JAN, 31));\r\n\r\n      let yearCells = calendarElement.querySelectorAll('.mat-calendar-body-cell');\r\n      (yearCells[0] as HTMLElement).click();\r\n      fixture.detectChanges();\r\n\r\n      expect(calendarInstance.currentView).toBe('year');\r\n      expect(calendarInstance.activeDate).toEqual(new Date(2016, JAN, 31));\r\n\r\n      let monthCells = calendarElement.querySelectorAll('.mat-calendar-body-cell');\r\n      (monthCells[monthCells.length - 1] as HTMLElement).click();\r\n      fixture.detectChanges();\r\n\r\n      expect(calendarInstance.currentView).toBe('month');\r\n      expect(calendarInstance.activeDate).toEqual(new Date(2016, DEC, 31));\r\n      expect(testComponent.selected).toBeFalsy('no date should be selected yet');\r\n    });\r\n\r\n  });\r\n});\r\n\r\n@Component({\r\n  template: `\r\n    <mat-calendar\r\n        [startAt]=\"startDate\"\r\n        [(selected)]=\"selected\"\r\n        (yearSelected)=\"selectedYear=$event\"\r\n        (monthSelected)=\"selectedMonth=$event\">\r\n    </mat-calendar>`\r\n})\r\nclass StandardCalendar {\r\n  selected: Date;\r\n  selectedYear: Date;\r\n  selectedMonth: Date;\r\n  startDate = new Date(2017, JAN, 31);\r\n}\r\n"]}