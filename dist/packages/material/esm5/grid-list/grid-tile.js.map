{"version":3,"file":"grid-tile.js","sourceRoot":"","sources":["../../../../../src/lib/grid-list/grid-tile.ts"],"names":[],"mappings":";;;;;;;;;;;AAQA,OAAO,EACL,SAAS,EACT,iBAAiB,EACjB,UAAU,EACV,KAAK,EACL,eAAe,EACf,SAAS,EAET,SAAS,EACT,uBAAuB,GACxB,MAAM,eAAe,CAAC;AACvB,OAAO,EAAC,OAAO,EAAE,aAAa,EAAC,MAAM,wBAAwB,CAAC;AAC9D,OAAO,EAAC,cAAc,EAAC,MAAM,qBAAqB,CAAC;;IAkBjD,qBAAoB,QAAoB;QAApB,aAAQ,GAAR,QAAQ,CAAY;wBAHrB,CAAC;wBACD,CAAC;KAEwB;0BAIxC,gCAAO;;;;;sBAAa,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;;;;;QAC7C,UAAY,KAAa,IAAI,IAAI,CAAC,QAAQ,GAAG,cAAc,CAAC,KAAK,CAAC,CAAC,EAAE;;;;0BAIjE,gCAAO;;;;;sBAAa,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;;;;;QAC7C,UAAY,KAAa,IAAI,IAAI,CAAC,QAAQ,GAAG,cAAc,CAAC,KAAK,CAAC,CAAC,EAAE;;;;IAErE;;;OAGG;;;;;;;;IACH,+BAAS;;;;;;;IAAT,UAAU,QAAgB,EAAE,KAAU;QACpC,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,KAAK,CAAC;KACrD;;gBAlCF,SAAS,SAAC;oBACT,QAAQ,EAAE,MAAM,CAAC,EAAE;oBACnB,QAAQ,EAAE,eAAe;oBACzB,QAAQ,EAAE,aAAa;oBACvB,IAAI,EAAE;wBACJ,OAAO,EAAE,eAAe;qBACzB;oBACD,WAAW,EAAE,gBAAgB;oBAC7B,SAAS,EAAE,CAAC,eAAe,CAAC;oBAC5B,aAAa,EAAE,iBAAiB,CAAC,IAAI;oBACrC,eAAe,EAAE,uBAAuB,CAAC,MAAM;iBAChD;;;;gBAtBC,UAAU;;;4BA8BT,KAAK;4BAKL,KAAK;;sBA9CR;;SAkCa,WAAW;;;;;;;;;;;;;;;;;;;IAwCtB,yBAAoB,QAAoB;QAApB,aAAQ,GAAR,QAAQ,CAAY;KAAI;;;;IAE5C,4CAAkB;;;IAAlB;QACE,IAAI,CAAC,WAAW,GAAG,IAAI,aAAa,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;KAClE;;gBAnBF,SAAS,SAAC;oBACT,QAAQ,EAAE,MAAM,CAAC,EAAE;oBACnB,QAAQ,EAAE,4CAA4C;oBACtD,WAAW,EAAE,qBAAqB;oBAClC,eAAe,EAAE,uBAAuB,CAAC,MAAM;oBAC/C,aAAa,EAAE,iBAAiB,CAAC,IAAI;iBACtC;;;;gBAtDC,UAAU;;;2BA6DT,eAAe,SAAC,OAAO;;0BAxE1B;;SAkEa,eAAe;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;gBAmB3B,SAAS,SAAC;oBACT,QAAQ,EAAE,oCAAoC;oBAC9C,IAAI,EAAE,EAAC,OAAO,EAAE,iBAAiB,EAAC;iBACnC;;oCAxFD;;SAyFa,yBAAyB;;;;;;;;;;;;;;;;;;gBAMrC,SAAS,SAAC;oBACT,QAAQ,EAAE,sBAAsB;oBAChC,IAAI,EAAE,EAAC,OAAO,EAAE,sBAAsB,EAAC;iBACxC;;wCAlGD;;SAmGa,6BAA6B;;;;;;;;;;;;;;;;;;gBAMzC,SAAS,SAAC;oBACT,QAAQ,EAAE,sBAAsB;oBAChC,IAAI,EAAE,EAAC,OAAO,EAAE,sBAAsB,EAAC;iBACxC;;wCA5GD;;SA6Ga,6BAA6B","sourcesContent":["/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {\r\n  Component,\r\n  ViewEncapsulation,\r\n  ElementRef,\r\n  Input,\r\n  ContentChildren,\r\n  QueryList,\r\n  AfterContentInit,\r\n  Directive,\r\n  ChangeDetectionStrategy,\r\n} from '@angular/core';\r\nimport {MatLine, MatLineSetter} from '@angular/material/core';\r\nimport {coerceToNumber} from './grid-list-measure';\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'mat-grid-tile',\r\n  exportAs: 'matGridTile',\r\n  host: {\r\n    'class': 'mat-grid-tile',\r\n  },\r\n  templateUrl: 'grid-tile.html',\r\n  styleUrls: ['grid-list.css'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MatGridTile {\r\n  _rowspan: number = 1;\r\n  _colspan: number = 1;\r\n\r\n  constructor(private _element: ElementRef) {}\r\n\r\n  /** Amount of rows that the grid tile takes up. */\r\n  @Input()\r\n  get rowspan(): number { return this._rowspan; }\r\n  set rowspan(value: number) { this._rowspan = coerceToNumber(value); }\r\n\r\n  /** Amount of columns that the grid tile takes up. */\r\n  @Input()\r\n  get colspan(): number { return this._colspan; }\r\n  set colspan(value: number) { this._colspan = coerceToNumber(value); }\r\n\r\n  /**\r\n   * Sets the style of the grid-tile element.  Needs to be set manually to avoid\r\n   * \"Changed after checked\" errors that would occur with HostBinding.\r\n   */\r\n  _setStyle(property: string, value: any): void {\r\n    this._element.nativeElement.style[property] = value;\r\n  }\r\n}\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'mat-grid-tile-header, mat-grid-tile-footer',\r\n  templateUrl: 'grid-tile-text.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class MatGridTileText implements AfterContentInit {\r\n  /**\r\n   *  Helper that watches the number of lines in a text area and sets\r\n   * a class on the host element that matches the line count.\r\n   */\r\n  _lineSetter: MatLineSetter;\r\n  @ContentChildren(MatLine) _lines: QueryList<MatLine>;\r\n\r\n  constructor(private _element: ElementRef) {}\r\n\r\n  ngAfterContentInit() {\r\n    this._lineSetter = new MatLineSetter(this._lines, this._element);\r\n  }\r\n}\r\n\r\n/**\r\n * Directive whose purpose is to add the mat- CSS styling to this selector.\r\n * @docs-private\r\n */\r\n@Directive({\r\n  selector: '[mat-grid-avatar], [matGridAvatar]',\r\n  host: {'class': 'mat-grid-avatar'}\r\n})\r\nexport class MatGridAvatarCssMatStyler {}\r\n\r\n/**\r\n * Directive whose purpose is to add the mat- CSS styling to this selector.\r\n * @docs-private\r\n */\r\n@Directive({\r\n  selector: 'mat-grid-tile-header',\r\n  host: {'class': 'mat-grid-tile-header'}\r\n})\r\nexport class MatGridTileHeaderCssMatStyler {}\r\n\r\n/**\r\n * Directive whose purpose is to add the mat- CSS styling to this selector.\r\n * @docs-private\r\n */\r\n@Directive({\r\n  selector: 'mat-grid-tile-footer',\r\n  host: {'class': 'mat-grid-tile-footer'}\r\n})\r\nexport class MatGridTileFooterCssMatStyler {}\r\n"]}