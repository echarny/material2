{"version":3,"file":"node.js","sourceRoot":"","sources":["../../../../../src/lib/tree/node.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {\r\n  CdkNestedTreeNode,\r\n  CdkTree,\r\n  CdkTreeNode,\r\n  CdkTreeNodeDef,\r\n} from '@angular/cdk/tree';\r\nimport {\r\n  AfterContentInit,\r\n  Attribute,\r\n  ContentChildren,\r\n  Directive,\r\n  ElementRef,\r\n  Input,\r\n  IterableDiffers,\r\n  OnDestroy,\r\n  QueryList,\r\n  TemplateRef,\r\n} from '@angular/core';\r\nimport {CanDisable, HasTabIndex, mixinDisabled, mixinTabIndex} from '@angular/material/core';\r\nimport {MatTreeNodeOutlet} from './outlet';\r\n\r\n\r\nexport const _MatTreeNodeMixinBase = mixinTabIndex(mixinDisabled(CdkTreeNode));\r\nexport const _MatNestedTreeNodeMixinBase = mixinTabIndex(mixinDisabled(CdkNestedTreeNode));\r\n\r\n/**\r\n * Wrapper for the CdkTree node with Material design styles.\r\n */\r\n@Directive({\r\n  selector: 'mat-tree-node',\r\n  exportAs: 'matTreeNode',\r\n  inputs: ['disabled', 'tabIndex'],\r\n  host: {\r\n    '[attr.aria-expanded]': 'isExpanded',\r\n    '[attr.aria-level]': 'role === \"treeitem\" ? level : null',\r\n    '[attr.role]': 'role',\r\n    'class': 'mat-tree-node'\r\n  },\r\n  providers: [{provide: CdkTreeNode, useExisting: MatTreeNode}]\r\n})\r\nexport class MatTreeNode<T> extends _MatTreeNodeMixinBase<T>\r\n    implements CanDisable, HasTabIndex {\r\n  @Input() role: 'treeitem' | 'group' = 'treeitem';\r\n\r\n  constructor(protected _elementRef: ElementRef,\r\n              protected _tree: CdkTree<T>,\r\n              @Attribute('tabindex') tabIndex: string) {\r\n    super(_elementRef, _tree);\r\n\r\n    this.tabIndex = Number(tabIndex) || 0;\r\n  }\r\n}\r\n\r\n/**\r\n * Wrapper for the CdkTree node definition with Material design styles.\r\n */\r\n@Directive({\r\n  selector: '[matTreeNodeDef]',\r\n  inputs: [\r\n    'when: matTreeNodeDefWhen'\r\n  ],\r\n  providers: [{provide: CdkTreeNodeDef, useExisting: MatTreeNodeDef}]\r\n})\r\nexport class MatTreeNodeDef<T> extends CdkTreeNodeDef<T> {\r\n  @Input('matTreeNode') data: T;\r\n\r\n  // TODO(andrewseguin): Remove this explicitly set constructor when the compiler knows how to\r\n  // properly build the es6 version of the class. Currently sets ctorParameters to empty due to a\r\n  // fixed bug.\r\n  // https://github.com/angular/tsickle/pull/760 - tsickle PR that fixed this\r\n  // https://github.com/angular/angular/pull/23531 - updates compiler-cli to fixed version\r\n  constructor(template: TemplateRef<any>) {\r\n    super(template);\r\n  }\r\n}\r\n\r\n/**\r\n * Wrapper for the CdkTree nested node with Material design styles.\r\n */\r\n@Directive({\r\n  selector: 'mat-nested-tree-node',\r\n  exportAs: 'matNestedTreeNode',\r\n  host: {\r\n    '[attr.aria-expanded]': 'isExpanded',\r\n    '[attr.role]': 'role',\r\n    'class': 'mat-nested-tree-node',\r\n  },\r\n  inputs: ['disabled', 'tabIndex'],\r\n  providers: [\r\n    {provide: CdkNestedTreeNode, useExisting: MatNestedTreeNode},\r\n    {provide: CdkTreeNode, useExisting: MatNestedTreeNode}\r\n  ]\r\n})\r\nexport class MatNestedTreeNode<T> extends _MatNestedTreeNodeMixinBase<T>\r\n    implements AfterContentInit, CanDisable, HasTabIndex, OnDestroy {\r\n\r\n  @Input('matNestedTreeNode') node: T;\r\n\r\n  @ContentChildren(MatTreeNodeOutlet) nodeOutlet: QueryList<MatTreeNodeOutlet>;\r\n\r\n  constructor(protected _elementRef: ElementRef,\r\n              protected _tree: CdkTree<T>,\r\n              protected _differs: IterableDiffers,\r\n              @Attribute('tabindex') tabIndex: string) {\r\n    super(_elementRef, _tree, _differs);\r\n\r\n    this.tabIndex = Number(tabIndex) || 0;\r\n  }\r\n\r\n  // This is a workaround for https://github.com/angular/angular/issues/23091\r\n  // In aot mode, the lifecycle hooks from parent class are not called.\r\n  // TODO(tinayuangao): Remove when the angular issue #23091 is fixed\r\n  ngAfterContentInit() {\r\n    super.ngAfterContentInit();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    super.ngOnDestroy();\r\n  }\r\n}\r\n"]}