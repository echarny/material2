{"version":3,"file":"form-field.js","sourceRoot":"","sources":["../../../../../src/lib/form-field/form-field.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {Directionality} from '@angular/cdk/bidi';\r\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\r\nimport {\r\n  AfterContentChecked,\r\n  AfterContentInit,\r\n  AfterViewInit,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ContentChild,\r\n  ContentChildren,\r\n  ElementRef,\r\n  Inject,\r\n  InjectionToken,\r\n  Input,\r\n  NgZone,\r\n  Optional,\r\n  QueryList,\r\n  ViewChild,\r\n  ViewEncapsulation,\r\n} from '@angular/core';\r\nimport {\r\n  CanColor,\r\n  FloatLabelType,\r\n  LabelOptions,\r\n  MAT_LABEL_GLOBAL_OPTIONS,\r\n  mixinColor,\r\n} from '@angular/material/core';\r\nimport {EMPTY, fromEvent, merge} from 'rxjs';\r\nimport {startWith, take} from 'rxjs/operators';\r\nimport {MatError} from './error';\r\nimport {matFormFieldAnimations} from './form-field-animations';\r\nimport {MatFormFieldControl} from './form-field-control';\r\nimport {\r\n  getMatFormFieldDuplicatedHintError,\r\n  getMatFormFieldMissingControlError,\r\n  getMatFormFieldPlaceholderConflictError,\r\n} from './form-field-errors';\r\nimport {MatHint} from './hint';\r\nimport {MatLabel} from './label';\r\nimport {MatPlaceholder} from './placeholder';\r\nimport {MatPrefix} from './prefix';\r\nimport {MatSuffix} from './suffix';\r\nimport {Platform} from '@angular/cdk/platform';\r\nimport {ANIMATION_MODULE_TYPE} from '@angular/platform-browser/animations';\r\n\r\n\r\nlet nextUniqueId = 0;\r\nconst floatingLabelScale = 0.75;\r\nconst outlineGapPadding = 5;\r\n\r\n\r\n/**\r\n * Boilerplate for applying mixins to MatFormField.\r\n * @docs-private\r\n */\r\nexport class MatFormFieldBase {\r\n  constructor(public _elementRef: ElementRef) { }\r\n}\r\n\r\n/**\r\n * Base class to which we're applying the form field mixins.\r\n * @docs-private\r\n */\r\nexport const _MatFormFieldMixinBase = mixinColor(MatFormFieldBase, 'primary');\r\n\r\n/** Possible appearance styles for the form field. */\r\nexport type MatFormFieldAppearance = 'legacy' | 'standard' | 'fill' | 'outline';\r\n\r\n/**\r\n * Represents the default options form the form field that can be configured\r\n * using the `MAT_FORM_FIELD_DEFAULT_OPTIONS` injection token.\r\n */\r\nexport interface MatFormFieldDefaultOptions {\r\n  appearance?: MatFormFieldAppearance;\r\n}\r\n\r\n/**\r\n * Injection token that can be used to configure the\r\n * default options for all form field within an app.\r\n */\r\nexport const MAT_FORM_FIELD_DEFAULT_OPTIONS =\r\n    new InjectionToken<MatFormFieldDefaultOptions>('MAT_FORM_FIELD_DEFAULT_OPTIONS');\r\n\r\n\r\n/** Container for form controls that applies Material Design styling and behavior. */\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'mat-form-field',\r\n  exportAs: 'matFormField',\r\n  templateUrl: 'form-field.html',\r\n  // MatInput is a directive and can't have styles, so we need to include its styles here.\r\n  // The MatInput styles are fairly minimal so it shouldn't be a big deal for people who\r\n  // aren't using MatInput.\r\n  styleUrls: [\r\n    'form-field.css',\r\n    'form-field-fill.css',\r\n    'form-field-legacy.css',\r\n    'form-field-outline.css',\r\n    'form-field-standard.css',\r\n    '../input/input.css',\r\n  ],\r\n  animations: [matFormFieldAnimations.transitionMessages],\r\n  host: {\r\n    'class': 'mat-form-field',\r\n    '[class.mat-form-field-appearance-standard]': 'appearance == \"standard\"',\r\n    '[class.mat-form-field-appearance-fill]': 'appearance == \"fill\"',\r\n    '[class.mat-form-field-appearance-outline]': 'appearance == \"outline\"',\r\n    '[class.mat-form-field-appearance-legacy]': 'appearance == \"legacy\"',\r\n    '[class.mat-form-field-invalid]': '_control.errorState',\r\n    '[class.mat-form-field-can-float]': '_canLabelFloat',\r\n    '[class.mat-form-field-should-float]': '_shouldLabelFloat()',\r\n    '[class.mat-form-field-hide-placeholder]': '_hideControlPlaceholder()',\r\n    '[class.mat-form-field-disabled]': '_control.disabled',\r\n    '[class.mat-form-field-autofilled]': '_control.autofilled',\r\n    '[class.mat-focused]': '_control.focused',\r\n    '[class.mat-accent]': 'color == \"accent\"',\r\n    '[class.mat-warn]': 'color == \"warn\"',\r\n    '[class.ng-untouched]': '_shouldForward(\"untouched\")',\r\n    '[class.ng-touched]': '_shouldForward(\"touched\")',\r\n    '[class.ng-pristine]': '_shouldForward(\"pristine\")',\r\n    '[class.ng-dirty]': '_shouldForward(\"dirty\")',\r\n    '[class.ng-valid]': '_shouldForward(\"valid\")',\r\n    '[class.ng-invalid]': '_shouldForward(\"invalid\")',\r\n    '[class.ng-pending]': '_shouldForward(\"pending\")',\r\n    '[class._mat-animation-noopable]': '!_animationsEnabled',\r\n  },\r\n  inputs: ['color'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\n\r\nexport class MatFormField extends _MatFormFieldMixinBase\r\n    implements AfterContentInit, AfterContentChecked, AfterViewInit, CanColor {\r\n  private _labelOptions: LabelOptions;\r\n\r\n  /** The form-field appearance style. */\r\n  @Input()\r\n  get appearance(): MatFormFieldAppearance {\r\n    return this._appearance || this._defaultOptions && this._defaultOptions.appearance || 'legacy';\r\n  }\r\n  set appearance(value: MatFormFieldAppearance) {\r\n    const oldValue = this._appearance;\r\n    this._appearance = value;\r\n    if (this._appearance === 'outline' && oldValue !== value) {\r\n      // @breaking-change 7.0.0 Remove this check and else block once _ngZone is required.\r\n      if (this._ngZone) {\r\n        this._ngZone!.onStable.pipe(take(1)).subscribe(() => {\r\n          this._ngZone!.runOutsideAngular(() => this.updateOutlineGap());\r\n        });\r\n      } else {\r\n        Promise.resolve().then(() => this.updateOutlineGap());\r\n      }\r\n    }\r\n  }\r\n  _appearance: MatFormFieldAppearance;\r\n\r\n  /** Whether the required marker should be hidden. */\r\n  @Input()\r\n  get hideRequiredMarker(): boolean { return this._hideRequiredMarker; }\r\n  set hideRequiredMarker(value: boolean) {\r\n    this._hideRequiredMarker = coerceBooleanProperty(value);\r\n  }\r\n  private _hideRequiredMarker: boolean;\r\n\r\n  /** Override for the logic that disables the label animation in certain cases. */\r\n  private _showAlwaysAnimate = false;\r\n\r\n  /** Whether the floating label should always float or not. */\r\n  get _shouldAlwaysFloat(): boolean {\r\n    return this.floatLabel === 'always' && !this._showAlwaysAnimate;\r\n  }\r\n\r\n  /** Whether the label can float or not. */\r\n  get _canLabelFloat(): boolean { return this.floatLabel !== 'never'; }\r\n\r\n  /** State of the mat-hint and mat-error animations. */\r\n  _subscriptAnimationState: string = '';\r\n\r\n  /** Text for the form field hint. */\r\n  @Input()\r\n  get hintLabel(): string { return this._hintLabel; }\r\n  set hintLabel(value: string) {\r\n    this._hintLabel = value;\r\n    this._processHints();\r\n  }\r\n  private _hintLabel = '';\r\n\r\n  // Unique id for the hint label.\r\n  _hintLabelId: string = `mat-hint-${nextUniqueId++}`;\r\n\r\n  // Unique id for the internal form field label.\r\n  _labelId = `mat-form-field-label-${nextUniqueId++}`;\r\n\r\n  /**\r\n   * Whether the label should always float, never float or float as the user types.\r\n   *\r\n   * Note: only the legacy appearance supports the `never` option. `never` was originally added as a\r\n   * way to make the floating label emulate the behavior of a standard input placeholder. However\r\n   * the form field now supports both floating labels and placeholders. Therefore in the non-legacy\r\n   * appearances the `never` option has been disabled in favor of just using the placeholder.\r\n   */\r\n  @Input()\r\n  get floatLabel(): FloatLabelType {\r\n    return this.appearance !== 'legacy' && this._floatLabel === 'never' ? 'auto' : this._floatLabel;\r\n  }\r\n  set floatLabel(value: FloatLabelType) {\r\n    if (value !== this._floatLabel) {\r\n      this._floatLabel = value || this._labelOptions.float || 'auto';\r\n      this._changeDetectorRef.markForCheck();\r\n    }\r\n  }\r\n  private _floatLabel: FloatLabelType;\r\n\r\n  /** Whether the Angular animations are enabled. */\r\n  _animationsEnabled: boolean;\r\n\r\n  /**\r\n   * @deprecated\r\n   * @breaking-change 7.0.0\r\n   */\r\n  @ViewChild('underline') underlineRef: ElementRef;\r\n\r\n  @ViewChild('connectionContainer') _connectionContainerRef: ElementRef<HTMLElement>;\r\n  @ViewChild('inputContainer') _inputContainerRef: ElementRef;\r\n  @ViewChild('label') private _label: ElementRef;\r\n  @ContentChild(MatFormFieldControl) _control: MatFormFieldControl<any>;\r\n  @ContentChild(MatPlaceholder) _placeholderChild: MatPlaceholder;\r\n  @ContentChild(MatLabel) _labelChild: MatLabel;\r\n  @ContentChildren(MatError) _errorChildren: QueryList<MatError>;\r\n  @ContentChildren(MatHint) _hintChildren: QueryList<MatHint>;\r\n  @ContentChildren(MatPrefix) _prefixChildren: QueryList<MatPrefix>;\r\n  @ContentChildren(MatSuffix) _suffixChildren: QueryList<MatSuffix>;\r\n\r\n  constructor(\r\n      public _elementRef: ElementRef,\r\n      private _changeDetectorRef: ChangeDetectorRef,\r\n      @Optional() @Inject(MAT_LABEL_GLOBAL_OPTIONS) labelOptions: LabelOptions,\r\n      @Optional() private _dir: Directionality,\r\n      @Optional() @Inject(MAT_FORM_FIELD_DEFAULT_OPTIONS) private _defaultOptions:\r\n          MatFormFieldDefaultOptions,\r\n      // @breaking-change 7.0.0 _platform, _ngZone and _animationMode to be made required.\r\n      private _platform?: Platform,\r\n      private _ngZone?: NgZone,\r\n      @Optional() @Inject(ANIMATION_MODULE_TYPE) _animationMode?: string) {\r\n    super(_elementRef);\r\n\r\n    this._labelOptions = labelOptions ? labelOptions : {};\r\n    this.floatLabel = this._labelOptions.float || 'auto';\r\n    this._animationsEnabled = _animationMode !== 'NoopAnimations';\r\n  }\r\n\r\n  /**\r\n   * Gets an ElementRef for the element that a overlay attached to the form-field should be\r\n   * positioned relative to.\r\n   */\r\n  getConnectedOverlayOrigin(): ElementRef {\r\n    return this._connectionContainerRef || this._elementRef;\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    this._validateControlChild();\r\n    if (this._control.controlType) {\r\n      this._elementRef.nativeElement.classList\r\n          .add(`mat-form-field-type-${this._control.controlType}`);\r\n    }\r\n\r\n    // Subscribe to changes in the child control state in order to update the form field UI.\r\n    this._control.stateChanges.pipe(startWith(null!)).subscribe(() => {\r\n      this._validatePlaceholders();\r\n      this._syncDescribedByIds();\r\n      this._changeDetectorRef.markForCheck();\r\n    });\r\n\r\n    // Run change detection if the value, prefix, or suffix changes.\r\n    const valueChanges = this._control.ngControl && this._control.ngControl.valueChanges || EMPTY;\r\n    merge(valueChanges, this._prefixChildren.changes, this._suffixChildren.changes)\r\n        .subscribe(() => this._changeDetectorRef.markForCheck());\r\n\r\n    // Re-validate when the number of hints changes.\r\n    this._hintChildren.changes.pipe(startWith(null)).subscribe(() => {\r\n      this._processHints();\r\n      this._changeDetectorRef.markForCheck();\r\n    });\r\n\r\n    // Update the aria-described by when the number of errors changes.\r\n    this._errorChildren.changes.pipe(startWith(null)).subscribe(() => {\r\n      this._syncDescribedByIds();\r\n      this._changeDetectorRef.markForCheck();\r\n    });\r\n  }\r\n\r\n  ngAfterContentChecked() {\r\n    this._validateControlChild();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    // Avoid animations on load.\r\n    this._subscriptAnimationState = 'enter';\r\n    this._changeDetectorRef.detectChanges();\r\n  }\r\n\r\n  /** Determines whether a class from the NgControl should be forwarded to the host element. */\r\n  _shouldForward(prop: string): boolean {\r\n    const ngControl = this._control ? this._control.ngControl : null;\r\n    return ngControl && ngControl[prop];\r\n  }\r\n\r\n  _hasPlaceholder() {\r\n    return !!(this._control && this._control.placeholder || this._placeholderChild);\r\n  }\r\n\r\n  _hasLabel() {\r\n    return !!this._labelChild;\r\n  }\r\n\r\n  _shouldLabelFloat() {\r\n    return this._canLabelFloat && (this._control.shouldLabelFloat || this._shouldAlwaysFloat);\r\n  }\r\n\r\n  _hideControlPlaceholder() {\r\n    // In the legacy appearance the placeholder is promoted to a label if no label is given.\r\n    return this.appearance === 'legacy' && !this._hasLabel() ||\r\n        this._hasLabel() && !this._shouldLabelFloat();\r\n  }\r\n\r\n  _hasFloatingLabel() {\r\n    // In the legacy appearance the placeholder is promoted to a label if no label is given.\r\n    return this._hasLabel() || this.appearance === 'legacy' && this._hasPlaceholder();\r\n  }\r\n\r\n  /** Determines whether to display hints or errors. */\r\n  _getDisplayedMessages(): 'error' | 'hint' {\r\n    return (this._errorChildren && this._errorChildren.length > 0 &&\r\n        this._control.errorState) ? 'error' : 'hint';\r\n  }\r\n\r\n  /** Animates the placeholder up and locks it in position. */\r\n  _animateAndLockLabel(): void {\r\n    if (this._hasFloatingLabel() && this._canLabelFloat) {\r\n      // If animations are disabled, we shouldn't go in here,\r\n      // because the `transitionend` will never fire.\r\n      if (this._animationsEnabled) {\r\n        this._showAlwaysAnimate = true;\r\n\r\n        fromEvent(this._label.nativeElement, 'transitionend').pipe(take(1)).subscribe(() => {\r\n          this._showAlwaysAnimate = false;\r\n        });\r\n      }\r\n\r\n      this.floatLabel = 'always';\r\n      this._changeDetectorRef.markForCheck();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Ensure that there is only one placeholder (either `placeholder` attribute on the child control\r\n   * or child element with the `mat-placeholder` directive).\r\n   */\r\n  private _validatePlaceholders() {\r\n    if (this._control.placeholder && this._placeholderChild) {\r\n      throw getMatFormFieldPlaceholderConflictError();\r\n    }\r\n  }\r\n\r\n  /** Does any extra processing that is required when handling the hints. */\r\n  private _processHints() {\r\n    this._validateHints();\r\n    this._syncDescribedByIds();\r\n  }\r\n\r\n  /**\r\n   * Ensure that there is a maximum of one of each `<mat-hint>` alignment specified, with the\r\n   * attribute being considered as `align=\"start\"`.\r\n   */\r\n  private _validateHints() {\r\n    if (this._hintChildren) {\r\n      let startHint: MatHint;\r\n      let endHint: MatHint;\r\n      this._hintChildren.forEach((hint: MatHint) => {\r\n        if (hint.align === 'start') {\r\n          if (startHint || this.hintLabel) {\r\n            throw getMatFormFieldDuplicatedHintError('start');\r\n          }\r\n          startHint = hint;\r\n        } else if (hint.align === 'end') {\r\n          if (endHint) {\r\n            throw getMatFormFieldDuplicatedHintError('end');\r\n          }\r\n          endHint = hint;\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sets the list of element IDs that describe the child control. This allows the control to update\r\n   * its `aria-describedby` attribute accordingly.\r\n   */\r\n  private _syncDescribedByIds() {\r\n    if (this._control) {\r\n      let ids: string[] = [];\r\n\r\n      if (this._getDisplayedMessages() === 'hint') {\r\n        const startHint = this._hintChildren ?\r\n            this._hintChildren.find(hint => hint.align === 'start') : null;\r\n        const endHint = this._hintChildren ?\r\n            this._hintChildren.find(hint => hint.align === 'end') : null;\r\n\r\n        if (startHint) {\r\n          ids.push(startHint.id);\r\n        } else if (this._hintLabel) {\r\n          ids.push(this._hintLabelId);\r\n        }\r\n\r\n        if (endHint) {\r\n          ids.push(endHint.id);\r\n        }\r\n      } else if (this._errorChildren) {\r\n        ids = this._errorChildren.map(error => error.id);\r\n      }\r\n\r\n      this._control.setDescribedByIds(ids);\r\n    }\r\n  }\r\n\r\n  /** Throws an error if the form field's control is missing. */\r\n  protected _validateControlChild() {\r\n    if (!this._control) {\r\n      throw getMatFormFieldMissingControlError();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Updates the width and position of the gap in the outline. Only relevant for the outline\r\n   * appearance.\r\n   */\r\n  updateOutlineGap() {\r\n    if (this.appearance !== 'outline') {\r\n      return;\r\n    }\r\n\r\n    let startWidth = 0;\r\n    let gapWidth = 0;\r\n    const startEls = this._connectionContainerRef.nativeElement.querySelectorAll<HTMLElement>(\r\n      '.mat-form-field-outline-start');\r\n    const gapEls = this._connectionContainerRef.nativeElement.querySelectorAll<HTMLElement>(\r\n        '.mat-form-field-outline-gap');\r\n    if (this._label && this._label.nativeElement.children.length) {\r\n      if (this._platform && !this._platform.isBrowser) {\r\n        // getBoundingClientRect isn't available on the server.\r\n        return;\r\n      }\r\n      if (!document.documentElement.contains(this._elementRef.nativeElement)) {\r\n        return;\r\n      }\r\n\r\n      const containerStart = this._getStartEnd(\r\n          this._connectionContainerRef.nativeElement.getBoundingClientRect());\r\n      const labelStart = this._getStartEnd(\r\n          this._label.nativeElement.children[0].getBoundingClientRect());\r\n      let labelWidth = 0;\r\n      for (const child of this._label.nativeElement.children) {\r\n        labelWidth += child.offsetWidth;\r\n      }\r\n      startWidth = labelStart - containerStart - outlineGapPadding;\r\n      gapWidth = labelWidth * floatingLabelScale + outlineGapPadding * 2;\r\n    }\r\n\r\n    for (let i = 0; i < startEls.length; i++) {\r\n      startEls.item(i).style.width = `${startWidth}px`;\r\n    }\r\n    for (let i = 0; i < gapEls.length; i++) {\r\n      gapEls.item(i).style.width = `${gapWidth}px`;\r\n    }\r\n  }\r\n\r\n  /** Gets the start end of the rect considering the current directionality. */\r\n  private _getStartEnd(rect: ClientRect): number {\r\n    return this._dir && this._dir.value === 'rtl' ? rect.right : rect.left;\r\n  }\r\n}\r\n"]}