{"version":3,"file":"expansion-panel-header.js","sourceRoot":"","sources":["../../../../../src/lib/expansion/expansion-panel-header.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {FocusMonitor} from '@angular/cdk/a11y';\r\nimport {ENTER, SPACE} from '@angular/cdk/keycodes';\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  Directive,\r\n  ElementRef,\r\n  Host,\r\n  Input,\r\n  OnDestroy,\r\n  ViewEncapsulation,\r\n} from '@angular/core';\r\nimport {merge, Subscription} from 'rxjs';\r\nimport {filter} from 'rxjs/operators';\r\nimport {matExpansionAnimations} from './expansion-animations';\r\nimport {MatExpansionPanel} from './expansion-panel';\r\n\r\n\r\n/**\r\n * `<mat-expansion-panel-header>`\r\n *\r\n * This component corresponds to the header element of an `<mat-expansion-panel>`.\r\n */\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'mat-expansion-panel-header',\r\n  styleUrls: ['./expansion-panel-header.css'],\r\n  templateUrl: './expansion-panel-header.html',\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  animations: [\r\n    matExpansionAnimations.indicatorRotate,\r\n    matExpansionAnimations.expansionHeaderHeight\r\n  ],\r\n  host: {\r\n    'class': 'mat-expansion-panel-header',\r\n    'role': 'button',\r\n    '[attr.id]': 'panel._headerId',\r\n    '[attr.tabindex]': 'panel.disabled ? -1 : 0',\r\n    '[attr.aria-controls]': '_getPanelId()',\r\n    '[attr.aria-expanded]': '_isExpanded()',\r\n    '[attr.aria-disabled]': 'panel.disabled',\r\n    '[class.mat-expanded]': '_isExpanded()',\r\n    '(click)': '_toggle()',\r\n    '(keydown)': '_keydown($event)',\r\n    '[@expansionHeight]': `{\r\n        value: _getExpandedState(),\r\n        params: {\r\n          collapsedHeight: collapsedHeight,\r\n          expandedHeight: expandedHeight\r\n        }\r\n    }`,\r\n  },\r\n})\r\nexport class MatExpansionPanelHeader implements OnDestroy {\r\n  private _parentChangeSubscription = Subscription.EMPTY;\r\n\r\n  constructor(\r\n    @Host() public panel: MatExpansionPanel,\r\n    private _element: ElementRef,\r\n    private _focusMonitor: FocusMonitor,\r\n    private _changeDetectorRef: ChangeDetectorRef) {\r\n\r\n    // Since the toggle state depends on an @Input on the panel, we\r\n    // need to  subscribe and trigger change detection manually.\r\n    this._parentChangeSubscription = merge(\r\n      panel.opened,\r\n      panel.closed,\r\n      panel._inputChanges.pipe(filter(changes => !!(changes.hideToggle || changes.disabled)))\r\n    )\r\n    .subscribe(() => this._changeDetectorRef.markForCheck());\r\n\r\n    _focusMonitor.monitor(_element.nativeElement);\r\n  }\r\n\r\n  /** Height of the header while the panel is expanded. */\r\n  @Input() expandedHeight: string;\r\n\r\n  /** Height of the header while the panel is collapsed. */\r\n  @Input() collapsedHeight: string;\r\n\r\n  /** Toggles the expanded state of the panel. */\r\n  _toggle(): void {\r\n    this.panel.toggle();\r\n  }\r\n\r\n  /** Gets whether the panel is expanded. */\r\n  _isExpanded(): boolean {\r\n    return this.panel.expanded;\r\n  }\r\n\r\n  /** Gets the expanded state string of the panel. */\r\n  _getExpandedState(): string {\r\n    return this.panel._getExpandedState();\r\n  }\r\n\r\n  /** Gets the panel id. */\r\n  _getPanelId(): string {\r\n    return this.panel.id;\r\n  }\r\n\r\n  /** Gets whether the expand indicator should be shown. */\r\n  _showToggle(): boolean {\r\n    return !this.panel.hideToggle && !this.panel.disabled;\r\n  }\r\n\r\n  /** Handle keydown event calling to toggle() if appropriate. */\r\n  _keydown(event: KeyboardEvent) {\r\n    switch (event.keyCode) {\r\n      // Toggle for space and enter keys.\r\n      case SPACE:\r\n      case ENTER:\r\n        event.preventDefault();\r\n        this._toggle();\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._parentChangeSubscription.unsubscribe();\r\n    this._focusMonitor.stopMonitoring(this._element.nativeElement);\r\n  }\r\n}\r\n\r\n/**\r\n * `<mat-panel-description>`\r\n *\r\n * This directive is to be used inside of the MatExpansionPanelHeader component.\r\n */\r\n@Directive({\r\n  selector: 'mat-panel-description',\r\n  host : {\r\n    class: 'mat-expansion-panel-header-description'\r\n  }\r\n})\r\nexport class MatExpansionPanelDescription {}\r\n\r\n/**\r\n * `<mat-panel-title>`\r\n *\r\n * This directive is to be used inside of the MatExpansionPanelHeader component.\r\n */\r\n@Directive({\r\n  selector: 'mat-panel-title',\r\n  host : {\r\n    class: 'mat-expansion-panel-header-title'\r\n  }\r\n})\r\nexport class MatExpansionPanelTitle {}\r\n"]}