{"version":3,"file":"list.js","sourceRoot":"","sources":["../../../../../src/lib/list/list.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {\r\n  AfterContentInit,\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  ContentChild,\r\n  ContentChildren,\r\n  Directive,\r\n  ElementRef,\r\n  Optional,\r\n  QueryList,\r\n  ViewEncapsulation,\r\n} from '@angular/core';\r\nimport {CanDisableRipple, MatLine, MatLineSetter, mixinDisableRipple} from '@angular/material/core';\r\n\r\n// Boilerplate for applying mixins to MatList.\r\n/** @docs-private */\r\nexport class MatListBase {}\r\nexport const _MatListMixinBase = mixinDisableRipple(MatListBase);\r\n\r\n// Boilerplate for applying mixins to MatListItem.\r\n/** @docs-private */\r\nexport class MatListItemBase {}\r\nexport const _MatListItemMixinBase = mixinDisableRipple(MatListItemBase);\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'mat-nav-list',\r\n  exportAs: 'matNavList',\r\n  host: {\r\n    'role': 'navigation',\r\n    'class': 'mat-nav-list'\r\n  },\r\n  templateUrl: 'list.html',\r\n  styleUrls: ['list.css'],\r\n  inputs: ['disableRipple'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MatNavList extends _MatListMixinBase implements CanDisableRipple {}\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'mat-list',\r\n  exportAs: 'matList',\r\n  templateUrl: 'list.html',\r\n  host: {'class': 'mat-list'},\r\n  styleUrls: ['list.css'],\r\n  inputs: ['disableRipple'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MatList extends _MatListMixinBase implements CanDisableRipple {}\r\n\r\n/**\r\n * Directive whose purpose is to add the mat- CSS styling to this selector.\r\n * @docs-private\r\n */\r\n@Directive({\r\n  selector: '[mat-list-avatar], [matListAvatar]',\r\n  host: {'class': 'mat-list-avatar'}\r\n})\r\nexport class MatListAvatarCssMatStyler {}\r\n\r\n/**\r\n * Directive whose purpose is to add the mat- CSS styling to this selector.\r\n * @docs-private\r\n */\r\n@Directive({\r\n  selector: '[mat-list-icon], [matListIcon]',\r\n  host: {'class': 'mat-list-icon'}\r\n})\r\nexport class MatListIconCssMatStyler {}\r\n\r\n/**\r\n * Directive whose purpose is to add the mat- CSS styling to this selector.\r\n * @docs-private\r\n */\r\n@Directive({\r\n  selector: '[mat-subheader], [matSubheader]',\r\n  host: {'class': 'mat-subheader'}\r\n})\r\nexport class MatListSubheaderCssMatStyler {}\r\n\r\n/** An item within a Material Design list. */\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'mat-list-item, a[mat-list-item]',\r\n  exportAs: 'matListItem',\r\n  host: {\r\n    'class': 'mat-list-item',\r\n    // @breaking-change 7.0.0 Remove `mat-list-item-avatar` in favor of `mat-list-item-with-avatar`.\r\n    '[class.mat-list-item-avatar]': '_avatar || _icon',\r\n    '[class.mat-list-item-with-avatar]': '_avatar || _icon',\r\n    '(focus)': '_handleFocus()',\r\n    '(blur)': '_handleBlur()',\r\n  },\r\n  inputs: ['disableRipple'],\r\n  templateUrl: 'list-item.html',\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MatListItem extends _MatListItemMixinBase implements AfterContentInit,\r\n    CanDisableRipple {\r\n  private _isNavList: boolean = false;\r\n\r\n  @ContentChildren(MatLine) _lines: QueryList<MatLine>;\r\n  @ContentChild(MatListAvatarCssMatStyler) _avatar: MatListAvatarCssMatStyler;\r\n  @ContentChild(MatListIconCssMatStyler) _icon: MatListIconCssMatStyler;\r\n\r\n  constructor(private _element: ElementRef,\r\n              @Optional() private _navList: MatNavList) {\r\n    super();\r\n    this._isNavList = !!_navList;\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    // TODO: consider turning the setter into a function, it doesn't do anything as a class.\r\n    // tslint:disable-next-line:no-unused-expression\r\n    new MatLineSetter(this._lines, this._element);\r\n  }\r\n\r\n  /** Whether this list item should show a ripple effect when clicked. */\r\n  _isRippleDisabled() {\r\n    return !this._isNavList || this.disableRipple || this._navList.disableRipple;\r\n  }\r\n\r\n  _handleFocus() {\r\n    this._element.nativeElement.classList.add('mat-list-item-focus');\r\n  }\r\n\r\n  _handleBlur() {\r\n    this._element.nativeElement.classList.remove('mat-list-item-focus');\r\n  }\r\n\r\n  /** Retrieves the DOM element of the component host. */\r\n  _getHostElement(): HTMLElement {\r\n    return this._element.nativeElement;\r\n  }\r\n}\r\n"]}