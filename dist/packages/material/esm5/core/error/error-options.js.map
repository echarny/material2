{"version":3,"file":"error-options.js","sourceRoot":"","sources":["../../../../../../src/lib/core/error/error-options.ts"],"names":[],"mappings":";;;;;;;;;;;AAQA,OAAO,EAAC,UAAU,EAAC,MAAM,eAAe,CAAC;;;;;;;;;;;;;IAMvC,mDAAY;;;;;IAAZ,UAAa,OAA2B,EAAE,IAAwC;QAChF,MAAM,CAAC,CAAC,CAAC,CAAC,OAAO,IAAI,OAAO,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;KACtF;;gBAJF,UAAU;;uCAZX;;SAaa,4BAA4B;;;;;;;;;;;;;;;;;;;;;IASvC,wCAAY;;;;;IAAZ,UAAa,OAA2B,EAAE,IAAwC;QAChF,MAAM,CAAC,CAAC,CAAC,CAAC,OAAO,IAAI,OAAO,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;KACxF;;gBAJF,UAAU,SAAC,EAAC,UAAU,EAAE,MAAM,EAAC;;;4BApBhC;;SAqBa,iBAAiB","sourcesContent":["/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {Injectable} from '@angular/core';\r\nimport {FormGroupDirective, NgForm, FormControl} from '@angular/forms';\r\n\r\n/** Error state matcher that matches when a control is invalid and dirty. */\r\n@Injectable()\r\nexport class ShowOnDirtyErrorStateMatcher implements ErrorStateMatcher {\r\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\r\n    return !!(control && control.invalid && (control.dirty || (form && form.submitted)));\r\n  }\r\n}\r\n\r\n/** Provider that defines how form controls behave with regards to displaying error messages. */\r\n@Injectable({providedIn: 'root'})\r\nexport class ErrorStateMatcher {\r\n  isErrorState(control: FormControl | null, form: FormGroupDirective | NgForm | null): boolean {\r\n    return !!(control && control.invalid && (control.touched || (form && form.submitted)));\r\n  }\r\n}\r\n"]}