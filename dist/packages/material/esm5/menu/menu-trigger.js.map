{"version":3,"file":"menu-trigger.js","sourceRoot":"","sources":["../../../../../src/lib/menu/menu-trigger.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {FocusMonitor, FocusOrigin, isFakeMousedownFromScreenReader} from '@angular/cdk/a11y';\r\nimport {Direction, Directionality} from '@angular/cdk/bidi';\r\nimport {LEFT_ARROW, RIGHT_ARROW} from '@angular/cdk/keycodes';\r\nimport {\r\n  FlexibleConnectedPositionStrategy,\r\n  HorizontalConnectionPos,\r\n  Overlay,\r\n  OverlayConfig,\r\n  OverlayRef,\r\n  ScrollStrategy,\r\n  VerticalConnectionPos,\r\n} from '@angular/cdk/overlay';\r\nimport {TemplatePortal} from '@angular/cdk/portal';\r\nimport {\r\n  AfterContentInit,\r\n  Directive,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Inject,\r\n  InjectionToken,\r\n  Input,\r\n  OnDestroy,\r\n  Optional,\r\n  Output,\r\n  Self,\r\n  ViewContainerRef,\r\n} from '@angular/core';\r\nimport {asapScheduler, merge, of as observableOf, Subscription} from 'rxjs';\r\nimport {delay, filter, take, takeUntil} from 'rxjs/operators';\r\nimport {MatMenu} from './menu-directive';\r\nimport {throwMatMenuMissingError} from './menu-errors';\r\nimport {MatMenuItem} from './menu-item';\r\nimport {MatMenuPanel} from './menu-panel';\r\nimport {MenuPositionX, MenuPositionY} from './menu-positions';\r\n\r\n/** Injection token that determines the scroll handling while the menu is open. */\r\nexport const MAT_MENU_SCROLL_STRATEGY =\r\n    new InjectionToken<() => ScrollStrategy>('mat-menu-scroll-strategy');\r\n\r\n/** @docs-private */\r\nexport function MAT_MENU_SCROLL_STRATEGY_FACTORY(overlay: Overlay): () => ScrollStrategy {\r\n  return () => overlay.scrollStrategies.reposition();\r\n}\r\n\r\n/** @docs-private */\r\nexport const MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER = {\r\n  provide: MAT_MENU_SCROLL_STRATEGY,\r\n  deps: [Overlay],\r\n  useFactory: MAT_MENU_SCROLL_STRATEGY_FACTORY,\r\n};\r\n\r\n/** Default top padding of the menu panel. */\r\nexport const MENU_PANEL_TOP_PADDING = 8;\r\n\r\n// TODO(andrewseguin): Remove the kebab versions in favor of camelCased attribute selectors\r\n\r\n/**\r\n * This directive is intended to be used in conjunction with an mat-menu tag.  It is\r\n * responsible for toggling the display of the provided menu instance.\r\n */\r\n@Directive({\r\n  selector: `[mat-menu-trigger-for], [matMenuTriggerFor]`,\r\n  host: {\r\n    'aria-haspopup': 'true',\r\n    '[attr.aria-expanded]': 'menuOpen || null',\r\n    '(mousedown)': '_handleMousedown($event)',\r\n    '(keydown)': '_handleKeydown($event)',\r\n    '(click)': '_handleClick($event)',\r\n  },\r\n  exportAs: 'matMenuTrigger'\r\n})\r\nexport class MatMenuTrigger implements AfterContentInit, OnDestroy {\r\n  private _portal: TemplatePortal;\r\n  private _overlayRef: OverlayRef | null = null;\r\n  private _menuOpen: boolean = false;\r\n  private _closeSubscription = Subscription.EMPTY;\r\n  private _hoverSubscription = Subscription.EMPTY;\r\n\r\n  // Tracking input type is necessary so it's possible to only auto-focus\r\n  // the first item of the list when the menu is opened via the keyboard\r\n  private _openedByMouse: boolean = false;\r\n\r\n  /**\r\n   * @deprecated\r\n   * @breaking-change 7.0.0\r\n   */\r\n  @Input('mat-menu-trigger-for')\r\n  get _deprecatedMatMenuTriggerFor(): MatMenuPanel {\r\n    return this.menu;\r\n  }\r\n\r\n  set _deprecatedMatMenuTriggerFor(v: MatMenuPanel) {\r\n    this.menu = v;\r\n  }\r\n\r\n  /** References the menu instance that the trigger is associated with. */\r\n  @Input('matMenuTriggerFor') menu: MatMenuPanel;\r\n\r\n  /** Data to be passed along to any lazily-rendered content. */\r\n  @Input('matMenuTriggerData') menuData: any;\r\n\r\n  /** Event emitted when the associated menu is opened. */\r\n  @Output() readonly menuOpened: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n  /**\r\n   * Event emitted when the associated menu is opened.\r\n   * @deprecated Switch to `menuOpened` instead\r\n   * @breaking-change 7.0.0\r\n   */\r\n  // tslint:disable-next-line:no-output-on-prefix\r\n  @Output() readonly onMenuOpen: EventEmitter<void> = this.menuOpened;\r\n\r\n  /** Event emitted when the associated menu is closed. */\r\n  @Output() readonly menuClosed: EventEmitter<void> = new EventEmitter<void>();\r\n\r\n  /**\r\n   * Event emitted when the associated menu is closed.\r\n   * @deprecated Switch to `menuClosed` instead\r\n   * @breaking-change 7.0.0\r\n   */\r\n  // tslint:disable-next-line:no-output-on-prefix\r\n  @Output() readonly onMenuClose: EventEmitter<void> = this.menuClosed;\r\n\r\n  constructor(private _overlay: Overlay,\r\n              private _element: ElementRef,\r\n              private _viewContainerRef: ViewContainerRef,\r\n              @Inject(MAT_MENU_SCROLL_STRATEGY) private _scrollStrategy,\r\n              @Optional() private _parentMenu: MatMenu,\r\n              @Optional() @Self() private _menuItemInstance: MatMenuItem,\r\n              @Optional() private _dir: Directionality,\r\n              // TODO(crisbeto): make the _focusMonitor required when doing breaking changes.\r\n              // @breaking-change 7.0.0\r\n              private _focusMonitor?: FocusMonitor) {\r\n\r\n    if (_menuItemInstance) {\r\n      _menuItemInstance._triggersSubmenu = this.triggersSubmenu();\r\n    }\r\n  }\r\n\r\n  ngAfterContentInit() {\r\n    this._checkMenu();\r\n\r\n    this.menu.close.subscribe(reason => {\r\n      this._destroyMenu();\r\n\r\n      // If a click closed the menu, we should close the entire chain of nested menus.\r\n      if ((reason === 'click' || reason === 'tab') && this._parentMenu) {\r\n        this._parentMenu.closed.emit(reason);\r\n      }\r\n    });\r\n\r\n    this._handleHover();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this._overlayRef) {\r\n      this._overlayRef.dispose();\r\n      this._overlayRef = null;\r\n    }\r\n\r\n    this._cleanUpSubscriptions();\r\n  }\r\n\r\n  /** Whether the menu is open. */\r\n  get menuOpen(): boolean {\r\n    return this._menuOpen;\r\n  }\r\n\r\n  /** The text direction of the containing app. */\r\n  get dir(): Direction {\r\n    return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\r\n  }\r\n\r\n  /** Whether the menu triggers a sub-menu or a top-level one. */\r\n  triggersSubmenu(): boolean {\r\n    return !!(this._menuItemInstance && this._parentMenu);\r\n  }\r\n\r\n  /** Toggles the menu between the open and closed states. */\r\n  toggleMenu(): void {\r\n    return this._menuOpen ? this.closeMenu() : this.openMenu();\r\n  }\r\n\r\n  /** Opens the menu. */\r\n  openMenu(): void {\r\n    if (this._menuOpen) {\r\n      return;\r\n    }\r\n\r\n    const overlayRef = this._createOverlay();\r\n    this._setPosition(overlayRef.getConfig().positionStrategy as FlexibleConnectedPositionStrategy);\r\n    overlayRef.attach(this._portal);\r\n\r\n    if (this.menu.lazyContent) {\r\n      this.menu.lazyContent.attach(this.menuData);\r\n    }\r\n\r\n    this._closeSubscription = this._menuClosingActions().subscribe(() => this.closeMenu());\r\n    this._initMenu();\r\n\r\n    if (this.menu instanceof MatMenu) {\r\n      this.menu._startAnimation();\r\n    }\r\n  }\r\n\r\n  /** Closes the menu. */\r\n  closeMenu(): void {\r\n    this.menu.close.emit();\r\n  }\r\n\r\n  /**\r\n   * Focuses the menu trigger.\r\n   * @param origin Source of the menu trigger's focus.\r\n   */\r\n  focus(origin: FocusOrigin = 'program') {\r\n    if (this._focusMonitor) {\r\n      this._focusMonitor.focusVia(this._element.nativeElement, origin);\r\n    } else {\r\n      this._element.nativeElement.focus();\r\n    }\r\n  }\r\n\r\n  /** Closes the menu and does the necessary cleanup. */\r\n  private _destroyMenu() {\r\n    if (!this._overlayRef || !this.menuOpen) {\r\n      return;\r\n    }\r\n\r\n    const menu = this.menu;\r\n\r\n    this._closeSubscription.unsubscribe();\r\n    this._overlayRef.detach();\r\n\r\n    if (menu instanceof MatMenu) {\r\n      menu._resetAnimation();\r\n\r\n      if (menu.lazyContent) {\r\n        // Wait for the exit animation to finish before detaching the content.\r\n        menu._animationDone\r\n          .pipe(\r\n            filter(event => event.toState === 'void'),\r\n            take(1),\r\n            // Interrupt if the content got re-attached.\r\n            takeUntil(menu.lazyContent._attached)\r\n          )\r\n          .subscribe(() => menu.lazyContent!.detach(), undefined, () => {\r\n            // No matter whether the content got re-attached, reset the menu.\r\n            this._resetMenu();\r\n          });\r\n      } else {\r\n        this._resetMenu();\r\n      }\r\n    } else {\r\n      this._resetMenu();\r\n\r\n      if (menu.lazyContent) {\r\n        menu.lazyContent.detach();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This method sets the menu state to open and focuses the first item if\r\n   * the menu was opened via the keyboard.\r\n   */\r\n  private _initMenu(): void {\r\n    this.menu.parentMenu = this.triggersSubmenu() ? this._parentMenu : undefined;\r\n    this.menu.direction = this.dir;\r\n    this._setMenuElevation();\r\n    this._setIsMenuOpen(true);\r\n    this.menu.focusFirstItem(this._openedByMouse ? 'mouse' : 'program');\r\n  }\r\n\r\n  /** Updates the menu elevation based on the amount of parent menus that it has. */\r\n  private _setMenuElevation(): void {\r\n    if (this.menu.setElevation) {\r\n      let depth = 0;\r\n      let parentMenu = this.menu.parentMenu;\r\n\r\n      while (parentMenu) {\r\n        depth++;\r\n        parentMenu = parentMenu.parentMenu;\r\n      }\r\n\r\n      this.menu.setElevation(depth);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This method resets the menu when it's closed, most importantly restoring\r\n   * focus to the menu trigger if the menu was opened via the keyboard.\r\n   */\r\n  private _resetMenu(): void {\r\n    this._setIsMenuOpen(false);\r\n\r\n    // We should reset focus if the user is navigating using a keyboard or\r\n    // if we have a top-level trigger which might cause focus to be lost\r\n    // when clicking on the backdrop.\r\n    if (!this._openedByMouse) {\r\n      // Note that the focus style will show up both for `program` and\r\n      // `keyboard` so we don't have to specify which one it is.\r\n      this.focus();\r\n    } else if (!this.triggersSubmenu()) {\r\n      this.focus('mouse');\r\n    }\r\n\r\n    this._openedByMouse = false;\r\n  }\r\n\r\n  // set state rather than toggle to support triggers sharing a menu\r\n  private _setIsMenuOpen(isOpen: boolean): void {\r\n    this._menuOpen = isOpen;\r\n    this._menuOpen ? this.menuOpened.emit() : this.menuClosed.emit();\r\n\r\n    if (this.triggersSubmenu()) {\r\n      this._menuItemInstance._highlighted = isOpen;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This method checks that a valid instance of MatMenu has been passed into\r\n   * matMenuTriggerFor. If not, an exception is thrown.\r\n   */\r\n  private _checkMenu() {\r\n    if (!this.menu) {\r\n      throwMatMenuMissingError();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * This method creates the overlay from the provided menu's template and saves its\r\n   * OverlayRef so that it can be attached to the DOM when openMenu is called.\r\n   */\r\n  private _createOverlay(): OverlayRef {\r\n    if (!this._overlayRef) {\r\n      this._portal = new TemplatePortal(this.menu.templateRef, this._viewContainerRef);\r\n      const config = this._getOverlayConfig();\r\n      this._subscribeToPositions(config.positionStrategy as FlexibleConnectedPositionStrategy);\r\n      this._overlayRef = this._overlay.create(config);\r\n    }\r\n\r\n    return this._overlayRef;\r\n  }\r\n\r\n  /**\r\n   * This method builds the configuration object needed to create the overlay, the OverlayState.\r\n   * @returns OverlayConfig\r\n   */\r\n  private _getOverlayConfig(): OverlayConfig {\r\n    return new OverlayConfig({\r\n      positionStrategy: this._overlay.position()\r\n          .flexibleConnectedTo(this._element)\r\n          .withTransformOriginOn('.mat-menu-panel'),\r\n      hasBackdrop: this.menu.hasBackdrop == null ? !this.triggersSubmenu() : this.menu.hasBackdrop,\r\n      backdropClass: this.menu.backdropClass || 'cdk-overlay-transparent-backdrop',\r\n      scrollStrategy: this._scrollStrategy(),\r\n      direction: this._dir\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Listens to changes in the position of the overlay and sets the correct classes\r\n   * on the menu based on the new position. This ensures the animation origin is always\r\n   * correct, even if a fallback position is used for the overlay.\r\n   */\r\n  private _subscribeToPositions(position: FlexibleConnectedPositionStrategy): void {\r\n    if (this.menu.setPositionClasses) {\r\n      position.positionChanges.subscribe(change => {\r\n        const posX: MenuPositionX = change.connectionPair.overlayX === 'start' ? 'after' : 'before';\r\n        const posY: MenuPositionY = change.connectionPair.overlayY === 'top' ? 'below' : 'above';\r\n\r\n        this.menu.setPositionClasses!(posX, posY);\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sets the appropriate positions on a position strategy\r\n   * so the overlay connects with the trigger correctly.\r\n   * @param positionStrategy Strategy whose position to update.\r\n   */\r\n  private _setPosition(positionStrategy: FlexibleConnectedPositionStrategy) {\r\n    let [originX, originFallbackX]: HorizontalConnectionPos[] =\r\n        this.menu.xPosition === 'before' ? ['end', 'start'] : ['start', 'end'];\r\n\r\n    let [overlayY, overlayFallbackY]: VerticalConnectionPos[] =\r\n        this.menu.yPosition === 'above' ? ['bottom', 'top'] : ['top', 'bottom'];\r\n\r\n    let [originY, originFallbackY] = [overlayY, overlayFallbackY];\r\n    let [overlayX, overlayFallbackX] = [originX, originFallbackX];\r\n    let offsetY = 0;\r\n\r\n    if (this.triggersSubmenu()) {\r\n      // When the menu is a sub-menu, it should always align itself\r\n      // to the edges of the trigger, instead of overlapping it.\r\n      overlayFallbackX = originX = this.menu.xPosition === 'before' ? 'start' : 'end';\r\n      originFallbackX = overlayX = originX === 'end' ? 'start' : 'end';\r\n      offsetY = overlayY === 'bottom' ? MENU_PANEL_TOP_PADDING : -MENU_PANEL_TOP_PADDING;\r\n    } else if (!this.menu.overlapTrigger) {\r\n      originY = overlayY === 'top' ? 'bottom' : 'top';\r\n      originFallbackY = overlayFallbackY === 'top' ? 'bottom' : 'top';\r\n    }\r\n\r\n    positionStrategy.withPositions([\r\n      {originX, originY, overlayX, overlayY, offsetY},\r\n      {originX: originFallbackX, originY, overlayX: overlayFallbackX, overlayY, offsetY},\r\n      {\r\n        originX,\r\n        originY: originFallbackY,\r\n        overlayX,\r\n        overlayY: overlayFallbackY,\r\n        offsetY: -offsetY\r\n      },\r\n      {\r\n        originX: originFallbackX,\r\n        originY: originFallbackY,\r\n        overlayX: overlayFallbackX,\r\n        overlayY: overlayFallbackY,\r\n        offsetY: -offsetY\r\n      }\r\n    ]);\r\n  }\r\n\r\n  /** Cleans up the active subscriptions. */\r\n  private _cleanUpSubscriptions(): void {\r\n    this._closeSubscription.unsubscribe();\r\n    this._hoverSubscription.unsubscribe();\r\n  }\r\n\r\n  /** Returns a stream that emits whenever an action that should close the menu occurs. */\r\n  private _menuClosingActions() {\r\n    const backdrop = this._overlayRef!.backdropClick();\r\n    const detachments = this._overlayRef!.detachments();\r\n    const parentClose = this._parentMenu ? this._parentMenu.closed : observableOf();\r\n    const hover = this._parentMenu ? this._parentMenu._hovered().pipe(\r\n      filter(active => active !== this._menuItemInstance),\r\n      filter(() => this._menuOpen)\r\n    ) : observableOf();\r\n\r\n    return merge(backdrop, parentClose, hover, detachments);\r\n  }\r\n\r\n  /** Handles mouse presses on the trigger. */\r\n  _handleMousedown(event: MouseEvent): void {\r\n    if (!isFakeMousedownFromScreenReader(event)) {\r\n      this._openedByMouse = true;\r\n\r\n      // Since clicking on the trigger won't close the menu if it opens a sub-menu,\r\n      // we should prevent focus from moving onto it via click to avoid the\r\n      // highlight from lingering on the menu item.\r\n      if (this.triggersSubmenu()) {\r\n        event.preventDefault();\r\n      }\r\n    }\r\n  }\r\n\r\n  /** Handles key presses on the trigger. */\r\n  _handleKeydown(event: KeyboardEvent): void {\r\n    const keyCode = event.keyCode;\r\n\r\n    if (this.triggersSubmenu() && (\r\n            (keyCode === RIGHT_ARROW && this.dir === 'ltr') ||\r\n            (keyCode === LEFT_ARROW && this.dir === 'rtl'))) {\r\n      this.openMenu();\r\n    }\r\n  }\r\n\r\n  /** Handles click events on the trigger. */\r\n  _handleClick(event: MouseEvent): void {\r\n    if (this.triggersSubmenu()) {\r\n      // Stop event propagation to avoid closing the parent menu.\r\n      event.stopPropagation();\r\n      this.openMenu();\r\n    } else {\r\n      this.toggleMenu();\r\n    }\r\n  }\r\n\r\n  /** Handles the cases where the user hovers over the trigger. */\r\n  private _handleHover() {\r\n    // Subscribe to changes in the hovered item in order to toggle the panel.\r\n    if (!this.triggersSubmenu()) {\r\n      return;\r\n    }\r\n\r\n    this._hoverSubscription = this._parentMenu._hovered()\r\n      // Since we might have multiple competing triggers for the same menu (e.g. a sub-menu\r\n      // with different data and triggers), we have to delay it by a tick to ensure that\r\n      // it won't be closed immediately after it is opened.\r\n      .pipe(\r\n        filter(active => active === this._menuItemInstance && !active.disabled),\r\n        delay(0, asapScheduler)\r\n      )\r\n      .subscribe(() => {\r\n        this._openedByMouse = true;\r\n\r\n        // If the same menu is used between multiple triggers, it might still be animating\r\n        // while the new trigger tries to re-open it. Wait for the animation to finish\r\n        // before doing so. Also interrupt if the user moves to another item.\r\n        if (this.menu instanceof MatMenu && this.menu._isAnimating) {\r\n          // We need the `delay(0)` here in order to avoid\r\n          // 'changed after checked' errors in some cases. See #12194.\r\n          this.menu._animationDone\r\n            .pipe(take(1), delay(0, asapScheduler), takeUntil(this._parentMenu._hovered()))\r\n            .subscribe(() => this.openMenu());\r\n        } else {\r\n          this.openMenu();\r\n        }\r\n      });\r\n  }\r\n\r\n}\r\n"]}