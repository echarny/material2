{"version":3,"file":"bottom-sheet-ref.js","sourceRoot":"","sources":["../../../../../src/lib/bottom-sheet/bottom-sheet-ref.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {Location} from '@angular/common';\r\nimport {ESCAPE} from '@angular/cdk/keycodes';\r\nimport {OverlayRef} from '@angular/cdk/overlay';\r\nimport {merge, Observable, Subject, SubscriptionLike, Subscription} from 'rxjs';\r\nimport {filter, take} from 'rxjs/operators';\r\nimport {MatBottomSheetContainer} from './bottom-sheet-container';\r\n\r\n\r\n/**\r\n * Reference to a bottom sheet dispatched from the bottom sheet service.\r\n */\r\nexport class MatBottomSheetRef<T = any, R = any> {\r\n  /** Instance of the component making up the content of the bottom sheet. */\r\n  instance: T;\r\n\r\n  /**\r\n   * Instance of the component into which the bottom sheet content is projected.\r\n   * @docs-private\r\n   */\r\n  containerInstance: MatBottomSheetContainer;\r\n\r\n  /** Subject for notifying the user that the bottom sheet has been dismissed. */\r\n  private readonly _afterDismissed = new Subject<R | undefined>();\r\n\r\n  /** Subject for notifying the user that the bottom sheet has opened and appeared. */\r\n  private readonly _afterOpened = new Subject<void>();\r\n\r\n  /** Result to be passed down to the `afterDismissed` stream. */\r\n  private _result: R | undefined;\r\n\r\n  /** Subscription to changes in the user's location. */\r\n  private _locationChanges: SubscriptionLike = Subscription.EMPTY;\r\n\r\n  constructor(\r\n    containerInstance: MatBottomSheetContainer,\r\n    private _overlayRef: OverlayRef,\r\n    location?: Location) {\r\n    this.containerInstance = containerInstance;\r\n\r\n    // Emit when opening animation completes\r\n    containerInstance._animationStateChanged.pipe(\r\n      filter(event => event.phaseName === 'done' && event.toState === 'visible'),\r\n      take(1)\r\n    )\r\n    .subscribe(() => {\r\n      this._afterOpened.next();\r\n      this._afterOpened.complete();\r\n    });\r\n\r\n    // Dispose overlay when closing animation is complete\r\n    containerInstance._animationStateChanged.pipe(\r\n      filter(event => event.phaseName === 'done' && event.toState === 'hidden'),\r\n      take(1)\r\n    )\r\n    .subscribe(() => {\r\n      this._locationChanges.unsubscribe();\r\n      this._overlayRef.dispose();\r\n      this._afterDismissed.next(this._result);\r\n      this._afterDismissed.complete();\r\n    });\r\n\r\n    if (!containerInstance.bottomSheetConfig.disableClose) {\r\n      merge(\r\n        _overlayRef.backdropClick(),\r\n        _overlayRef.keydownEvents().pipe(filter(event => event.keyCode === ESCAPE))\r\n      ).subscribe(() => this.dismiss());\r\n    }\r\n\r\n    if (location) {\r\n      this._locationChanges = location.subscribe(() => {\r\n        if (containerInstance.bottomSheetConfig.closeOnNavigation) {\r\n          this.dismiss();\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Dismisses the bottom sheet.\r\n   * @param result Data to be passed back to the bottom sheet opener.\r\n   */\r\n  dismiss(result?: R): void {\r\n    if (!this._afterDismissed.closed) {\r\n      // Transition the backdrop in parallel to the bottom sheet.\r\n      this.containerInstance._animationStateChanged.pipe(\r\n        filter(event => event.phaseName === 'start'),\r\n        take(1)\r\n      ).subscribe(() => this._overlayRef.detachBackdrop());\r\n\r\n      this._result = result;\r\n      this.containerInstance.exit();\r\n    }\r\n  }\r\n\r\n  /** Gets an observable that is notified when the bottom sheet is finished closing. */\r\n  afterDismissed(): Observable<R | undefined> {\r\n    return this._afterDismissed.asObservable();\r\n  }\r\n\r\n  /** Gets an observable that is notified when the bottom sheet has opened and appeared. */\r\n  afterOpened(): Observable<void> {\r\n    return this._afterOpened.asObservable();\r\n  }\r\n\r\n  /**\r\n   * Gets an observable that emits when the overlay's backdrop has been clicked.\r\n   */\r\n  backdropClick(): Observable<MouseEvent> {\r\n    return this._overlayRef.backdropClick();\r\n  }\r\n\r\n  /**\r\n   * Gets an observable that emits when keydown events are targeted on the overlay.\r\n   */\r\n  keydownEvents(): Observable<KeyboardEvent> {\r\n    return this._overlayRef.keydownEvents();\r\n  }\r\n}\r\n"]}