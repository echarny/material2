{"version":3,"file":"ink-bar.js","sourceRoot":"","sources":["../../../../../src/lib/tabs/ink-bar.ts"],"names":[],"mappings":";;;;;;;;;;;AAQA,OAAO,EAAC,SAAS,EAAE,UAAU,EAAE,MAAM,EAAE,cAAc,EAAE,MAAM,EAAC,MAAM,eAAe,CAAC;;;;;;;;;;;;;;;AAapF,MAAM,CAAC,qBAAM,uBAAuB,GAClC,IAAI,cAAc,CAAuB,qBAAqB,EAAE;IAC9D,UAAU,EAAE,MAAM;IAClB,OAAO,EAAE,+BAA+B;CACzC,CAAC,CAAC;;;;;;AAML,MAAM;IACJ,qBAAM,MAAM,GAAG,UAAC,OAAoB;QAAK,OAAA,CAAC;YACxC,IAAI,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,UAAU,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG;YACtD,KAAK,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,WAAW,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG;SACzD,CAAC;IAHuC,CAGvC,CAAC;IAEH,MAAM,CAAC,MAAM,CAAC;CACf;;;;;;IAaC,mBACU,aACA,SACiC;QAFjC,gBAAW,GAAX,WAAW;QACX,YAAO,GAAP,OAAO;QAC0B,sBAAiB,GAAjB,iBAAiB;KAA2B;IAEvF;;;;OAIG;;;;;;;IACH,kCAAc;;;;;;IAAd,UAAe,OAAoB;QAAnC,iBAUC;QATC,IAAI,CAAC,IAAI,EAAE,CAAC;QAEZ,EAAE,CAAC,CAAC,OAAO,qBAAqB,KAAK,WAAW,CAAC,CAAC,CAAC;YACjD,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC;gBAC7B,qBAAqB,CAAC,cAAM,OAAA,KAAI,CAAC,UAAU,CAAC,OAAO,CAAC,EAAxB,CAAwB,CAAC,CAAC;aACvD,CAAC,CAAC;SACJ;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;SAC1B;KACF;IAED,yBAAyB;;;;;IACzB,wBAAI;;;;IAAJ;QACE,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,KAAK,CAAC,UAAU,GAAG,SAAS,CAAC;KAC7D;IAED,yBAAyB;;;;;IACzB,wBAAI;;;;IAAJ;QACE,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,KAAK,CAAC,UAAU,GAAG,QAAQ,CAAC;KAC5D;;;;;;IAMO,8BAAU;;;;;cAAC,OAAoB;QACrC,qBAAM,SAAS,GAAG,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC;QAClD,qBAAM,MAAM,GAAgB,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC;QAE3D,MAAM,CAAC,KAAK,CAAC,IAAI,GAAG,SAAS,CAAC,IAAI,CAAC;QACnC,MAAM,CAAC,KAAK,CAAC,KAAK,GAAG,SAAS,CAAC,KAAK,CAAC;;;gBAhDxC,SAAS,SAAC;oBACT,QAAQ,EAAE,aAAa;oBACvB,IAAI,EAAE;wBACJ,OAAO,EAAE,aAAa;qBACvB;iBACF;;;;gBAzCkB,UAAU;gBAA0B,MAAM;gDA8CxD,MAAM,SAAC,uBAAuB;;oBAtDnC;;SAkDa,SAAS","sourcesContent":["/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {Directive, ElementRef, Inject, InjectionToken, NgZone} from '@angular/core';\r\n\r\n\r\n/**\r\n * Interface for a a MatInkBar positioner method, defining the positioning and width of the ink\r\n * bar in a set of tabs.\r\n */\r\n// tslint:disable-next-line class-name Using leading underscore to denote internal interface.\r\nexport interface _MatInkBarPositioner {\r\n  (element: HTMLElement): { left: string, width: string };\r\n}\r\n\r\n/** Injection token for the MatInkBar's Positioner. */\r\nexport const _MAT_INK_BAR_POSITIONER =\r\n  new InjectionToken<_MatInkBarPositioner>('MatInkBarPositioner', {\r\n    providedIn: 'root',\r\n    factory: _MAT_INK_BAR_POSITIONER_FACTORY\r\n  });\r\n\r\n/**\r\n * The default positioner function for the MatInkBar.\r\n * @docs-private\r\n */\r\nexport function _MAT_INK_BAR_POSITIONER_FACTORY(): _MatInkBarPositioner {\r\n  const method = (element: HTMLElement) => ({\r\n    left: element ? (element.offsetLeft || 0) + 'px' : '0',\r\n    width: element ? (element.offsetWidth || 0) + 'px' : '0',\r\n  });\r\n\r\n  return method;\r\n}\r\n\r\n/**\r\n * The ink-bar is used to display and animate the line underneath the current active tab label.\r\n * @docs-private\r\n */\r\n@Directive({\r\n  selector: 'mat-ink-bar',\r\n  host: {\r\n    'class': 'mat-ink-bar',\r\n  },\r\n})\r\nexport class MatInkBar {\r\n  constructor(\r\n    private _elementRef: ElementRef,\r\n    private _ngZone: NgZone,\r\n    @Inject(_MAT_INK_BAR_POSITIONER) private _inkBarPositioner: _MatInkBarPositioner) { }\r\n\r\n  /**\r\n   * Calculates the styles from the provided element in order to align the ink-bar to that element.\r\n   * Shows the ink bar if previously set as hidden.\r\n   * @param element\r\n   */\r\n  alignToElement(element: HTMLElement) {\r\n    this.show();\r\n\r\n    if (typeof requestAnimationFrame !== 'undefined') {\r\n      this._ngZone.runOutsideAngular(() => {\r\n        requestAnimationFrame(() => this._setStyles(element));\r\n      });\r\n    } else {\r\n      this._setStyles(element);\r\n    }\r\n  }\r\n\r\n  /** Shows the ink bar. */\r\n  show(): void {\r\n    this._elementRef.nativeElement.style.visibility = 'visible';\r\n  }\r\n\r\n  /** Hides the ink bar. */\r\n  hide(): void {\r\n    this._elementRef.nativeElement.style.visibility = 'hidden';\r\n  }\r\n\r\n  /**\r\n   * Sets the proper styles to the ink bar element.\r\n   * @param element\r\n   */\r\n  private _setStyles(element: HTMLElement) {\r\n    const positions = this._inkBarPositioner(element);\r\n    const inkBar: HTMLElement = this._elementRef.nativeElement;\r\n\r\n    inkBar.style.left = positions.left;\r\n    inkBar.style.width = positions.width;\r\n  }\r\n}\r\n"]}