{"version":3,"file":"tab.js","sourceRoot":"","sources":["../../../../../src/lib/tabs/tab.ts"],"names":[],"mappings":";;;;;;;;;;;;AAQA,OAAO,EAAC,cAAc,EAAC,MAAM,qBAAqB,CAAC;AACnD,OAAO,EACL,uBAAuB,EACvB,SAAS,EACT,YAAY,EACZ,KAAK,EAKL,WAAW,EACX,SAAS,EACT,gBAAgB,EAChB,iBAAiB,GAClB,MAAM,eAAe,CAAC;AACvB,OAAO,EAAa,aAAa,EAAC,MAAM,wBAAwB,CAAC;AACjE,OAAO,EAAC,OAAO,EAAC,MAAM,MAAM,CAAC;AAC7B,OAAO,EAAC,WAAW,EAAC,MAAM,aAAa,CAAC;AACxC,OAAO,EAAC,aAAa,EAAC,MAAM,eAAe,CAAC;;;;AAK5C;;;AAAA;;;qBA/BA;IA+B0B,CAAA;;;;AAA1B,sBAA0B;AAC1B,MAAM,CAAC,qBAAM,gBAAgB,GAAG,aAAa,CAAC,UAAU,CAAC,CAAC;;IAW9B,kCAAgB;IAoD1C,gBAAoB,iBAAmC;QAAvD,YACE,iBAAO,SACR;QAFmB,uBAAiB,GAAjB,iBAAiB,CAAkB;;;;0BAvCnB,EAAE;;;;+BAYU,IAAI;;;;8BAQ3B,IAAI,OAAO,EAAQ;;;;;yBAMlB,IAAI;;;;;uBAMN,IAAI;;;;yBAKjB,KAAK;;KAIf;IA1BD,sBAAI,2BAAO;QADX,oBAAoB;;;;;QACpB;YACE,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC;SAC5B;;;OAAA;;;;;IA0BD,4BAAW;;;;IAAX,UAAY,OAAsB;QAChC,EAAE,CAAC,CAAC,OAAO,CAAC,cAAc,CAAC,WAAW,CAAC,IAAI,OAAO,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;YAC9E,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;SAC3B;KACF;;;;IAED,4BAAW;;;IAAX;QACE,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC;KAC/B;;;;IAED,yBAAQ;;;IAAR;QACE,IAAI,CAAC,cAAc,GAAG,IAAI,cAAc,CACpC,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;KAC7E;;gBA9EF,SAAS,SAAC;oBACT,QAAQ,EAAE,MAAM,CAAC,EAAE;oBACnB,QAAQ,EAAE,SAAS;oBACnB,WAAW,EAAE,UAAU;oBACvB,MAAM,EAAE,CAAC,UAAU,CAAC;oBACpB,eAAe,EAAE,uBAAuB,CAAC,MAAM;oBAC/C,aAAa,EAAE,iBAAiB,CAAC,IAAI;oBACrC,QAAQ,EAAE,QAAQ;iBACnB;;;;gBAtBC,gBAAgB;;;kCAyBf,YAAY,SAAC,WAAW;qCAKxB,YAAY,SAAC,aAAa,EAAE,EAAC,IAAI,EAAE,WAAW,EAAC;qCAG/C,SAAS,SAAC,WAAW;8BAGrB,KAAK,SAAC,OAAO;8BAGb,KAAK,SAAC,YAAY;mCAMlB,KAAK,SAAC,iBAAiB;;iBAjE1B;EA2C4B,gBAAgB;SAA/B,MAAM","sourcesContent":["/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {TemplatePortal} from '@angular/cdk/portal';\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  ContentChild,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  SimpleChanges,\r\n  TemplateRef,\r\n  ViewChild,\r\n  ViewContainerRef,\r\n  ViewEncapsulation,\r\n} from '@angular/core';\r\nimport {CanDisable, mixinDisabled} from '@angular/material/core';\r\nimport {Subject} from 'rxjs';\r\nimport {MatTabLabel} from './tab-label';\r\nimport {MatTabContent} from './tab-content';\r\n\r\n\r\n// Boilerplate for applying mixins to MatTab.\r\n/** @docs-private */\r\nexport class MatTabBase {}\r\nexport const _MatTabMixinBase = mixinDisabled(MatTabBase);\r\n\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'mat-tab',\r\n  templateUrl: 'tab.html',\r\n  inputs: ['disabled'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n  exportAs: 'matTab',\r\n})\r\nexport class MatTab extends _MatTabMixinBase implements OnInit, CanDisable, OnChanges, OnDestroy {\r\n  /** Content for the tab label given by `<ng-template mat-tab-label>`. */\r\n  @ContentChild(MatTabLabel) templateLabel: MatTabLabel;\r\n\r\n  /**\r\n   * Template provided in the tab content that will be used if present, used to enable lazy-loading\r\n   */\r\n  @ContentChild(MatTabContent, {read: TemplateRef}) _explicitContent: TemplateRef<any>;\r\n\r\n  /** Template inside the MatTab view that contains an `<ng-content>`. */\r\n  @ViewChild(TemplateRef) _implicitContent: TemplateRef<any>;\r\n\r\n  /** Plain text label for the tab, used when there is no template label. */\r\n  @Input('label') textLabel: string = '';\r\n\r\n  /** Aria label for the tab. */\r\n  @Input('aria-label') ariaLabel: string;\r\n\r\n  /**\r\n   * Reference to the element that the tab is labelled by.\r\n   * Will be cleared if `aria-label` is set at the same time.\r\n   */\r\n  @Input('aria-labelledby') ariaLabelledby: string;\r\n\r\n  /** Portal that will be the hosted content of the tab */\r\n  private _contentPortal: TemplatePortal | null = null;\r\n\r\n  /** @docs-private */\r\n  get content(): TemplatePortal | null {\r\n    return this._contentPortal;\r\n  }\r\n\r\n  /** Emits whenever the internal state of the tab changes. */\r\n  readonly _stateChanges = new Subject<void>();\r\n\r\n  /**\r\n   * The relatively indexed position where 0 represents the center, negative is left, and positive\r\n   * represents the right.\r\n   */\r\n  position: number | null = null;\r\n\r\n  /**\r\n   * The initial relatively index origin of the tab if it was created and selected after there\r\n   * was already a selected tab. Provides context of what position the tab should originate from.\r\n   */\r\n  origin: number | null = null;\r\n\r\n  /**\r\n   * Whether the tab is currently active.\r\n   */\r\n  isActive = false;\r\n\r\n  constructor(private _viewContainerRef: ViewContainerRef) {\r\n    super();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.hasOwnProperty('textLabel') || changes.hasOwnProperty('disabled')) {\r\n      this._stateChanges.next();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this._stateChanges.complete();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this._contentPortal = new TemplatePortal(\r\n        this._explicitContent || this._implicitContent, this._viewContainerRef);\r\n  }\r\n}\r\n"]}