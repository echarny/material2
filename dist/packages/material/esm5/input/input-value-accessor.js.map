{"version":3,"file":"input-value-accessor.js","sourceRoot":"","sources":["../../../../../src/lib/input/input-value-accessor.ts"],"names":[],"mappings":";;;;;;;;;;;AAQA,OAAO,EAAC,cAAc,EAAC,MAAM,eAAe,CAAC;;;;;;;AAS7C,MAAM,CAAC,qBAAM,wBAAwB,GACjC,IAAI,cAAc,CAAe,0BAA0B,CAAC,CAAC","sourcesContent":["/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {InjectionToken} from '@angular/core';\r\n\r\n\r\n/**\r\n * This token is used to inject the object whose value should be set into `MatInput`. If none is\r\n * provided, the native `HTMLInputElement` is used. Directives like `MatDatepickerInput` can provide\r\n * themselves for this token, in order to make `MatInput` delegate the getting and setting of the\r\n * value to them.\r\n */\r\nexport const MAT_INPUT_VALUE_ACCESSOR =\r\n    new InjectionToken<{value: any}>('MAT_INPUT_VALUE_ACCESSOR');\r\n"]}