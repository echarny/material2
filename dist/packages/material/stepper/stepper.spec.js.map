{"version":3,"file":"stepper.spec.js","sourceRoot":"","sources":["../../../../src/lib/stepper/stepper.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import {Direction, Directionality} from '@angular/cdk/bidi';\r\nimport {\r\n  DOWN_ARROW,\r\n  END,\r\n  ENTER,\r\n  HOME,\r\n  LEFT_ARROW,\r\n  RIGHT_ARROW,\r\n  SPACE,\r\n  UP_ARROW,\r\n} from '@angular/cdk/keycodes';\r\nimport {StepperOrientation} from '@angular/cdk/stepper';\r\nimport {dispatchKeyboardEvent} from '@angular/cdk/testing';\r\nimport {Component, DebugElement, EventEmitter, OnInit} from '@angular/core';\r\nimport {async, ComponentFixture, fakeAsync, flush, inject, TestBed} from '@angular/core/testing';\r\nimport {\r\n  AbstractControl,\r\n  AsyncValidatorFn,\r\n  FormControl,\r\n  FormGroup,\r\n  ReactiveFormsModule,\r\n  ValidationErrors,\r\n  Validators\r\n} from '@angular/forms';\r\nimport {By} from '@angular/platform-browser';\r\nimport {NoopAnimationsModule} from '@angular/platform-browser/animations';\r\nimport {Observable, Subject} from 'rxjs';\r\nimport {map, take} from 'rxjs/operators';\r\nimport {MatStepperModule} from './index';\r\nimport {MatHorizontalStepper, MatStep, MatStepper, MatVerticalStepper} from './stepper';\r\nimport {MatStepperNext, MatStepperPrevious} from './stepper-button';\r\nimport {MatStepperIntl} from './stepper-intl';\r\n\r\n\r\nconst VALID_REGEX = /valid/;\r\n\r\ndescribe('MatStepper', () => {\r\n  let dir: {value: Direction, change: EventEmitter<Direction>};\r\n\r\n  beforeEach(async(() => {\r\n    dir = {\r\n      value: 'ltr',\r\n      change: new EventEmitter()\r\n    };\r\n\r\n    TestBed.configureTestingModule({\r\n      imports: [MatStepperModule, NoopAnimationsModule, ReactiveFormsModule],\r\n      declarations: [\r\n        SimpleMatVerticalStepperApp,\r\n        LinearMatVerticalStepperApp,\r\n        IconOverridesStepper,\r\n        SimplePreselectedMatHorizontalStepperApp,\r\n        SimpleStepperWithoutStepControl,\r\n        SimpleStepperWithStepControlAndCompletedBinding,\r\n        SimpleMatHorizontalStepperApp,\r\n        LinearStepperWithValidOptionalStep,\r\n        StepperWithAriaInputs,\r\n      ],\r\n      providers: [\r\n        {provide: Directionality, useFactory: () => dir}\r\n      ]\r\n    });\r\n\r\n    TestBed.compileComponents();\r\n  }));\r\n\r\n  describe('basic stepper', () => {\r\n    let fixture: ComponentFixture<SimpleMatVerticalStepperApp>;\r\n\r\n    beforeEach(() => {\r\n      fixture = TestBed.createComponent(SimpleMatVerticalStepperApp);\r\n      fixture.detectChanges();\r\n    });\r\n\r\n    it('should default to the first step', () => {\r\n      let stepperComponent = fixture.debugElement\r\n          .query(By.css('mat-vertical-stepper')).componentInstance;\r\n      expect(stepperComponent.selectedIndex).toBe(0);\r\n    });\r\n\r\n    it('should throw when a negative `selectedIndex` is assigned', () => {\r\n      const stepperComponent: MatVerticalStepper = fixture.debugElement\r\n          .query(By.css('mat-vertical-stepper')).componentInstance;\r\n\r\n      expect(() => {\r\n        stepperComponent.selectedIndex = -10;\r\n        fixture.detectChanges();\r\n      }).toThrowError(/Cannot assign out-of-bounds/);\r\n    });\r\n\r\n    it('should throw when an out-of-bounds `selectedIndex` is assigned', () => {\r\n      const stepperComponent: MatVerticalStepper = fixture.debugElement\r\n          .query(By.css('mat-vertical-stepper')).componentInstance;\r\n\r\n      expect(() => {\r\n        stepperComponent.selectedIndex = 1337;\r\n        fixture.detectChanges();\r\n      }).toThrowError(/Cannot assign out-of-bounds/);\r\n    });\r\n\r\n    it('should change selected index on header click', () => {\r\n      let stepHeaders = fixture.debugElement.queryAll(By.css('.mat-vertical-stepper-header'));\r\n      let stepperComponent = fixture.debugElement.query(By.directive(MatStepper)).componentInstance;\r\n\r\n      expect(stepperComponent.selectedIndex).toBe(0);\r\n      expect(stepperComponent.selected instanceof MatStep).toBe(true);\r\n\r\n      // select the second step\r\n      let stepHeaderEl = stepHeaders[1].nativeElement;\r\n      stepHeaderEl.click();\r\n      fixture.detectChanges();\r\n\r\n      expect(stepperComponent.selectedIndex).toBe(1);\r\n      expect(stepperComponent.selected instanceof MatStep).toBe(true);\r\n\r\n      // select the third step\r\n      stepHeaderEl = stepHeaders[2].nativeElement;\r\n      stepHeaderEl.click();\r\n      fixture.detectChanges();\r\n\r\n      expect(stepperComponent.selectedIndex).toBe(2);\r\n      expect(stepperComponent.selected instanceof MatStep).toBe(true);\r\n    });\r\n\r\n    it('should set the \"tablist\" role on stepper', () => {\r\n      let stepperEl = fixture.debugElement.query(By.css('mat-vertical-stepper')).nativeElement;\r\n      expect(stepperEl.getAttribute('role')).toBe('tablist');\r\n    });\r\n\r\n    it('should set aria-expanded of content correctly', () => {\r\n      let stepContents = fixture.debugElement.queryAll(By.css(`.mat-vertical-stepper-content`));\r\n      let stepperComponent = fixture.debugElement.query(By.directive(MatStepper)).componentInstance;\r\n      let firstStepContentEl = stepContents[0].nativeElement;\r\n      expect(firstStepContentEl.getAttribute('aria-expanded')).toBe('true');\r\n\r\n      stepperComponent.selectedIndex = 1;\r\n      fixture.detectChanges();\r\n\r\n      expect(firstStepContentEl.getAttribute('aria-expanded')).toBe('false');\r\n      let secondStepContentEl = stepContents[1].nativeElement;\r\n      expect(secondStepContentEl.getAttribute('aria-expanded')).toBe('true');\r\n    });\r\n\r\n    it('should display the correct label', () => {\r\n      let stepperComponent = fixture.debugElement.query(By.directive(MatStepper)).componentInstance;\r\n      let selectedLabel = fixture.nativeElement.querySelector('[aria-selected=\"true\"]');\r\n      expect(selectedLabel.textContent).toMatch('Step 1');\r\n\r\n      stepperComponent.selectedIndex = 2;\r\n      fixture.detectChanges();\r\n\r\n      selectedLabel = fixture.nativeElement.querySelector('[aria-selected=\"true\"]');\r\n      expect(selectedLabel.textContent).toMatch('Step 3');\r\n\r\n      fixture.componentInstance.inputLabel = 'New Label';\r\n      fixture.detectChanges();\r\n\r\n      selectedLabel = fixture.nativeElement.querySelector('[aria-selected=\"true\"]');\r\n      expect(selectedLabel.textContent).toMatch('New Label');\r\n    });\r\n\r\n    it('should go to next available step when the next button is clicked', () => {\r\n      let stepperComponent = fixture.debugElement.query(By.directive(MatStepper)).componentInstance;\r\n\r\n      expect(stepperComponent.selectedIndex).toBe(0);\r\n\r\n      let nextButtonNativeEl = fixture.debugElement\r\n          .queryAll(By.directive(MatStepperNext))[0].nativeElement;\r\n      nextButtonNativeEl.click();\r\n      fixture.detectChanges();\r\n\r\n      expect(stepperComponent.selectedIndex).toBe(1);\r\n\r\n      nextButtonNativeEl = fixture.debugElement\r\n          .queryAll(By.directive(MatStepperNext))[1].nativeElement;\r\n      nextButtonNativeEl.click();\r\n      fixture.detectChanges();\r\n\r\n      expect(stepperComponent.selectedIndex).toBe(2);\r\n\r\n      nextButtonNativeEl = fixture.debugElement\r\n          .queryAll(By.directive(MatStepperNext))[2].nativeElement;\r\n      nextButtonNativeEl.click();\r\n      fixture.detectChanges();\r\n\r\n      expect(stepperComponent.selectedIndex).toBe(2);\r\n    });\r\n\r\n    it('should set the next stepper button type to \"submit\"', () => {\r\n      const button = fixture.debugElement.query(By.directive(MatStepperNext)).nativeElement;\r\n      expect(button.type).toBe('submit', `Expected the button to have \"submit\" set as type.`);\r\n    });\r\n\r\n    it('should go to previous available step when the previous button is clicked', () => {\r\n      let stepperComponent = fixture.debugElement.query(By.directive(MatStepper)).componentInstance;\r\n\r\n      expect(stepperComponent.selectedIndex).toBe(0);\r\n\r\n      stepperComponent.selectedIndex = 2;\r\n      let previousButtonNativeEl = fixture.debugElement\r\n          .queryAll(By.directive(MatStepperPrevious))[2].nativeElement;\r\n      previousButtonNativeEl.click();\r\n      fixture.detectChanges();\r\n\r\n      expect(stepperComponent.selectedIndex).toBe(1);\r\n\r\n      previousButtonNativeEl = fixture.debugElement\r\n          .queryAll(By.directive(MatStepperPrevious))[1].nativeElement;\r\n      previousButtonNativeEl.click();\r\n      fixture.detectChanges();\r\n\r\n      expect(stepperComponent.selectedIndex).toBe(0);\r\n\r\n      previousButtonNativeEl = fixture.debugElement\r\n          .queryAll(By.directive(MatStepperPrevious))[0].nativeElement;\r\n      previousButtonNativeEl.click();\r\n      fixture.detectChanges();\r\n\r\n      expect(stepperComponent.selectedIndex).toBe(0);\r\n    });\r\n\r\n    it('should set the previous stepper button type to \"button\"', () => {\r\n      const button = fixture.debugElement.query(By.directive(MatStepperPrevious)).nativeElement;\r\n      expect(button.type).toBe('button', `Expected the button to have \"button\" set as type.`);\r\n    });\r\n\r\n    it('should set the correct step position for animation', () => {\r\n      let stepperComponent = fixture.debugElement.query(By.directive(MatStepper)).componentInstance;\r\n\r\n      expect(stepperComponent._getAnimationDirection(0)).toBe('current');\r\n      expect(stepperComponent._getAnimationDirection(1)).toBe('next');\r\n      expect(stepperComponent._getAnimationDirection(2)).toBe('next');\r\n\r\n      stepperComponent.selectedIndex = 1;\r\n      fixture.detectChanges();\r\n\r\n      expect(stepperComponent._getAnimationDirection(0)).toBe('previous');\r\n      expect(stepperComponent._getAnimationDirection(2)).toBe('next');\r\n      expect(stepperComponent._getAnimationDirection(1)).toBe('current');\r\n\r\n      stepperComponent.selectedIndex = 2;\r\n      fixture.detectChanges();\r\n\r\n      expect(stepperComponent._getAnimationDirection(0)).toBe('previous');\r\n      expect(stepperComponent._getAnimationDirection(1)).toBe('previous');\r\n      expect(stepperComponent._getAnimationDirection(2)).toBe('current');\r\n    });\r\n\r\n    it('should not set focus on header of selected step if header is not clicked', () => {\r\n      let stepperComponent = fixture.debugElement.query(By.directive(MatStepper)).componentInstance;\r\n      let stepHeaderEl = fixture.debugElement.queryAll(By.css('mat-step-header'))[1].nativeElement;\r\n      let nextButtonNativeEl = fixture.debugElement\r\n          .queryAll(By.directive(MatStepperNext))[0].nativeElement;\r\n      spyOn(stepHeaderEl, 'focus');\r\n      nextButtonNativeEl.click();\r\n      fixture.detectChanges();\r\n\r\n      expect(stepperComponent.selectedIndex).toBe(1);\r\n      expect(stepHeaderEl.focus).not.toHaveBeenCalled();\r\n    });\r\n\r\n    it('should only be able to return to a previous step if it is editable', () => {\r\n      let stepperComponent = fixture.debugElement.query(By.directive(MatStepper)).componentInstance;\r\n\r\n      stepperComponent.selectedIndex = 1;\r\n      stepperComponent._steps.toArray()[0].editable = false;\r\n      let previousButtonNativeEl = fixture.debugElement\r\n          .queryAll(By.directive(MatStepperPrevious))[1].nativeElement;\r\n      previousButtonNativeEl.click();\r\n      fixture.detectChanges();\r\n\r\n      expect(stepperComponent.selectedIndex).toBe(1);\r\n\r\n      stepperComponent._steps.toArray()[0].editable = true;\r\n      previousButtonNativeEl.click();\r\n      fixture.detectChanges();\r\n\r\n      expect(stepperComponent.selectedIndex).toBe(0);\r\n    });\r\n\r\n    it('should set create icon if step is editable and completed', () => {\r\n      let stepperComponent = fixture.debugElement.query(By.directive(MatStepper)).componentInstance;\r\n      let nextButtonNativeEl = fixture.debugElement\r\n          .queryAll(By.directive(MatStepperNext))[0].nativeElement;\r\n      expect(stepperComponent._getIndicatorType(0)).toBe('number');\r\n      stepperComponent._steps.toArray()[0].editable = true;\r\n      nextButtonNativeEl.click();\r\n      fixture.detectChanges();\r\n\r\n      expect(stepperComponent._getIndicatorType(0)).toBe('edit');\r\n    });\r\n\r\n    it('should set done icon if step is not editable and is completed', () => {\r\n      let stepperComponent = fixture.debugElement.query(By.directive(MatStepper)).componentInstance;\r\n      let nextButtonNativeEl = fixture.debugElement\r\n          .queryAll(By.directive(MatStepperNext))[0].nativeElement;\r\n      expect(stepperComponent._getIndicatorType(0)).toBe('number');\r\n      stepperComponent._steps.toArray()[0].editable = false;\r\n      nextButtonNativeEl.click();\r\n      fixture.detectChanges();\r\n\r\n      expect(stepperComponent._getIndicatorType(0)).toBe('done');\r\n    });\r\n\r\n    it('should re-render when the i18n labels change', inject([MatStepperIntl],\r\n      (intl: MatStepperIntl) => {\r\n        fixture.destroy();\r\n\r\n        const i18nFixture = TestBed.createComponent(SimpleMatHorizontalStepperApp);\r\n        i18nFixture.detectChanges();\r\n\r\n        const header =\r\n            i18nFixture.debugElement.queryAll(By.css('mat-step-header'))[2].nativeElement;\r\n        const optionalLabel = header.querySelector('.mat-step-optional');\r\n\r\n        expect(optionalLabel).toBeTruthy();\r\n        expect(optionalLabel.textContent).toBe('Optional');\r\n\r\n        intl.optionalLabel = 'Valgfri';\r\n        intl.changes.next();\r\n        i18nFixture.detectChanges();\r\n\r\n        expect(optionalLabel.textContent).toBe('Valgfri');\r\n      }));\r\n\r\n      it('should emit an event when the enter animation is done', fakeAsync(() => {\r\n        let stepper = fixture.debugElement.query(By.directive(MatStepper)).componentInstance;\r\n        let selectionChangeSpy = jasmine.createSpy('selectionChange spy');\r\n        let animationDoneSpy = jasmine.createSpy('animationDone spy');\r\n        let selectionChangeSubscription = stepper.selectionChange.subscribe(selectionChangeSpy);\r\n        let animationDoneSubscription = stepper.animationDone.subscribe(animationDoneSpy);\r\n\r\n        stepper.selectedIndex = 1;\r\n        fixture.detectChanges();\r\n\r\n        expect(selectionChangeSpy).toHaveBeenCalledTimes(1);\r\n        expect(animationDoneSpy).not.toHaveBeenCalled();\r\n\r\n        flush();\r\n\r\n        expect(selectionChangeSpy).toHaveBeenCalledTimes(1);\r\n        expect(animationDoneSpy).toHaveBeenCalledTimes(1);\r\n\r\n        selectionChangeSubscription.unsubscribe();\r\n        animationDoneSubscription.unsubscribe();\r\n      }));\r\n\r\n    it('should not throw when attempting to get the selected step too early', () => {\r\n      fixture.destroy();\r\n      fixture = TestBed.createComponent(SimpleMatVerticalStepperApp);\r\n\r\n      const stepperComponent: MatVerticalStepper = fixture.debugElement\r\n          .query(By.css('mat-vertical-stepper')).componentInstance;\r\n\r\n      expect(() => stepperComponent.selected).not.toThrow();\r\n    });\r\n\r\n    it('should not throw when attempting to set the selected step too early', () => {\r\n      fixture.destroy();\r\n      fixture = TestBed.createComponent(SimpleMatVerticalStepperApp);\r\n\r\n      const stepperComponent: MatVerticalStepper = fixture.debugElement\r\n          .query(By.css('mat-vertical-stepper')).componentInstance;\r\n\r\n      expect(() => stepperComponent.selected = null!).not.toThrow();\r\n      expect(stepperComponent.selectedIndex).toBe(-1);\r\n    });\r\n\r\n    it('should set the correct aria-posinset and aria-setsize', () => {\r\n      const headers =\r\n          Array.from<HTMLElement>(fixture.nativeElement.querySelectorAll('.mat-step-header'));\r\n\r\n      expect(headers.map(header => header.getAttribute('aria-posinset'))).toEqual(['1', '2', '3']);\r\n      expect(headers.every(header => header.getAttribute('aria-setsize') === '3')).toBe(true);\r\n    });\r\n\r\n  });\r\n\r\n  describe('icon overrides', () => {\r\n    let fixture: ComponentFixture<IconOverridesStepper>;\r\n\r\n    beforeEach(() => {\r\n      fixture = TestBed.createComponent(IconOverridesStepper);\r\n      fixture.detectChanges();\r\n    });\r\n\r\n    it('should allow for the `edit` icon to be overridden', () => {\r\n      const stepperDebugElement = fixture.debugElement.query(By.directive(MatStepper));\r\n      const stepperComponent: MatStepper = stepperDebugElement.componentInstance;\r\n\r\n      stepperComponent._steps.toArray()[0].editable = true;\r\n      stepperComponent.next();\r\n      fixture.detectChanges();\r\n\r\n      const header = stepperDebugElement.nativeElement.querySelector('mat-step-header');\r\n\r\n      expect(header.textContent).toContain('Custom edit');\r\n    });\r\n\r\n    it('should allow for the `done` icon to be overridden', () => {\r\n      const stepperDebugElement = fixture.debugElement.query(By.directive(MatStepper));\r\n      const stepperComponent: MatStepper = stepperDebugElement.componentInstance;\r\n\r\n      stepperComponent._steps.toArray()[0].editable = false;\r\n      stepperComponent.next();\r\n      fixture.detectChanges();\r\n\r\n      const header = stepperDebugElement.nativeElement.querySelector('mat-step-header');\r\n\r\n      expect(header.textContent).toContain('Custom done');\r\n    });\r\n\r\n    it('should allow for the `number` icon to be overridden with context', () => {\r\n      const stepperDebugElement = fixture.debugElement.query(By.directive(MatStepper));\r\n      const headers = stepperDebugElement.nativeElement.querySelectorAll('mat-step-header');\r\n\r\n      expect(headers[2].textContent).toContain('III');\r\n    });\r\n  });\r\n\r\n  describe('RTL', () => {\r\n    let fixture: ComponentFixture<SimpleMatVerticalStepperApp>;\r\n\r\n    beforeEach(() => {\r\n      dir.value = 'rtl';\r\n      fixture = TestBed.createComponent(SimpleMatVerticalStepperApp);\r\n      fixture.detectChanges();\r\n    });\r\n\r\n    it('should reverse animation in RTL mode', () => {\r\n      let stepperComponent = fixture.debugElement.query(By.directive(MatStepper)).componentInstance;\r\n\r\n      expect(stepperComponent._getAnimationDirection(0)).toBe('current');\r\n      expect(stepperComponent._getAnimationDirection(1)).toBe('previous');\r\n      expect(stepperComponent._getAnimationDirection(2)).toBe('previous');\r\n\r\n      stepperComponent.selectedIndex = 1;\r\n      fixture.detectChanges();\r\n\r\n      expect(stepperComponent._getAnimationDirection(0)).toBe('next');\r\n      expect(stepperComponent._getAnimationDirection(2)).toBe('previous');\r\n      expect(stepperComponent._getAnimationDirection(1)).toBe('current');\r\n\r\n      stepperComponent.selectedIndex = 2;\r\n      fixture.detectChanges();\r\n\r\n      expect(stepperComponent._getAnimationDirection(0)).toBe('next');\r\n      expect(stepperComponent._getAnimationDirection(1)).toBe('next');\r\n      expect(stepperComponent._getAnimationDirection(2)).toBe('current');\r\n    });\r\n  });\r\n\r\n  describe('linear stepper', () => {\r\n    let fixture: ComponentFixture<LinearMatVerticalStepperApp>;\r\n    let testComponent: LinearMatVerticalStepperApp;\r\n    let stepperComponent: MatVerticalStepper;\r\n\r\n    beforeEach(() => {\r\n      fixture = TestBed.createComponent(LinearMatVerticalStepperApp);\r\n      fixture.detectChanges();\r\n\r\n      testComponent = fixture.componentInstance;\r\n      stepperComponent = fixture.debugElement\r\n          .query(By.css('mat-vertical-stepper')).componentInstance;\r\n    });\r\n\r\n    it('should have true linear attribute', () => {\r\n      expect(stepperComponent.linear).toBe(true);\r\n    });\r\n\r\n    it('should not move to next step if current step is invalid', () => {\r\n      expect(testComponent.oneGroup.get('oneCtrl')!.value).toBe('');\r\n      expect(testComponent.oneGroup.get('oneCtrl')!.valid).toBe(false);\r\n      expect(testComponent.oneGroup.valid).toBe(false);\r\n      expect(testComponent.oneGroup.invalid).toBe(true);\r\n      expect(stepperComponent.selectedIndex).toBe(0);\r\n\r\n      let stepHeaderEl = fixture.debugElement\r\n          .queryAll(By.css('.mat-vertical-stepper-header'))[1].nativeElement;\r\n\r\n      stepHeaderEl.click();\r\n      fixture.detectChanges();\r\n\r\n      expect(stepperComponent.selectedIndex).toBe(0);\r\n\r\n      let nextButtonNativeEl = fixture.debugElement\r\n          .queryAll(By.directive(MatStepperNext))[0].nativeElement;\r\n      nextButtonNativeEl.click();\r\n      fixture.detectChanges();\r\n\r\n      expect(stepperComponent.selectedIndex).toBe(0);\r\n\r\n      testComponent.oneGroup.get('oneCtrl')!.setValue('answer');\r\n      stepHeaderEl.click();\r\n      fixture.detectChanges();\r\n\r\n      expect(testComponent.oneGroup.valid).toBe(true);\r\n      expect(stepperComponent.selectedIndex).toBe(1);\r\n    });\r\n\r\n    it('should not move to next step if current step is pending', () => {\r\n      let stepHeaderEl = fixture.debugElement\r\n          .queryAll(By.css('.mat-vertical-stepper-header'))[2].nativeElement;\r\n\r\n      let nextButtonNativeEl = fixture.debugElement\r\n          .queryAll(By.directive(MatStepperNext))[1].nativeElement;\r\n\r\n      testComponent.oneGroup.get('oneCtrl')!.setValue('input');\r\n      testComponent.twoGroup.get('twoCtrl')!.setValue('input');\r\n      stepperComponent.selectedIndex = 1;\r\n      fixture.detectChanges();\r\n      expect(stepperComponent.selectedIndex).toBe(1);\r\n\r\n      // Step status = PENDING\r\n      // Assert that linear stepper does not allow step selection change\r\n      expect(testComponent.twoGroup.pending).toBe(true);\r\n\r\n      stepHeaderEl.click();\r\n      fixture.detectChanges();\r\n\r\n      expect(stepperComponent.selectedIndex).toBe(1);\r\n\r\n      nextButtonNativeEl.click();\r\n      fixture.detectChanges();\r\n\r\n      expect(stepperComponent.selectedIndex).toBe(1);\r\n\r\n      // Trigger asynchronous validation\r\n      testComponent.validationTrigger.next();\r\n      // Asynchronous validation completed:\r\n      // Step status = VALID\r\n      expect(testComponent.twoGroup.pending).toBe(false);\r\n      expect(testComponent.twoGroup.valid).toBe(true);\r\n\r\n      stepHeaderEl.click();\r\n      fixture.detectChanges();\r\n\r\n      expect(stepperComponent.selectedIndex).toBe(2);\r\n\r\n      stepperComponent.selectedIndex = 1;\r\n      fixture.detectChanges();\r\n      expect(stepperComponent.selectedIndex).toBe(1);\r\n\r\n      nextButtonNativeEl.click();\r\n      fixture.detectChanges();\r\n\r\n      expect(stepperComponent.selectedIndex).toBe(2);\r\n    });\r\n\r\n    it('should be able to focus step header upon click if it is unable to be selected', () => {\r\n      let stepHeaderEl = fixture.debugElement.queryAll(By.css('mat-step-header'))[1].nativeElement;\r\n\r\n      fixture.detectChanges();\r\n\r\n      expect(stepHeaderEl.getAttribute('tabindex')).toBe('-1');\r\n    });\r\n\r\n    it('should be able to move to next step even when invalid if current step is optional', () => {\r\n      testComponent.oneGroup.get('oneCtrl')!.setValue('input');\r\n      testComponent.twoGroup.get('twoCtrl')!.setValue('input');\r\n      testComponent.validationTrigger.next();\r\n      stepperComponent.selectedIndex = 1;\r\n      fixture.detectChanges();\r\n      stepperComponent.selectedIndex = 2;\r\n      fixture.detectChanges();\r\n\r\n      expect(stepperComponent._steps.toArray()[2].optional).toBe(true);\r\n      expect(stepperComponent.selectedIndex).toBe(2);\r\n      expect(testComponent.threeGroup.get('threeCtrl')!.valid).toBe(true);\r\n\r\n      const nextButtonNativeEl = fixture.debugElement\r\n          .queryAll(By.directive(MatStepperNext))[2].nativeElement;\r\n      nextButtonNativeEl.click();\r\n      fixture.detectChanges();\r\n\r\n      expect(stepperComponent.selectedIndex)\r\n          .toBe(3, 'Expected selectedIndex to change when optional step input is empty.');\r\n\r\n      stepperComponent.selectedIndex = 2;\r\n      testComponent.threeGroup.get('threeCtrl')!.setValue('input');\r\n      nextButtonNativeEl.click();\r\n      fixture.detectChanges();\r\n\r\n      expect(testComponent.threeGroup.get('threeCtrl')!.valid).toBe(false);\r\n      expect(stepperComponent.selectedIndex)\r\n          .toBe(3, 'Expected selectedIndex to change when optional step input is invalid.');\r\n    });\r\n\r\n    it('should be able to reset the stepper to its initial state', () => {\r\n      const steps = stepperComponent._steps.toArray();\r\n\r\n      testComponent.oneGroup.get('oneCtrl')!.setValue('value');\r\n      fixture.detectChanges();\r\n\r\n      stepperComponent.next();\r\n      fixture.detectChanges();\r\n\r\n      stepperComponent.next();\r\n      fixture.detectChanges();\r\n\r\n      expect(stepperComponent.selectedIndex).toBe(1);\r\n      expect(steps[0].interacted).toBe(true);\r\n      expect(steps[0].completed).toBe(true);\r\n      expect(testComponent.oneGroup.get('oneCtrl')!.valid).toBe(true);\r\n      expect(testComponent.oneGroup.get('oneCtrl')!.value).toBe('value');\r\n\r\n      expect(steps[1].interacted).toBe(true);\r\n      expect(steps[1].completed).toBe(false);\r\n      expect(testComponent.twoGroup.get('twoCtrl')!.valid).toBe(false);\r\n\r\n      stepperComponent.reset();\r\n      fixture.detectChanges();\r\n\r\n      expect(stepperComponent.selectedIndex).toBe(0);\r\n      expect(steps[0].interacted).toBe(false);\r\n      expect(steps[0].completed).toBe(false);\r\n      expect(testComponent.oneGroup.get('oneCtrl')!.valid).toBe(false);\r\n      expect(testComponent.oneGroup.get('oneCtrl')!.value).toBeFalsy();\r\n\r\n      expect(steps[1].interacted).toBe(false);\r\n      expect(steps[1].completed).toBe(false);\r\n      expect(testComponent.twoGroup.get('twoCtrl')!.valid).toBe(false);\r\n    });\r\n\r\n    it('should reset back to the first step when some of the steps are not editable', () => {\r\n      const steps = stepperComponent._steps.toArray();\r\n\r\n      steps[0].editable = false;\r\n\r\n      testComponent.oneGroup.get('oneCtrl')!.setValue('value');\r\n      fixture.detectChanges();\r\n\r\n      stepperComponent.next();\r\n      fixture.detectChanges();\r\n\r\n      expect(stepperComponent.selectedIndex).toBe(1);\r\n\r\n      stepperComponent.reset();\r\n      fixture.detectChanges();\r\n\r\n      expect(stepperComponent.selectedIndex).toBe(0);\r\n    });\r\n\r\n    it('should not clobber the `complete` binding when resetting', () => {\r\n      const steps: MatStep[] = stepperComponent._steps.toArray();\r\n      const fillOutStepper = () => {\r\n        testComponent.oneGroup.get('oneCtrl')!.setValue('input');\r\n        testComponent.twoGroup.get('twoCtrl')!.setValue('input');\r\n        testComponent.threeGroup.get('threeCtrl')!.setValue('valid');\r\n        testComponent.validationTrigger.next();\r\n        stepperComponent.selectedIndex = 1;\r\n        fixture.detectChanges();\r\n        stepperComponent.selectedIndex = 2;\r\n        fixture.detectChanges();\r\n        stepperComponent.selectedIndex = 3;\r\n        fixture.detectChanges();\r\n      };\r\n\r\n      fillOutStepper();\r\n\r\n      expect(steps[2].completed)\r\n          .toBe(true, 'Expected third step to be considered complete after the first run through.');\r\n\r\n      stepperComponent.reset();\r\n      fixture.detectChanges();\r\n      fillOutStepper();\r\n\r\n      expect(steps[2].completed).toBe(true,\r\n          'Expected third step to be considered complete when doing a run after a reset.');\r\n    });\r\n\r\n    it('should not throw when there is a pre-defined selectedIndex', () => {\r\n      fixture.destroy();\r\n\r\n      let preselectedFixture = TestBed.createComponent(SimplePreselectedMatHorizontalStepperApp);\r\n      expect(() => preselectedFixture.detectChanges()).not.toThrow();\r\n    });\r\n\r\n    it('should not move to the next step if the current one is not completed ' +\r\n      'and there is no `stepControl`', () => {\r\n        fixture.destroy();\r\n\r\n        const noStepControlFixture = TestBed.createComponent(SimpleStepperWithoutStepControl);\r\n\r\n        noStepControlFixture.detectChanges();\r\n\r\n        const stepper: MatHorizontalStepper = noStepControlFixture.debugElement\r\n            .query(By.directive(MatHorizontalStepper)).componentInstance;\r\n\r\n        const headers = noStepControlFixture.debugElement\r\n            .queryAll(By.css('.mat-horizontal-stepper-header'));\r\n\r\n        expect(stepper.selectedIndex).toBe(0);\r\n\r\n        headers[1].nativeElement.click();\r\n        noStepControlFixture.detectChanges();\r\n\r\n        expect(stepper.selectedIndex).toBe(0);\r\n      });\r\n\r\n      it('should have the `stepControl` take precedence when both `completed` and ' +\r\n        '`stepControl` are set', () => {\r\n          fixture.destroy();\r\n\r\n          const controlAndBindingFixture =\r\n              TestBed.createComponent(SimpleStepperWithStepControlAndCompletedBinding);\r\n\r\n          controlAndBindingFixture.detectChanges();\r\n\r\n          expect(controlAndBindingFixture.componentInstance.steps[0].control.valid).toBe(true);\r\n          expect(controlAndBindingFixture.componentInstance.steps[0].completed).toBe(false);\r\n\r\n          const stepper: MatHorizontalStepper = controlAndBindingFixture.debugElement\r\n              .query(By.directive(MatHorizontalStepper)).componentInstance;\r\n\r\n          const headers = controlAndBindingFixture.debugElement\r\n              .queryAll(By.css('.mat-horizontal-stepper-header'));\r\n\r\n          expect(stepper.selectedIndex).toBe(0);\r\n\r\n          headers[1].nativeElement.click();\r\n          controlAndBindingFixture.detectChanges();\r\n\r\n          expect(stepper.selectedIndex).toBe(1);\r\n        });\r\n  });\r\n\r\n  describe('vertical stepper', () => {\r\n    it('should set the aria-orientation to \"vertical\"', () => {\r\n      let fixture = TestBed.createComponent(SimpleMatVerticalStepperApp);\r\n      fixture.detectChanges();\r\n\r\n      let stepperEl = fixture.debugElement.query(By.css('mat-vertical-stepper')).nativeElement;\r\n      expect(stepperEl.getAttribute('aria-orientation')).toBe('vertical');\r\n    });\r\n\r\n    it('should support using the left/right arrows to move focus', () => {\r\n      let fixture = TestBed.createComponent(SimpleMatVerticalStepperApp);\r\n      fixture.detectChanges();\r\n\r\n      let stepHeaders = fixture.debugElement.queryAll(By.css('.mat-vertical-stepper-header'));\r\n      assertCorrectKeyboardInteraction(fixture, stepHeaders, 'horizontal');\r\n    });\r\n\r\n    it('should support using the up/down arrows to move focus', () => {\r\n      let fixture = TestBed.createComponent(SimpleMatVerticalStepperApp);\r\n      fixture.detectChanges();\r\n\r\n      let stepHeaders = fixture.debugElement.queryAll(By.css('.mat-vertical-stepper-header'));\r\n      assertCorrectKeyboardInteraction(fixture, stepHeaders, 'vertical');\r\n    });\r\n\r\n    it('should reverse arrow key focus in RTL mode', () => {\r\n      dir.value = 'rtl';\r\n      let fixture = TestBed.createComponent(SimpleMatVerticalStepperApp);\r\n      fixture.detectChanges();\r\n\r\n      let stepHeaders = fixture.debugElement.queryAll(By.css('.mat-vertical-stepper-header'));\r\n      assertArrowKeyInteractionInRtl(fixture, stepHeaders);\r\n    });\r\n  });\r\n\r\n  describe('horizontal stepper', () => {\r\n    it('should set the aria-orientation to \"horizontal\"', () => {\r\n      let fixture = TestBed.createComponent(SimpleMatHorizontalStepperApp);\r\n      fixture.detectChanges();\r\n\r\n      let stepperEl = fixture.debugElement.query(By.css('mat-horizontal-stepper')).nativeElement;\r\n      expect(stepperEl.getAttribute('aria-orientation')).toBe('horizontal');\r\n    });\r\n\r\n    it('should support using the left/right arrows to move focus', () => {\r\n      let fixture = TestBed.createComponent(SimpleMatHorizontalStepperApp);\r\n      fixture.detectChanges();\r\n\r\n      let stepHeaders = fixture.debugElement.queryAll(By.css('.mat-horizontal-stepper-header'));\r\n      assertCorrectKeyboardInteraction(fixture, stepHeaders, 'horizontal');\r\n    });\r\n\r\n    it('should reverse arrow key focus in RTL mode', () => {\r\n      dir.value = 'rtl';\r\n      let fixture = TestBed.createComponent(SimpleMatHorizontalStepperApp);\r\n      fixture.detectChanges();\r\n\r\n      let stepHeaders = fixture.debugElement.queryAll(By.css('.mat-horizontal-stepper-header'));\r\n      assertArrowKeyInteractionInRtl(fixture, stepHeaders);\r\n    });\r\n\r\n    it('should reverse arrow key focus when switching into RTL after init', () => {\r\n      let fixture = TestBed.createComponent(SimpleMatHorizontalStepperApp);\r\n      fixture.detectChanges();\r\n\r\n      let stepHeaders = fixture.debugElement.queryAll(By.css('.mat-horizontal-stepper-header'));\r\n      assertCorrectKeyboardInteraction(fixture, stepHeaders, 'horizontal');\r\n\r\n      dir.value = 'rtl';\r\n      dir.change.emit('rtl');\r\n      fixture.detectChanges();\r\n\r\n      assertArrowKeyInteractionInRtl(fixture, stepHeaders);\r\n    });\r\n  });\r\n\r\n  describe('valid step in linear stepper', () => {\r\n    let fixture: ComponentFixture<LinearStepperWithValidOptionalStep>;\r\n    let testComponent: LinearStepperWithValidOptionalStep;\r\n    let stepper: MatStepper;\r\n\r\n    beforeEach(() => {\r\n      fixture = TestBed.createComponent(LinearStepperWithValidOptionalStep);\r\n      fixture.detectChanges();\r\n\r\n      testComponent = fixture.componentInstance;\r\n      stepper = fixture.debugElement\r\n          .query(By.css('mat-horizontal-stepper')).componentInstance;\r\n    });\r\n\r\n    it('must be visited if not optional', () => {\r\n      stepper.selectedIndex = 2;\r\n      fixture.detectChanges();\r\n      expect(stepper.selectedIndex).toBe(0);\r\n\r\n      stepper.selectedIndex = 1;\r\n      fixture.detectChanges();\r\n      expect(stepper.selectedIndex).toBe(1);\r\n\r\n      stepper.selectedIndex = 2;\r\n      fixture.detectChanges();\r\n      expect(stepper.selectedIndex).toBe(2);\r\n    });\r\n\r\n    it('can be skipped entirely if optional', () => {\r\n      testComponent.step2Optional = true;\r\n      fixture.detectChanges();\r\n      stepper.selectedIndex = 2;\r\n      fixture.detectChanges();\r\n      expect(stepper.selectedIndex).toBe(2);\r\n    });\r\n  });\r\n\r\n  describe('aria labelling', () => {\r\n    let fixture: ComponentFixture<StepperWithAriaInputs>;\r\n    let stepHeader: HTMLElement;\r\n\r\n    beforeEach(() => {\r\n      fixture = TestBed.createComponent(StepperWithAriaInputs);\r\n      fixture.detectChanges();\r\n      stepHeader = fixture.nativeElement.querySelector('.mat-step-header');\r\n    });\r\n\r\n    it('should not set aria-label or aria-labelledby attributes if they are not passed in', () => {\r\n      expect(stepHeader.hasAttribute('aria-label')).toBe(false);\r\n      expect(stepHeader.hasAttribute('aria-labelledby')).toBe(false);\r\n    });\r\n\r\n    it('should set the aria-label attribute', () => {\r\n      fixture.componentInstance.ariaLabel = 'First step';\r\n      fixture.detectChanges();\r\n\r\n      expect(stepHeader.getAttribute('aria-label')).toBe('First step');\r\n    });\r\n\r\n    it('should set the aria-labelledby attribute', () => {\r\n      fixture.componentInstance.ariaLabelledby = 'first-step-label';\r\n      fixture.detectChanges();\r\n\r\n      expect(stepHeader.getAttribute('aria-labelledby')).toBe('first-step-label');\r\n    });\r\n\r\n    it('should not be able to set both an aria-label and aria-labelledby', () => {\r\n      fixture.componentInstance.ariaLabel = 'First step';\r\n      fixture.componentInstance.ariaLabelledby = 'first-step-label';\r\n      fixture.detectChanges();\r\n\r\n      expect(stepHeader.getAttribute('aria-label')).toBe('First step');\r\n      expect(stepHeader.hasAttribute('aria-labelledby')).toBe(false);\r\n    });\r\n\r\n  });\r\n});\r\n\r\n/** Asserts that keyboard interaction works correctly. */\r\nfunction assertCorrectKeyboardInteraction(fixture: ComponentFixture<any>,\r\n                                          stepHeaders: DebugElement[],\r\n                                          orientation: StepperOrientation) {\r\n  let stepperComponent = fixture.debugElement.query(By.directive(MatStepper)).componentInstance;\r\n  let nextKey = orientation === 'vertical' ? DOWN_ARROW : RIGHT_ARROW;\r\n  let prevKey = orientation === 'vertical' ? UP_ARROW : LEFT_ARROW;\r\n\r\n  expect(stepperComponent._getFocusIndex()).toBe(0);\r\n  expect(stepperComponent.selectedIndex).toBe(0);\r\n\r\n  let stepHeaderEl = stepHeaders[0].nativeElement;\r\n  dispatchKeyboardEvent(stepHeaderEl, 'keydown', nextKey);\r\n  fixture.detectChanges();\r\n\r\n  expect(stepperComponent._getFocusIndex())\r\n      .toBe(1, 'Expected index of focused step to increase by 1 after pressing the next key.');\r\n  expect(stepperComponent.selectedIndex)\r\n      .toBe(0, 'Expected index of selected step to remain unchanged after pressing the next key.');\r\n\r\n  stepHeaderEl = stepHeaders[1].nativeElement;\r\n  dispatchKeyboardEvent(stepHeaderEl, 'keydown', ENTER);\r\n  fixture.detectChanges();\r\n\r\n  expect(stepperComponent._getFocusIndex())\r\n      .toBe(1, 'Expected index of focused step to remain unchanged after ENTER event.');\r\n  expect(stepperComponent.selectedIndex)\r\n      .toBe(1,\r\n          'Expected index of selected step to change to index of focused step after ENTER event.');\r\n\r\n  stepHeaderEl = stepHeaders[1].nativeElement;\r\n  dispatchKeyboardEvent(stepHeaderEl, 'keydown', prevKey);\r\n  fixture.detectChanges();\r\n\r\n  expect(stepperComponent._getFocusIndex())\r\n      .toBe(0, 'Expected index of focused step to decrease by 1 after pressing the previous key.');\r\n  expect(stepperComponent.selectedIndex).toBe(1,\r\n      'Expected index of selected step to remain unchanged after pressing the previous key.');\r\n\r\n  // When the focus is on the last step and right arrow key is pressed, the focus should cycle\r\n  // through to the first step.\r\n  stepperComponent._keyManager.updateActiveItemIndex(2);\r\n  stepHeaderEl = stepHeaders[2].nativeElement;\r\n  dispatchKeyboardEvent(stepHeaderEl, 'keydown', nextKey);\r\n  fixture.detectChanges();\r\n\r\n  expect(stepperComponent._getFocusIndex()).toBe(0,\r\n      'Expected index of focused step to cycle through to index 0 after pressing the next key.');\r\n  expect(stepperComponent.selectedIndex)\r\n      .toBe(1, 'Expected index of selected step to remain unchanged after pressing the next key.');\r\n\r\n  stepHeaderEl = stepHeaders[0].nativeElement;\r\n  dispatchKeyboardEvent(stepHeaderEl, 'keydown', SPACE);\r\n  fixture.detectChanges();\r\n\r\n  expect(stepperComponent._getFocusIndex())\r\n      .toBe(0, 'Expected index of focused to remain unchanged after SPACE event.');\r\n  expect(stepperComponent.selectedIndex)\r\n      .toBe(0,\r\n          'Expected index of selected step to change to index of focused step after SPACE event.');\r\n\r\n  const endEvent = dispatchKeyboardEvent(stepHeaderEl, 'keydown', END);\r\n  expect(stepperComponent._getFocusIndex())\r\n      .toBe(stepHeaders.length - 1, 'Expected last step to be focused when pressing END.');\r\n  expect(endEvent.defaultPrevented).toBe(true, 'Expected default END action to be prevented.');\r\n\r\n  const homeEvent = dispatchKeyboardEvent(stepHeaderEl, 'keydown', HOME);\r\n  expect(stepperComponent._getFocusIndex())\r\n      .toBe(0, 'Expected first step to be focused when pressing HOME.');\r\n  expect(homeEvent.defaultPrevented).toBe(true, 'Expected default HOME action to be prevented.');\r\n}\r\n\r\n/** Asserts that arrow key direction works correctly in RTL mode. */\r\nfunction assertArrowKeyInteractionInRtl(fixture: ComponentFixture<any>,\r\n                                        stepHeaders: DebugElement[]) {\r\n  let stepperComponent = fixture.debugElement.query(By.directive(MatStepper)).componentInstance;\r\n\r\n  expect(stepperComponent._getFocusIndex()).toBe(0);\r\n\r\n  let stepHeaderEl = stepHeaders[0].nativeElement;\r\n  dispatchKeyboardEvent(stepHeaderEl, 'keydown', LEFT_ARROW);\r\n  fixture.detectChanges();\r\n\r\n  expect(stepperComponent._getFocusIndex()).toBe(1);\r\n\r\n  stepHeaderEl = stepHeaders[1].nativeElement;\r\n  dispatchKeyboardEvent(stepHeaderEl, 'keydown', RIGHT_ARROW);\r\n  fixture.detectChanges();\r\n\r\n  expect(stepperComponent._getFocusIndex()).toBe(0);\r\n}\r\n\r\nfunction asyncValidator(minLength: number, validationTrigger: Subject<void>): AsyncValidatorFn {\r\n  return (control: AbstractControl): Observable<ValidationErrors | null> => {\r\n    return validationTrigger.pipe(\r\n      map(() => control.value && control.value.length >= minLength ? null : {asyncValidation: {}}),\r\n      take(1)\r\n    );\r\n  };\r\n}\r\n\r\n@Component({\r\n  template: `\r\n    <mat-horizontal-stepper>\r\n      <mat-step>\r\n        <ng-template matStepLabel>Step 1</ng-template>\r\n        Content 1\r\n        <div>\r\n          <button mat-button matStepperPrevious>Back</button>\r\n          <button mat-button matStepperNext>Next</button>\r\n        </div>\r\n      </mat-step>\r\n      <mat-step>\r\n        <ng-template matStepLabel>Step 2</ng-template>\r\n        Content 2\r\n        <div>\r\n          <button mat-button matStepperPrevious>Back</button>\r\n          <button mat-button matStepperNext>Next</button>\r\n        </div>\r\n      </mat-step>\r\n      <mat-step [label]=\"inputLabel\" optional>\r\n        Content 3\r\n        <div>\r\n          <button mat-button matStepperPrevious>Back</button>\r\n          <button mat-button matStepperNext>Next</button>\r\n        </div>\r\n      </mat-step>\r\n    </mat-horizontal-stepper>\r\n  `\r\n})\r\nclass SimpleMatHorizontalStepperApp {\r\n  inputLabel = 'Step 3';\r\n}\r\n\r\n@Component({\r\n  template: `\r\n    <mat-vertical-stepper>\r\n      <mat-step>\r\n        <ng-template matStepLabel>Step 1</ng-template>\r\n        Content 1\r\n        <div>\r\n          <button mat-button matStepperPrevious>Back</button>\r\n          <button mat-button matStepperNext>Next</button>\r\n        </div>\r\n      </mat-step>\r\n      <mat-step>\r\n        <ng-template matStepLabel>Step 2</ng-template>\r\n        Content 2\r\n        <div>\r\n          <button mat-button matStepperPrevious>Back</button>\r\n          <button mat-button matStepperNext>Next</button>\r\n        </div>\r\n      </mat-step>\r\n      <mat-step [label]=\"inputLabel\">\r\n        Content 3\r\n        <div>\r\n          <button mat-button matStepperPrevious>Back</button>\r\n          <button mat-button matStepperNext>Next</button>\r\n        </div>\r\n      </mat-step>\r\n    </mat-vertical-stepper>\r\n  `\r\n})\r\nclass SimpleMatVerticalStepperApp {\r\n  inputLabel = 'Step 3';\r\n}\r\n\r\n@Component({\r\n  template: `\r\n    <mat-vertical-stepper linear>\r\n      <mat-step [stepControl]=\"oneGroup\">\r\n        <form [formGroup]=\"oneGroup\">\r\n          <ng-template matStepLabel>Step one</ng-template>\r\n          <input formControlName=\"oneCtrl\" required>\r\n          <div>\r\n            <button mat-button matStepperPrevious>Back</button>\r\n            <button mat-button matStepperNext>Next</button>\r\n          </div>\r\n        </form>\r\n      </mat-step>\r\n      <mat-step [stepControl]=\"twoGroup\">\r\n        <form [formGroup]=\"twoGroup\">\r\n          <ng-template matStepLabel>Step two</ng-template>\r\n          <input formControlName=\"twoCtrl\" required>\r\n          <div>\r\n            <button mat-button matStepperPrevious>Back</button>\r\n            <button mat-button matStepperNext>Next</button>\r\n          </div>\r\n        </form>\r\n      </mat-step>\r\n      <mat-step [stepControl]=\"threeGroup\" optional>\r\n        <form [formGroup]=\"threeGroup\">\r\n          <ng-template matStepLabel>Step two</ng-template>\r\n          <input formControlName=\"threeCtrl\">\r\n          <div>\r\n            <button mat-button matStepperPrevious>Back</button>\r\n            <button mat-button matStepperNext>Next</button>\r\n          </div>\r\n        </form>\r\n      </mat-step>\r\n      <mat-step>\r\n        Done\r\n      </mat-step>\r\n    </mat-vertical-stepper>\r\n  `\r\n})\r\nclass LinearMatVerticalStepperApp implements OnInit {\r\n  oneGroup: FormGroup;\r\n  twoGroup: FormGroup;\r\n  threeGroup: FormGroup;\r\n\r\n  validationTrigger = new Subject<void>();\r\n\r\n  ngOnInit() {\r\n    this.oneGroup = new FormGroup({\r\n      oneCtrl: new FormControl('', Validators.required)\r\n    });\r\n    this.twoGroup = new FormGroup({\r\n      twoCtrl: new FormControl('', Validators.required, asyncValidator(3, this.validationTrigger))\r\n    });\r\n    this.threeGroup = new FormGroup({\r\n      threeCtrl: new FormControl('', Validators.pattern(VALID_REGEX))\r\n    });\r\n  }\r\n}\r\n\r\n@Component({\r\n  template: `\r\n    <mat-horizontal-stepper [linear]=\"true\" [selectedIndex]=\"index\">\r\n      <mat-step label=\"One\"></mat-step>\r\n      <mat-step label=\"Two\"></mat-step>\r\n      <mat-step label=\"Three\"></mat-step>\r\n    </mat-horizontal-stepper>\r\n  `\r\n})\r\nclass SimplePreselectedMatHorizontalStepperApp {\r\n  index = 0;\r\n}\r\n\r\n@Component({\r\n  template: `\r\n    <mat-horizontal-stepper linear>\r\n      <mat-step\r\n        *ngFor=\"let step of steps\"\r\n        [label]=\"step.label\"\r\n        [completed]=\"step.completed\"></mat-step>\r\n    </mat-horizontal-stepper>\r\n  `\r\n})\r\nclass SimpleStepperWithoutStepControl {\r\n  steps = [\r\n    {label: 'One', completed: false},\r\n    {label: 'Two', completed: false},\r\n    {label: 'Three', completed: false}\r\n  ];\r\n}\r\n\r\n@Component({\r\n  template: `\r\n    <mat-horizontal-stepper linear>\r\n      <mat-step\r\n        *ngFor=\"let step of steps\"\r\n        [label]=\"step.label\"\r\n        [stepControl]=\"step.control\"\r\n        [completed]=\"step.completed\"></mat-step>\r\n    </mat-horizontal-stepper>\r\n  `\r\n})\r\nclass SimpleStepperWithStepControlAndCompletedBinding {\r\n  steps = [\r\n    {label: 'One', completed: false, control: new FormControl()},\r\n    {label: 'Two', completed: false, control: new FormControl()},\r\n    {label: 'Three', completed: false, control: new FormControl()}\r\n  ];\r\n}\r\n\r\n@Component({\r\n  template: `\r\n    <mat-horizontal-stepper>\r\n      <ng-template matStepperIcon=\"edit\">Custom edit</ng-template>\r\n      <ng-template matStepperIcon=\"done\">Custom done</ng-template>\r\n      <ng-template matStepperIcon=\"number\" let-index=\"index\">\r\n        {{getRomanNumeral(index + 1)}}\r\n      </ng-template>\r\n\r\n      <mat-step>Content 1</mat-step>\r\n      <mat-step>Content 2</mat-step>\r\n      <mat-step>Content 3</mat-step>\r\n    </mat-horizontal-stepper>\r\n`\r\n})\r\nclass IconOverridesStepper {\r\n  getRomanNumeral(value: number) {\r\n    return {\r\n      1: 'I',\r\n      2: 'II',\r\n      3: 'III',\r\n      4: 'IV',\r\n      5: 'V',\r\n      6: 'VI',\r\n      7: 'VII',\r\n      8: 'VIII',\r\n      9: 'IX'\r\n    }[value];\r\n  }\r\n}\r\n\r\n@Component({\r\n  template: `\r\n    <mat-horizontal-stepper linear>\r\n      <mat-step label=\"Step 1\" [stepControl]=\"controls[0]\"></mat-step>\r\n      <mat-step label=\"Step 2\" [stepControl]=\"controls[1]\" [optional]=\"step2Optional\"></mat-step>\r\n      <mat-step label=\"Step 3\" [stepControl]=\"controls[2]\"></mat-step>\r\n    </mat-horizontal-stepper>\r\n  `\r\n})\r\nclass LinearStepperWithValidOptionalStep {\r\n  controls = [0, 0, 0].map(() => new FormControl());\r\n  step2Optional = false;\r\n}\r\n\r\n\r\n@Component({\r\n  template: `\r\n    <mat-horizontal-stepper>\r\n      <mat-step [aria-label]=\"ariaLabel\" [aria-labelledby]=\"ariaLabelledby\" label=\"One\"></mat-step>\r\n    </mat-horizontal-stepper>\r\n  `\r\n})\r\nclass StepperWithAriaInputs {\r\n  ariaLabel: string;\r\n  ariaLabelledby: string;\r\n}\r\n"]}