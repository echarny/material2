{"version":3,"file":"tooltip.js","sourceRoot":"","sources":["../../../../src/lib/tooltip/tooltip.ts"],"names":[],"mappings":";;;;;;;;;;AAQA,0CAA8D;AAC9D,0CAAiD;AACjD,kDAA4D;AAC5D,kDAA6C;AAC7C,8CAAqF;AACrF,gDAU8B;AAC9B,kDAA+C;AAC/C,8CAAoD;AACpD,4CAA+C;AAC/C,sCAcuB;AACvB,6BAAyC;AACzC,2DAA0D;;AAM7C,QAAA,kBAAkB,GAAG,EAAE;;AAGvB,QAAA,mBAAmB,GAAG,mBAAmB;;AAGtD,2CAAkD,QAAgB;IAChE,MAAM,CAAC,KAAK,CAAC,wBAAqB,QAAQ,mBAAe,CAAC,CAAC;CAC5D;AAFD,8EAEC;;AAGY,QAAA,2BAA2B,GACpC,IAAI,qBAAc,CAAuB,6BAA6B,CAAC;;AAG3E,6CAAoD,OAAgB;IAClE,MAAM,CAAC,cAAM,OAAA,OAAO,CAAC,gBAAgB,CAAC,UAAU,CAAC,EAAC,cAAc,EAAE,0BAAkB,EAAC,CAAC,EAAzE,CAAyE,CAAC;CACxF;AAFD,kFAEC;;AAGY,QAAA,4CAA4C,GAAG;IAC1D,OAAO,EAAE,mCAA2B;IACpC,IAAI,EAAE,CAAC,iBAAO,CAAC;IACf,UAAU,EAAE,mCAAmC;CAChD;;AAUY,QAAA,2BAA2B,GACpC,IAAI,qBAAc,CAA2B,6BAA6B,EAAE;IAC1E,UAAU,EAAE,MAAM;IAClB,OAAO,EAAE,mCAAmC;CAC7C,CAAC;AAEN;IACE,MAAM,CAAC;QACL,SAAS,EAAE,CAAC;QACZ,SAAS,EAAE,CAAC;QACZ,iBAAiB,EAAE,IAAI;KACxB,CAAC;CACH;AAND,kFAMC;;;;;;;;IAiGC,oBACU,QAAiB,EACjB,WAAuB,EACvB,iBAAmC,EACnC,iBAAmC,EACnC,OAAe,EACf,SAAmB,EACnB,cAA6B,EAC7B,aAA2B,EACU,iBACzB,MAEV;QAZZ,iBAgDC;QA/CS,aAAQ,GAAR,QAAQ,CAAS;QACjB,gBAAW,GAAX,WAAW,CAAY;QACvB,sBAAiB,GAAjB,iBAAiB,CAAkB;QACnC,sBAAiB,GAAjB,iBAAiB,CAAkB;QACnC,YAAO,GAAP,OAAO,CAAQ;QACf,cAAS,GAAT,SAAS,CAAU;QACnB,mBAAc,GAAd,cAAc,CAAe;QAC7B,kBAAa,GAAb,aAAa,CAAc;QACU,oBAAe,GAAf,eAAe;QACxC,SAAI,GAAJ,IAAI;QAEd,oBAAe,GAAf,eAAe;yBAvFU,OAAO;yBACf,KAAK;;yBAmCQ,IAAI,CAAC,eAAe,CAAC,SAAS;;yBAG9B,IAAI,CAAC,eAAe,CAAC,SAAS;wBAErD,EAAE;gCA6BM,IAAI,GAAG,EAAoB;;0BAGxB,IAAI,cAAO,EAAQ;QAgB/C,IAAM,OAAO,GAAgB,WAAW,CAAC,aAAa,CAAC;;;QAIvD,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;YACnB,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,YAAY,EAAE,cAAM,OAAA,KAAI,CAAC,IAAI,EAAE,EAAX,CAAW,CAAC,CAAC;YAC3D,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,YAAY,EAAE,cAAM,OAAA,KAAI,CAAC,IAAI,EAAE,EAAX,CAAW,CAAC,CAAC;YAE3D,IAAI,CAAC,gBAAgB;iBAClB,OAAO,CAAC,UAAC,QAAQ,EAAE,KAAK,IAAK,OAAA,WAAW,CAAC,aAAa,CAAC,gBAAgB,CAAC,KAAK,EAAE,QAAQ,CAAC,EAA3D,CAA2D,CAAC,CAAC;SAC9F;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,QAAQ,KAAK,OAAO,IAAI,OAAO,CAAC,QAAQ,KAAK,UAAU,CAAC,CAAC,CAAC;;;;;;YAM3E,OAAO,CAAC,KAAK,CAAC,gBAAgB,GAAG,OAAO,CAAC,KAAK,CAAC,UAAU,GAAG,EAAE,CAAC;SAChE;;;;QAKD,EAAE,CAAC,CAAC,OAAO,CAAC,SAAS,IAAI,OAAO,CAAC,KAAK,CAAC,gBAAgB,CAAC,KAAK,MAAM,CAAC,CAAC,CAAC;YACpE,OAAO,CAAC,KAAK,CAAC,gBAAgB,CAAC,GAAG,EAAE,CAAC;SACtC;QAED,aAAa,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,qBAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,SAAS,CAAC,UAAA,MAAM;;YAE9E,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;gBACZ,OAAO,CAAC,GAAG,CAAC,cAAM,OAAA,KAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAZ,CAAY,CAAC,CAAC;aACjC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,KAAK,UAAU,CAAC,CAAC,CAAC;gBACjC,OAAO,CAAC,GAAG,CAAC,cAAM,OAAA,KAAI,CAAC,IAAI,EAAE,EAAX,CAAW,CAAC,CAAC;aAChC;SACF,CAAC,CAAC;KACJ;0BArHG,gCAAQ;;sBAAsB,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;aACxD,UAAa,KAAsB;YACjC,EAAE,CAAC,CAAC,KAAK,KAAK,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;gBAC7B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;gBAEvB,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;oBACrB,IAAI,CAAC,eAAe,EAAE,CAAC;oBAEvB,EAAE,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC;wBAC1B,IAAI,CAAC,gBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;qBAChC;oBAED,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,CAAC;iBACnC;aACF;SACF;;;;0BAIG,gCAAQ;;sBAAc,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;aAChD,UAAa,KAAK;YAChB,IAAI,CAAC,SAAS,GAAG,gCAAqB,CAAC,KAAK,CAAC,CAAC;;YAG9C,EAAE,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;gBACnB,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aACd;SACF;;;;0BAYG,+BAAO;;sBAAK,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;aACrC,UAAY,KAAa;YACvB,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;;YAGrF,IAAI,CAAC,QAAQ,GAAG,KAAK,IAAI,IAAI,CAAC,CAAC,CAAC,CAAA,KAAG,KAAO,CAAA,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;YAEvD,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC,CAAC;gBAC/C,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;aACd;YAAC,IAAI,CAAC,CAAC;gBACN,IAAI,CAAC,qBAAqB,EAAE,CAAC;gBAC7B,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;aAC5E;SACF;;;;0BAIG,oCAAY;;sBAAK,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC;aAC/C,UAAiB,KAAuD;YACtE,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;YAC3B,EAAE,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC;gBAC1B,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;aAC3C;SACF;;;;IAyDD;;OAEG;;;;IACH,gCAAW;;;IAAX;QAAA,iBAmBC;QAlBC,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;YACrB,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;YAC3B,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;SAC9B;;QAGD,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;YACxB,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,UAAC,QAAQ,EAAE,KAAK;gBAC5C,OAAA,KAAI,CAAC,WAAW,CAAC,aAAa,CAAC,mBAAmB,CAAC,KAAK,EAAE,QAAQ,CAAC;YAAnE,CAAmE,CAAC,CAAC;YAEvE,IAAI,CAAC,gBAAgB,CAAC,KAAK,EAAE,CAAC;SAC/B;QAED,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;QACvB,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;QAE3B,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;QACpF,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC;KACnE;IAED,iGAAiG;;IACjG,yBAAI;IAAJ,UAAK,KAA8B;QAAnC,iBAcC;QAdI,sBAAA,EAAA,QAAgB,IAAI,CAAC,SAAS;QACjC,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;YAAC,MAAM,CAAC;SAAE;QAE/C,IAAM,UAAU,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;QAEzC,IAAI,CAAC,OAAO,EAAE,CAAC;QACf,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,IAAI,IAAI,wBAAe,CAAC,gBAAgB,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC;QAC7F,IAAI,CAAC,gBAAgB,GAAG,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC;QACjE,IAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE;aAChC,IAAI,CAAC,qBAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;aAChC,SAAS,CAAC,cAAM,OAAA,KAAI,CAAC,OAAO,EAAE,EAAd,CAAc,CAAC,CAAC;QACnC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QAC1C,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAC7B,IAAI,CAAC,gBAAiB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KACpC;IAED,iGAAiG;;IACjG,yBAAI;IAAJ,UAAK,KAA8B;QAA9B,sBAAA,EAAA,QAAgB,IAAI,CAAC,SAAS;QACjC,EAAE,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC;YAC1B,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACnC;KACF;IAED,8BAA8B;;IAC9B,2BAAM;IAAN;QACE,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;KACtD;IAED,mEAAmE;;IACnE,sCAAiB;IAAjB;QACE,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,gBAAgB,CAAC,SAAS,EAAE,CAAC;KACrE;IAED,sDAAsD;;IACtD,mCAAc;IAAd,UAAe,CAAgB;QAC7B,EAAE,CAAC,CAAC,IAAI,CAAC,iBAAiB,EAAE,IAAI,CAAC,CAAC,OAAO,KAAK,iBAAM,CAAC,CAAC,CAAC;YACrD,CAAC,CAAC,eAAe,EAAE,CAAC;YACpB,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SACd;KACF;IAED,uDAAuD;;IACvD,oCAAe;IAAf;QACE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,iBAAiB,CAAC,CAAC;KACnD;IAED,sDAAsD;;IAC9C,mCAAc;IAAtB;QAAA,iBAyCC;QAxCC,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;YACrB,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC;SACzB;;QAGD,IAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE;aACtC,mBAAmB,CAAC,IAAI,CAAC,WAAW,CAAC;aACrC,qBAAqB,CAAC,cAAc,CAAC;aACrC,sBAAsB,CAAC,KAAK,CAAC;aAC7B,kBAAkB,CAAC,CAAC,CAAC,CAAC;QAEzB,IAAM,mBAAmB,GAAG,IAAI,CAAC,iBAAiB;aAC/C,2BAA2B,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QAEjD,QAAQ,CAAC,wBAAwB,CAAC,mBAAmB,CAAC,CAAC;QAEvD,QAAQ,CAAC,eAAe,CAAC,IAAI,CAAC,qBAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,SAAS,CAAC,UAAA,MAAM;YACxE,EAAE,CAAC,CAAC,KAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC;gBAC1B,EAAE,CAAC,CAAC,MAAM,CAAC,wBAAwB,CAAC,gBAAgB,IAAI,KAAI,CAAC,gBAAgB,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;;;oBAG1F,AAFA,6DAA6D;oBAC7D,8CAA8C;oBAC9C,KAAI,CAAC,OAAO,CAAC,GAAG,CAAC,cAAM,OAAA,KAAI,CAAC,IAAI,CAAC,CAAC,CAAC,EAAZ,CAAY,CAAC,CAAC;iBACtC;aACF;SACF,CAAC,CAAC;QAEH,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;YACtC,SAAS,EAAE,IAAI,CAAC,IAAI;YACpB,gBAAgB,EAAE,QAAQ;YAC1B,UAAU,EAAE,2BAAmB;YAC/B,cAAc,EAAE,IAAI,CAAC,eAAe,EAAE;SACvC,CAAC,CAAC;QAEH,IAAI,CAAC,eAAe,EAAE,CAAC;QAEvB,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE;aAC3B,IAAI,CAAC,qBAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;aAChC,SAAS,CAAC,cAAM,OAAA,KAAI,CAAC,OAAO,EAAE,EAAd,CAAc,CAAC,CAAC;QAEnC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC;KACzB;IAED,+CAA+C;;IACvC,4BAAO;IAAf;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;YACvD,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;SAC3B;QAED,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;KAC9B;IAED,mDAAmD;;IAC3C,oCAAe;IAAvB;QACE,IAAM,QAAQ,GACV,IAAI,CAAC,WAAY,CAAC,SAAS,EAAE,CAAC,gBAAqD,CAAC;QACxF,IAAM,MAAM,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;QACjC,IAAM,OAAO,GAAG,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAE3C,QAAQ,CAAC,aAAa,CAAC;yBACjB,MAAM,CAAC,IAAI,EAAK,OAAO,CAAC,IAAI;yBAC5B,MAAM,CAAC,QAAQ,EAAK,OAAO,CAAC,QAAQ;SACzC,CAAC,CAAC;KACJ;IAED;;;OAGG;;;;;IACH,+BAAU;;;;IAAV;QACE,IAAM,KAAK,GAAG,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,KAAK,CAAC;QACrD,IAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC/B,IAAI,cAAwC,CAAC;QAE7C,EAAE,CAAC,CAAC,QAAQ,IAAI,OAAO,IAAI,QAAQ,IAAI,OAAO,CAAC,CAAC,CAAC;YAC/C,cAAc,GAAG,EAAC,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,IAAI,OAAO,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,QAAQ,EAAC,CAAC;SACvF;QAAC,IAAI,CAAC,EAAE,CAAC,CACR,QAAQ,IAAI,QAAQ;YACpB,CAAC,QAAQ,IAAI,MAAM,IAAI,KAAK,CAAC;YAC7B,CAAC,QAAQ,IAAI,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAClC,cAAc,GAAG,EAAC,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAC,CAAC;SACxD;QAAC,IAAI,CAAC,EAAE,CAAC,CACR,QAAQ,IAAI,OAAO;YACnB,CAAC,QAAQ,IAAI,OAAO,IAAI,KAAK,CAAC;YAC9B,CAAC,QAAQ,IAAI,MAAM,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACjC,cAAc,GAAG,EAAC,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,QAAQ,EAAC,CAAC;SACtD;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,iCAAiC,CAAC,QAAQ,CAAC,CAAC;SACnD;QAED,+EAAO,QAAC,EAAE,QAAC,CAAyE;QAEpF,MAAM,CAAC;YACL,IAAI,EAAE,cAAc;YACpB,QAAQ,EAAE,EAAC,OAAO,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,EAAC;SACnC,CAAC;KACH;IAED,0FAA0F;;IAC1F,wCAAmB;IAAnB;QACE,IAAM,KAAK,GAAG,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,KAAK,CAAC;QACrD,IAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC/B,IAAI,eAA0C,CAAC;QAE/C,EAAE,CAAC,CAAC,QAAQ,IAAI,OAAO,CAAC,CAAC,CAAC;YACxB,eAAe,GAAG,EAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAC,CAAC;SAC5D;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,QAAQ,IAAI,OAAO,CAAC,CAAC,CAAC;YAC/B,eAAe,GAAG,EAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,KAAK,EAAC,CAAC;SACzD;QAAC,IAAI,CAAC,EAAE,CAAC,CACR,QAAQ,IAAI,QAAQ;YACpB,CAAC,QAAQ,IAAI,MAAM,IAAI,KAAK,CAAC;YAC7B,CAAC,QAAQ,IAAI,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAClC,eAAe,GAAG,EAAC,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAC,CAAC;SACzD;QAAC,IAAI,CAAC,EAAE,CAAC,CACR,QAAQ,IAAI,OAAO;YACnB,CAAC,QAAQ,IAAI,OAAO,IAAI,KAAK,CAAC;YAC9B,CAAC,QAAQ,IAAI,MAAM,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACjC,eAAe,GAAG,EAAC,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAC,CAAC;SAC3D;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,iCAAiC,CAAC,QAAQ,CAAC,CAAC;SACnD;QAED,mFAAO,QAAC,EAAE,QAAC,CAA6E;QAExF,MAAM,CAAC;YACL,IAAI,EAAE,eAAe;YACrB,QAAQ,EAAE,EAAC,QAAQ,EAAE,CAAC,EAAE,QAAQ,EAAE,CAAC,EAAC;SACrC,CAAC;KACH;IAED,kGAAkG;;IAC1F,0CAAqB;IAA7B;QAAA,iBAgBC;;;QAbC,EAAE,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC;YAC1B,IAAI,CAAC,gBAAgB,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;YAC7C,IAAI,CAAC,gBAAgB,CAAC,aAAa,EAAE,CAAC;YAEtC,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,YAAY,EAAE,CAAC,IAAI,CAC/C,gBAAI,CAAC,CAAC,CAAC,EACP,qBAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAC3B,CAAC,SAAS,CAAC;gBACV,EAAE,CAAC,CAAC,KAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC;oBAC1B,KAAI,CAAC,WAAY,CAAC,cAAc,EAAE,CAAC;iBACpC;aACF,CAAC,CAAC;SACJ;KACF;IAED,gCAAgC;;IACxB,qCAAgB;IAAxB,UAAyB,YAA8D;QACrF,EAAE,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC;YAC1B,IAAI,CAAC,gBAAgB,CAAC,YAAY,GAAG,YAAY,CAAC;YAClD,IAAI,CAAC,gBAAgB,CAAC,aAAa,EAAE,CAAC;SACvC;KACF;IAED,mCAAmC;;IAC3B,oCAAe;IAAvB,UAAwB,CAA0B,EAAE,CAAwB;QAC1E,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,KAAK,OAAO,IAAI,IAAI,CAAC,QAAQ,KAAK,OAAO,CAAC,CAAC,CAAC;YAC3D,EAAE,CAAC,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC;gBAChB,CAAC,GAAG,QAAQ,CAAC;aACd;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,QAAQ,CAAC,CAAC,CAAC;gBAC1B,CAAC,GAAG,KAAK,CAAC;aACX;SACF;QAAC,IAAI,CAAC,CAAC;YACN,EAAE,CAAC,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC;gBAChB,CAAC,GAAG,OAAO,CAAC;aACb;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,OAAO,CAAC,CAAC,CAAC;gBACzB,CAAC,GAAG,KAAK,CAAC;aACX;SACF;QAED,MAAM,CAAC,EAAC,CAAC,GAAA,EAAE,CAAC,GAAA,EAAC,CAAC;KACf;;gBAjYF,gBAAS,SAAC;oBACT,QAAQ,EAAE,cAAc;oBACxB,QAAQ,EAAE,YAAY;oBACtB,IAAI,EAAE;wBACJ,aAAa,EAAE,QAAQ;wBACvB,WAAW,EAAE,wBAAwB;wBACrC,YAAY,EAAE,mBAAmB;qBAClC;iBACF;;;;gBA9FC,iBAAO;gBAeP,iBAAU;gBAZV,0BAAgB;gBAmBhB,uBAAgB;gBAHhB,aAAM;gBAZA,mBAAQ;gBAhBR,oBAAa;gBAAE,mBAAY;gDAiM9B,aAAM,SAAC,mCAA2B;gBAhM/B,qBAAc,uBAiMjB,eAAQ;gDACR,eAAQ,YAAI,aAAM,SAAC,mCAA2B;;;6BAjFhD,YAAK,SAAC,oBAAoB;6BAmB1B,YAAK,SAAC,oBAAoB;8BAY1B,YAAK,SAAC,qBAAqB;8BAG3B,YAAK,SAAC,qBAAqB;4BAK3B,YAAK,SAAC,YAAY;iCAiBlB,YAAK,SAAC,iBAAiB;;qBAlL1B;;AAgHa,gCAAU;;;;;;IA0arB,0BACU,kBAAqC,EACrC,mBAAuC;QADvC,uBAAkB,GAAlB,kBAAkB,CAAmB;QACrC,wBAAmB,GAAnB,mBAAmB,CAAoB;;2BAbhB,SAAS;;mCAGH,KAAK;;uBAGH,IAAI,cAAO,EAAE;;0BAGZ,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,oBAAW,CAAC,OAAO,CAAC;KAI1C;IAErD;;;OAGG;;;;;IACH,+BAAI;;;;IAAJ,UAAK,KAAa;QAAlB,iBAeC;;QAbC,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;YACxB,YAAY,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;SACnC;;QAGD,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;QAChC,IAAI,CAAC,cAAc,GAAG,UAAU,CAAC;YAC/B,KAAI,CAAC,WAAW,GAAG,SAAS,CAAC;;;YAI7B,AAFA,wDAAwD;YACxD,+DAA+D;YAC/D,KAAI,CAAC,aAAa,EAAE,CAAC;SACtB,EAAE,KAAK,CAAC,CAAC;KACX;IAED;;;OAGG;;;;;IACH,+BAAI;;;;IAAJ,UAAK,KAAa;QAAlB,iBAaC;;QAXC,EAAE,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;YACxB,YAAY,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;SACnC;QAED,IAAI,CAAC,cAAc,GAAG,UAAU,CAAC;YAC/B,KAAI,CAAC,WAAW,GAAG,QAAQ,CAAC;;;YAI5B,AAFA,wDAAwD;YACxD,+DAA+D;YAC/D,KAAI,CAAC,aAAa,EAAE,CAAC;SACtB,EAAE,KAAK,CAAC,CAAC;KACX;IAED,sFAAsF;;IACtF,sCAAW;IAAX;QACE,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC;KACpC;IAED,8CAA8C;;IAC9C,oCAAS;IAAT;QACE,MAAM,CAAC,IAAI,CAAC,WAAW,KAAK,SAAS,CAAC;KACvC;IAED,0CAAe,GAAf;QACE,IAAI,CAAC,mBAAmB,GAAG,KAAK,CAAC;KAClC;IAED,yCAAc,GAAd,UAAe,KAAqB;QAClC,IAAM,OAAO,GAAG,KAAK,CAAC,OAA4B,CAAC;QAEnD,EAAE,CAAC,CAAC,OAAO,KAAK,QAAQ,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;YAC9C,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;SACrB;QAED,EAAE,CAAC,CAAC,OAAO,KAAK,SAAS,IAAI,OAAO,KAAK,QAAQ,CAAC,CAAC,CAAC;YAClD,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;SACjC;KACF;IAED;;;;OAIG;;;;;;IACH,iDAAsB;;;;;IAAtB;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC;YAC7B,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SACd;KACF;IAED;;;;OAIG;;;;;;IACH,wCAAa;;;;;IAAb;QACE,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;KACxC;;gBAjIF,gBAAS,SAAC;oBACT,QAAQ,EAAE,MAAM,CAAC,EAAE;oBACnB,QAAQ,EAAE,uBAAuB;oBACjC,WAAW,EAAE,cAAc;oBAC3B,SAAS,EAAE,CAAC,aAAa,CAAC;oBAC1B,aAAa,EAAE,wBAAiB,CAAC,IAAI;oBACrC,eAAe,EAAE,8BAAuB,CAAC,MAAM;oBAC/C,UAAU,EAAE,CAAC,yCAAoB,CAAC,YAAY,CAAC;oBAC/C,IAAI,EAAE;;;wBAGJ,cAAc,EAAE,sCAAsC;wBACtD,cAAc,EAAE,+BAA+B;wBAC/C,aAAa,EAAE,MAAM;qBACtB;iBACF;;;;gBAneC,wBAAiB;gBAjBX,2BAAkB;;2BAZ1B;;AAigBa,4CAAgB","sourcesContent":["/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nimport {AnimationEvent} from '@angular/animations';\r\nimport {AriaDescriber, FocusMonitor} from '@angular/cdk/a11y';\r\nimport {Directionality} from '@angular/cdk/bidi';\r\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\r\nimport {ESCAPE} from '@angular/cdk/keycodes';\r\nimport {BreakpointObserver, Breakpoints, BreakpointState} from '@angular/cdk/layout';\r\nimport {\r\n  FlexibleConnectedPositionStrategy,\r\n  HorizontalConnectionPos,\r\n  OriginConnectionPosition,\r\n  Overlay,\r\n  OverlayConnectionPosition,\r\n  OverlayRef,\r\n  ScrollDispatcher,\r\n  ScrollStrategy,\r\n  VerticalConnectionPos,\r\n} from '@angular/cdk/overlay';\r\nimport {Platform} from '@angular/cdk/platform';\r\nimport {ComponentPortal} from '@angular/cdk/portal';\r\nimport {take, takeUntil} from 'rxjs/operators';\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  Directive,\r\n  ElementRef,\r\n  Inject,\r\n  InjectionToken,\r\n  Input,\r\n  NgZone,\r\n  OnDestroy,\r\n  Optional,\r\n  ViewContainerRef,\r\n  ViewEncapsulation,\r\n} from '@angular/core';\r\nimport {Subject, Observable} from 'rxjs';\r\nimport {matTooltipAnimations} from './tooltip-animations';\r\n\r\n\r\nexport type TooltipPosition = 'left' | 'right' | 'above' | 'below' | 'before' | 'after';\r\n\r\n/** Time in ms to throttle repositioning after scroll events. */\r\nexport const SCROLL_THROTTLE_MS = 20;\r\n\r\n/** CSS class that will be attached to the overlay panel. */\r\nexport const TOOLTIP_PANEL_CLASS = 'mat-tooltip-panel';\r\n\r\n/** Creates an error to be thrown if the user supplied an invalid tooltip position. */\r\nexport function getMatTooltipInvalidPositionError(position: string) {\r\n  return Error(`Tooltip position \"${position}\" is invalid.`);\r\n}\r\n\r\n/** Injection token that determines the scroll handling while a tooltip is visible. */\r\nexport const MAT_TOOLTIP_SCROLL_STRATEGY =\r\n    new InjectionToken<() => ScrollStrategy>('mat-tooltip-scroll-strategy');\r\n\r\n/** @docs-private */\r\nexport function MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY(overlay: Overlay): () => ScrollStrategy {\r\n  return () => overlay.scrollStrategies.reposition({scrollThrottle: SCROLL_THROTTLE_MS});\r\n}\r\n\r\n/** @docs-private */\r\nexport const MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER = {\r\n  provide: MAT_TOOLTIP_SCROLL_STRATEGY,\r\n  deps: [Overlay],\r\n  useFactory: MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY,\r\n};\r\n\r\n/** Default `matTooltip` options that can be overridden. */\r\nexport interface MatTooltipDefaultOptions {\r\n  showDelay: number;\r\n  hideDelay: number;\r\n  touchendHideDelay: number;\r\n}\r\n\r\n/** Injection token to be used to override the default options for `matTooltip`. */\r\nexport const MAT_TOOLTIP_DEFAULT_OPTIONS =\r\n    new InjectionToken<MatTooltipDefaultOptions>('mat-tooltip-default-options', {\r\n      providedIn: 'root',\r\n      factory: MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY\r\n    });\r\n\r\nexport function MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY(): MatTooltipDefaultOptions {\r\n  return {\r\n    showDelay: 0,\r\n    hideDelay: 0,\r\n    touchendHideDelay: 1500,\r\n  };\r\n}\r\n\r\n/**\r\n * Directive that attaches a material design tooltip to the host element. Animates the showing and\r\n * hiding of a tooltip provided position (defaults to below the element).\r\n *\r\n * https://material.google.com/components/tooltips.html\r\n */\r\n@Directive({\r\n  selector: '[matTooltip]',\r\n  exportAs: 'matTooltip',\r\n  host: {\r\n    '(longpress)': 'show()',\r\n    '(keydown)': '_handleKeydown($event)',\r\n    '(touchend)': '_handleTouchend()',\r\n  },\r\n})\r\nexport class MatTooltip implements OnDestroy {\r\n  _overlayRef: OverlayRef | null;\r\n  _tooltipInstance: TooltipComponent | null;\r\n\r\n  private _portal: ComponentPortal<TooltipComponent>;\r\n  private _position: TooltipPosition = 'below';\r\n  private _disabled: boolean = false;\r\n  private _tooltipClass: string|string[]|Set<string>|{[key: string]: any};\r\n\r\n  /** Allows the user to define the position of the tooltip relative to the parent element */\r\n  @Input('matTooltipPosition')\r\n  get position(): TooltipPosition { return this._position; }\r\n  set position(value: TooltipPosition) {\r\n    if (value !== this._position) {\r\n      this._position = value;\r\n\r\n      if (this._overlayRef) {\r\n        this._updatePosition();\r\n\r\n        if (this._tooltipInstance) {\r\n          this._tooltipInstance!.show(0);\r\n        }\r\n\r\n        this._overlayRef.updatePosition();\r\n      }\r\n    }\r\n  }\r\n\r\n  /** Disables the display of the tooltip. */\r\n  @Input('matTooltipDisabled')\r\n  get disabled(): boolean { return this._disabled; }\r\n  set disabled(value) {\r\n    this._disabled = coerceBooleanProperty(value);\r\n\r\n    // If tooltip is disabled, hide immediately.\r\n    if (this._disabled) {\r\n      this.hide(0);\r\n    }\r\n  }\r\n\r\n  /** The default delay in ms before showing the tooltip after show is called */\r\n  @Input('matTooltipShowDelay') showDelay = this._defaultOptions.showDelay;\r\n\r\n  /** The default delay in ms before hiding the tooltip after hide is called */\r\n  @Input('matTooltipHideDelay') hideDelay = this._defaultOptions.hideDelay;\r\n\r\n  private _message = '';\r\n\r\n  /** The message to be displayed in the tooltip */\r\n  @Input('matTooltip')\r\n  get message() { return this._message; }\r\n  set message(value: string) {\r\n    this._ariaDescriber.removeDescription(this._elementRef.nativeElement, this._message);\r\n\r\n    // If the message is not a string (e.g. number), convert it to a string and trim it.\r\n    this._message = value != null ? `${value}`.trim() : '';\r\n\r\n    if (!this._message && this._isTooltipVisible()) {\r\n      this.hide(0);\r\n    } else {\r\n      this._updateTooltipMessage();\r\n      this._ariaDescriber.describe(this._elementRef.nativeElement, this.message);\r\n    }\r\n  }\r\n\r\n  /** Classes to be passed to the tooltip. Supports the same syntax as `ngClass`. */\r\n  @Input('matTooltipClass')\r\n  get tooltipClass() { return this._tooltipClass; }\r\n  set tooltipClass(value: string|string[]|Set<string>|{[key: string]: any}) {\r\n    this._tooltipClass = value;\r\n    if (this._tooltipInstance) {\r\n      this._setTooltipClass(this._tooltipClass);\r\n    }\r\n  }\r\n\r\n  private _manualListeners = new Map<string, Function>();\r\n\r\n  /** Emits when the component is destroyed. */\r\n  private readonly _destroyed = new Subject<void>();\r\n\r\n  constructor(\r\n    private _overlay: Overlay,\r\n    private _elementRef: ElementRef,\r\n    private _scrollDispatcher: ScrollDispatcher,\r\n    private _viewContainerRef: ViewContainerRef,\r\n    private _ngZone: NgZone,\r\n    private _platform: Platform,\r\n    private _ariaDescriber: AriaDescriber,\r\n    private _focusMonitor: FocusMonitor,\r\n    @Inject(MAT_TOOLTIP_SCROLL_STRATEGY) private _scrollStrategy,\r\n    @Optional() private _dir: Directionality,\r\n    @Optional() @Inject(MAT_TOOLTIP_DEFAULT_OPTIONS)\r\n      private _defaultOptions: MatTooltipDefaultOptions) {\r\n\r\n    const element: HTMLElement = _elementRef.nativeElement;\r\n\r\n    // The mouse events shouldn't be bound on iOS devices, because\r\n    // they can prevent the first tap from firing its click event.\r\n    if (!_platform.IOS) {\r\n      this._manualListeners.set('mouseenter', () => this.show());\r\n      this._manualListeners.set('mouseleave', () => this.hide());\r\n\r\n      this._manualListeners\r\n        .forEach((listener, event) => _elementRef.nativeElement.addEventListener(event, listener));\r\n    } else if (element.nodeName === 'INPUT' || element.nodeName === 'TEXTAREA') {\r\n      // When we bind a gesture event on an element (in this case `longpress`), HammerJS\r\n      // will add some inline styles by default, including `user-select: none`. This is\r\n      // problematic on iOS, because it will prevent users from typing in inputs. If\r\n      // we're on iOS and the tooltip is attached on an input or textarea, we clear\r\n      // the `user-select` to avoid these issues.\r\n      element.style.webkitUserSelect = element.style.userSelect = '';\r\n    }\r\n\r\n    // Hammer applies `-webkit-user-drag: none` on all elements by default,\r\n    // which breaks the native drag&drop. If the consumer explicitly made\r\n    // the element draggable, clear the `-webkit-user-drag`.\r\n    if (element.draggable && element.style['webkitUserDrag'] === 'none') {\r\n      element.style['webkitUserDrag'] = '';\r\n    }\r\n\r\n    _focusMonitor.monitor(element).pipe(takeUntil(this._destroyed)).subscribe(origin => {\r\n      // Note that the focus monitor runs outside the Angular zone.\r\n      if (!origin) {\r\n        _ngZone.run(() => this.hide(0));\r\n      } else if (origin === 'keyboard') {\r\n        _ngZone.run(() => this.show());\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Dispose the tooltip when destroyed.\r\n   */\r\n  ngOnDestroy() {\r\n    if (this._overlayRef) {\r\n      this._overlayRef.dispose();\r\n      this._tooltipInstance = null;\r\n    }\r\n\r\n    // Clean up the event listeners set in the constructor\r\n    if (!this._platform.IOS) {\r\n      this._manualListeners.forEach((listener, event) =>\r\n        this._elementRef.nativeElement.removeEventListener(event, listener));\r\n\r\n      this._manualListeners.clear();\r\n    }\r\n\r\n    this._destroyed.next();\r\n    this._destroyed.complete();\r\n\r\n    this._ariaDescriber.removeDescription(this._elementRef.nativeElement, this.message);\r\n    this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\r\n  }\r\n\r\n  /** Shows the tooltip after the delay in ms, defaults to tooltip-delay-show or 0ms if no input */\r\n  show(delay: number = this.showDelay): void {\r\n    if (this.disabled || !this.message) { return; }\r\n\r\n    const overlayRef = this._createOverlay();\r\n\r\n    this._detach();\r\n    this._portal = this._portal || new ComponentPortal(TooltipComponent, this._viewContainerRef);\r\n    this._tooltipInstance = overlayRef.attach(this._portal).instance;\r\n    this._tooltipInstance.afterHidden()\r\n      .pipe(takeUntil(this._destroyed))\r\n      .subscribe(() => this._detach());\r\n    this._setTooltipClass(this._tooltipClass);\r\n    this._updateTooltipMessage();\r\n    this._tooltipInstance!.show(delay);\r\n  }\r\n\r\n  /** Hides the tooltip after the delay in ms, defaults to tooltip-delay-hide or 0ms if no input */\r\n  hide(delay: number = this.hideDelay): void {\r\n    if (this._tooltipInstance) {\r\n      this._tooltipInstance.hide(delay);\r\n    }\r\n  }\r\n\r\n  /** Shows/hides the tooltip */\r\n  toggle(): void {\r\n    this._isTooltipVisible() ? this.hide() : this.show();\r\n  }\r\n\r\n  /** Returns true if the tooltip is currently visible to the user */\r\n  _isTooltipVisible(): boolean {\r\n    return !!this._tooltipInstance && this._tooltipInstance.isVisible();\r\n  }\r\n\r\n  /** Handles the keydown events on the host element. */\r\n  _handleKeydown(e: KeyboardEvent) {\r\n    if (this._isTooltipVisible() && e.keyCode === ESCAPE) {\r\n      e.stopPropagation();\r\n      this.hide(0);\r\n    }\r\n  }\r\n\r\n  /** Handles the touchend events on the host element. */\r\n  _handleTouchend() {\r\n    this.hide(this._defaultOptions.touchendHideDelay);\r\n  }\r\n\r\n  /** Create the overlay config and position strategy */\r\n  private _createOverlay(): OverlayRef {\r\n    if (this._overlayRef) {\r\n      return this._overlayRef;\r\n    }\r\n\r\n    // Create connected position strategy that listens for scroll events to reposition.\r\n    const strategy = this._overlay.position()\r\n      .flexibleConnectedTo(this._elementRef)\r\n      .withTransformOriginOn('.mat-tooltip')\r\n      .withFlexibleDimensions(false)\r\n      .withViewportMargin(8);\r\n\r\n    const scrollableAncestors = this._scrollDispatcher\r\n      .getAncestorScrollContainers(this._elementRef);\r\n\r\n    strategy.withScrollableContainers(scrollableAncestors);\r\n\r\n    strategy.positionChanges.pipe(takeUntil(this._destroyed)).subscribe(change => {\r\n      if (this._tooltipInstance) {\r\n        if (change.scrollableViewProperties.isOverlayClipped && this._tooltipInstance.isVisible()) {\r\n          // After position changes occur and the overlay is clipped by\r\n          // a parent scrollable then close the tooltip.\r\n          this._ngZone.run(() => this.hide(0));\r\n        }\r\n      }\r\n    });\r\n\r\n    this._overlayRef = this._overlay.create({\r\n      direction: this._dir,\r\n      positionStrategy: strategy,\r\n      panelClass: TOOLTIP_PANEL_CLASS,\r\n      scrollStrategy: this._scrollStrategy()\r\n    });\r\n\r\n    this._updatePosition();\r\n\r\n    this._overlayRef.detachments()\r\n      .pipe(takeUntil(this._destroyed))\r\n      .subscribe(() => this._detach());\r\n\r\n    return this._overlayRef;\r\n  }\r\n\r\n  /** Detaches the currently-attached tooltip. */\r\n  private _detach() {\r\n    if (this._overlayRef && this._overlayRef.hasAttached()) {\r\n      this._overlayRef.detach();\r\n    }\r\n\r\n    this._tooltipInstance = null;\r\n  }\r\n\r\n  /** Updates the position of the current tooltip. */\r\n  private _updatePosition() {\r\n    const position =\r\n        this._overlayRef!.getConfig().positionStrategy as FlexibleConnectedPositionStrategy;\r\n    const origin = this._getOrigin();\r\n    const overlay = this._getOverlayPosition();\r\n\r\n    position.withPositions([\r\n      {...origin.main, ...overlay.main},\r\n      {...origin.fallback, ...overlay.fallback}\r\n    ]);\r\n  }\r\n\r\n  /**\r\n   * Returns the origin position and a fallback position based on the user's position preference.\r\n   * The fallback position is the inverse of the origin (e.g. `'below' -> 'above'`).\r\n   */\r\n  _getOrigin(): {main: OriginConnectionPosition, fallback: OriginConnectionPosition} {\r\n    const isLtr = !this._dir || this._dir.value == 'ltr';\r\n    const position = this.position;\r\n    let originPosition: OriginConnectionPosition;\r\n\r\n    if (position == 'above' || position == 'below') {\r\n      originPosition = {originX: 'center', originY: position == 'above' ? 'top' : 'bottom'};\r\n    } else if (\r\n      position == 'before' ||\r\n      (position == 'left' && isLtr) ||\r\n      (position == 'right' && !isLtr)) {\r\n      originPosition = {originX: 'start', originY: 'center'};\r\n    } else if (\r\n      position == 'after' ||\r\n      (position == 'right' && isLtr) ||\r\n      (position == 'left' && !isLtr)) {\r\n      originPosition = {originX: 'end', originY: 'center'};\r\n    } else {\r\n      throw getMatTooltipInvalidPositionError(position);\r\n    }\r\n\r\n    const {x, y} = this._invertPosition(originPosition.originX, originPosition.originY);\r\n\r\n    return {\r\n      main: originPosition,\r\n      fallback: {originX: x, originY: y}\r\n    };\r\n  }\r\n\r\n  /** Returns the overlay position and a fallback position based on the user's preference */\r\n  _getOverlayPosition(): {main: OverlayConnectionPosition, fallback: OverlayConnectionPosition} {\r\n    const isLtr = !this._dir || this._dir.value == 'ltr';\r\n    const position = this.position;\r\n    let overlayPosition: OverlayConnectionPosition;\r\n\r\n    if (position == 'above') {\r\n      overlayPosition = {overlayX: 'center', overlayY: 'bottom'};\r\n    } else if (position == 'below') {\r\n      overlayPosition = {overlayX: 'center', overlayY: 'top'};\r\n    } else if (\r\n      position == 'before' ||\r\n      (position == 'left' && isLtr) ||\r\n      (position == 'right' && !isLtr)) {\r\n      overlayPosition = {overlayX: 'end', overlayY: 'center'};\r\n    } else if (\r\n      position == 'after' ||\r\n      (position == 'right' && isLtr) ||\r\n      (position == 'left' && !isLtr)) {\r\n      overlayPosition = {overlayX: 'start', overlayY: 'center'};\r\n    } else {\r\n      throw getMatTooltipInvalidPositionError(position);\r\n    }\r\n\r\n    const {x, y} = this._invertPosition(overlayPosition.overlayX, overlayPosition.overlayY);\r\n\r\n    return {\r\n      main: overlayPosition,\r\n      fallback: {overlayX: x, overlayY: y}\r\n    };\r\n  }\r\n\r\n  /** Updates the tooltip message and repositions the overlay according to the new message length */\r\n  private _updateTooltipMessage() {\r\n    // Must wait for the message to be painted to the tooltip so that the overlay can properly\r\n    // calculate the correct positioning based on the size of the text.\r\n    if (this._tooltipInstance) {\r\n      this._tooltipInstance.message = this.message;\r\n      this._tooltipInstance._markForCheck();\r\n\r\n      this._ngZone.onMicrotaskEmpty.asObservable().pipe(\r\n        take(1),\r\n        takeUntil(this._destroyed)\r\n      ).subscribe(() => {\r\n        if (this._tooltipInstance) {\r\n          this._overlayRef!.updatePosition();\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  /** Updates the tooltip class */\r\n  private _setTooltipClass(tooltipClass: string|string[]|Set<string>|{[key: string]: any}) {\r\n    if (this._tooltipInstance) {\r\n      this._tooltipInstance.tooltipClass = tooltipClass;\r\n      this._tooltipInstance._markForCheck();\r\n    }\r\n  }\r\n\r\n  /** Inverts an overlay position. */\r\n  private _invertPosition(x: HorizontalConnectionPos, y: VerticalConnectionPos) {\r\n    if (this.position === 'above' || this.position === 'below') {\r\n      if (y === 'top') {\r\n        y = 'bottom';\r\n      } else if (y === 'bottom') {\r\n        y = 'top';\r\n      }\r\n    } else {\r\n      if (x === 'end') {\r\n        x = 'start';\r\n      } else if (x === 'start') {\r\n        x = 'end';\r\n      }\r\n    }\r\n\r\n    return {x, y};\r\n  }\r\n}\r\n\r\nexport type TooltipVisibility = 'initial' | 'visible' | 'hidden';\r\n\r\n/**\r\n * Internal component that wraps the tooltip's content.\r\n * @docs-private\r\n */\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'mat-tooltip-component',\r\n  templateUrl: 'tooltip.html',\r\n  styleUrls: ['tooltip.css'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  animations: [matTooltipAnimations.tooltipState],\r\n  host: {\r\n    // Forces the element to have a layout in IE and Edge. This fixes issues where the element\r\n    // won't be rendered if the animations are disabled or there is no web animations polyfill.\r\n    '[style.zoom]': '_visibility === \"visible\" ? 1 : null',\r\n    '(body:click)': 'this._handleBodyInteraction()',\r\n    'aria-hidden': 'true',\r\n  }\r\n})\r\nexport class TooltipComponent {\r\n  /** Message to display in the tooltip */\r\n  message: string;\r\n\r\n  /** Classes to be added to the tooltip. Supports the same syntax as `ngClass`. */\r\n  tooltipClass: string|string[]|Set<string>|{[key: string]: any};\r\n\r\n  /** The timeout ID of any current timer set to show the tooltip */\r\n  _showTimeoutId: number;\r\n\r\n  /** The timeout ID of any current timer set to hide the tooltip */\r\n  _hideTimeoutId: number;\r\n\r\n  /** Property watched by the animation framework to show or hide the tooltip */\r\n  _visibility: TooltipVisibility = 'initial';\r\n\r\n  /** Whether interactions on the page should close the tooltip */\r\n  private _closeOnInteraction: boolean = false;\r\n\r\n  /** Subject for notifying that the tooltip has been hidden from the view */\r\n  private readonly _onHide: Subject<any> = new Subject();\r\n\r\n  /** Stream that emits whether the user has a handset-sized display.  */\r\n  _isHandset: Observable<BreakpointState> = this._breakpointObserver.observe(Breakpoints.Handset);\r\n\r\n  constructor(\r\n    private _changeDetectorRef: ChangeDetectorRef,\r\n    private _breakpointObserver: BreakpointObserver) {}\r\n\r\n  /**\r\n   * Shows the tooltip with an animation originating from the provided origin\r\n   * @param delay Amount of milliseconds to the delay showing the tooltip.\r\n   */\r\n  show(delay: number): void {\r\n    // Cancel the delayed hide if it is scheduled\r\n    if (this._hideTimeoutId) {\r\n      clearTimeout(this._hideTimeoutId);\r\n    }\r\n\r\n    // Body interactions should cancel the tooltip if there is a delay in showing.\r\n    this._closeOnInteraction = true;\r\n    this._showTimeoutId = setTimeout(() => {\r\n      this._visibility = 'visible';\r\n\r\n      // Mark for check so if any parent component has set the\r\n      // ChangeDetectionStrategy to OnPush it will be checked anyways\r\n      this._markForCheck();\r\n    }, delay);\r\n  }\r\n\r\n  /**\r\n   * Begins the animation to hide the tooltip after the provided delay in ms.\r\n   * @param delay Amount of milliseconds to delay showing the tooltip.\r\n   */\r\n  hide(delay: number): void {\r\n    // Cancel the delayed show if it is scheduled\r\n    if (this._showTimeoutId) {\r\n      clearTimeout(this._showTimeoutId);\r\n    }\r\n\r\n    this._hideTimeoutId = setTimeout(() => {\r\n      this._visibility = 'hidden';\r\n\r\n      // Mark for check so if any parent component has set the\r\n      // ChangeDetectionStrategy to OnPush it will be checked anyways\r\n      this._markForCheck();\r\n    }, delay);\r\n  }\r\n\r\n  /** Returns an observable that notifies when the tooltip has been hidden from view. */\r\n  afterHidden(): Observable<void> {\r\n    return this._onHide.asObservable();\r\n  }\r\n\r\n  /** Whether the tooltip is being displayed. */\r\n  isVisible(): boolean {\r\n    return this._visibility === 'visible';\r\n  }\r\n\r\n  _animationStart() {\r\n    this._closeOnInteraction = false;\r\n  }\r\n\r\n  _animationDone(event: AnimationEvent): void {\r\n    const toState = event.toState as TooltipVisibility;\r\n\r\n    if (toState === 'hidden' && !this.isVisible()) {\r\n      this._onHide.next();\r\n    }\r\n\r\n    if (toState === 'visible' || toState === 'hidden') {\r\n      this._closeOnInteraction = true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Interactions on the HTML body should close the tooltip immediately as defined in the\r\n   * material design spec.\r\n   * https://material.google.com/components/tooltips.html#tooltips-interaction\r\n   */\r\n  _handleBodyInteraction(): void {\r\n    if (this._closeOnInteraction) {\r\n      this.hide(0);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Marks that the tooltip needs to be checked in the next change detection run.\r\n   * Mainly used for rendering the initial text before positioning a tooltip, which\r\n   * can be problematic in components with OnPush change detection.\r\n   */\r\n  _markForCheck(): void {\r\n    this._changeDetectorRef.markForCheck();\r\n  }\r\n}\r\n"]}