{"version":3,"file":"tooltip.spec.js","sourceRoot":"","sources":["../../../../src/lib/tooltip/tooltip.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import {\r\n  async,\r\n  ComponentFixture,\r\n  fakeAsync,\r\n  flush,\r\n  flushMicrotasks,\r\n  inject,\r\n  TestBed,\r\n  tick\r\n} from '@angular/core/testing';\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  DebugElement,\r\n  ElementRef,\r\n  ViewChild,\r\n  NgZone,\r\n} from '@angular/core';\r\nimport {AnimationEvent} from '@angular/animations';\r\nimport {By} from '@angular/platform-browser';\r\nimport {NoopAnimationsModule} from '@angular/platform-browser/animations';\r\nimport {Direction, Directionality} from '@angular/cdk/bidi';\r\nimport {OverlayContainer, OverlayModule, CdkScrollable} from '@angular/cdk/overlay';\r\nimport {Platform} from '@angular/cdk/platform';\r\nimport {dispatchFakeEvent, dispatchKeyboardEvent, patchElementFocus} from '@angular/cdk/testing';\r\nimport {ESCAPE} from '@angular/cdk/keycodes';\r\nimport {FocusMonitor} from '@angular/cdk/a11y';\r\nimport {\r\n  MatTooltip,\r\n  MatTooltipModule,\r\n  SCROLL_THROTTLE_MS,\r\n  TOOLTIP_PANEL_CLASS,\r\n  MAT_TOOLTIP_DEFAULT_OPTIONS,\r\n} from './index';\r\n\r\n\r\nconst initialTooltipMessage = 'initial tooltip message';\r\n\r\ndescribe('MatTooltip', () => {\r\n  let overlayContainer: OverlayContainer;\r\n  let overlayContainerElement: HTMLElement;\r\n  let dir: {value: Direction};\r\n  let platform: {IOS: boolean, isBrowser: boolean};\r\n  let focusMonitor: FocusMonitor;\r\n\r\n  beforeEach(async(() => {\r\n    // Set the default Platform override that can be updated before component creation.\r\n    platform = {IOS: false, isBrowser: true};\r\n\r\n    TestBed.configureTestingModule({\r\n      imports: [MatTooltipModule, OverlayModule, NoopAnimationsModule],\r\n      declarations: [\r\n        BasicTooltipDemo,\r\n        ScrollableTooltipDemo,\r\n        OnPushTooltipDemo,\r\n        DynamicTooltipsDemo,\r\n        TooltipOnTextFields,\r\n        TooltipOnDraggableElement,\r\n      ],\r\n      providers: [\r\n        {provide: Platform, useFactory: () => platform},\r\n        {provide: Directionality, useFactory: () => {\r\n          return dir = {value: 'ltr'};\r\n        }}\r\n      ]\r\n    });\r\n\r\n    TestBed.compileComponents();\r\n\r\n    inject([OverlayContainer, FocusMonitor], (oc: OverlayContainer, fm: FocusMonitor) => {\r\n      overlayContainer = oc;\r\n      overlayContainerElement = oc.getContainerElement();\r\n      focusMonitor = fm;\r\n    })();\r\n  }));\r\n\r\n  afterEach(inject([OverlayContainer], (currentOverlayContainer: OverlayContainer) => {\r\n    // Since we're resetting the testing module in some of the tests,\r\n    // we can potentially have multiple overlay containers.\r\n    currentOverlayContainer.ngOnDestroy();\r\n    overlayContainer.ngOnDestroy();\r\n  }));\r\n\r\n  describe('basic usage', () => {\r\n    let fixture: ComponentFixture<BasicTooltipDemo>;\r\n    let buttonDebugElement: DebugElement;\r\n    let buttonElement: HTMLButtonElement;\r\n    let tooltipDirective: MatTooltip;\r\n\r\n    beforeEach(() => {\r\n      fixture = TestBed.createComponent(BasicTooltipDemo);\r\n      fixture.detectChanges();\r\n      buttonDebugElement = fixture.debugElement.query(By.css('button'));\r\n      buttonElement = <HTMLButtonElement> buttonDebugElement.nativeElement;\r\n      tooltipDirective = buttonDebugElement.injector.get<MatTooltip>(MatTooltip);\r\n    });\r\n\r\n    it('should show and hide the tooltip', fakeAsync(() => {\r\n      assertTooltipInstance(tooltipDirective, false);\r\n\r\n      tooltipDirective.show();\r\n      tick(0); // Tick for the show delay (default is 0)\r\n      expect(tooltipDirective._isTooltipVisible()).toBe(true);\r\n\r\n      fixture.detectChanges();\r\n\r\n      // wait till animation has finished\r\n      tick(500);\r\n\r\n      // Make sure tooltip is shown to the user and animation has finished\r\n      const tooltipElement = overlayContainerElement.querySelector('.mat-tooltip') as HTMLElement;\r\n      expect(tooltipElement instanceof HTMLElement).toBe(true);\r\n      expect(tooltipElement.style.transform).toBe('scale(1)');\r\n\r\n      expect(overlayContainerElement.textContent).toContain(initialTooltipMessage);\r\n\r\n      // After hide called, a timeout delay is created that will to hide the tooltip.\r\n      const tooltipDelay = 1000;\r\n      tooltipDirective.hide(tooltipDelay);\r\n      expect(tooltipDirective._isTooltipVisible()).toBe(true);\r\n\r\n      // After the tooltip delay elapses, expect that the tooltip is not visible.\r\n      tick(tooltipDelay);\r\n      fixture.detectChanges();\r\n      expect(tooltipDirective._isTooltipVisible()).toBe(false);\r\n\r\n      // On animation complete, should expect that the tooltip has been detached.\r\n      flushMicrotasks();\r\n      assertTooltipInstance(tooltipDirective, false);\r\n    }));\r\n\r\n    it('should be able to re-open a tooltip if it was closed by detaching the overlay',\r\n      fakeAsync(() => {\r\n        tooltipDirective.show();\r\n        tick(0);\r\n        expect(tooltipDirective._isTooltipVisible()).toBe(true);\r\n        fixture.detectChanges();\r\n        tick(500);\r\n\r\n        tooltipDirective._overlayRef!.detach();\r\n        tick(0);\r\n        fixture.detectChanges();\r\n        expect(tooltipDirective._isTooltipVisible()).toBe(false);\r\n        flushMicrotasks();\r\n        assertTooltipInstance(tooltipDirective, false);\r\n\r\n        tooltipDirective.show();\r\n        tick(0);\r\n        expect(tooltipDirective._isTooltipVisible()).toBe(true);\r\n      }));\r\n\r\n    it('should show with delay', fakeAsync(() => {\r\n      assertTooltipInstance(tooltipDirective, false);\r\n\r\n      const tooltipDelay = 1000;\r\n      tooltipDirective.show(tooltipDelay);\r\n      expect(tooltipDirective._isTooltipVisible()).toBe(false);\r\n\r\n      fixture.detectChanges();\r\n      expect(overlayContainerElement.textContent).toContain('');\r\n\r\n      tick(tooltipDelay);\r\n      expect(tooltipDirective._isTooltipVisible()).toBe(true);\r\n      expect(overlayContainerElement.textContent).toContain(initialTooltipMessage);\r\n    }));\r\n\r\n    it('should be able to override the default show and hide delays', fakeAsync(() => {\r\n      TestBed\r\n        .resetTestingModule()\r\n        .configureTestingModule({\r\n          imports: [MatTooltipModule, OverlayModule, NoopAnimationsModule],\r\n          declarations: [BasicTooltipDemo],\r\n          providers: [{\r\n            provide: MAT_TOOLTIP_DEFAULT_OPTIONS,\r\n            useValue: {showDelay: 1337, hideDelay: 7331}\r\n          }]\r\n        })\r\n        .compileComponents();\r\n\r\n      fixture = TestBed.createComponent(BasicTooltipDemo);\r\n      fixture.detectChanges();\r\n      tooltipDirective = fixture.debugElement.query(By.css('button')).injector.get(MatTooltip);\r\n\r\n      tooltipDirective.show();\r\n      fixture.detectChanges();\r\n      tick();\r\n\r\n      expect(tooltipDirective._isTooltipVisible()).toBe(false);\r\n      tick(1337);\r\n      expect(tooltipDirective._isTooltipVisible()).toBe(true);\r\n\r\n      tooltipDirective.hide();\r\n      fixture.detectChanges();\r\n      tick();\r\n\r\n      expect(tooltipDirective._isTooltipVisible()).toBe(true);\r\n      tick(7331);\r\n      expect(tooltipDirective._isTooltipVisible()).toBe(false);\r\n    }));\r\n\r\n    it('should set a css class on the overlay panel element', fakeAsync(() => {\r\n      tooltipDirective.show();\r\n      fixture.detectChanges();\r\n      tick(0);\r\n\r\n      const overlayRef = tooltipDirective._overlayRef;\r\n\r\n      expect(!!overlayRef).toBeTruthy();\r\n      expect(overlayRef!.overlayElement.classList).toContain(TOOLTIP_PANEL_CLASS,\r\n          'Expected the overlay panel element to have the tooltip panel class set.');\r\n    }));\r\n\r\n    it('should not show if disabled', fakeAsync(() => {\r\n      // Test that disabling the tooltip will not set the tooltip visible\r\n      tooltipDirective.disabled = true;\r\n      tooltipDirective.show();\r\n      fixture.detectChanges();\r\n      tick(0);\r\n      expect(tooltipDirective._isTooltipVisible()).toBe(false);\r\n\r\n      // Test to make sure setting disabled to false will show the tooltip\r\n      // Sanity check to make sure everything was correct before (detectChanges, tick)\r\n      tooltipDirective.disabled = false;\r\n      tooltipDirective.show();\r\n      fixture.detectChanges();\r\n      tick(0);\r\n      expect(tooltipDirective._isTooltipVisible()).toBe(true);\r\n    }));\r\n\r\n    it('should hide if disabled while visible', fakeAsync(() => {\r\n      // Display the tooltip with a timeout before hiding.\r\n      tooltipDirective.hideDelay = 1000;\r\n      tooltipDirective.show();\r\n      fixture.detectChanges();\r\n      tick(0);\r\n      expect(tooltipDirective._isTooltipVisible()).toBe(true);\r\n\r\n      // Set tooltip to be disabled and verify that the tooltip hides.\r\n      tooltipDirective.disabled = true;\r\n      tick(0);\r\n      expect(tooltipDirective._isTooltipVisible()).toBe(false);\r\n    }));\r\n\r\n    it('should hide if the message is cleared while the tooltip is open', fakeAsync(() => {\r\n      tooltipDirective.show();\r\n      fixture.detectChanges();\r\n      tick(0);\r\n      expect(tooltipDirective._isTooltipVisible()).toBe(true);\r\n\r\n      fixture.componentInstance.message = '';\r\n      fixture.detectChanges();\r\n      tick(0);\r\n      expect(tooltipDirective._isTooltipVisible()).toBe(false);\r\n    }));\r\n\r\n    it('should not show if hide is called before delay finishes', async(() => {\r\n      assertTooltipInstance(tooltipDirective, false);\r\n\r\n      const tooltipDelay = 1000;\r\n\r\n      tooltipDirective.show(tooltipDelay);\r\n      expect(tooltipDirective._isTooltipVisible()).toBe(false);\r\n\r\n      fixture.detectChanges();\r\n      expect(overlayContainerElement.textContent).toContain('');\r\n      tooltipDirective.hide();\r\n\r\n      fixture.whenStable().then(() => {\r\n        expect(tooltipDirective._isTooltipVisible()).toBe(false);\r\n      });\r\n    }));\r\n\r\n    it('should not show tooltip if message is not present or empty', () => {\r\n      assertTooltipInstance(tooltipDirective, false);\r\n\r\n      tooltipDirective.message = undefined!;\r\n      fixture.detectChanges();\r\n      tooltipDirective.show();\r\n      assertTooltipInstance(tooltipDirective, false);\r\n\r\n      tooltipDirective.message = null!;\r\n      fixture.detectChanges();\r\n      tooltipDirective.show();\r\n      assertTooltipInstance(tooltipDirective, false);\r\n\r\n      tooltipDirective.message = '';\r\n      fixture.detectChanges();\r\n      tooltipDirective.show();\r\n      assertTooltipInstance(tooltipDirective, false);\r\n\r\n      tooltipDirective.message = '   ';\r\n      fixture.detectChanges();\r\n      tooltipDirective.show();\r\n      assertTooltipInstance(tooltipDirective, false);\r\n    });\r\n\r\n    it('should not follow through with hide if show is called after', fakeAsync(() => {\r\n      tooltipDirective.show();\r\n      tick(0); // Tick for the show delay (default is 0)\r\n      expect(tooltipDirective._isTooltipVisible()).toBe(true);\r\n\r\n      // After hide called, a timeout delay is created that will to hide the tooltip.\r\n      const tooltipDelay = 1000;\r\n      tooltipDirective.hide(tooltipDelay);\r\n      expect(tooltipDirective._isTooltipVisible()).toBe(true);\r\n\r\n      // Before delay time has passed, call show which should cancel intent to hide tooltip.\r\n      tooltipDirective.show();\r\n      tick(tooltipDelay);\r\n      expect(tooltipDirective._isTooltipVisible()).toBe(true);\r\n    }));\r\n\r\n    it('should be able to update the tooltip position while open', fakeAsync(() => {\r\n      tooltipDirective.position = 'below';\r\n      tooltipDirective.show();\r\n      tick();\r\n\r\n      assertTooltipInstance(tooltipDirective, true);\r\n\r\n      tooltipDirective.position = 'above';\r\n      spyOn(tooltipDirective._overlayRef!, 'updatePosition').and.callThrough();\r\n      fixture.detectChanges();\r\n      tick();\r\n\r\n      assertTooltipInstance(tooltipDirective, true);\r\n      expect(tooltipDirective._overlayRef!.updatePosition).toHaveBeenCalled();\r\n    }));\r\n\r\n    it('should not throw when updating the position for a closed tooltip', fakeAsync(() => {\r\n      tooltipDirective.position = 'left';\r\n      tooltipDirective.show(0);\r\n      fixture.detectChanges();\r\n      tick();\r\n\r\n      tooltipDirective.hide(0);\r\n      fixture.detectChanges();\r\n      tick();\r\n\r\n      // At this point the animation should be able to complete itself and trigger the\r\n      // _animationDone function, but for unknown reasons in the test infrastructure,\r\n      // this does not occur. Manually call the hook so the animation subscriptions get invoked.\r\n      tooltipDirective._tooltipInstance!._animationDone({\r\n        fromState: 'visible',\r\n        toState: 'hidden',\r\n        totalTime: 150,\r\n        phaseName: 'done',\r\n      } as AnimationEvent);\r\n\r\n      expect(() => {\r\n        tooltipDirective.position = 'right';\r\n        fixture.detectChanges();\r\n        tick();\r\n      }).not.toThrow();\r\n    }));\r\n\r\n    it('should be able to modify the tooltip message', fakeAsync(() => {\r\n      assertTooltipInstance(tooltipDirective, false);\r\n\r\n      tooltipDirective.show();\r\n      tick(0); // Tick for the show delay (default is 0)\r\n      expect(tooltipDirective._tooltipInstance!._visibility).toBe('visible');\r\n\r\n      fixture.detectChanges();\r\n      expect(overlayContainerElement.textContent).toContain(initialTooltipMessage);\r\n\r\n      const newMessage = 'new tooltip message';\r\n      tooltipDirective.message = newMessage;\r\n\r\n      fixture.detectChanges();\r\n      expect(overlayContainerElement.textContent).toContain(newMessage);\r\n    }));\r\n\r\n    it('should allow extra classes to be set on the tooltip', fakeAsync(() => {\r\n      assertTooltipInstance(tooltipDirective, false);\r\n\r\n      tooltipDirective.show();\r\n      tick(0); // Tick for the show delay (default is 0)\r\n      fixture.detectChanges();\r\n\r\n      // Make sure classes aren't prematurely added\r\n      let tooltipElement = overlayContainerElement.querySelector('.mat-tooltip') as HTMLElement;\r\n      expect(tooltipElement.classList).not.toContain('custom-one',\r\n        'Expected to not have the class before enabling matTooltipClass');\r\n      expect(tooltipElement.classList).not.toContain('custom-two',\r\n        'Expected to not have the class before enabling matTooltipClass');\r\n\r\n      // Enable the classes via ngClass syntax\r\n      fixture.componentInstance.showTooltipClass = true;\r\n      fixture.detectChanges();\r\n\r\n      // Make sure classes are correctly added\r\n      tooltipElement = overlayContainerElement.querySelector('.mat-tooltip') as HTMLElement;\r\n      expect(tooltipElement.classList).toContain('custom-one',\r\n        'Expected to have the class after enabling matTooltipClass');\r\n      expect(tooltipElement.classList).toContain('custom-two',\r\n        'Expected to have the class after enabling matTooltipClass');\r\n    }));\r\n\r\n    it('should be removed after parent destroyed', fakeAsync(() => {\r\n      tooltipDirective.show();\r\n      tick(0); // Tick for the show delay (default is 0)\r\n      expect(tooltipDirective._isTooltipVisible()).toBe(true);\r\n\r\n      fixture.destroy();\r\n      expect(overlayContainerElement.childNodes.length).toBe(0);\r\n      expect(overlayContainerElement.textContent).toBe('');\r\n    }));\r\n\r\n    it('should have an aria-described element with the tooltip message', () => {\r\n      const dynamicTooltipsDemoFixture = TestBed.createComponent(DynamicTooltipsDemo);\r\n      const dynamicTooltipsComponent = dynamicTooltipsDemoFixture.componentInstance;\r\n\r\n      dynamicTooltipsComponent.tooltips = ['Tooltip One', 'Tooltip Two'];\r\n      dynamicTooltipsDemoFixture.detectChanges();\r\n\r\n      const buttons = dynamicTooltipsComponent.getButtons();\r\n      const firstButtonAria = buttons[0].getAttribute('aria-describedby');\r\n      expect(document.querySelector(`#${firstButtonAria}`)!.textContent).toBe('Tooltip One');\r\n\r\n      const secondButtonAria = buttons[1].getAttribute('aria-describedby');\r\n      expect(document.querySelector(`#${secondButtonAria}`)!.textContent).toBe('Tooltip Two');\r\n    });\r\n\r\n    it('should not try to dispose the tooltip when destroyed and done hiding', fakeAsync(() => {\r\n      tooltipDirective.show();\r\n      fixture.detectChanges();\r\n      tick(150);\r\n\r\n      const tooltipDelay = 1000;\r\n      tooltipDirective.hide();\r\n      tick(tooltipDelay); // Change the tooltip state to hidden and trigger animation start\r\n\r\n      // Store the tooltip instance, which will be set to null after the button is hidden.\r\n      const tooltipInstance = tooltipDirective._tooltipInstance!;\r\n      fixture.componentInstance.showButton = false;\r\n      fixture.detectChanges();\r\n\r\n      // At this point the animation should be able to complete itself and trigger the\r\n      // _animationDone function, but for unknown reasons in the test infrastructure,\r\n      // this does not occur. Manually call this and verify that doing so does not\r\n      // throw an error.\r\n      tooltipInstance._animationDone({\r\n        fromState: 'visible',\r\n        toState: 'hidden',\r\n        totalTime: 150,\r\n        phaseName: 'done',\r\n      } as AnimationEvent);\r\n    }));\r\n\r\n    it('should consistently position before and after overlay origin in ltr and rtl dir', () => {\r\n      tooltipDirective.position = 'left';\r\n      const leftOrigin = tooltipDirective._getOrigin().main;\r\n      tooltipDirective.position = 'right';\r\n      const rightOrigin = tooltipDirective._getOrigin().main;\r\n\r\n      // Test expectations in LTR\r\n      tooltipDirective.position = 'before';\r\n      expect(tooltipDirective._getOrigin().main).toEqual(leftOrigin);\r\n      tooltipDirective.position = 'after';\r\n      expect(tooltipDirective._getOrigin().main).toEqual(rightOrigin);\r\n\r\n      // Test expectations in RTL\r\n      dir.value = 'rtl';\r\n      tooltipDirective.position = 'before';\r\n      expect(tooltipDirective._getOrigin().main).toEqual(leftOrigin);\r\n      tooltipDirective.position = 'after';\r\n      expect(tooltipDirective._getOrigin().main).toEqual(rightOrigin);\r\n    });\r\n\r\n    it('should consistently position before and after overlay position in ltr and rtl dir', () => {\r\n      tooltipDirective.position = 'left';\r\n      const leftOverlayPosition = tooltipDirective._getOverlayPosition().main;\r\n      tooltipDirective.position = 'right';\r\n      const rightOverlayPosition = tooltipDirective._getOverlayPosition().main;\r\n\r\n      // Test expectations in LTR\r\n      tooltipDirective.position = 'before';\r\n      expect(tooltipDirective._getOverlayPosition().main).toEqual(leftOverlayPosition);\r\n      tooltipDirective.position = 'after';\r\n      expect(tooltipDirective._getOverlayPosition().main).toEqual(rightOverlayPosition);\r\n\r\n      // Test expectations in RTL\r\n      dir.value = 'rtl';\r\n      tooltipDirective.position = 'before';\r\n      expect(tooltipDirective._getOverlayPosition().main).toEqual(leftOverlayPosition);\r\n      tooltipDirective.position = 'after';\r\n      expect(tooltipDirective._getOverlayPosition().main).toEqual(rightOverlayPosition);\r\n    });\r\n\r\n    it('should throw when trying to assign an invalid position', () => {\r\n      expect(() => {\r\n        fixture.componentInstance.position = 'everywhere';\r\n        fixture.detectChanges();\r\n        tooltipDirective.show();\r\n      }).toThrowError('Tooltip position \"everywhere\" is invalid.');\r\n    });\r\n\r\n    it('should pass the layout direction to the tooltip', fakeAsync(() => {\r\n      dir.value = 'rtl';\r\n\r\n      tooltipDirective.show();\r\n      tick(0);\r\n      fixture.detectChanges();\r\n\r\n      const tooltipWrapper =\r\n          overlayContainerElement.querySelector('.cdk-overlay-connected-position-bounding-box')!;\r\n\r\n      expect(tooltipWrapper).toBeTruthy('Expected tooltip to be shown.');\r\n      expect(tooltipWrapper.getAttribute('dir')).toBe('rtl', 'Expected tooltip to be in RTL mode.');\r\n    }));\r\n\r\n    it('should keep the overlay direction in sync with the trigger direction', fakeAsync(() => {\r\n      dir.value = 'rtl';\r\n      tooltipDirective.show();\r\n      tick(0);\r\n      fixture.detectChanges();\r\n      tick(500);\r\n\r\n      let tooltipWrapper =\r\n          overlayContainerElement.querySelector('.cdk-overlay-connected-position-bounding-box')!;\r\n      expect(tooltipWrapper.getAttribute('dir')).toBe('rtl', 'Expected tooltip to be in RTL.');\r\n\r\n      tooltipDirective.hide(0);\r\n      tick(0);\r\n      fixture.detectChanges();\r\n      tick(500);\r\n\r\n      dir.value = 'ltr';\r\n      tooltipDirective.show();\r\n      tick(0);\r\n      fixture.detectChanges();\r\n      tick(500);\r\n\r\n      tooltipWrapper =\r\n          overlayContainerElement.querySelector('.cdk-overlay-connected-position-bounding-box')!;\r\n      expect(tooltipWrapper.getAttribute('dir')).toBe('ltr', 'Expected tooltip to be in LTR.');\r\n    }));\r\n\r\n    it('should be able to set the tooltip message as a number', fakeAsync(() => {\r\n      fixture.componentInstance.message = 100;\r\n      fixture.detectChanges();\r\n\r\n      expect(tooltipDirective.message).toBe('100');\r\n    }));\r\n\r\n    it('should hide when clicking away', fakeAsync(() => {\r\n      tooltipDirective.show();\r\n      tick(0);\r\n      fixture.detectChanges();\r\n      tick(500);\r\n\r\n      expect(tooltipDirective._isTooltipVisible()).toBe(true);\r\n      expect(overlayContainerElement.textContent).toContain(initialTooltipMessage);\r\n\r\n      document.body.click();\r\n      tick(0);\r\n      fixture.detectChanges();\r\n      tick(500);\r\n      fixture.detectChanges();\r\n\r\n      expect(tooltipDirective._isTooltipVisible()).toBe(false);\r\n      expect(overlayContainerElement.textContent).toBe('');\r\n    }));\r\n\r\n    it('should not hide immediately if a click fires while animating', fakeAsync(() => {\r\n      tooltipDirective.show();\r\n      tick(0);\r\n      fixture.detectChanges();\r\n\r\n      document.body.click();\r\n      fixture.detectChanges();\r\n      tick(500);\r\n\r\n      expect(overlayContainerElement.textContent).toContain(initialTooltipMessage);\r\n    }));\r\n\r\n    it('should not throw when pressing ESCAPE', fakeAsync(() => {\r\n      expect(() => {\r\n        dispatchKeyboardEvent(buttonElement, 'keydown', ESCAPE);\r\n        fixture.detectChanges();\r\n      }).not.toThrow();\r\n\r\n      // Flush due to the additional tick that is necessary for the FocusMonitor.\r\n      flush();\r\n    }));\r\n\r\n    it('should not show the tooltip on progammatic focus', fakeAsync(() => {\r\n      patchElementFocus(buttonElement);\r\n      assertTooltipInstance(tooltipDirective, false);\r\n\r\n      focusMonitor.focusVia(buttonElement, 'program');\r\n      tick(0);\r\n      fixture.detectChanges();\r\n      tick(500);\r\n\r\n      expect(overlayContainerElement.querySelector('.mat-tooltip')).toBeNull();\r\n    }));\r\n\r\n    it('should not show the tooltip on mouse focus', fakeAsync(() => {\r\n      patchElementFocus(buttonElement);\r\n      assertTooltipInstance(tooltipDirective, false);\r\n\r\n      focusMonitor.focusVia(buttonElement, 'mouse');\r\n      tick(0);\r\n      fixture.detectChanges();\r\n      tick(500);\r\n\r\n      expect(overlayContainerElement.querySelector('.mat-tooltip')).toBeNull();\r\n    }));\r\n\r\n    it('should not show the tooltip on touch focus', fakeAsync(() => {\r\n      patchElementFocus(buttonElement);\r\n      assertTooltipInstance(tooltipDirective, false);\r\n\r\n      focusMonitor.focusVia(buttonElement, 'touch');\r\n      tick(0);\r\n      fixture.detectChanges();\r\n      tick(500);\r\n\r\n      expect(overlayContainerElement.querySelector('.mat-tooltip')).toBeNull();\r\n    }));\r\n\r\n  });\r\n\r\n  describe('fallback positions', () => {\r\n    let fixture: ComponentFixture<BasicTooltipDemo>;\r\n    let tooltip: MatTooltip;\r\n\r\n    beforeEach(() => {\r\n      fixture = TestBed.createComponent(BasicTooltipDemo);\r\n      fixture.detectChanges();\r\n      tooltip = fixture.debugElement.query(By.css('button')).injector.get<MatTooltip>(MatTooltip);\r\n    });\r\n\r\n    it('should set a fallback origin position by inverting the main origin position', () => {\r\n      tooltip.position = 'left';\r\n      expect(tooltip._getOrigin().main.originX).toBe('start');\r\n      expect(tooltip._getOrigin().fallback.originX).toBe('end');\r\n\r\n      tooltip.position = 'right';\r\n      expect(tooltip._getOrigin().main.originX).toBe('end');\r\n      expect(tooltip._getOrigin().fallback.originX).toBe('start');\r\n\r\n      tooltip.position = 'above';\r\n      expect(tooltip._getOrigin().main.originY).toBe('top');\r\n      expect(tooltip._getOrigin().fallback.originY).toBe('bottom');\r\n\r\n      tooltip.position = 'below';\r\n      expect(tooltip._getOrigin().main.originY).toBe('bottom');\r\n      expect(tooltip._getOrigin().fallback.originY).toBe('top');\r\n    });\r\n\r\n    it('should set a fallback overlay position by inverting the main overlay position', () => {\r\n      tooltip.position = 'left';\r\n      expect(tooltip._getOverlayPosition().main.overlayX).toBe('end');\r\n      expect(tooltip._getOverlayPosition().fallback.overlayX).toBe('start');\r\n\r\n      tooltip.position = 'right';\r\n      expect(tooltip._getOverlayPosition().main.overlayX).toBe('start');\r\n      expect(tooltip._getOverlayPosition().fallback.overlayX).toBe('end');\r\n\r\n      tooltip.position = 'above';\r\n      expect(tooltip._getOverlayPosition().main.overlayY).toBe('bottom');\r\n      expect(tooltip._getOverlayPosition().fallback.overlayY).toBe('top');\r\n\r\n      tooltip.position = 'below';\r\n      expect(tooltip._getOverlayPosition().main.overlayY).toBe('top');\r\n      expect(tooltip._getOverlayPosition().fallback.overlayY).toBe('bottom');\r\n    });\r\n  });\r\n\r\n  describe('scrollable usage', () => {\r\n    let fixture: ComponentFixture<ScrollableTooltipDemo>;\r\n    let buttonDebugElement: DebugElement;\r\n    let tooltipDirective: MatTooltip;\r\n\r\n    beforeEach(() => {\r\n      fixture = TestBed.createComponent(ScrollableTooltipDemo);\r\n      fixture.detectChanges();\r\n      buttonDebugElement = fixture.debugElement.query(By.css('button'));\r\n      tooltipDirective = buttonDebugElement.injector.get<MatTooltip>(MatTooltip);\r\n    });\r\n\r\n    it('should hide tooltip if clipped after changing positions', fakeAsync(() => {\r\n      assertTooltipInstance(tooltipDirective, false);\r\n\r\n      // Show the tooltip and tick for the show delay (default is 0)\r\n      tooltipDirective.show();\r\n      fixture.detectChanges();\r\n      tick(0);\r\n\r\n      // Expect that the tooltip is displayed\r\n      expect(tooltipDirective._isTooltipVisible())\r\n          .toBe(true, 'Expected tooltip to be initially visible');\r\n\r\n      // Scroll the page but tick just before the default throttle should update.\r\n      fixture.componentInstance.scrollDown();\r\n      tick(SCROLL_THROTTLE_MS - 1);\r\n      expect(tooltipDirective._isTooltipVisible())\r\n          .toBe(true, 'Expected tooltip to be visible when scrolling, before throttle limit');\r\n\r\n      // Finish ticking to the throttle's limit and check that the scroll event notified the\r\n      // tooltip and it was hidden.\r\n      tick(100);\r\n      fixture.detectChanges();\r\n      expect(tooltipDirective._isTooltipVisible())\r\n          .toBe(false, 'Expected tooltip hidden when scrolled out of view, after throttle limit');\r\n    }));\r\n\r\n    it('should execute the `hide` call, after scrolling away, inside the NgZone', fakeAsync(() => {\r\n      const inZoneSpy = jasmine.createSpy('in zone spy');\r\n\r\n      tooltipDirective.show();\r\n      fixture.detectChanges();\r\n      tick(0);\r\n\r\n      spyOn(tooltipDirective._tooltipInstance!, 'hide').and.callFake(() => {\r\n        inZoneSpy(NgZone.isInAngularZone());\r\n      });\r\n\r\n      fixture.componentInstance.scrollDown();\r\n      tick(100);\r\n      fixture.detectChanges();\r\n\r\n      expect(inZoneSpy).toHaveBeenCalled();\r\n      expect(inZoneSpy).toHaveBeenCalledWith(true);\r\n    }));\r\n\r\n  });\r\n\r\n  describe('with OnPush', () => {\r\n    let fixture: ComponentFixture<OnPushTooltipDemo>;\r\n    let buttonDebugElement: DebugElement;\r\n    let buttonElement: HTMLButtonElement;\r\n    let tooltipDirective: MatTooltip;\r\n\r\n    beforeEach(() => {\r\n      fixture = TestBed.createComponent(OnPushTooltipDemo);\r\n      fixture.detectChanges();\r\n      buttonDebugElement = fixture.debugElement.query(By.css('button'));\r\n      buttonElement = <HTMLButtonElement> buttonDebugElement.nativeElement;\r\n      tooltipDirective = buttonDebugElement.injector.get<MatTooltip>(MatTooltip);\r\n    });\r\n\r\n    it('should show and hide the tooltip', fakeAsync(() => {\r\n      assertTooltipInstance(tooltipDirective, false);\r\n\r\n      tooltipDirective.show();\r\n      tick(0); // Tick for the show delay (default is 0)\r\n      expect(tooltipDirective._isTooltipVisible()).toBe(true);\r\n\r\n      fixture.detectChanges();\r\n\r\n      // wait until animation has finished\r\n      tick(500);\r\n\r\n      // Make sure tooltip is shown to the user and animation has finished\r\n      const tooltipElement = overlayContainerElement.querySelector('.mat-tooltip') as HTMLElement;\r\n      expect(tooltipElement instanceof HTMLElement).toBe(true);\r\n      expect(tooltipElement.style.transform).toBe('scale(1)');\r\n\r\n      // After hide called, a timeout delay is created that will to hide the tooltip.\r\n      const tooltipDelay = 1000;\r\n      tooltipDirective.hide(tooltipDelay);\r\n      expect(tooltipDirective._isTooltipVisible()).toBe(true);\r\n\r\n      // After the tooltip delay elapses, expect that the tooltip is not visible.\r\n      tick(tooltipDelay);\r\n      fixture.detectChanges();\r\n      expect(tooltipDirective._isTooltipVisible()).toBe(false);\r\n\r\n      // On animation complete, should expect that the tooltip has been detached.\r\n      flushMicrotasks();\r\n      assertTooltipInstance(tooltipDirective, false);\r\n    }));\r\n\r\n    it('should have rendered the tooltip text on init', fakeAsync(() => {\r\n      dispatchFakeEvent(buttonElement, 'mouseenter');\r\n      fixture.detectChanges();\r\n      tick(0);\r\n\r\n      const tooltipElement = overlayContainerElement.querySelector('.mat-tooltip') as HTMLElement;\r\n      expect(tooltipElement.textContent).toContain('initial tooltip message');\r\n    }));\r\n  });\r\n\r\n  describe('special cases', () => {\r\n    it('should clear the `user-select` when a tooltip is set on a text field in iOS', () => {\r\n      platform.IOS = true;\r\n\r\n      const fixture = TestBed.createComponent(TooltipOnTextFields);\r\n      const instance = fixture.componentInstance;\r\n\r\n      fixture.detectChanges();\r\n\r\n      expect(instance.input.nativeElement.style.userSelect).toBeFalsy();\r\n      expect(instance.input.nativeElement.style.webkitUserSelect).toBeFalsy();\r\n\r\n      expect(instance.textarea.nativeElement.style.userSelect).toBeFalsy();\r\n      expect(instance.textarea.nativeElement.style.webkitUserSelect).toBeFalsy();\r\n    });\r\n\r\n    it('should clear the `-webkit-user-drag` on draggable elements', () => {\r\n      const fixture = TestBed.createComponent(TooltipOnDraggableElement);\r\n\r\n      fixture.detectChanges();\r\n\r\n      expect(fixture.componentInstance.button.nativeElement.style.webkitUserDrag).toBeFalsy();\r\n    });\r\n\r\n  });\r\n\r\n});\r\n\r\n@Component({\r\n  selector: 'app',\r\n  template: `\r\n    <button #button\r\n            *ngIf=\"showButton\"\r\n            [matTooltip]=\"message\"\r\n            [matTooltipPosition]=\"position\"\r\n            [matTooltipClass]=\"{'custom-one': showTooltipClass, 'custom-two': showTooltipClass }\">\r\n      Button\r\n    </button>`\r\n})\r\nclass BasicTooltipDemo {\r\n  position: string = 'below';\r\n  message: any = initialTooltipMessage;\r\n  showButton: boolean = true;\r\n  showTooltipClass = false;\r\n  @ViewChild(MatTooltip) tooltip: MatTooltip;\r\n  @ViewChild('button') button: ElementRef;\r\n}\r\n\r\n@Component({\r\n     selector: 'app',\r\n     template: `\r\n    <div cdk-scrollable style=\"padding: 100px; margin: 300px;\r\n                               height: 200px; width: 200px; overflow: auto;\">\r\n      <button *ngIf=\"showButton\" style=\"margin-bottom: 600px\"\r\n              [matTooltip]=\"message\"\r\n              [matTooltipPosition]=\"position\">\r\n        Button\r\n      </button>\r\n    </div>`\r\n})\r\nclass ScrollableTooltipDemo {\r\n position: string = 'below';\r\n message: string = initialTooltipMessage;\r\n showButton: boolean = true;\r\n\r\n @ViewChild(CdkScrollable) scrollingContainer: CdkScrollable;\r\n\r\n scrollDown() {\r\n     const scrollingContainerEl = this.scrollingContainer.getElementRef().nativeElement;\r\n     scrollingContainerEl.scrollTop = 250;\r\n\r\n     // Emit a scroll event from the scrolling element in our component.\r\n     // This event should be picked up by the scrollable directive and notify.\r\n     // The notification should be picked up by the service.\r\n     dispatchFakeEvent(scrollingContainerEl, 'scroll');\r\n   }\r\n}\r\n\r\n@Component({\r\n  selector: 'app',\r\n  template: `\r\n    <button [matTooltip]=\"message\"\r\n            [matTooltipPosition]=\"position\">\r\n      Button\r\n    </button>`,\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nclass OnPushTooltipDemo {\r\n  position: string = 'below';\r\n  message: string = initialTooltipMessage;\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'app',\r\n  template: `\r\n    <button *ngFor=\"let tooltip of tooltips\"\r\n            [matTooltip]=\"tooltip\">\r\n      Button {{tooltip}}\r\n    </button>`,\r\n})\r\nclass DynamicTooltipsDemo {\r\n  tooltips: Array<string> = [];\r\n\r\n  constructor(private _elementRef: ElementRef) {}\r\n\r\n  getButtons() {\r\n    return this._elementRef.nativeElement.querySelectorAll('button');\r\n  }\r\n}\r\n\r\n@Component({\r\n  template: `\r\n    <input\r\n      #input\r\n      style=\"user-select: none; -webkit-user-select: none\"\r\n      matTooltip=\"Something\">\r\n\r\n    <textarea\r\n      #textarea\r\n      style=\"user-select: none; -webkit-user-select: none\"\r\n      matTooltip=\"Another thing\"></textarea>\r\n  `,\r\n})\r\nclass TooltipOnTextFields {\r\n  @ViewChild('input') input: ElementRef;\r\n  @ViewChild('textarea') textarea: ElementRef;\r\n}\r\n\r\n@Component({\r\n  template: `\r\n    <button\r\n      #button\r\n      style=\"-webkit-user-drag: none;\"\r\n      draggable=\"true\"\r\n      matTooltip=\"Drag me\"></button>\r\n  `,\r\n})\r\nclass TooltipOnDraggableElement {\r\n  @ViewChild('button') button: ElementRef;\r\n}\r\n\r\n\r\n/** Asserts whether a tooltip directive has a tooltip instance. */\r\nfunction assertTooltipInstance(tooltip: MatTooltip, shouldExist: boolean): void {\r\n  // Note that we have to cast this to a boolean, because Jasmine will go into an infinite loop\r\n  // if it tries to stringify the `_tooltipInstance` when an assertion fails. The infinite loop\r\n  // happens due to the `_tooltipInstance` having a circular structure.\r\n  expect(!!tooltip._tooltipInstance).toBe(shouldExist);\r\n}\r\n"]}