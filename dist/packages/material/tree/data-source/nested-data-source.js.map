{"version":3,"file":"nested-data-source.js","sourceRoot":"","sources":["../../../../../src/lib/tree/data-source/nested-data-source.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAQA,wDAAsE;AACtE,6BAAwD;AACxD,4CAAmC;;;;;;;AASnC;;;;;;AAAA;IAAgD,2CAAa;;;sBACnD,IAAI,sBAAe,CAAM,EAAE,CAAC;;;IAKpC,sBAAI,yCAAI;QAHR;;WAEG;;;;QACH,cAAa,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE;aACvC,UAAS,KAAU,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE;;;OADT;IAGvC,yCAAO,GAAP,UAAQ,gBAAkC;QAA1C,iBAKC;QAJC,MAAM,CAAC,YAAK,eAAI,CAAC,gBAAgB,CAAC,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,EACtD,IAAI,CAAC,eAAG,CAAC;YACR,MAAM,CAAC,KAAI,CAAC,IAAI,CAAC;SAClB,CAAC,CAAC,CAAC;KACP;IAED,4CAAU,GAAV;;KAEC;kCArCH;EAmBgD,wBAAU,EAmBzD,CAAA;AAnBY,0DAAuB","sourcesContent":["/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {CollectionViewer, DataSource} from '@angular/cdk/collections';\r\nimport {BehaviorSubject, merge, Observable} from 'rxjs';\r\nimport {map} from 'rxjs/operators';\r\n\r\n\r\n/**\r\n * Data source for nested tree.\r\n *\r\n * The data source for nested tree doesn't have to consider node flattener, or the way to expand\r\n * or collapse. The expansion/collapsion will be handled by TreeControl and each non-leaf node.\r\n */\r\nexport class MatTreeNestedDataSource<T> extends DataSource<T> {\r\n  _data = new BehaviorSubject<T[]>([]);\r\n\r\n  /**\r\n   * Data for the nested tree\r\n   */\r\n  get data() { return this._data.value; }\r\n  set data(value: T[]) { this._data.next(value); }\r\n\r\n  connect(collectionViewer: CollectionViewer): Observable<T[]> {\r\n    return merge(...[collectionViewer.viewChange, this._data])\r\n      .pipe(map(() => {\r\n        return this.data;\r\n      }));\r\n  }\r\n\r\n  disconnect() {\r\n    // no op\r\n  }\r\n}\r\n\r\n"]}