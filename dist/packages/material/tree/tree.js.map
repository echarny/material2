{"version":3,"file":"tree.js","sourceRoot":"","sources":["../../../../src/lib/tree/tree.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAQA,sCAOuB;AACvB,0CAA0C;AAC1C,mCAA2C;;;;;IAmBX,2BAAU;IAIxC,4FAA4F;IAC5F,+FAA+F;IAC/F,aAAa;IACb,2EAA2E;IAC3E,wFAAwF;IACxF,iBAAY,QAAyB,EAAE,kBAAqC;eAC1E,kBAAM,QAAQ,EAAE,kBAAkB,CAAC;KACpC;;gBAzBF,gBAAS,SAAC;oBACT,QAAQ,EAAE,MAAM,CAAC,EAAE;oBACnB,QAAQ,EAAE,UAAU;oBACpB,QAAQ,EAAE,SAAS;oBACnB,QAAQ,EAAE,iDAAiD;oBAC3D,IAAI,EAAE;wBACJ,OAAO,EAAE,UAAU;wBACnB,MAAM,EAAE,MAAM;qBACf;oBACD,SAAS,EAAE,CAAC,UAAU,CAAC;oBACvB,aAAa,EAAE,wBAAiB,CAAC,IAAI;oBACrC,eAAe,EAAE,8BAAuB,CAAC,MAAM;oBAC/C,SAAS,EAAE,CAAC,EAAC,OAAO,EAAE,cAAO,EAAE,WAAW,EAAE,OAAO,EAAC,CAAC;iBACtD;;;;gBArBC,sBAAe;gBAJf,wBAAiB;;;gCA4BhB,gBAAS,SAAC,0BAAiB;;kBAtC9B;EAoCgC,cAAO;AAA1B,0BAAO","sourcesContent":["/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ViewChild,\r\n  ViewEncapsulation,\r\n  IterableDiffers,\r\n} from '@angular/core';\r\nimport {CdkTree} from '@angular/cdk/tree';\r\nimport {MatTreeNodeOutlet} from './outlet';\r\n\r\n/**\r\n * Wrapper for the CdkTable with Material design styles.\r\n */\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'mat-tree',\r\n  exportAs: 'matTree',\r\n  template: `<ng-container matTreeNodeOutlet></ng-container>`,\r\n  host: {\r\n    'class': 'mat-tree',\r\n    'role': 'tree',\r\n  },\r\n  styleUrls: ['tree.css'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [{provide: CdkTree, useExisting: MatTree}]\r\n})\r\nexport class MatTree<T> extends CdkTree<T> {\r\n  // Outlets within the tree's template where the dataNodes will be inserted.\r\n  @ViewChild(MatTreeNodeOutlet) _nodeOutlet: MatTreeNodeOutlet;\r\n\r\n  // TODO(andrewseguin): Remove this explicitly set constructor when the compiler knows how to\r\n  // properly build the es6 version of the class. Currently sets ctorParameters to empty due to a\r\n  // fixed bug.\r\n  // https://github.com/angular/tsickle/pull/760 - tsickle PR that fixed this\r\n  // https://github.com/angular/angular/pull/23531 - updates compiler-cli to fixed version\r\n  constructor(_differs: IterableDiffers, _changeDetectorRef: ChangeDetectorRef) {\r\n    super(_differs, _changeDetectorRef);\r\n  }\r\n}\r\n\r\n"]}