{"version":3,"file":"tab-nav-bar.js","sourceRoot":"","sources":["../../../../../src/lib/tabs/tab-nav-bar/tab-nav-bar.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nimport {Directionality} from '@angular/cdk/bidi';\r\nimport {Platform} from '@angular/cdk/platform';\r\nimport {ViewportRuler} from '@angular/cdk/scrolling';\r\nimport {\r\n  AfterContentChecked,\r\n  AfterContentInit,\r\n  Attribute,\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ContentChildren,\r\n  Directive,\r\n  ElementRef,\r\n  forwardRef,\r\n  Inject,\r\n  Input,\r\n  NgZone,\r\n  OnDestroy,\r\n  Optional,\r\n  QueryList,\r\n  ViewChild,\r\n  ViewEncapsulation,\r\n} from '@angular/core';\r\nimport {\r\n  CanColor,\r\n  CanDisable,\r\n  CanDisableRipple,\r\n  HasTabIndex,\r\n  MAT_RIPPLE_GLOBAL_OPTIONS,\r\n  mixinColor,\r\n  mixinDisabled,\r\n  mixinDisableRipple,\r\n  mixinTabIndex, RippleConfig,\r\n  RippleGlobalOptions,\r\n  RippleRenderer,\r\n  RippleTarget,\r\n  ThemePalette,\r\n} from '@angular/material/core';\r\nimport {merge, of as observableOf, Subject} from 'rxjs';\r\nimport {takeUntil} from 'rxjs/operators';\r\nimport {MatInkBar} from '../ink-bar';\r\nimport {FocusMonitor} from '@angular/cdk/a11y';\r\n\r\n\r\n// Boilerplate for applying mixins to MatTabNav.\r\n/** @docs-private */\r\nexport class MatTabNavBase {\r\n  constructor(public _elementRef: ElementRef) {}\r\n}\r\nexport const _MatTabNavMixinBase = mixinDisableRipple(mixinColor(MatTabNavBase, 'primary'));\r\n\r\n/**\r\n * Navigation component matching the styles of the tab group header.\r\n * Provides anchored navigation with animated ink bar.\r\n */\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: '[mat-tab-nav-bar]',\r\n  exportAs: 'matTabNavBar, matTabNav',\r\n  inputs: ['color', 'disableRipple'],\r\n  templateUrl: 'tab-nav-bar.html',\r\n  styleUrls: ['tab-nav-bar.css'],\r\n  host: {'class': 'mat-tab-nav-bar'},\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class MatTabNav extends _MatTabNavMixinBase\r\n    implements AfterContentChecked, AfterContentInit, CanColor, CanDisableRipple, OnDestroy {\r\n\r\n  /** Subject that emits when the component has been destroyed. */\r\n  private readonly _onDestroy = new Subject<void>();\r\n\r\n  private _activeLinkChanged: boolean;\r\n  private _activeLinkElement: ElementRef | null;\r\n\r\n  @ViewChild(MatInkBar) _inkBar: MatInkBar;\r\n\r\n  /** Query list of all tab links of the tab navigation. */\r\n  @ContentChildren(forwardRef(() => MatTabLink), {descendants: true})\r\n  _tabLinks: QueryList<MatTabLink>;\r\n\r\n  /** Background color of the tab nav. */\r\n  @Input()\r\n  get backgroundColor(): ThemePalette { return this._backgroundColor; }\r\n  set backgroundColor(value: ThemePalette) {\r\n    const nativeElement: HTMLElement = this._elementRef.nativeElement;\r\n\r\n    nativeElement.classList.remove(`mat-background-${this.backgroundColor}`);\r\n\r\n    if (value) {\r\n      nativeElement.classList.add(`mat-background-${value}`);\r\n    }\r\n\r\n    this._backgroundColor = value;\r\n  }\r\n  private _backgroundColor: ThemePalette;\r\n\r\n  constructor(elementRef: ElementRef,\r\n              @Optional() private _dir: Directionality,\r\n              private _ngZone: NgZone,\r\n              private _changeDetectorRef: ChangeDetectorRef,\r\n              private _viewportRuler: ViewportRuler) {\r\n    super(elementRef);\r\n  }\r\n\r\n  /**\r\n   * Notifies the component that the active link has been changed.\r\n   * @breaking-change 7.0.0 `element` parameter to be removed.\r\n   */\r\n  updateActiveLink(element: ElementRef) {\r\n    // Note: keeping the `element` for backwards-compat, but isn't being used for anything.\r\n    // @breaking-change 7.0.0\r\n    this._activeLinkChanged = !!element;\r\n    this._changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  ngAfterContentInit(): void {\r\n    this._ngZone.runOutsideAngular(() => {\r\n      const dirChange = this._dir ? this._dir.change : observableOf(null);\r\n\r\n      return merge(dirChange, this._viewportRuler.change(10))\r\n          .pipe(takeUntil(this._onDestroy))\r\n          .subscribe(() => this._alignInkBar());\r\n    });\r\n  }\r\n\r\n  /** Checks if the active link has been changed and, if so, will update the ink bar. */\r\n  ngAfterContentChecked(): void {\r\n    if (this._activeLinkChanged) {\r\n      const activeTab = this._tabLinks.find(tab => tab.active);\r\n\r\n      this._activeLinkElement = activeTab ? activeTab._elementRef : null;\r\n      this._alignInkBar();\r\n      this._activeLinkChanged = false;\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._onDestroy.next();\r\n    this._onDestroy.complete();\r\n  }\r\n\r\n  /** Aligns the ink bar to the active link. */\r\n  _alignInkBar(): void {\r\n    if (this._activeLinkElement) {\r\n      this._inkBar.show();\r\n      this._inkBar.alignToElement(this._activeLinkElement.nativeElement);\r\n    } else {\r\n      this._inkBar.hide();\r\n    }\r\n  }\r\n}\r\n\r\n\r\n// Boilerplate for applying mixins to MatTabLink.\r\nexport class MatTabLinkBase {}\r\nexport const _MatTabLinkMixinBase =\r\n  mixinTabIndex(mixinDisableRipple(mixinDisabled(MatTabLinkBase)));\r\n\r\n/**\r\n * Link inside of a `mat-tab-nav-bar`.\r\n */\r\n@Directive({\r\n  selector: '[mat-tab-link], [matTabLink]',\r\n  exportAs: 'matTabLink',\r\n  inputs: ['disabled', 'disableRipple', 'tabIndex'],\r\n  host: {\r\n    'class': 'mat-tab-link',\r\n    '[attr.aria-current]': 'active',\r\n    '[attr.aria-disabled]': 'disabled.toString()',\r\n    '[attr.tabIndex]': 'tabIndex',\r\n    '[class.mat-tab-disabled]': 'disabled',\r\n    '[class.mat-tab-label-active]': 'active',\r\n    '(click)': '_handleClick($event)'\r\n  }\r\n})\r\nexport class MatTabLink extends _MatTabLinkMixinBase\r\n    implements OnDestroy, CanDisable, CanDisableRipple, HasTabIndex, RippleTarget {\r\n\r\n  /** Whether the tab link is active or not. */\r\n  protected _isActive: boolean = false;\r\n\r\n  /** Reference to the RippleRenderer for the tab-link. */\r\n  protected _tabLinkRipple: RippleRenderer;\r\n\r\n  /** Whether the ripples are globally disabled through the RippleGlobalOptions */\r\n  private _ripplesGloballyDisabled = false;\r\n\r\n  /** Whether the link is active. */\r\n  @Input()\r\n  get active(): boolean { return this._isActive; }\r\n  set active(value: boolean) {\r\n    if (value !== this._isActive) {\r\n      this._isActive = value;\r\n      this._tabNavBar.updateActiveLink(this._elementRef);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Ripple configuration for ripples that are launched on pointer down.\r\n   * @docs-private\r\n   */\r\n  rippleConfig: RippleConfig = {};\r\n\r\n  /**\r\n   * Whether ripples are disabled on interaction\r\n   * @docs-private\r\n   */\r\n  get rippleDisabled(): boolean {\r\n    return this.disabled || this.disableRipple || this._tabNavBar.disableRipple ||\r\n      this._ripplesGloballyDisabled;\r\n  }\r\n\r\n  constructor(private _tabNavBar: MatTabNav,\r\n              public _elementRef: ElementRef,\r\n              ngZone: NgZone,\r\n              platform: Platform,\r\n              @Optional() @Inject(MAT_RIPPLE_GLOBAL_OPTIONS) globalOptions: RippleGlobalOptions,\r\n              @Attribute('tabindex') tabIndex: string,\r\n              /**\r\n               * @deprecated\r\n               * @breaking-change 7.0.0 `_focusMonitor` parameter to be made required.\r\n               */\r\n              private _focusMonitor?: FocusMonitor) {\r\n    super();\r\n\r\n    this._tabLinkRipple = new RippleRenderer(this, ngZone, _elementRef, platform);\r\n    this._tabLinkRipple.setupTriggerEvents(_elementRef.nativeElement);\r\n\r\n    this.tabIndex = parseInt(tabIndex) || 0;\r\n\r\n    if (globalOptions) {\r\n      this._ripplesGloballyDisabled = !!globalOptions.disabled;\r\n      // TODO(paul): Once the speedFactor is removed, we no longer need to copy each single option.\r\n      this.rippleConfig = {\r\n        terminateOnPointerUp: globalOptions.terminateOnPointerUp,\r\n        speedFactor: globalOptions.baseSpeedFactor,\r\n        animation: globalOptions.animation,\r\n      };\r\n    }\r\n\r\n    if (_focusMonitor) {\r\n      _focusMonitor.monitor(_elementRef.nativeElement);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this._tabLinkRipple._removeTriggerEvents();\r\n\r\n    if (this._focusMonitor) {\r\n      this._focusMonitor.stopMonitoring(this._elementRef.nativeElement);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handles the click event, preventing default navigation if the tab link is disabled.\r\n   */\r\n  _handleClick(event: MouseEvent) {\r\n    if (this.disabled) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n}\r\n"]}