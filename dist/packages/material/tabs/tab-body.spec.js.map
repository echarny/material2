{"version":3,"file":"tab-body.spec.js","sourceRoot":"","sources":["../../../../src/lib/tabs/tab-body.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import {Direction, Directionality} from '@angular/cdk/bidi';\r\nimport {PortalModule, TemplatePortal} from '@angular/cdk/portal';\r\nimport {CommonModule} from '@angular/common';\r\nimport {AfterContentInit, Component, TemplateRef, ViewChild, ViewContainerRef} from '@angular/core';\r\nimport {async, ComponentFixture, TestBed} from '@angular/core/testing';\r\nimport {MatRippleModule} from '@angular/material/core';\r\nimport {NoopAnimationsModule} from '@angular/platform-browser/animations';\r\nimport {MatTabBody, MatTabBodyPortal} from './tab-body';\r\nimport {Subject} from 'rxjs';\r\n\r\n\r\ndescribe('MatTabBody', () => {\r\n  let dir: Direction = 'ltr';\r\n  let dirChange: Subject<Direction> = new Subject<Direction>();\r\n\r\n  beforeEach(async(() => {\r\n    dir = 'ltr';\r\n    TestBed.configureTestingModule({\r\n      imports: [CommonModule, PortalModule, MatRippleModule, NoopAnimationsModule],\r\n      declarations: [\r\n        MatTabBody,\r\n        MatTabBodyPortal,\r\n        SimpleTabBodyApp,\r\n      ],\r\n      providers: [\r\n        {provide: Directionality, useFactory: () => ({value: dir, change: dirChange})}\r\n      ]\r\n    });\r\n\r\n    TestBed.compileComponents();\r\n  }));\r\n\r\n  describe('when initialized as center', () => {\r\n    let fixture: ComponentFixture<SimpleTabBodyApp>;\r\n\r\n    it('should be center position if origin is unchanged', () => {\r\n      fixture = TestBed.createComponent(SimpleTabBodyApp);\r\n      fixture.componentInstance.position = 0;\r\n      fixture.detectChanges();\r\n\r\n      expect(fixture.componentInstance.tabBody._position).toBe('center');\r\n    });\r\n\r\n    it('should be center position if origin is explicitly set to null', () => {\r\n      fixture = TestBed.createComponent(SimpleTabBodyApp);\r\n      fixture.componentInstance.position = 0;\r\n\r\n      // It can happen that the `origin` is explicitly set to null through the Angular input\r\n      // binding. This test should ensure that the body does properly such origin value.\r\n      // The `MatTab` class sets the origin by default to null. See related issue: #12455\r\n      fixture.componentInstance.origin = null;\r\n      fixture.detectChanges();\r\n\r\n      expect(fixture.componentInstance.tabBody._position).toBe('center');\r\n    });\r\n\r\n    describe('in LTR direction', () => {\r\n\r\n      beforeEach(() => {\r\n        dir = 'ltr';\r\n        fixture = TestBed.createComponent(SimpleTabBodyApp);\r\n      });\r\n      it('should be left-origin-center position with negative or zero origin', () => {\r\n        fixture.componentInstance.position = 0;\r\n        fixture.componentInstance.origin = 0;\r\n        fixture.detectChanges();\r\n\r\n        expect(fixture.componentInstance.tabBody._position).toBe('left-origin-center');\r\n      });\r\n\r\n      it('should be right-origin-center position with positive nonzero origin', () => {\r\n        fixture.componentInstance.position = 0;\r\n        fixture.componentInstance.origin = 1;\r\n        fixture.detectChanges();\r\n\r\n        expect(fixture.componentInstance.tabBody._position).toBe('right-origin-center');\r\n      });\r\n    });\r\n\r\n    describe('in RTL direction', () => {\r\n      beforeEach(() => {\r\n        dir = 'rtl';\r\n        fixture = TestBed.createComponent(SimpleTabBodyApp);\r\n      });\r\n\r\n      it('should be right-origin-center position with negative or zero origin', () => {\r\n        fixture.componentInstance.position = 0;\r\n        fixture.componentInstance.origin = 0;\r\n        fixture.detectChanges();\r\n\r\n        expect(fixture.componentInstance.tabBody._position).toBe('right-origin-center');\r\n      });\r\n\r\n      it('should be left-origin-center position with positive nonzero origin', () => {\r\n        fixture.componentInstance.position = 0;\r\n        fixture.componentInstance.origin = 1;\r\n        fixture.detectChanges();\r\n\r\n        expect(fixture.componentInstance.tabBody._position).toBe('left-origin-center');\r\n      });\r\n    });\r\n  });\r\n\r\n  describe('should properly set the position in LTR', () => {\r\n    let fixture: ComponentFixture<SimpleTabBodyApp>;\r\n\r\n    beforeEach(() => {\r\n      dir = 'ltr';\r\n      fixture = TestBed.createComponent(SimpleTabBodyApp);\r\n      fixture.detectChanges();\r\n    });\r\n\r\n    it('to be left position with negative position', () => {\r\n      fixture.componentInstance.position = -1;\r\n      fixture.detectChanges();\r\n\r\n      expect(fixture.componentInstance.tabBody._position).toBe('left');\r\n    });\r\n\r\n    it('to be center position with zero position', () => {\r\n      fixture.componentInstance.position = 0;\r\n      fixture.detectChanges();\r\n\r\n      expect(fixture.componentInstance.tabBody._position).toBe('center');\r\n    });\r\n\r\n    it('to be left position with positive position', () => {\r\n      fixture.componentInstance.position = 1;\r\n      fixture.detectChanges();\r\n\r\n      expect(fixture.componentInstance.tabBody._position).toBe('right');\r\n    });\r\n  });\r\n\r\n  describe('should properly set the position in RTL', () => {\r\n    let fixture: ComponentFixture<SimpleTabBodyApp>;\r\n\r\n    beforeEach(() => {\r\n      dir = 'rtl';\r\n      fixture = TestBed.createComponent(SimpleTabBodyApp);\r\n      fixture.detectChanges();\r\n    });\r\n\r\n    it('to be right position with negative position', () => {\r\n      fixture.componentInstance.position = -1;\r\n      fixture.detectChanges();\r\n\r\n      expect(fixture.componentInstance.tabBody._position).toBe('right');\r\n    });\r\n\r\n    it('to be center position with zero position', () => {\r\n      fixture.componentInstance.position = 0;\r\n      fixture.detectChanges();\r\n\r\n      expect(fixture.componentInstance.tabBody._position).toBe('center');\r\n    });\r\n\r\n    it('to be left position with positive position', () => {\r\n      fixture.componentInstance.position = 1;\r\n      fixture.detectChanges();\r\n\r\n      expect(fixture.componentInstance.tabBody._position).toBe('left');\r\n    });\r\n  });\r\n\r\n  it('should update position if direction changed at runtime', () => {\r\n    const fixture = TestBed.createComponent(SimpleTabBodyApp);\r\n\r\n    fixture.componentInstance.position = 1;\r\n    fixture.detectChanges();\r\n\r\n    expect(fixture.componentInstance.tabBody._position).toBe('right');\r\n\r\n    dirChange.next('rtl');\r\n    dir = 'rtl';\r\n\r\n    fixture.detectChanges();\r\n\r\n    expect(fixture.componentInstance.tabBody._position).toBe('left');\r\n  });\r\n});\r\n\r\n\r\n@Component({\r\n  template: `\r\n    <ng-template>Tab Body Content</ng-template>\r\n    <mat-tab-body [content]=\"content\" [position]=\"position\" [origin]=\"origin\"></mat-tab-body>\r\n  `\r\n})\r\nclass SimpleTabBodyApp implements AfterContentInit {\r\n  content: TemplatePortal;\r\n  position: number;\r\n  origin: number | null;\r\n\r\n  @ViewChild(MatTabBody) tabBody: MatTabBody;\r\n  @ViewChild(TemplateRef) template: TemplateRef<any>;\r\n\r\n  constructor(private _viewContainerRef: ViewContainerRef) { }\r\n\r\n  ngAfterContentInit() {\r\n    this.content = new TemplatePortal(this.template, this._viewContainerRef);\r\n  }\r\n}\r\n"]}