{"version":3,"file":"tabs-animations.js","sourceRoot":"","sources":["../../../../src/lib/tabs/tabs-animations.ts"],"names":[],"mappings":";;AAOA,kDAO6B;;AAGhB,QAAA,iBAAiB,GAE1B;;IAEF,YAAY,EAAE,oBAAO,CAAC,cAAc,EAAE;;QAEpC,AADA,0FAA0F;QAC1F,kBAAK,CAAC,uDAAuD,EAAE,kBAAK,CAAC,EAAC,SAAS,EAAE,MAAM,EAAC,CAAC,CAAC;;;;;QAM1F,AAJA,uFAAuF;QACvF,qFAAqF;QACrF,4FAA4F;QAC5F,yEAAyE;QACzE,kBAAK,CAAC,MAAM,EAAE,kBAAK,CAAC,EAAC,SAAS,EAAE,0BAA0B,EAAE,SAAS,EAAE,KAAK,EAAC,CAAC,CAAC;QAC/E,kBAAK,CAAC,OAAO,EAAE,kBAAK,CAAC,EAAC,SAAS,EAAE,yBAAyB,EAAE,SAAS,EAAE,KAAK,EAAC,CAAC,CAAC;QAE/E,uBAAU,CAAC,wDAAwD,EAC/D,oBAAO,CAAC,sCAAsC,CAAC,CAAC;QACpD,uBAAU,CAAC,4BAA4B,EAAE;YACvC,kBAAK,CAAC,EAAC,SAAS,EAAE,0BAA0B,EAAC,CAAC;YAC9C,oBAAO,CAAC,sCAAsC,CAAC;SAChD,CAAC;QACF,uBAAU,CAAC,6BAA6B,EAAE;YACxC,kBAAK,CAAC,EAAC,SAAS,EAAE,yBAAyB,EAAC,CAAC;YAC7C,oBAAO,CAAC,sCAAsC,CAAC;SAChD,CAAC;KACH,CAAC;CACH","sourcesContent":["/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nimport {\r\n  animate,\r\n  state,\r\n  style,\r\n  transition,\r\n  trigger,\r\n  AnimationTriggerMetadata,\r\n} from '@angular/animations';\r\n\r\n/** Animations used by the Material tabs. */\r\nexport const matTabsAnimations: {\r\n  readonly translateTab: AnimationTriggerMetadata;\r\n} = {\r\n  /** Animation translates a tab along the X axis. */\r\n  translateTab: trigger('translateTab', [\r\n    // Note: transitions to `none` instead of 0, because some browsers might blur the content.\r\n    state('center, void, left-origin-center, right-origin-center', style({transform: 'none'})),\r\n\r\n    // If the tab is either on the left or right, we additionally add a `min-height` of 1px\r\n    // in order to ensure that the element has a height before its state changes. This is\r\n    // necessary because Chrome does seem to skip the transition in RTL mode if the element does\r\n    // not have a static height and is not rendered. See related issue: #9465\r\n    state('left', style({transform: 'translate3d(-100%, 0, 0)', minHeight: '1px'})),\r\n    state('right', style({transform: 'translate3d(100%, 0, 0)', minHeight: '1px'})),\r\n\r\n    transition('* => left, * => right, left => center, right => center',\r\n        animate('500ms cubic-bezier(0.35, 0, 0.25, 1)')),\r\n    transition('void => left-origin-center', [\r\n      style({transform: 'translate3d(-100%, 0, 0)'}),\r\n      animate('500ms cubic-bezier(0.35, 0, 0.25, 1)')\r\n    ]),\r\n    transition('void => right-origin-center', [\r\n      style({transform: 'translate3d(100%, 0, 0)'}),\r\n      animate('500ms cubic-bezier(0.35, 0, 0.25, 1)')\r\n    ])\r\n  ])\r\n};\r\n"]}