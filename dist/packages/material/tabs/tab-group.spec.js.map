{"version":3,"file":"tab-group.spec.js","sourceRoot":"","sources":["../../../../src/lib/tabs/tab-group.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import {LEFT_ARROW} from '@angular/cdk/keycodes';\r\nimport {dispatchFakeEvent, dispatchKeyboardEvent} from '@angular/cdk/testing';\r\nimport {Component, OnInit, QueryList, ViewChild, ViewChildren} from '@angular/core';\r\nimport {async, ComponentFixture, fakeAsync, TestBed, tick} from '@angular/core/testing';\r\nimport {By} from '@angular/platform-browser';\r\nimport {BrowserAnimationsModule, NoopAnimationsModule} from '@angular/platform-browser/animations';\r\nimport {CommonModule} from '@angular/common';\r\nimport {Observable} from 'rxjs';\r\nimport {MatTab, MatTabGroup, MatTabHeaderPosition, MatTabsModule} from './index';\r\n\r\n\r\ndescribe('MatTabGroup', () => {\r\n  beforeEach(fakeAsync(() => {\r\n    TestBed.configureTestingModule({\r\n      imports: [MatTabsModule, CommonModule, NoopAnimationsModule],\r\n      declarations: [\r\n        SimpleTabsTestApp,\r\n        SimpleDynamicTabsTestApp,\r\n        BindedTabsTestApp,\r\n        AsyncTabsTestApp,\r\n        DisabledTabsTestApp,\r\n        TabGroupWithSimpleApi,\r\n        TemplateTabs,\r\n        TabGroupWithAriaInputs,\r\n        TabGroupWithIsActiveBinding,\r\n      ],\r\n    });\r\n\r\n    TestBed.compileComponents();\r\n  }));\r\n\r\n  describe('basic behavior', () => {\r\n    let fixture: ComponentFixture<SimpleTabsTestApp>;\r\n    let element: HTMLElement;\r\n\r\n    beforeEach(() => {\r\n      fixture = TestBed.createComponent(SimpleTabsTestApp);\r\n      element = fixture.nativeElement;\r\n    });\r\n\r\n    it('should default to the first tab', () => {\r\n      checkSelectedIndex(1, fixture);\r\n    });\r\n\r\n    it('will properly load content on first change detection pass', () => {\r\n      fixture.detectChanges();\r\n      expect(element.querySelectorAll('.mat-tab-body')[1].querySelectorAll('span').length).toBe(3);\r\n    });\r\n\r\n    it('should change selected index on click', () => {\r\n      let component = fixture.debugElement.componentInstance;\r\n      component.selectedIndex = 0;\r\n      checkSelectedIndex(0, fixture);\r\n\r\n      // select the second tab\r\n      let tabLabel = fixture.debugElement.queryAll(By.css('.mat-tab-label'))[1];\r\n      tabLabel.nativeElement.click();\r\n      checkSelectedIndex(1, fixture);\r\n\r\n      // select the third tab\r\n      tabLabel = fixture.debugElement.queryAll(By.css('.mat-tab-label'))[2];\r\n      tabLabel.nativeElement.click();\r\n      checkSelectedIndex(2, fixture);\r\n    });\r\n\r\n    it('should support two-way binding for selectedIndex', fakeAsync(() => {\r\n      let component = fixture.componentInstance;\r\n      component.selectedIndex = 0;\r\n\r\n      fixture.detectChanges();\r\n\r\n      let tabLabel = fixture.debugElement.queryAll(By.css('.mat-tab-label'))[1];\r\n      tabLabel.nativeElement.click();\r\n      fixture.detectChanges();\r\n      tick();\r\n\r\n      expect(component.selectedIndex).toBe(1);\r\n    }));\r\n\r\n    // Note: needs to be `async` in order to fail when we expect it to.\r\n    it('should set to correct tab on fast change', async(() => {\r\n      let component = fixture.componentInstance;\r\n      component.selectedIndex = 0;\r\n      fixture.detectChanges();\r\n\r\n      setTimeout(() => {\r\n        component.selectedIndex = 1;\r\n        fixture.detectChanges();\r\n\r\n        setTimeout(() => {\r\n          component.selectedIndex = 0;\r\n          fixture.detectChanges();\r\n          fixture.whenStable().then(() => {\r\n            expect(component.selectedIndex).toBe(0);\r\n          });\r\n        }, 1);\r\n      }, 1);\r\n    }));\r\n\r\n    it('should change tabs based on selectedIndex', fakeAsync(() => {\r\n      let component = fixture.componentInstance;\r\n      let tabComponent = fixture.debugElement.query(By.css('mat-tab-group')).componentInstance;\r\n\r\n      spyOn(component, 'handleSelection').and.callThrough();\r\n\r\n      checkSelectedIndex(1, fixture);\r\n\r\n      tabComponent.selectedIndex = 2;\r\n\r\n      checkSelectedIndex(2, fixture);\r\n      tick();\r\n\r\n      expect(component.handleSelection).toHaveBeenCalledTimes(1);\r\n      expect(component.selectEvent.index).toBe(2);\r\n    }));\r\n\r\n    it('should update tab positions when selected index is changed', () => {\r\n      fixture.detectChanges();\r\n      const component: MatTabGroup =\r\n          fixture.debugElement.query(By.css('mat-tab-group')).componentInstance;\r\n      const tabs: MatTab[] = component._tabs.toArray();\r\n\r\n      expect(tabs[0].position).toBeLessThan(0);\r\n      expect(tabs[1].position).toBe(0);\r\n      expect(tabs[2].position).toBeGreaterThan(0);\r\n\r\n      // Move to third tab\r\n      component.selectedIndex = 2;\r\n      fixture.detectChanges();\r\n      expect(tabs[0].position).toBeLessThan(0);\r\n      expect(tabs[1].position).toBeLessThan(0);\r\n      expect(tabs[2].position).toBe(0);\r\n\r\n      // Move to the first tab\r\n      component.selectedIndex = 0;\r\n      fixture.detectChanges();\r\n      expect(tabs[0].position).toBe(0);\r\n      expect(tabs[1].position).toBeGreaterThan(0);\r\n      expect(tabs[2].position).toBeGreaterThan(0);\r\n    });\r\n\r\n    it('should clamp the selected index to the size of the number of tabs', () => {\r\n      fixture.detectChanges();\r\n      const component: MatTabGroup =\r\n          fixture.debugElement.query(By.css('mat-tab-group')).componentInstance;\r\n\r\n      // Set the index to be negative, expect first tab selected\r\n      fixture.componentInstance.selectedIndex = -1;\r\n      fixture.detectChanges();\r\n      expect(component.selectedIndex).toBe(0);\r\n\r\n      // Set the index beyond the size of the tabs, expect last tab selected\r\n      fixture.componentInstance.selectedIndex = 3;\r\n      fixture.detectChanges();\r\n      expect(component.selectedIndex).toBe(2);\r\n    });\r\n\r\n    it('should not crash when setting the selected index to NaN', () => {\r\n      let component = fixture.debugElement.componentInstance;\r\n\r\n      expect(() => {\r\n        component.selectedIndex = NaN;\r\n        fixture.detectChanges();\r\n      }).not.toThrow();\r\n    });\r\n\r\n    it('should show ripples for tab-group labels', () => {\r\n      fixture.detectChanges();\r\n\r\n      const testElement = fixture.nativeElement;\r\n      const tabLabel = fixture.debugElement.queryAll(By.css('.mat-tab-label'))[1];\r\n\r\n      expect(testElement.querySelectorAll('.mat-ripple-element').length)\r\n        .toBe(0, 'Expected no ripples to show up initially.');\r\n\r\n      dispatchFakeEvent(tabLabel.nativeElement, 'mousedown');\r\n      dispatchFakeEvent(tabLabel.nativeElement, 'mouseup');\r\n\r\n      expect(testElement.querySelectorAll('.mat-ripple-element').length)\r\n        .toBe(1, 'Expected one ripple to show up on label mousedown.');\r\n    });\r\n\r\n    it('should allow disabling ripples for tab-group labels', () => {\r\n      fixture.componentInstance.disableRipple = true;\r\n      fixture.detectChanges();\r\n\r\n      const testElement = fixture.nativeElement;\r\n      const tabLabel = fixture.debugElement.queryAll(By.css('.mat-tab-label'))[1];\r\n\r\n      expect(testElement.querySelectorAll('.mat-ripple-element').length)\r\n        .toBe(0, 'Expected no ripples to show up initially.');\r\n\r\n      dispatchFakeEvent(tabLabel.nativeElement, 'mousedown');\r\n      dispatchFakeEvent(tabLabel.nativeElement, 'mouseup');\r\n\r\n      expect(testElement.querySelectorAll('.mat-ripple-element').length)\r\n        .toBe(0, 'Expected no ripple to show up on label mousedown.');\r\n    });\r\n\r\n    it('should set the isActive flag on each of the tabs', fakeAsync(() => {\r\n      fixture.detectChanges();\r\n      tick();\r\n\r\n      const tabs = fixture.componentInstance.tabs.toArray();\r\n\r\n      expect(tabs[0].isActive).toBe(false);\r\n      expect(tabs[1].isActive).toBe(true);\r\n      expect(tabs[2].isActive).toBe(false);\r\n\r\n      fixture.componentInstance.selectedIndex = 2;\r\n      fixture.detectChanges();\r\n      tick();\r\n\r\n      expect(tabs[0].isActive).toBe(false);\r\n      expect(tabs[1].isActive).toBe(false);\r\n      expect(tabs[2].isActive).toBe(true);\r\n    }));\r\n\r\n    it('should fire animation done event', fakeAsync(() => {\r\n      fixture.detectChanges();\r\n\r\n      spyOn(fixture.componentInstance, 'animationDone');\r\n      let tabLabel = fixture.debugElement.queryAll(By.css('.mat-tab-label'))[1];\r\n      tabLabel.nativeElement.click();\r\n      fixture.detectChanges();\r\n      tick();\r\n\r\n      expect(fixture.componentInstance.animationDone).toHaveBeenCalled();\r\n    }));\r\n\r\n    it('should add the proper `aria-setsize` and `aria-posinset`', () => {\r\n      fixture.detectChanges();\r\n\r\n      const labels = Array.from(element.querySelectorAll('.mat-tab-label'));\r\n\r\n      expect(labels.map(label => label.getAttribute('aria-posinset'))).toEqual(['1', '2', '3']);\r\n      expect(labels.every(label => label.getAttribute('aria-setsize') === '3')).toBe(true);\r\n    });\r\n\r\n    it('should emit focusChange event on click', () => {\r\n      spyOn(fixture.componentInstance, 'handleFocus');\r\n      fixture.detectChanges();\r\n\r\n      const tabLabels = fixture.debugElement.queryAll(By.css('.mat-tab-label'));\r\n\r\n      expect(fixture.componentInstance.handleFocus).toHaveBeenCalledTimes(0);\r\n\r\n      tabLabels[1].nativeElement.click();\r\n      fixture.detectChanges();\r\n\r\n      expect(fixture.componentInstance.handleFocus).toHaveBeenCalledTimes(1);\r\n      expect(fixture.componentInstance.handleFocus)\r\n        .toHaveBeenCalledWith(jasmine.objectContaining({index: 1}));\r\n    });\r\n\r\n    it('should emit focusChange on arrow key navigation', () => {\r\n      spyOn(fixture.componentInstance, 'handleFocus');\r\n      fixture.detectChanges();\r\n\r\n      const tabLabels = fixture.debugElement.queryAll(By.css('.mat-tab-label'));\r\n      const tabLabelContainer = fixture.debugElement\r\n        .query(By.css('.mat-tab-label-container')).nativeElement as HTMLElement;\r\n\r\n      expect(fixture.componentInstance.handleFocus).toHaveBeenCalledTimes(0);\r\n\r\n      // In order to verify that the `focusChange` event also fires with the correct\r\n      // index, we focus the second tab before testing the keyboard navigation.\r\n      tabLabels[1].nativeElement.click();\r\n      fixture.detectChanges();\r\n\r\n      expect(fixture.componentInstance.handleFocus).toHaveBeenCalledTimes(1);\r\n\r\n      dispatchKeyboardEvent(tabLabelContainer, 'keydown', LEFT_ARROW);\r\n\r\n      expect(fixture.componentInstance.handleFocus).toHaveBeenCalledTimes(2);\r\n      expect(fixture.componentInstance.handleFocus)\r\n        .toHaveBeenCalledWith(jasmine.objectContaining({index: 0}));\r\n    });\r\n\r\n  });\r\n\r\n  describe('aria labelling', () => {\r\n    let fixture: ComponentFixture<TabGroupWithAriaInputs>;\r\n    let tab: HTMLElement;\r\n\r\n    beforeEach(fakeAsync(() => {\r\n      fixture = TestBed.createComponent(TabGroupWithAriaInputs);\r\n      fixture.detectChanges();\r\n      tick();\r\n      tab = fixture.nativeElement.querySelector('.mat-tab-label');\r\n    }));\r\n\r\n    it('should not set aria-label or aria-labelledby attributes if they are not passed in', () => {\r\n      expect(tab.hasAttribute('aria-label')).toBe(false);\r\n      expect(tab.hasAttribute('aria-labelledby')).toBe(false);\r\n    });\r\n\r\n    it('should set the aria-label attribute', () => {\r\n      fixture.componentInstance.ariaLabel = 'Fruit';\r\n      fixture.detectChanges();\r\n\r\n      expect(tab.getAttribute('aria-label')).toBe('Fruit');\r\n    });\r\n\r\n    it('should set the aria-labelledby attribute', () => {\r\n      fixture.componentInstance.ariaLabelledby = 'fruit-label';\r\n      fixture.detectChanges();\r\n\r\n      expect(tab.getAttribute('aria-labelledby')).toBe('fruit-label');\r\n    });\r\n\r\n    it('should not be able to set both an aria-label and aria-labelledby', () => {\r\n      fixture.componentInstance.ariaLabel = 'Fruit';\r\n      fixture.componentInstance.ariaLabelledby = 'fruit-label';\r\n      fixture.detectChanges();\r\n\r\n      expect(tab.getAttribute('aria-label')).toBe('Fruit');\r\n      expect(tab.hasAttribute('aria-labelledby')).toBe(false);\r\n    });\r\n  });\r\n\r\n  describe('disable tabs', () => {\r\n    let fixture: ComponentFixture<DisabledTabsTestApp>;\r\n    beforeEach(() => {\r\n      fixture = TestBed.createComponent(DisabledTabsTestApp);\r\n    });\r\n\r\n    it('should have one disabled tab', () => {\r\n      fixture.detectChanges();\r\n      const labels = fixture.debugElement.queryAll(By.css('.mat-tab-disabled'));\r\n      expect(labels.length).toBe(1);\r\n      expect(labels[0].nativeElement.getAttribute('aria-disabled')).toBe('true');\r\n    });\r\n\r\n    it('should set the disabled flag on tab', () => {\r\n      fixture.detectChanges();\r\n\r\n      const tabs = fixture.componentInstance.tabs.toArray();\r\n      let labels = fixture.debugElement.queryAll(By.css('.mat-tab-disabled'));\r\n      expect(tabs[2].disabled).toBe(false);\r\n      expect(labels.length).toBe(1);\r\n      expect(labels[0].nativeElement.getAttribute('aria-disabled')).toBe('true');\r\n\r\n      fixture.componentInstance.isDisabled = true;\r\n      fixture.detectChanges();\r\n\r\n      expect(tabs[2].disabled).toBe(true);\r\n      labels = fixture.debugElement.queryAll(By.css('.mat-tab-disabled'));\r\n      expect(labels.length).toBe(2);\r\n      expect(labels.every(label => label.nativeElement.getAttribute('aria-disabled') === 'true'))\r\n          .toBe(true);\r\n    });\r\n  });\r\n\r\n  describe('dynamic binding tabs', () => {\r\n    let fixture: ComponentFixture<SimpleDynamicTabsTestApp>;\r\n\r\n    beforeEach(fakeAsync(() => {\r\n      fixture = TestBed.createComponent(SimpleDynamicTabsTestApp);\r\n      fixture.detectChanges();\r\n      tick();\r\n      fixture.detectChanges();\r\n    }));\r\n\r\n    it('should be able to add a new tab, select it, and have correct origin position',\r\n      fakeAsync(() => {\r\n        const component: MatTabGroup =\r\n            fixture.debugElement.query(By.css('mat-tab-group')).componentInstance;\r\n\r\n        let tabs: MatTab[] = component._tabs.toArray();\r\n        expect(tabs[0].origin).toBe(null);\r\n        expect(tabs[1].origin).toBe(0);\r\n        expect(tabs[2].origin).toBe(null);\r\n\r\n        // Add a new tab on the right and select it, expect an origin >= than 0 (animate right)\r\n        fixture.componentInstance.tabs.push({label: 'New tab', content: 'to right of index'});\r\n        fixture.componentInstance.selectedIndex = 4;\r\n        fixture.detectChanges();\r\n        tick();\r\n\r\n        tabs = component._tabs.toArray();\r\n        expect(tabs[3].origin).toBeGreaterThanOrEqual(0);\r\n\r\n        // Add a new tab in the beginning and select it, expect an origin < than 0 (animate left)\r\n        fixture.componentInstance.selectedIndex = 0;\r\n        fixture.detectChanges();\r\n        tick();\r\n\r\n        fixture.componentInstance.tabs.push({label: 'New tab', content: 'to left of index'});\r\n        fixture.detectChanges();\r\n        tick();\r\n\r\n        tabs = component._tabs.toArray();\r\n        expect(tabs[0].origin).toBeLessThan(0);\r\n    }));\r\n\r\n\r\n    it('should update selected index if the last tab removed while selected', fakeAsync(() => {\r\n      const component: MatTabGroup =\r\n          fixture.debugElement.query(By.css('mat-tab-group')).componentInstance;\r\n\r\n      const numberOfTabs = component._tabs.length;\r\n      fixture.componentInstance.selectedIndex = numberOfTabs - 1;\r\n      fixture.detectChanges();\r\n      tick();\r\n\r\n      // Remove last tab while last tab is selected, expect next tab over to be selected\r\n      fixture.componentInstance.tabs.pop();\r\n      fixture.detectChanges();\r\n      tick();\r\n\r\n      expect(component.selectedIndex).toBe(numberOfTabs - 2);\r\n    }));\r\n\r\n\r\n    it('should maintain the selected tab if a new tab is added', () => {\r\n      fixture.detectChanges();\r\n      const component: MatTabGroup =\r\n          fixture.debugElement.query(By.css('mat-tab-group')).componentInstance;\r\n\r\n      fixture.componentInstance.selectedIndex = 1;\r\n      fixture.detectChanges();\r\n\r\n      // Add a new tab at the beginning.\r\n      fixture.componentInstance.tabs.unshift({label: 'New tab', content: 'at the start'});\r\n      fixture.detectChanges();\r\n\r\n      expect(component.selectedIndex).toBe(2);\r\n      expect(component._tabs.toArray()[2].isActive).toBe(true);\r\n    });\r\n\r\n\r\n    it('should maintain the selected tab if a tab is removed', () => {\r\n      // Select the second tab.\r\n      fixture.componentInstance.selectedIndex = 1;\r\n      fixture.detectChanges();\r\n\r\n      const component: MatTabGroup =\r\n          fixture.debugElement.query(By.css('mat-tab-group')).componentInstance;\r\n\r\n      // Remove the first tab that is right before the selected one.\r\n      fixture.componentInstance.tabs.splice(0, 1);\r\n      fixture.detectChanges();\r\n\r\n      // Since the first tab has been removed and the second one was selected before, the selected\r\n      // tab moved one position to the right. Meaning that the tab is now the first tab.\r\n      expect(component.selectedIndex).toBe(0);\r\n      expect(component._tabs.toArray()[0].isActive).toBe(true);\r\n    });\r\n\r\n    it('should be able to select a new tab after creation', fakeAsync(() => {\r\n      fixture.detectChanges();\r\n      const component: MatTabGroup =\r\n        fixture.debugElement.query(By.css('mat-tab-group')).componentInstance;\r\n\r\n      fixture.componentInstance.tabs.push({label: 'Last tab', content: 'at the end'});\r\n      fixture.componentInstance.selectedIndex = 3;\r\n\r\n      fixture.detectChanges();\r\n      tick();\r\n\r\n      expect(component.selectedIndex).toBe(3);\r\n      expect(component._tabs.toArray()[3].isActive).toBe(true);\r\n    }));\r\n\r\n    it('should not fire `selectedTabChange` when the amount of tabs changes', fakeAsync(() => {\r\n      fixture.detectChanges();\r\n      fixture.componentInstance.selectedIndex = 1;\r\n      fixture.detectChanges();\r\n\r\n      // Add a new tab at the beginning.\r\n      spyOn(fixture.componentInstance, 'handleSelection');\r\n      fixture.componentInstance.tabs.unshift({label: 'New tab', content: 'at the start'});\r\n      fixture.detectChanges();\r\n      tick();\r\n      fixture.detectChanges();\r\n\r\n      expect(fixture.componentInstance.handleSelection).not.toHaveBeenCalled();\r\n    }));\r\n\r\n  });\r\n\r\n  describe('async tabs', () => {\r\n    let fixture: ComponentFixture<AsyncTabsTestApp>;\r\n\r\n    it('should show tabs when they are available', fakeAsync(() => {\r\n      fixture = TestBed.createComponent(AsyncTabsTestApp);\r\n\r\n      expect(fixture.debugElement.queryAll(By.css('.mat-tab-label')).length).toBe(0);\r\n\r\n      fixture.detectChanges();\r\n      tick();\r\n      fixture.detectChanges();\r\n      tick();\r\n\r\n      expect(fixture.debugElement.queryAll(By.css('.mat-tab-label')).length).toBe(2);\r\n    }));\r\n  });\r\n\r\n  describe('with simple api', () => {\r\n    let fixture: ComponentFixture<TabGroupWithSimpleApi>;\r\n    let tabGroup: MatTabGroup;\r\n\r\n    beforeEach(fakeAsync(() => {\r\n      fixture = TestBed.createComponent(TabGroupWithSimpleApi);\r\n      fixture.detectChanges();\r\n      tick();\r\n\r\n      tabGroup =\r\n          fixture.debugElement.query(By.directive(MatTabGroup)).componentInstance as MatTabGroup;\r\n    }));\r\n\r\n    it('should support a tab-group with the simple api', fakeAsync(() => {\r\n      expect(getSelectedLabel(fixture).textContent).toMatch('Junk food');\r\n      expect(getSelectedContent(fixture).textContent).toMatch('Pizza, fries');\r\n\r\n      tabGroup.selectedIndex = 2;\r\n      fixture.detectChanges();\r\n      tick();\r\n\r\n      expect(getSelectedLabel(fixture).textContent).toMatch('Fruit');\r\n      expect(getSelectedContent(fixture).textContent).toMatch('Apples, grapes');\r\n\r\n      fixture.componentInstance.otherLabel = 'Chips';\r\n      fixture.componentInstance.otherContent = 'Salt, vinegar';\r\n      fixture.detectChanges();\r\n\r\n      expect(getSelectedLabel(fixture).textContent).toMatch('Chips');\r\n      expect(getSelectedContent(fixture).textContent).toMatch('Salt, vinegar');\r\n    }));\r\n\r\n    it('should support @ViewChild in the tab content', () => {\r\n      expect(fixture.componentInstance.legumes).toBeTruthy();\r\n    });\r\n\r\n    it('should only have the active tab in the DOM', fakeAsync(() => {\r\n      expect(fixture.nativeElement.textContent).toContain('Pizza, fries');\r\n      expect(fixture.nativeElement.textContent).not.toContain('Peanuts');\r\n\r\n      tabGroup.selectedIndex = 3;\r\n      fixture.detectChanges();\r\n      tick();\r\n\r\n      expect(fixture.nativeElement.textContent).not.toContain('Pizza, fries');\r\n      expect(fixture.nativeElement.textContent).toContain('Peanuts');\r\n    }));\r\n\r\n    it('should support setting the header position', () => {\r\n      let tabGroupNode = fixture.debugElement.query(By.css('mat-tab-group')).nativeElement;\r\n\r\n      expect(tabGroupNode.classList).not.toContain('mat-tab-group-inverted-header');\r\n\r\n      tabGroup.headerPosition = 'below';\r\n      fixture.detectChanges();\r\n\r\n      expect(tabGroupNode.classList).toContain('mat-tab-group-inverted-header');\r\n    });\r\n  });\r\n\r\n  describe('lazy loaded tabs', () => {\r\n    it('should lazy load the second tab', fakeAsync(() => {\r\n      const fixture = TestBed.createComponent(TemplateTabs);\r\n      fixture.detectChanges();\r\n      tick();\r\n\r\n      const secondLabel = fixture.debugElement.queryAll(By.css('.mat-tab-label'))[1];\r\n      secondLabel.nativeElement.click();\r\n      fixture.detectChanges();\r\n      tick();\r\n      fixture.detectChanges();\r\n\r\n      const child = fixture.debugElement.query(By.css('.child'));\r\n      expect(child.nativeElement).toBeDefined();\r\n    }));\r\n  });\r\n\r\n  describe('special cases', () => {\r\n    it('should not throw an error when binding isActive to the view', fakeAsync(() => {\r\n      const fixture = TestBed.createComponent(TabGroupWithIsActiveBinding);\r\n\r\n      expect(() => {\r\n        fixture.detectChanges();\r\n        tick();\r\n        fixture.detectChanges();\r\n      }).not.toThrow();\r\n\r\n      expect(fixture.nativeElement.textContent).toContain('pizza is active');\r\n    }));\r\n  });\r\n\r\n  /**\r\n   * Checks that the `selectedIndex` has been updated; checks that the label and body have their\r\n   * respective `active` classes\r\n   */\r\n  function checkSelectedIndex(expectedIndex: number, fixture: ComponentFixture<any>) {\r\n    fixture.detectChanges();\r\n\r\n    let tabComponent: MatTabGroup = fixture.debugElement\r\n        .query(By.css('mat-tab-group')).componentInstance;\r\n    expect(tabComponent.selectedIndex).toBe(expectedIndex);\r\n\r\n    let tabLabelElement = fixture.debugElement\r\n        .query(By.css(`.mat-tab-label:nth-of-type(${expectedIndex + 1})`)).nativeElement;\r\n    expect(tabLabelElement.classList.contains('mat-tab-label-active')).toBe(true);\r\n\r\n    let tabContentElement = fixture.debugElement\r\n        .query(By.css(`mat-tab-body:nth-of-type(${expectedIndex + 1})`)).nativeElement;\r\n    expect(tabContentElement.classList.contains('mat-tab-body-active')).toBe(true);\r\n  }\r\n\r\n  function getSelectedLabel(fixture: ComponentFixture<any>): HTMLElement {\r\n    return fixture.nativeElement.querySelector('.mat-tab-label-active');\r\n  }\r\n\r\n  function getSelectedContent(fixture: ComponentFixture<any>): HTMLElement {\r\n    return fixture.nativeElement.querySelector('.mat-tab-body-active');\r\n  }\r\n});\r\n\r\n\r\ndescribe('nested MatTabGroup with enabled animations', () => {\r\n  beforeEach(fakeAsync(() => {\r\n    TestBed.configureTestingModule({\r\n      imports: [MatTabsModule, BrowserAnimationsModule],\r\n      declarations: [NestedTabs]\r\n    });\r\n\r\n    TestBed.compileComponents();\r\n  }));\r\n\r\n  it('should not throw when creating a component with nested tab groups', fakeAsync(() => {\r\n    expect(() => {\r\n      let fixture = TestBed.createComponent(NestedTabs);\r\n      fixture.detectChanges();\r\n      tick();\r\n    }).not.toThrow();\r\n  }));\r\n});\r\n\r\n\r\n@Component({\r\n  template: `\r\n    <mat-tab-group class=\"tab-group\"\r\n        [(selectedIndex)]=\"selectedIndex\"\r\n        [headerPosition]=\"headerPosition\"\r\n        [disableRipple]=\"disableRipple\"\r\n        (animationDone)=\"animationDone()\"\r\n        (focusChange)=\"handleFocus($event)\"\r\n        (selectedTabChange)=\"handleSelection($event)\">\r\n      <mat-tab>\r\n        <ng-template mat-tab-label>Tab One</ng-template>\r\n        Tab one content\r\n      </mat-tab>\r\n      <mat-tab>\r\n        <ng-template mat-tab-label>Tab Two</ng-template>\r\n        <span>Tab </span><span>two</span><span>content</span>\r\n      </mat-tab>\r\n      <mat-tab>\r\n        <ng-template mat-tab-label>Tab Three</ng-template>\r\n        Tab three content\r\n      </mat-tab>\r\n    </mat-tab-group>\r\n  `\r\n})\r\nclass SimpleTabsTestApp {\r\n  @ViewChildren(MatTab) tabs: QueryList<MatTab>;\r\n  selectedIndex: number = 1;\r\n  focusEvent: any;\r\n  selectEvent: any;\r\n  disableRipple: boolean = false;\r\n  headerPosition: MatTabHeaderPosition = 'above';\r\n  handleFocus(event: any) {\r\n    this.focusEvent = event;\r\n  }\r\n  handleSelection(event: any) {\r\n    this.selectEvent = event;\r\n  }\r\n  animationDone() { }\r\n}\r\n\r\n@Component({\r\n  template: `\r\n    <mat-tab-group class=\"tab-group\"\r\n        [(selectedIndex)]=\"selectedIndex\"\r\n        (focusChange)=\"handleFocus($event)\"\r\n        (selectedTabChange)=\"handleSelection($event)\">\r\n      <mat-tab *ngFor=\"let tab of tabs\">\r\n        <ng-template mat-tab-label>{{tab.label}}</ng-template>\r\n        {{tab.content}}\r\n      </mat-tab>\r\n    </mat-tab-group>\r\n  `\r\n})\r\nclass SimpleDynamicTabsTestApp {\r\n  tabs = [\r\n    {label: 'Label 1', content: 'Content 1'},\r\n    {label: 'Label 2', content: 'Content 2'},\r\n    {label: 'Label 3', content: 'Content 3'},\r\n  ];\r\n  selectedIndex: number = 1;\r\n  focusEvent: any;\r\n  selectEvent: any;\r\n  handleFocus(event: any) {\r\n    this.focusEvent = event;\r\n  }\r\n  handleSelection(event: any) {\r\n    this.selectEvent = event;\r\n  }\r\n}\r\n\r\n@Component({\r\n  template: `\r\n    <mat-tab-group class=\"tab-group\" [(selectedIndex)]=\"selectedIndex\">\r\n      <mat-tab *ngFor=\"let tab of tabs\" label=\"{{tab.label}}\">\r\n        {{tab.content}}\r\n      </mat-tab>\r\n    </mat-tab-group>\r\n  `\r\n})\r\nclass BindedTabsTestApp {\r\n  tabs = [\r\n    { label: 'one', content: 'one' },\r\n    { label: 'two', content: 'two' }\r\n  ];\r\n  selectedIndex = 0;\r\n\r\n  addNewActiveTab(): void {\r\n    this.tabs.push({\r\n      label: 'new tab',\r\n      content: 'new content'\r\n    });\r\n    this.selectedIndex = this.tabs.length - 1;\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'test-app',\r\n  template: `\r\n    <mat-tab-group class=\"tab-group\">\r\n      <mat-tab>\r\n        <ng-template mat-tab-label>Tab One</ng-template>\r\n        Tab one content\r\n      </mat-tab>\r\n      <mat-tab disabled>\r\n        <ng-template mat-tab-label>Tab Two</ng-template>\r\n        Tab two content\r\n      </mat-tab>\r\n      <mat-tab [disabled]=\"isDisabled\">\r\n        <ng-template mat-tab-label>Tab Three</ng-template>\r\n        Tab three content\r\n      </mat-tab>\r\n    </mat-tab-group>\r\n  `,\r\n})\r\nclass DisabledTabsTestApp {\r\n  @ViewChildren(MatTab) tabs: QueryList<MatTab>;\r\n  isDisabled = false;\r\n}\r\n\r\n@Component({\r\n  template: `\r\n    <mat-tab-group class=\"tab-group\">\r\n      <mat-tab *ngFor=\"let tab of tabs | async\">\r\n        <ng-template mat-tab-label>{{ tab.label }}</ng-template>\r\n        {{ tab.content }}\r\n      </mat-tab>\r\n   </mat-tab-group>\r\n  `\r\n})\r\nclass AsyncTabsTestApp implements OnInit {\r\n  private _tabs = [\r\n    { label: 'one', content: 'one' },\r\n    { label: 'two', content: 'two' }\r\n  ];\r\n\r\n  tabs: Observable<any>;\r\n\r\n  ngOnInit() {\r\n    // Use ngOnInit because there is some issue with scheduling the async task in the constructor.\r\n    this.tabs = Observable.create((observer: any) => {\r\n      setTimeout(() => observer.next(this._tabs));\r\n    });\r\n  }\r\n}\r\n\r\n\r\n@Component({\r\n  template: `\r\n  <mat-tab-group>\r\n    <mat-tab label=\"Junk food\"> Pizza, fries </mat-tab>\r\n    <mat-tab label=\"Vegetables\"> Broccoli, spinach </mat-tab>\r\n    <mat-tab [label]=\"otherLabel\"> {{otherContent}} </mat-tab>\r\n    <mat-tab label=\"Legumes\"> <p #legumes>Peanuts</p> </mat-tab>\r\n  </mat-tab-group>\r\n  `\r\n})\r\nclass TabGroupWithSimpleApi {\r\n  otherLabel = 'Fruit';\r\n  otherContent = 'Apples, grapes';\r\n  @ViewChild('legumes') legumes: any;\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'nested-tabs',\r\n  template: `\r\n    <mat-tab-group>\r\n      <mat-tab label=\"One\">Tab one content</mat-tab>\r\n      <mat-tab label=\"Two\">\r\n        Tab two content\r\n         <mat-tab-group [dynamicHeight]=\"true\">\r\n          <mat-tab label=\"Inner tab one\">Inner content one</mat-tab>\r\n          <mat-tab label=\"Inner tab two\">Inner content two</mat-tab>\r\n        </mat-tab-group>\r\n      </mat-tab>\r\n    </mat-tab-group>\r\n  `,\r\n})\r\nclass NestedTabs {}\r\n\r\n@Component({\r\n  selector: 'template-tabs',\r\n  template: `\r\n    <mat-tab-group>\r\n      <mat-tab label=\"One\">\r\n        Eager\r\n      </mat-tab>\r\n      <mat-tab label=\"Two\">\r\n        <ng-template matTabContent>\r\n          <div class=\"child\">Hi</div>\r\n        </ng-template>\r\n      </mat-tab>\r\n    </mat-tab-group>\r\n  `,\r\n })\r\n class TemplateTabs {}\r\n\r\n\r\n @Component({\r\n  template: `\r\n  <mat-tab-group>\r\n    <mat-tab [aria-label]=\"ariaLabel\" [aria-labelledby]=\"ariaLabelledby\"></mat-tab>\r\n  </mat-tab-group>\r\n  `\r\n})\r\nclass TabGroupWithAriaInputs {\r\n  ariaLabel: string;\r\n  ariaLabelledby: string;\r\n}\r\n\r\n\r\n@Component({\r\n  template: `\r\n    <mat-tab-group>\r\n      <mat-tab label=\"Junk food\" #pizza> Pizza, fries </mat-tab>\r\n      <mat-tab label=\"Vegetables\"> Broccoli, spinach </mat-tab>\r\n    </mat-tab-group>\r\n\r\n    <div *ngIf=\"pizza.isActive\">pizza is active</div>\r\n  `\r\n})\r\nclass TabGroupWithIsActiveBinding {\r\n}\r\n"]}