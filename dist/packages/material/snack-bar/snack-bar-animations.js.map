{"version":3,"file":"snack-bar-animations.js","sourceRoot":"","sources":["../../../../src/lib/snack-bar/snack-bar-animations.ts"],"names":[],"mappings":";;AAOA,kDAO6B;AAC7B,+CAA2E;;AAG9D,QAAA,qBAAqB,GAG9B;;IAEF,WAAW,EAAE,oBAAO,CAAC,aAAa,EAAE;QAClC,uBAAU,CAAC,QAAQ,EAAE;YACnB,kBAAK,CAAC,EAAC,OAAO,EAAE,GAAG,EAAC,CAAC;YACrB,oBAAO,CAAI,yBAAkB,CAAC,OAAO,SAAI,sBAAe,CAAC,cAAgB,CAAC;SAC3E,CAAC;KACH,CAAC;;IAGF,aAAa,EAAE,oBAAO,CAAC,OAAO,EAAE;QAC9B,kBAAK,CAAC,6BAA6B,EAAE,kBAAK,CAAC,EAAC,SAAS,EAAE,gBAAgB,EAAC,CAAC,CAAC;QAC1E,uBAAU,CAAC,4DAA4D,EACrE,oBAAO,CAAI,yBAAkB,CAAC,OAAO,SAAI,sBAAe,CAAC,kBAAoB,CAAC,CAAC;QACjF,uBAAU,CAAC,6CAA6C,EACtD,oBAAO,CAAI,yBAAkB,CAAC,QAAQ,SAAI,sBAAe,CAAC,kBAAoB,CAAC,CAAC;KACnF,CAAC;CACH","sourcesContent":["/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nimport {\r\n  animate,\r\n  state,\r\n  style,\r\n  transition,\r\n  trigger,\r\n  AnimationTriggerMetadata,\r\n} from '@angular/animations';\r\nimport {AnimationCurves, AnimationDurations} from '@angular/material/core';\r\n\r\n/** Animations used by the Material snack bar. */\r\nexport const matSnackBarAnimations: {\r\n  readonly contentFade: AnimationTriggerMetadata;\r\n  readonly snackBarState: AnimationTriggerMetadata;\r\n} = {\r\n  /** Animation that slides the dialog in and out of view and fades the opacity. */\r\n  contentFade: trigger('contentFade', [\r\n    transition(':enter', [\r\n      style({opacity: '0'}),\r\n      animate(`${AnimationDurations.COMPLEX} ${AnimationCurves.STANDARD_CURVE}`)\r\n    ])\r\n  ]),\r\n\r\n  /** Animation that shows and hides a snack bar. */\r\n  snackBarState: trigger('state', [\r\n    state('visible-top, visible-bottom', style({transform: 'translateY(0%)'})),\r\n    transition('visible-top => hidden-top, visible-bottom => hidden-bottom',\r\n      animate(`${AnimationDurations.EXITING} ${AnimationCurves.ACCELERATION_CURVE}`)),\r\n    transition('void => visible-top, void => visible-bottom',\r\n      animate(`${AnimationDurations.ENTERING} ${AnimationCurves.DECELERATION_CURVE}`)),\r\n  ])\r\n};\r\n"]}