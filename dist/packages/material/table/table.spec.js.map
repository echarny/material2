{"version":3,"file":"table.spec.js","sourceRoot":"","sources":["../../../../src/lib/table/table.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import {DataSource} from '@angular/cdk/collections';\r\nimport {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {\r\n  async,\r\n  ComponentFixture,\r\n  fakeAsync,\r\n  flushMicrotasks,\r\n  TestBed,\r\n  tick,\r\n} from '@angular/core/testing';\r\nimport {NoopAnimationsModule} from '@angular/platform-browser/animations';\r\nimport {BehaviorSubject, Observable} from 'rxjs';\r\nimport {MatPaginator, MatPaginatorModule} from '../paginator/index';\r\nimport {MatSort, MatSortHeader, MatSortModule} from '../sort/index';\r\nimport {MatTableModule} from './index';\r\nimport {MatTable} from './table';\r\nimport {MatTableDataSource} from './table-data-source';\r\n\r\n\r\ndescribe('MatTable', () => {\r\n  beforeEach(async(() => {\r\n    TestBed.configureTestingModule({\r\n      imports: [MatTableModule, MatPaginatorModule, MatSortModule, NoopAnimationsModule],\r\n      declarations: [\r\n        MatTableApp,\r\n        MatTableWithWhenRowApp,\r\n        ArrayDataSourceMatTableApp,\r\n        NativeHtmlTableApp,\r\n        MatTableWithSortApp,\r\n        MatTableWithPaginatorApp,\r\n        StickyTableApp,\r\n        TableWithNgContainerRow,\r\n      ],\r\n    }).compileComponents();\r\n  }));\r\n\r\n  describe('with basic data source', () => {\r\n    it('should be able to create a table with the right content and without when row', () => {\r\n      let fixture = TestBed.createComponent(MatTableApp);\r\n      fixture.detectChanges();\r\n\r\n      const tableElement = fixture.nativeElement.querySelector('.mat-table')!;\r\n      const data = fixture.componentInstance.dataSource!.data;\r\n      expectTableToMatchContent(tableElement, [\r\n        ['Column A', 'Column B', 'Column C'],\r\n        [data[0].a, data[0].b, data[0].c],\r\n        [data[1].a, data[1].b, data[1].c],\r\n        [data[2].a, data[2].b, data[2].c],\r\n        ['fourth_row'],\r\n        ['Footer A', 'Footer B', 'Footer C'],\r\n      ]);\r\n    });\r\n\r\n    it('should create a table with special when row', () => {\r\n      let fixture = TestBed.createComponent(MatTableWithWhenRowApp);\r\n      fixture.detectChanges();\r\n\r\n      const tableElement = fixture.nativeElement.querySelector('.mat-table');\r\n      expectTableToMatchContent(tableElement, [\r\n        ['Column A'],\r\n        ['a_1'],\r\n        ['a_2'],\r\n        ['a_3'],\r\n        ['fourth_row'],\r\n        ['Footer A'],\r\n      ]);\r\n    });\r\n\r\n    it('should create a table with multiTemplateDataRows true', () => {\r\n      let fixture = TestBed.createComponent(MatTableWithWhenRowApp);\r\n      fixture.componentInstance.multiTemplateDataRows = true;\r\n      fixture.detectChanges();\r\n\r\n      const tableElement = fixture.nativeElement.querySelector('.mat-table');\r\n      expectTableToMatchContent(tableElement, [\r\n        ['Column A'],\r\n        ['a_1'],\r\n        ['a_2'],\r\n        ['a_3'],\r\n        ['a_4'], // With multiple rows, this row shows up along with the special 'when' fourth_row\r\n        ['fourth_row'],\r\n        ['Footer A'],\r\n      ]);\r\n    });\r\n  });\r\n\r\n  it('should be able to render a table correctly with native elements', () => {\r\n    let fixture = TestBed.createComponent(NativeHtmlTableApp);\r\n    fixture.detectChanges();\r\n\r\n    const tableElement = fixture.nativeElement.querySelector('table');\r\n    const data = fixture.componentInstance.dataSource!.data;\r\n    expectTableToMatchContent(tableElement, [\r\n      ['Column A', 'Column B', 'Column C'],\r\n      [data[0].a, data[0].b, data[0].c],\r\n      [data[1].a, data[1].b, data[1].c],\r\n      [data[2].a, data[2].b, data[2].c],\r\n      [data[3].a, data[3].b, data[3].c],\r\n    ]);\r\n  });\r\n\r\n  it('should render with MatTableDataSource and sort', () => {\r\n    let fixture = TestBed.createComponent(MatTableWithSortApp);\r\n    fixture.detectChanges();\r\n\r\n    const tableElement = fixture.nativeElement.querySelector('.mat-table')!;\r\n    const data = fixture.componentInstance.dataSource!.data;\r\n    expectTableToMatchContent(tableElement, [\r\n      ['Column A', 'Column B', 'Column C'],\r\n      [data[0].a, data[0].b, data[0].c],\r\n      [data[1].a, data[1].b, data[1].c],\r\n      [data[2].a, data[2].b, data[2].c],\r\n    ]);\r\n  });\r\n\r\n  it('should render with MatTableDataSource and pagination', () => {\r\n    let fixture = TestBed.createComponent(MatTableWithPaginatorApp);\r\n    fixture.detectChanges();\r\n\r\n    const tableElement = fixture.nativeElement.querySelector('.mat-table')!;\r\n    const data = fixture.componentInstance.dataSource!.data;\r\n    expectTableToMatchContent(tableElement, [\r\n      ['Column A', 'Column B', 'Column C'],\r\n      [data[0].a, data[0].b, data[0].c],\r\n      [data[1].a, data[1].b, data[1].c],\r\n      [data[2].a, data[2].b, data[2].c],\r\n    ]);\r\n  });\r\n\r\n  it('should apply custom sticky CSS class to sticky cells', () => {\r\n    let fixture = TestBed.createComponent(StickyTableApp);\r\n    fixture.detectChanges();\r\n\r\n    const stuckCellElement = fixture.nativeElement.querySelector('.mat-table th')!;\r\n    expect(stuckCellElement.classList).toContain('mat-table-sticky');\r\n  });\r\n\r\n  // Note: needs to be fakeAsync so it catches the error.\r\n  it('should not throw when a row definition is on an ng-container', fakeAsync(() => {\r\n    const fixture = TestBed.createComponent(TableWithNgContainerRow);\r\n\r\n    expect(() => {\r\n      fixture.detectChanges();\r\n      tick();\r\n    }).not.toThrow();\r\n  }));\r\n\r\n  describe('with MatTableDataSource and sort/pagination/filter', () => {\r\n    let tableElement: HTMLElement;\r\n    let fixture: ComponentFixture<ArrayDataSourceMatTableApp>;\r\n    let dataSource: MatTableDataSource<TestData>;\r\n    let component: ArrayDataSourceMatTableApp;\r\n\r\n    beforeEach(() => {\r\n      fixture = TestBed.createComponent(ArrayDataSourceMatTableApp);\r\n      fixture.detectChanges();\r\n\r\n      tableElement = fixture.nativeElement.querySelector('.mat-table');\r\n      component = fixture.componentInstance;\r\n      dataSource = fixture.componentInstance.dataSource;\r\n    });\r\n\r\n    it('should create table and display data source contents', () => {\r\n      expectTableToMatchContent(tableElement, [\r\n        ['Column A', 'Column B', 'Column C'],\r\n        ['a_1', 'b_1', 'c_1'],\r\n        ['a_2', 'b_2', 'c_2'],\r\n        ['a_3', 'b_3', 'c_3'],\r\n        ['Footer A', 'Footer B', 'Footer C'],\r\n      ]);\r\n    });\r\n\r\n    it('changing data should update the table contents', () => {\r\n      // Add data\r\n      component.underlyingDataSource.addData();\r\n      fixture.detectChanges();\r\n      expectTableToMatchContent(tableElement, [\r\n        ['Column A', 'Column B', 'Column C'],\r\n        ['a_1', 'b_1', 'c_1'],\r\n        ['a_2', 'b_2', 'c_2'],\r\n        ['a_3', 'b_3', 'c_3'],\r\n        ['a_4', 'b_4', 'c_4'],\r\n        ['Footer A', 'Footer B', 'Footer C'],\r\n      ]);\r\n\r\n      // Remove data\r\n      const modifiedData = dataSource.data.slice();\r\n      modifiedData.shift();\r\n      dataSource.data = modifiedData;\r\n      fixture.detectChanges();\r\n      expectTableToMatchContent(tableElement, [\r\n        ['Column A', 'Column B', 'Column C'],\r\n        ['a_2', 'b_2', 'c_2'],\r\n        ['a_3', 'b_3', 'c_3'],\r\n        ['a_4', 'b_4', 'c_4'],\r\n        ['Footer A', 'Footer B', 'Footer C'],\r\n      ]);\r\n    });\r\n\r\n    it('should be able to filter the table contents', fakeAsync(() => {\r\n      // Change filter to a_1, should match one row\r\n      dataSource.filter = 'a_1';\r\n      fixture.detectChanges();\r\n      expect(dataSource.filteredData.length).toBe(1);\r\n      expect(dataSource.filteredData[0]).toBe(dataSource.data[0]);\r\n      expectTableToMatchContent(tableElement, [\r\n        ['Column A', 'Column B', 'Column C'],\r\n        ['a_1', 'b_1', 'c_1'],\r\n        ['Footer A', 'Footer B', 'Footer C'],\r\n      ]);\r\n\r\n      flushMicrotasks();  // Resolve promise that updates paginator's length\r\n      expect(dataSource.paginator!.length).toBe(1);\r\n\r\n      // Change filter to '  A_2  ', should match one row (ignores case and whitespace)\r\n      dataSource.filter = '  A_2  ';\r\n      fixture.detectChanges();\r\n      expect(dataSource.filteredData.length).toBe(1);\r\n      expect(dataSource.filteredData[0]).toBe(dataSource.data[1]);\r\n      expectTableToMatchContent(tableElement, [\r\n        ['Column A', 'Column B', 'Column C'],\r\n        ['a_2', 'b_2', 'c_2'],\r\n        ['Footer A', 'Footer B', 'Footer C'],\r\n      ]);\r\n\r\n      // Change filter to empty string, should match all rows\r\n      dataSource.filter = '';\r\n      fixture.detectChanges();\r\n      expect(dataSource.filteredData.length).toBe(3);\r\n      expect(dataSource.filteredData[0]).toBe(dataSource.data[0]);\r\n      expect(dataSource.filteredData[1]).toBe(dataSource.data[1]);\r\n      expect(dataSource.filteredData[2]).toBe(dataSource.data[2]);\r\n      expectTableToMatchContent(tableElement, [\r\n        ['Column A', 'Column B', 'Column C'],\r\n        ['a_1', 'b_1', 'c_1'],\r\n        ['a_2', 'b_2', 'c_2'],\r\n        ['a_3', 'b_3', 'c_3'],\r\n        ['Footer A', 'Footer B', 'Footer C'],\r\n      ]);\r\n\r\n      // Change filter function and filter, should match to rows with zebra.\r\n      dataSource.filterPredicate = (data, filter) => {\r\n        let dataStr;\r\n        switch (data.a) {\r\n          case 'a_1': dataStr = 'elephant'; break;\r\n          case 'a_2': dataStr = 'zebra'; break;\r\n          case 'a_3': dataStr = 'monkey'; break;\r\n          default: dataStr = '';\r\n        }\r\n\r\n        return dataStr.indexOf(filter) != -1;\r\n      };\r\n      dataSource.filter = 'zebra';\r\n      fixture.detectChanges();\r\n      expectTableToMatchContent(tableElement, [\r\n        ['Column A', 'Column B', 'Column C'],\r\n        ['a_2', 'b_2', 'c_2'],\r\n        ['Footer A', 'Footer B', 'Footer C'],\r\n      ]);\r\n    }));\r\n\r\n    it('should be able to sort the table contents', () => {\r\n      // Activate column A sort\r\n      component.sort.sort(component.sortHeader);\r\n      fixture.detectChanges();\r\n      expectTableToMatchContent(tableElement, [\r\n        ['Column A', 'Column B', 'Column C'],\r\n        ['a_1', 'b_1', 'c_1'],\r\n        ['a_2', 'b_2', 'c_2'],\r\n        ['a_3', 'b_3', 'c_3'],\r\n        ['Footer A', 'Footer B', 'Footer C'],\r\n      ]);\r\n\r\n      // Activate column A sort again (reverse direction)\r\n      component.sort.sort(component.sortHeader);\r\n      fixture.detectChanges();\r\n      expectTableToMatchContent(tableElement, [\r\n        ['Column A', 'Column B', 'Column C'],\r\n        ['a_3', 'b_3', 'c_3'],\r\n        ['a_2', 'b_2', 'c_2'],\r\n        ['a_1', 'b_1', 'c_1'],\r\n        ['Footer A', 'Footer B', 'Footer C'],\r\n      ]);\r\n\r\n      // Change sort function to customize how it sorts - first column 1, then 3, then 2\r\n      dataSource.sortingDataAccessor = data => {\r\n        switch (data.a) {\r\n          case 'a_1': return 'elephant';\r\n          case 'a_2': return 'zebra';\r\n          case 'a_3': return 'monkey';\r\n          default: return '';\r\n        }\r\n      };\r\n      component.sort.direction = '';\r\n      component.sort.sort(component.sortHeader);\r\n      expectTableToMatchContent(tableElement, [\r\n        ['Column A', 'Column B', 'Column C'],\r\n        ['a_1', 'b_1', 'c_1'],\r\n        ['a_3', 'b_3', 'c_3'],\r\n        ['a_2', 'b_2', 'c_2'],\r\n        ['Footer A', 'Footer B', 'Footer C'],\r\n      ]);\r\n    });\r\n\r\n    it('should by default correctly sort an empty string', () => {\r\n      // Activate column A sort\r\n      dataSource.data[0].a = ' ';\r\n      component.sort.sort(component.sortHeader);\r\n      fixture.detectChanges();\r\n\r\n      // Expect that empty string row comes before the other values\r\n      expectTableToMatchContent(tableElement, [\r\n        ['Column A', 'Column B', 'Column C'],\r\n        ['', 'b_1', 'c_1'],\r\n        ['a_2', 'b_2', 'c_2'],\r\n        ['a_3', 'b_3', 'c_3'],\r\n        ['Footer A', 'Footer B', 'Footer C'],\r\n      ]);\r\n\r\n      // Expect that empty string row comes before the other values\r\n      component.sort.sort(component.sortHeader);\r\n      fixture.detectChanges();\r\n      expectTableToMatchContent(tableElement, [\r\n        ['Column A', 'Column B', 'Column C'],\r\n        ['a_3', 'b_3', 'c_3'],\r\n        ['a_2', 'b_2', 'c_2'],\r\n        ['', 'b_1', 'c_1'],\r\n        ['Footer A', 'Footer B', 'Footer C'],\r\n      ]);\r\n    });\r\n\r\n    it('should by default correctly sort undefined values', () => {\r\n      // Activate column A sort\r\n      dataSource.data[0].a = undefined;\r\n\r\n      // Expect that undefined row comes before the other values\r\n      component.sort.sort(component.sortHeader);\r\n      fixture.detectChanges();\r\n      expectTableToMatchContent(tableElement, [\r\n        ['Column A', 'Column B', 'Column C'],\r\n        ['', 'b_1', 'c_1'],\r\n        ['a_2', 'b_2', 'c_2'],\r\n        ['a_3', 'b_3', 'c_3'],\r\n        ['Footer A', 'Footer B', 'Footer C'],\r\n      ]);\r\n\r\n\r\n      // Expect that undefined row comes after the other values\r\n      component.sort.sort(component.sortHeader);\r\n      fixture.detectChanges();\r\n      expectTableToMatchContent(tableElement, [\r\n        ['Column A', 'Column B', 'Column C'],\r\n        ['a_3', 'b_3', 'c_3'],\r\n        ['a_2', 'b_2', 'c_2'],\r\n        ['', 'b_1', 'c_1'],\r\n        ['Footer A', 'Footer B', 'Footer C'],\r\n      ]);\r\n    });\r\n\r\n    it('should sort zero correctly', () => {\r\n      // Activate column A sort\r\n      dataSource.data[0].a = 1;\r\n      dataSource.data[1].a = 0;\r\n      dataSource.data[2].a = -1;\r\n\r\n      // Expect that zero comes after the negative numbers and before the positive ones.\r\n      component.sort.sort(component.sortHeader);\r\n      fixture.detectChanges();\r\n      expectTableToMatchContent(tableElement, [\r\n        ['Column A', 'Column B', 'Column C'],\r\n        ['-1', 'b_3', 'c_3'],\r\n        ['0', 'b_2', 'c_2'],\r\n        ['1', 'b_1', 'c_1'],\r\n        ['Footer A', 'Footer B', 'Footer C'],\r\n      ]);\r\n\r\n\r\n      // Expect that zero comes after the negative numbers and before\r\n      // the positive ones when switching the sorting direction.\r\n      component.sort.sort(component.sortHeader);\r\n      fixture.detectChanges();\r\n      expectTableToMatchContent(tableElement, [\r\n        ['Column A', 'Column B', 'Column C'],\r\n        ['1', 'b_1', 'c_1'],\r\n        ['0', 'b_2', 'c_2'],\r\n        ['-1', 'b_3', 'c_3'],\r\n        ['Footer A', 'Footer B', 'Footer C'],\r\n      ]);\r\n    });\r\n\r\n    it('should be able to page the table contents', fakeAsync(() => {\r\n      // Add 100 rows, should only display first 5 since page length is 5\r\n      for (let i = 0; i < 100; i++) {\r\n        component.underlyingDataSource.addData();\r\n      }\r\n      fixture.detectChanges();\r\n      flushMicrotasks();  // Resolve promise that updates paginator's length\r\n      expectTableToMatchContent(tableElement, [\r\n        ['Column A', 'Column B', 'Column C'],\r\n        ['a_1', 'b_1', 'c_1'],\r\n        ['a_2', 'b_2', 'c_2'],\r\n        ['a_3', 'b_3', 'c_3'],\r\n        ['a_4', 'b_4', 'c_4'],\r\n        ['a_5', 'b_5', 'c_5'],\r\n        ['Footer A', 'Footer B', 'Footer C'],\r\n      ]);\r\n\r\n      // Navigate to the next page\r\n      component.paginator.nextPage();\r\n      fixture.detectChanges();\r\n      expectTableToMatchContent(tableElement, [\r\n        ['Column A', 'Column B', 'Column C'],\r\n        ['a_6', 'b_6', 'c_6'],\r\n        ['a_7', 'b_7', 'c_7'],\r\n        ['a_8', 'b_8', 'c_8'],\r\n        ['a_9', 'b_9', 'c_9'],\r\n        ['a_10', 'b_10', 'c_10'],\r\n        ['Footer A', 'Footer B', 'Footer C'],\r\n      ]);\r\n    }));\r\n\r\n    it('should sort strings with numbers larger than MAX_SAFE_INTEGER correctly', () => {\r\n      const large = '9563256840123535';\r\n      const larger = '9563256840123536';\r\n      const largest = '9563256840123537';\r\n\r\n      dataSource.data[0].a = largest;\r\n      dataSource.data[1].a = larger;\r\n      dataSource.data[2].a = large;\r\n\r\n      component.sort.sort(component.sortHeader);\r\n      fixture.detectChanges();\r\n      expectTableToMatchContent(tableElement, [\r\n        ['Column A', 'Column B', 'Column C'],\r\n        [large, 'b_3', 'c_3'],\r\n        [larger, 'b_2', 'c_2'],\r\n        [largest, 'b_1', 'c_1'],\r\n        ['Footer A', 'Footer B', 'Footer C'],\r\n      ]);\r\n\r\n\r\n      component.sort.sort(component.sortHeader);\r\n      fixture.detectChanges();\r\n      expectTableToMatchContent(tableElement, [\r\n        ['Column A', 'Column B', 'Column C'],\r\n        [largest, 'b_1', 'c_1'],\r\n        [larger, 'b_2', 'c_2'],\r\n        [large, 'b_3', 'c_3'],\r\n        ['Footer A', 'Footer B', 'Footer C'],\r\n      ]);\r\n    });\r\n\r\n  });\r\n});\r\n\r\ninterface TestData {\r\n  a: string|number|undefined;\r\n  b: string|number|undefined;\r\n  c: string|number|undefined;\r\n}\r\n\r\nclass FakeDataSource extends DataSource<TestData> {\r\n  _dataChange = new BehaviorSubject<TestData[]>([]);\r\n  get data() { return this._dataChange.getValue(); }\r\n  set data(data: TestData[]) { this._dataChange.next(data); }\r\n\r\n  constructor() {\r\n    super();\r\n    for (let i = 0; i < 4; i++) { this.addData(); }\r\n  }\r\n\r\n  connect(): Observable<TestData[]> {\r\n    return this._dataChange;\r\n  }\r\n\r\n  disconnect() {}\r\n\r\n  addData() {\r\n    const nextIndex = this.data.length + 1;\r\n\r\n    let copiedData = this.data.slice();\r\n    copiedData.push({\r\n      a: `a_${nextIndex}`,\r\n      b: `b_${nextIndex}`,\r\n      c: `c_${nextIndex}`\r\n    });\r\n\r\n    this.data = copiedData;\r\n  }\r\n}\r\n\r\n@Component({\r\n  template: `\r\n    <mat-table [dataSource]=\"dataSource\">\r\n      <ng-container matColumnDef=\"column_a\">\r\n        <mat-header-cell *matHeaderCellDef> Column A</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let row\"> {{row.a}}</mat-cell>\r\n        <mat-footer-cell *matFooterCellDef> Footer A</mat-footer-cell>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"column_b\">\r\n        <mat-header-cell *matHeaderCellDef> Column B</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let row\"> {{row.b}}</mat-cell>\r\n        <mat-footer-cell *matFooterCellDef> Footer B</mat-footer-cell>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"column_c\">\r\n        <mat-header-cell *matHeaderCellDef> Column C</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let row\"> {{row.c}}</mat-cell>\r\n        <mat-footer-cell *matFooterCellDef> Footer C</mat-footer-cell>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"special_column\">\r\n        <mat-cell *matCellDef=\"let row\"> fourth_row </mat-cell>\r\n      </ng-container>\r\n\r\n      <mat-header-row *matHeaderRowDef=\"columnsToRender\"></mat-header-row>\r\n      <mat-row *matRowDef=\"let row; columns: columnsToRender\"></mat-row>\r\n      <mat-row *matRowDef=\"let row; columns: ['special_column']; when: isFourthRow\"></mat-row>\r\n      <mat-footer-row *matFooterRowDef=\"columnsToRender\"></mat-footer-row>\r\n    </mat-table>\r\n  `\r\n})\r\nclass MatTableApp {\r\n  dataSource: FakeDataSource | null = new FakeDataSource();\r\n  columnsToRender = ['column_a', 'column_b', 'column_c'];\r\n  isFourthRow = (i: number, _rowData: TestData) => i == 3;\r\n\r\n  @ViewChild(MatTable) table: MatTable<TestData>;\r\n}\r\n\r\n@Component({\r\n  template: `\r\n    <table mat-table [dataSource]=\"dataSource\">\r\n      <ng-container matColumnDef=\"column_a\">\r\n        <th mat-header-cell *matHeaderCellDef> Column A</th>\r\n        <td mat-cell *matCellDef=\"let row\"> {{row.a}}</td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"column_b\">\r\n        <th mat-header-cell *matHeaderCellDef> Column B</th>\r\n        <td mat-cell *matCellDef=\"let row\"> {{row.b}}</td>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"column_c\">\r\n        <th mat-header-cell *matHeaderCellDef> Column C</th>\r\n        <td mat-cell *matCellDef=\"let row\"> {{row.c}}</td>\r\n      </ng-container>\r\n\r\n      <tr mat-header-row *matHeaderRowDef=\"columnsToRender\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: columnsToRender\"></tr>\r\n    </table>\r\n  `\r\n})\r\nclass NativeHtmlTableApp {\r\n  dataSource: FakeDataSource | null = new FakeDataSource();\r\n  columnsToRender = ['column_a', 'column_b', 'column_c'];\r\n\r\n  @ViewChild(MatTable) table: MatTable<TestData>;\r\n}\r\n\r\n@Component({\r\n  template: `\r\n    <table mat-table [dataSource]=\"dataSource\">\r\n      <ng-container matColumnDef=\"column_a\">\r\n        <th mat-header-cell *matHeaderCellDef> Column A </th>\r\n        <td mat-cell *matCellDef=\"let row\"> {{row.a}} </td>\r\n      </ng-container>\r\n\r\n      <tr mat-header-row *matHeaderRowDef=\"columnsToRender; sticky: true\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: columnsToRender\"></tr>\r\n    </table>\r\n  `\r\n})\r\nclass StickyTableApp {\r\n  dataSource = new FakeDataSource();\r\n  columnsToRender = ['column_a'];\r\n\r\n  @ViewChild(MatTable) table: MatTable<TestData>;\r\n}\r\n\r\n\r\n@Component({\r\n  template: `\r\n    <mat-table [dataSource]=\"dataSource\" [multiTemplateDataRows]=\"multiTemplateDataRows\">\r\n      <ng-container matColumnDef=\"column_a\">\r\n        <mat-header-cell *matHeaderCellDef> Column A</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let row\"> {{row.a}}</mat-cell>\r\n        <mat-footer-cell *matFooterCellDef> Footer A</mat-footer-cell>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"special_column\">\r\n        <mat-cell *matCellDef=\"let row\"> fourth_row </mat-cell>\r\n      </ng-container>\r\n\r\n      <mat-header-row *matHeaderRowDef=\"['column_a']\"></mat-header-row>\r\n      <mat-row *matRowDef=\"let row; columns: ['column_a']\"></mat-row>\r\n      <mat-row *matRowDef=\"let row; columns: ['special_column']; when: isFourthRow\"></mat-row>\r\n      <mat-footer-row *matFooterRowDef=\"['column_a']\"></mat-footer-row>\r\n    </mat-table>\r\n  `\r\n})\r\nclass MatTableWithWhenRowApp {\r\n  multiTemplateDataRows = false;\r\n  dataSource: FakeDataSource | null = new FakeDataSource();\r\n  isFourthRow = (i: number, _rowData: TestData) => i == 3;\r\n\r\n  @ViewChild(MatTable) table: MatTable<TestData>;\r\n}\r\n\r\n\r\n@Component({\r\n  template: `\r\n    <mat-table [dataSource]=\"dataSource\" matSort>\r\n      <ng-container matColumnDef=\"column_a\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header=\"a\"> Column A</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let row\"> {{row.a}}</mat-cell>\r\n        <mat-footer-cell *matFooterCellDef> Footer A</mat-footer-cell>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"column_b\">\r\n        <mat-header-cell *matHeaderCellDef> Column B</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let row\"> {{row.b}}</mat-cell>\r\n        <mat-footer-cell *matFooterCellDef> Footer B</mat-footer-cell>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"column_c\">\r\n        <mat-header-cell *matHeaderCellDef> Column C</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let row\"> {{row.c}}</mat-cell>\r\n        <mat-footer-cell *matFooterCellDef> Footer C</mat-footer-cell>\r\n      </ng-container>\r\n\r\n      <mat-header-row *matHeaderRowDef=\"columnsToRender\"></mat-header-row>\r\n      <mat-row *matRowDef=\"let row; columns: columnsToRender\"></mat-row>\r\n      <mat-footer-row *matFooterRowDef=\"columnsToRender\"></mat-footer-row>\r\n    </mat-table>\r\n\r\n    <mat-paginator [pageSize]=\"5\"></mat-paginator>\r\n  `\r\n})\r\nclass ArrayDataSourceMatTableApp implements OnInit {\r\n  underlyingDataSource = new FakeDataSource();\r\n  dataSource = new MatTableDataSource<TestData>();\r\n  columnsToRender = ['column_a', 'column_b', 'column_c'];\r\n\r\n  @ViewChild(MatTable) table: MatTable<TestData>;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild(MatSortHeader) sortHeader: MatSortHeader;\r\n\r\n  constructor() {\r\n    this.underlyingDataSource.data = [];\r\n\r\n    // Add three rows of data\r\n    this.underlyingDataSource.addData();\r\n    this.underlyingDataSource.addData();\r\n    this.underlyingDataSource.addData();\r\n\r\n    this.underlyingDataSource.connect().subscribe(data => {\r\n      this.dataSource.data = data;\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.dataSource!.sort = this.sort;\r\n    this.dataSource!.paginator = this.paginator;\r\n  }\r\n}\r\n\r\n\r\n@Component({\r\n  template: `\r\n    <mat-table [dataSource]=\"dataSource\" matSort>\r\n      <ng-container matColumnDef=\"column_a\">\r\n        <mat-header-cell *matHeaderCellDef mat-sort-header=\"a\"> Column A</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let row\"> {{row.a}}</mat-cell>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"column_b\">\r\n        <mat-header-cell *matHeaderCellDef> Column B</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let row\"> {{row.b}}</mat-cell>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"column_c\">\r\n        <mat-header-cell *matHeaderCellDef> Column C</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let row\"> {{row.c}}</mat-cell>\r\n      </ng-container>\r\n\r\n      <mat-header-row *matHeaderRowDef=\"columnsToRender\"></mat-header-row>\r\n      <mat-row *matRowDef=\"let row; columns: columnsToRender\"></mat-row>\r\n    </mat-table>\r\n  `\r\n})\r\nclass MatTableWithSortApp implements OnInit {\r\n  underlyingDataSource = new FakeDataSource();\r\n  dataSource = new MatTableDataSource<TestData>();\r\n  columnsToRender = ['column_a', 'column_b', 'column_c'];\r\n\r\n  @ViewChild(MatTable) table: MatTable<TestData>;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor() {\r\n    this.underlyingDataSource.data = [];\r\n\r\n    // Add three rows of data\r\n    this.underlyingDataSource.addData();\r\n    this.underlyingDataSource.addData();\r\n    this.underlyingDataSource.addData();\r\n\r\n    this.underlyingDataSource.connect().subscribe(data => {\r\n      this.dataSource.data = data;\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.dataSource!.sort = this.sort;\r\n  }\r\n}\r\n\r\n@Component({\r\n  template: `\r\n    <mat-table [dataSource]=\"dataSource\">\r\n      <ng-container matColumnDef=\"column_a\">\r\n        <mat-header-cell *matHeaderCellDef> Column A</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let row\"> {{row.a}}</mat-cell>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"column_b\">\r\n        <mat-header-cell *matHeaderCellDef> Column B</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let row\"> {{row.b}}</mat-cell>\r\n      </ng-container>\r\n\r\n      <ng-container matColumnDef=\"column_c\">\r\n        <mat-header-cell *matHeaderCellDef> Column C</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let row\"> {{row.c}}</mat-cell>\r\n      </ng-container>\r\n\r\n      <mat-header-row *matHeaderRowDef=\"columnsToRender\"></mat-header-row>\r\n      <mat-row *matRowDef=\"let row; columns: columnsToRender\"></mat-row>\r\n    </mat-table>\r\n\r\n    <mat-paginator [pageSize]=\"5\"></mat-paginator>\r\n  `\r\n})\r\nclass MatTableWithPaginatorApp implements OnInit {\r\n  underlyingDataSource = new FakeDataSource();\r\n  dataSource = new MatTableDataSource<TestData>();\r\n  columnsToRender = ['column_a', 'column_b', 'column_c'];\r\n\r\n  @ViewChild(MatTable) table: MatTable<TestData>;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n\r\n  constructor() {\r\n    this.underlyingDataSource.data = [];\r\n\r\n    // Add three rows of data\r\n    this.underlyingDataSource.addData();\r\n    this.underlyingDataSource.addData();\r\n    this.underlyingDataSource.addData();\r\n\r\n    this.underlyingDataSource.connect().subscribe(data => {\r\n      this.dataSource.data = data;\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.dataSource!.paginator = this.paginator;\r\n  }\r\n}\r\n\r\n@Component({\r\n  template: `\r\n    <mat-table [dataSource]=\"dataSource\">\r\n      <ng-container matColumnDef=\"column_a\">\r\n        <mat-header-cell *matHeaderCellDef>Column A</mat-header-cell>\r\n        <mat-cell *matCellDef=\"let row\">{{row.a}}</mat-cell>\r\n      </ng-container>\r\n\r\n      <mat-header-row *matHeaderRowDef=\"columnsToRender\"></mat-header-row>\r\n      <ng-container *matRowDef=\"let row; columns: columnsToRender\">\r\n        <mat-row></mat-row>\r\n      </ng-container>\r\n    </mat-table>\r\n  `\r\n})\r\nclass TableWithNgContainerRow {\r\n  dataSource: FakeDataSource | null = new FakeDataSource();\r\n  columnsToRender = ['column_a'];\r\n}\r\n\r\n\r\nfunction getElements(element: Element, query: string): Element[] {\r\n  return [].slice.call(element.querySelectorAll(query));\r\n}\r\n\r\nfunction getHeaderRows(tableElement: Element): Element[] {\r\n  return [].slice.call(tableElement.querySelectorAll('.mat-header-row'))!;\r\n}\r\n\r\nfunction getFooterRows(tableElement: Element): Element[] {\r\n  return [].slice.call(tableElement.querySelectorAll('.mat-footer-row'))!;\r\n}\r\n\r\nfunction getRows(tableElement: Element): Element[] {\r\n  return getElements(tableElement, '.mat-row');\r\n}\r\n\r\nfunction getCells(row: Element): Element[] {\r\n  if (!row) {\r\n    return [];\r\n  }\r\n\r\n  let cells = getElements(row, 'mat-cell');\r\n  if (!cells.length) {\r\n    cells = getElements(row, 'td');\r\n  }\r\n\r\n  return cells;\r\n}\r\n\r\nfunction getHeaderCells(headerRow: Element): Element[] {\r\n  let cells = getElements(headerRow, 'mat-header-cell');\r\n  if (!cells.length) {\r\n    cells = getElements(headerRow, 'th');\r\n  }\r\n\r\n  return cells;\r\n}\r\n\r\nfunction getFooterCells(footerRow: Element): Element[] {\r\n  let cells = getElements(footerRow, 'mat-footer-cell');\r\n  if (!cells.length) {\r\n    cells = getElements(footerRow, 'td');\r\n  }\r\n\r\n  return cells;\r\n}\r\n\r\nfunction getActualTableContent(tableElement: Element): string[][] {\r\n  let actualTableContent: Element[][] = [];\r\n  getHeaderRows(tableElement).forEach(row => {\r\n    actualTableContent.push(getHeaderCells(row));\r\n  });\r\n\r\n  // Check data row cells\r\n  const rows = getRows(tableElement).map(row => getCells(row));\r\n  actualTableContent = actualTableContent.concat(rows);\r\n\r\n  getFooterRows(tableElement).forEach(row => {\r\n    actualTableContent.push(getFooterCells(row));\r\n  });\r\n\r\n  // Convert the nodes into their text content;\r\n  return actualTableContent.map(row => row.map(cell => cell.textContent!.trim()));\r\n}\r\n\r\nfunction expectTableToMatchContent(tableElement: Element, expected: any[]) {\r\n  const missedExpectations: string[] = [];\r\n  function checkCellContent(actualCell: string, expectedCell: string) {\r\n    if (actualCell !== expectedCell) {\r\n      missedExpectations.push(`Expected cell contents to be ${expectedCell} but was ${actualCell}`);\r\n    }\r\n  }\r\n\r\n  const actual = getActualTableContent(tableElement);\r\n\r\n  // Make sure the number of rows match\r\n  if (actual.length !== expected.length) {\r\n    missedExpectations.push(`Expected ${expected.length} total rows but got ${actual.length}`);\r\n    fail(missedExpectations.join('\\n'));\r\n  }\r\n\r\n  actual.forEach((row, rowIndex) => {\r\n    const expectedRow = expected[rowIndex];\r\n\r\n    // Make sure the number of cells match\r\n    if (row.length !== expectedRow.length) {\r\n      missedExpectations.push(`Expected ${expectedRow.length} cells in row but got ${row.length}`);\r\n      fail(missedExpectations.join('\\n'));\r\n    }\r\n\r\n    row.forEach((actualCell, cellIndex) => {\r\n      const expectedCell = expectedRow ? expectedRow[cellIndex] : null;\r\n      checkCellContent(actualCell, expectedCell);\r\n    });\r\n  });\r\n\r\n  if (missedExpectations.length) {\r\n    fail(missedExpectations.join('\\n'));\r\n  }\r\n}\r\n"]}