{"version":3,"file":"input.spec.js","sourceRoot":"","sources":["../../../../src/lib/input/input.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import {Platform, PlatformModule} from '@angular/cdk/platform';\r\nimport {createFakeEvent, dispatchFakeEvent, wrappedErrorMessage} from '@angular/cdk/testing';\r\nimport {ChangeDetectionStrategy, Component, ViewChild, Type, Provider} from '@angular/core';\r\nimport {ComponentFixture, fakeAsync, flush, TestBed} from '@angular/core/testing';\r\nimport {\r\n  FormControl,\r\n  FormGroup,\r\n  FormGroupDirective,\r\n  FormsModule,\r\n  NgForm,\r\n  ReactiveFormsModule,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport {\r\n  ErrorStateMatcher,\r\n  FloatLabelType,\r\n  MAT_LABEL_GLOBAL_OPTIONS,\r\n  ShowOnDirtyErrorStateMatcher,\r\n} from '@angular/material/core';\r\nimport {\r\n  getMatFormFieldDuplicatedHintError,\r\n  getMatFormFieldMissingControlError,\r\n  getMatFormFieldPlaceholderConflictError,\r\n  MAT_FORM_FIELD_DEFAULT_OPTIONS,\r\n  MatFormField,\r\n  MatFormFieldAppearance,\r\n  MatFormFieldModule,\r\n} from '@angular/material/form-field';\r\nimport {By} from '@angular/platform-browser';\r\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\r\nimport {MatInputModule} from './index';\r\nimport {MatInput} from './input';\r\nimport {MatStepperModule} from '@angular/material/stepper';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {MatTextareaAutosize} from './autosize';\r\n\r\ndescribe('MatInput without forms', () => {\r\n  it('should default to floating labels', fakeAsync(() => {\r\n    let fixture = createComponent(MatInputWithId);\r\n    fixture.detectChanges();\r\n\r\n    let formField = fixture.debugElement.query(By.directive(MatFormField))\r\n        .componentInstance as MatFormField;\r\n    expect(formField.floatLabel).toBe('auto',\r\n        'Expected MatInput to set floatingLabel to auto by default.');\r\n  }));\r\n\r\n  it('should default to global floating label type', fakeAsync(() => {\r\n    let fixture = createComponent(MatInputWithId, [{\r\n      provide: MAT_LABEL_GLOBAL_OPTIONS, useValue: {float: 'always'}\r\n    }]);\r\n    fixture.detectChanges();\r\n\r\n    let formField = fixture.debugElement.query(By.directive(MatFormField))\r\n        .componentInstance as MatFormField;\r\n    expect(formField.floatLabel).toBe('always',\r\n      'Expected MatInput to set floatingLabel to always from global option.');\r\n  }));\r\n\r\n  it('should not be treated as empty if type is date', fakeAsync(() => {\r\n    const platform = new Platform();\r\n\r\n    if (!(platform.TRIDENT || (platform.SAFARI && !platform.IOS))) {\r\n      let fixture = createComponent(MatInputDateTestController);\r\n      fixture.detectChanges();\r\n\r\n      let el = fixture.debugElement.query(By.css('label')).nativeElement;\r\n      expect(el).not.toBeNull();\r\n      expect(el.classList.contains('mat-form-field-empty')).toBe(false);\r\n    }\r\n  }));\r\n\r\n  // Safari Desktop and IE don't support type=\"date\" and fallback to type=\"text\".\r\n  it('should be treated as empty if type is date in Safari Desktop or IE', fakeAsync(() => {\r\n    const platform = new Platform();\r\n\r\n    if (platform.TRIDENT || (platform.SAFARI && !platform.IOS)) {\r\n      let fixture = createComponent(MatInputDateTestController);\r\n      fixture.detectChanges();\r\n\r\n      let el = fixture.debugElement.query(By.css('label')).nativeElement;\r\n      expect(el).not.toBeNull();\r\n      expect(el.classList.contains('mat-form-field-empty')).toBe(true);\r\n    }\r\n  }));\r\n\r\n  it('should treat text input type as empty at init', fakeAsync(() => {\r\n    let fixture = createComponent(MatInputTextTestController);\r\n    fixture.detectChanges();\r\n\r\n    let el = fixture.debugElement.query(By.css('label')).nativeElement;\r\n    expect(el).not.toBeNull();\r\n    expect(el.classList.contains('mat-form-field-empty')).toBe(true);\r\n  }));\r\n\r\n  it('should treat password input type as empty at init', fakeAsync(() => {\r\n    let fixture = createComponent(MatInputPasswordTestController);\r\n    fixture.detectChanges();\r\n\r\n    let el = fixture.debugElement.query(By.css('label')).nativeElement;\r\n    expect(el).not.toBeNull();\r\n    expect(el.classList.contains('mat-form-field-empty')).toBe(true);\r\n  }));\r\n\r\n  it('should treat number input type as empty at init', fakeAsync(() => {\r\n    let fixture = createComponent(MatInputNumberTestController);\r\n    fixture.detectChanges();\r\n\r\n    let el = fixture.debugElement.query(By.css('label')).nativeElement;\r\n    expect(el).not.toBeNull();\r\n    expect(el.classList.contains('mat-form-field-empty')).toBe(true);\r\n  }));\r\n\r\n  it('should not be empty after input entered', fakeAsync(() => {\r\n    let fixture = createComponent(MatInputTextTestController);\r\n    fixture.detectChanges();\r\n\r\n    let inputEl = fixture.debugElement.query(By.css('input'));\r\n    let el = fixture.debugElement.query(By.css('label')).nativeElement;\r\n    expect(el).not.toBeNull();\r\n    expect(el.classList.contains('mat-form-field-empty')).toBe(true, 'should be empty');\r\n\r\n    inputEl.nativeElement.value = 'hello';\r\n    // Simulate input event.\r\n    inputEl.triggerEventHandler('input', {target: inputEl.nativeElement});\r\n    fixture.detectChanges();\r\n\r\n    el = fixture.debugElement.query(By.css('label')).nativeElement;\r\n    expect(el.classList.contains('mat-form-field-empty')).toBe(false, 'should not be empty');\r\n  }));\r\n\r\n  it('should update the placeholder when input entered', fakeAsync(() => {\r\n    let fixture = createComponent(MatInputWithStaticLabel);\r\n    fixture.detectChanges();\r\n\r\n    let inputEl = fixture.debugElement.query(By.css('input'));\r\n    let labelEl = fixture.debugElement.query(By.css('label')).nativeElement;\r\n\r\n    expect(labelEl.classList).toContain('mat-form-field-empty');\r\n    expect(labelEl.classList).not.toContain('mat-form-field-float');\r\n\r\n    // Update the value of the input.\r\n    inputEl.nativeElement.value = 'Text';\r\n\r\n    // Fake behavior of the `(input)` event which should trigger a change detection.\r\n    fixture.detectChanges();\r\n\r\n    expect(labelEl.classList).not.toContain('mat-form-field-empty');\r\n    expect(labelEl.classList).not.toContain('mat-form-field-float');\r\n  }));\r\n\r\n  it('should not be empty when the value set before view init', fakeAsync(() => {\r\n    let fixture = createComponent(MatInputWithValueBinding);\r\n    fixture.detectChanges();\r\n    let labelEl = fixture.debugElement.query(By.css('.mat-form-field-label')).nativeElement;\r\n\r\n    expect(labelEl.classList).not.toContain('mat-form-field-empty');\r\n\r\n    fixture.componentInstance.value = '';\r\n    fixture.detectChanges();\r\n\r\n    expect(labelEl.classList).toContain('mat-form-field-empty');\r\n  }));\r\n\r\n  it('should add id', fakeAsync(() => {\r\n    let fixture = createComponent(MatInputTextTestController);\r\n    fixture.detectChanges();\r\n\r\n    const inputElement: HTMLInputElement =\r\n        fixture.debugElement.query(By.css('input')).nativeElement;\r\n    const labelElement: HTMLInputElement =\r\n        fixture.debugElement.query(By.css('label')).nativeElement;\r\n\r\n    expect(inputElement.id).toBeTruthy();\r\n    expect(inputElement.id).toEqual(labelElement.getAttribute('for')!);\r\n  }));\r\n\r\n  it('should add aria-owns to the label for the associated control', fakeAsync(() => {\r\n    let fixture = createComponent(MatInputTextTestController);\r\n    fixture.detectChanges();\r\n\r\n    const inputElement: HTMLInputElement =\r\n        fixture.debugElement.query(By.css('input')).nativeElement;\r\n    const labelElement: HTMLInputElement =\r\n        fixture.debugElement.query(By.css('label')).nativeElement;\r\n\r\n    expect(labelElement.getAttribute('aria-owns')).toBe(inputElement.id);\r\n  }));\r\n\r\n  it('should add aria-required reflecting the required state', fakeAsync(() => {\r\n    const fixture = createComponent(MatInputWithRequired);\r\n    fixture.detectChanges();\r\n\r\n    const inputElement: HTMLInputElement =\r\n        fixture.debugElement.query(By.css('input')).nativeElement;\r\n\r\n    expect(inputElement.getAttribute('aria-required'))\r\n        .toBe('false', 'Expected aria-required to reflect required state of false');\r\n\r\n    fixture.componentInstance.required = true;\r\n    fixture.detectChanges();\r\n\r\n    expect(inputElement.getAttribute('aria-required'))\r\n        .toBe('true', 'Expected aria-required to reflect required state of true');\r\n  }));\r\n\r\n  it('should not overwrite existing id', fakeAsync(() => {\r\n    let fixture = createComponent(MatInputWithId);\r\n    fixture.detectChanges();\r\n\r\n    const inputElement: HTMLInputElement =\r\n        fixture.debugElement.query(By.css('input')).nativeElement;\r\n    const labelElement: HTMLInputElement =\r\n        fixture.debugElement.query(By.css('label')).nativeElement;\r\n\r\n        expect(inputElement.id).toBe('test-id');\r\n        expect(labelElement.getAttribute('for')).toBe('test-id');\r\n      }));\r\n\r\n      it('validates there\\'s only one hint label per side', fakeAsync(() => {\r\n        let fixture = createComponent(MatInputInvalidHintTestController);\r\n\r\n        expect(() => {\r\n          try {\r\n            fixture.detectChanges();\r\n            flush();\r\n          } catch {\r\n            flush();\r\n          }\r\n        }).toThrowError(\r\n            wrappedErrorMessage(getMatFormFieldDuplicatedHintError('start')));\r\n      }));\r\n\r\n      it('validates there\\'s only one hint label per side (attribute)', fakeAsync(() => {\r\n        let fixture = createComponent(MatInputInvalidHint2TestController);\r\n\r\n        expect(() => {\r\n          try {\r\n            fixture.detectChanges();\r\n            flush();\r\n          } catch {\r\n            flush();\r\n          }\r\n        }).toThrowError(\r\n            wrappedErrorMessage(getMatFormFieldDuplicatedHintError('start')));\r\n      }));\r\n\r\n      it('validates there\\'s only one placeholder', fakeAsync(() => {\r\n        let fixture = createComponent(MatInputInvalidPlaceholderTestController);\r\n\r\n        expect(() => {\r\n          try {\r\n            fixture.detectChanges();\r\n            flush();\r\n          } catch {\r\n            flush();\r\n          }\r\n        }).toThrowError(\r\n            wrappedErrorMessage(getMatFormFieldPlaceholderConflictError()));\r\n      }));\r\n\r\n  it('validates that matInput child is present', fakeAsync(() => {\r\n    let fixture = createComponent(MatInputMissingMatInputTestController);\r\n\r\n    expect(() => fixture.detectChanges()).toThrowError(\r\n        wrappedErrorMessage(getMatFormFieldMissingControlError()));\r\n  }));\r\n\r\n  it('validates that matInput child is present after initialization', fakeAsync(() => {\r\n    let fixture = createComponent(MatInputWithNgIf);\r\n\r\n    expect(() => fixture.detectChanges()).not.toThrowError(\r\n        wrappedErrorMessage(getMatFormFieldMissingControlError()));\r\n\r\n    fixture.componentInstance.renderInput = false;\r\n\r\n    expect(() => fixture.detectChanges()).toThrowError(\r\n        wrappedErrorMessage(getMatFormFieldMissingControlError()));\r\n  }));\r\n\r\n  it('validates the type', fakeAsync(() => {\r\n    let fixture = createComponent(MatInputInvalidTypeTestController);\r\n\r\n    // Technically this throws during the OnChanges detection phase,\r\n    // so the error is really a ChangeDetectionError and it becomes\r\n    // hard to build a full exception to compare with.\r\n    // We just check for any exception in this case.\r\n    expect(() => fixture.detectChanges()).toThrow(\r\n        /* new MatInputUnsupportedTypeError('file') */);\r\n  }));\r\n\r\n  it('supports hint labels attribute', fakeAsync(() => {\r\n    let fixture = createComponent(MatInputHintLabelTestController);\r\n    fixture.detectChanges();\r\n\r\n    // If the hint label is empty, expect no label.\r\n    expect(fixture.debugElement.query(By.css('.mat-hint'))).toBeNull();\r\n\r\n    fixture.componentInstance.label = 'label';\r\n    fixture.detectChanges();\r\n    expect(fixture.debugElement.query(By.css('.mat-hint'))).not.toBeNull();\r\n  }));\r\n\r\n  it('sets an id on hint labels', fakeAsync(() => {\r\n    let fixture = createComponent(MatInputHintLabelTestController);\r\n\r\n    fixture.componentInstance.label = 'label';\r\n    fixture.detectChanges();\r\n\r\n    let hint = fixture.debugElement.query(By.css('.mat-hint')).nativeElement;\r\n\r\n    expect(hint.getAttribute('id')).toBeTruthy();\r\n  }));\r\n\r\n  it('supports hint labels elements', fakeAsync(() => {\r\n    let fixture = createComponent(MatInputHintLabel2TestController);\r\n    fixture.detectChanges();\r\n\r\n    // In this case, we should have an empty <mat-hint>.\r\n    let el = fixture.debugElement.query(By.css('mat-hint')).nativeElement;\r\n    expect(el.textContent).toBeFalsy();\r\n\r\n    fixture.componentInstance.label = 'label';\r\n    fixture.detectChanges();\r\n    el = fixture.debugElement.query(By.css('mat-hint')).nativeElement;\r\n    expect(el.textContent).toBe('label');\r\n  }));\r\n\r\n  it('sets an id on the hint element', fakeAsync(() => {\r\n    let fixture = createComponent(MatInputHintLabel2TestController);\r\n\r\n    fixture.componentInstance.label = 'label';\r\n    fixture.detectChanges();\r\n\r\n    let hint = fixture.debugElement.query(By.css('mat-hint')).nativeElement;\r\n\r\n    expect(hint.getAttribute('id')).toBeTruthy();\r\n  }));\r\n\r\n  it('supports placeholder attribute', fakeAsync(() => {\r\n    let fixture = createComponent(MatInputPlaceholderAttrTestComponent);\r\n    fixture.detectChanges();\r\n\r\n    let inputEl = fixture.debugElement.query(By.css('input')).nativeElement;\r\n\r\n    expect(fixture.debugElement.query(By.css('label'))).toBeNull();\r\n    expect(inputEl.placeholder).toBe('');\r\n\r\n    fixture.componentInstance.placeholder = 'Other placeholder';\r\n    fixture.detectChanges();\r\n\r\n    let labelEl = fixture.debugElement.query(By.css('label'));\r\n\r\n    expect(inputEl.placeholder).toBe('Other placeholder');\r\n    expect(labelEl).not.toBeNull();\r\n    expect(labelEl.nativeElement.textContent).toMatch('Other placeholder');\r\n    expect(labelEl.nativeElement.textContent).not.toMatch(/\\*/g);\r\n  }));\r\n\r\n  it('supports placeholder element', fakeAsync(() => {\r\n    let fixture = createComponent(MatInputPlaceholderElementTestComponent);\r\n    fixture.detectChanges();\r\n\r\n    let el = fixture.debugElement.query(By.css('label'));\r\n    expect(el).not.toBeNull();\r\n    expect(el.nativeElement.textContent).toMatch('Default Placeholder');\r\n\r\n    fixture.componentInstance.placeholder = 'Other placeholder';\r\n    fixture.detectChanges();\r\n\r\n    el = fixture.debugElement.query(By.css('label'));\r\n    expect(el).not.toBeNull();\r\n    expect(el.nativeElement.textContent).toMatch('Other placeholder');\r\n    expect(el.nativeElement.textContent).not.toMatch(/\\*/g);\r\n  }));\r\n\r\n  it('supports placeholder required star', fakeAsync(() => {\r\n    let fixture = createComponent(MatInputPlaceholderRequiredTestComponent);\r\n    fixture.detectChanges();\r\n\r\n    let el = fixture.debugElement.query(By.css('label'));\r\n    expect(el).not.toBeNull();\r\n    expect(el.nativeElement.textContent).toMatch(/hello\\s+\\*/g);\r\n  }));\r\n\r\n  it('should hide the required star if input is disabled', () => {\r\n    const fixture = createComponent(MatInputPlaceholderRequiredTestComponent);\r\n\r\n    fixture.componentInstance.disabled = true;\r\n    fixture.detectChanges();\r\n\r\n    const el = fixture.debugElement.query(By.css('label'));\r\n\r\n    expect(el).not.toBeNull();\r\n    expect(el.nativeElement.textContent).toMatch(/^hello$/);\r\n  });\r\n\r\n  it('should hide the required star from screen readers', fakeAsync(() => {\r\n    let fixture = createComponent(MatInputPlaceholderRequiredTestComponent);\r\n    fixture.detectChanges();\r\n\r\n    let el = fixture.debugElement.query(By.css('.mat-form-field-required-marker')).nativeElement;\r\n\r\n    expect(el.getAttribute('aria-hidden')).toBe('true');\r\n  }));\r\n\r\n  it('hide placeholder required star when set to hide the required marker', fakeAsync(() => {\r\n    let fixture = createComponent(MatInputPlaceholderRequiredTestComponent);\r\n    fixture.detectChanges();\r\n\r\n    let el = fixture.debugElement.query(By.css('label'));\r\n    expect(el).not.toBeNull();\r\n    expect(el.nativeElement.textContent).toMatch(/hello\\s+\\*/g);\r\n\r\n    fixture.componentInstance.hideRequiredMarker = true;\r\n    fixture.detectChanges();\r\n\r\n    expect(el.nativeElement.textContent).toMatch(/hello/g);\r\n  }));\r\n\r\n  it('supports the disabled attribute as binding', fakeAsync(() => {\r\n    const fixture = createComponent(MatInputWithDisabled);\r\n    fixture.detectChanges();\r\n\r\n    const formFieldEl =\r\n        fixture.debugElement.query(By.css('.mat-form-field')).nativeElement;\r\n    const inputEl = fixture.debugElement.query(By.css('input')).nativeElement;\r\n\r\n    expect(formFieldEl.classList.contains('mat-form-field-disabled'))\r\n        .toBe(false, `Expected form field not to start out disabled.`);\r\n    expect(inputEl.disabled).toBe(false);\r\n\r\n    fixture.componentInstance.disabled = true;\r\n    fixture.detectChanges();\r\n\r\n    expect(formFieldEl.classList.contains('mat-form-field-disabled'))\r\n        .toBe(true, `Expected form field to look disabled after property is set.`);\r\n    expect(inputEl.disabled).toBe(true);\r\n  }));\r\n\r\n  it('supports the required attribute as binding', fakeAsync(() => {\r\n    let fixture = createComponent(MatInputWithRequired);\r\n    fixture.detectChanges();\r\n\r\n    let inputEl = fixture.debugElement.query(By.css('input')).nativeElement;\r\n\r\n    expect(inputEl.required).toBe(false);\r\n\r\n    fixture.componentInstance.required = true;\r\n    fixture.detectChanges();\r\n\r\n    expect(inputEl.required).toBe(true);\r\n  }));\r\n\r\n  it('supports the type attribute as binding', fakeAsync(() => {\r\n    let fixture = createComponent(MatInputWithType);\r\n    fixture.detectChanges();\r\n\r\n    let inputEl = fixture.debugElement.query(By.css('input')).nativeElement;\r\n\r\n    expect(inputEl.type).toBe('text');\r\n\r\n    fixture.componentInstance.type = 'password';\r\n    fixture.detectChanges();\r\n\r\n    expect(inputEl.type).toBe('password');\r\n  }));\r\n\r\n  it('supports textarea', fakeAsync(() => {\r\n    let fixture = createComponent(MatInputTextareaWithBindings);\r\n    fixture.detectChanges();\r\n\r\n    const textarea: HTMLTextAreaElement = fixture.nativeElement.querySelector('textarea');\r\n    expect(textarea).not.toBeNull();\r\n  }));\r\n\r\n  it('sets the aria-describedby when a hintLabel is set', fakeAsync(() => {\r\n    let fixture = createComponent(MatInputHintLabelTestController);\r\n\r\n    fixture.componentInstance.label = 'label';\r\n    fixture.detectChanges();\r\n\r\n    let hint = fixture.debugElement.query(By.css('.mat-hint')).nativeElement;\r\n    let input = fixture.debugElement.query(By.css('input')).nativeElement;\r\n\r\n    expect(input.getAttribute('aria-describedby')).toBe(hint.getAttribute('id'));\r\n  }));\r\n\r\n  it('sets the aria-describedby to the id of the mat-hint', fakeAsync(() => {\r\n    let fixture = createComponent(MatInputHintLabel2TestController);\r\n\r\n    fixture.componentInstance.label = 'label';\r\n    fixture.detectChanges();\r\n\r\n    let hint = fixture.debugElement.query(By.css('.mat-hint')).nativeElement;\r\n    let input = fixture.debugElement.query(By.css('input')).nativeElement;\r\n\r\n    expect(input.getAttribute('aria-describedby')).toBe(hint.getAttribute('id'));\r\n  }));\r\n\r\n  it('sets the aria-describedby with multiple mat-hint instances', fakeAsync(() => {\r\n    let fixture = createComponent(MatInputMultipleHintTestController);\r\n\r\n    fixture.componentInstance.startId = 'start';\r\n    fixture.componentInstance.endId = 'end';\r\n    fixture.detectChanges();\r\n\r\n    let input = fixture.debugElement.query(By.css('input')).nativeElement;\r\n\r\n    expect(input.getAttribute('aria-describedby')).toBe('start end');\r\n  }));\r\n\r\n  it('sets the aria-describedby when a hintLabel is set, in addition to a mat-hint',\r\n    fakeAsync(() => {\r\n      let fixture = createComponent(MatInputMultipleHintMixedTestController);\r\n\r\n      fixture.detectChanges();\r\n\r\n      let hintLabel = fixture.debugElement.query(By.css('.mat-hint:not(.mat-right)')).nativeElement;\r\n      let endLabel = fixture.debugElement.query(By.css('.mat-hint.mat-right')).nativeElement;\r\n      let input = fixture.debugElement.query(By.css('input')).nativeElement;\r\n      let ariaValue = input.getAttribute('aria-describedby');\r\n\r\n      expect(ariaValue).toBe(`${hintLabel.getAttribute('id')} ${endLabel.getAttribute('id')}`);\r\n    }));\r\n\r\n  it('should float when floatLabel is set to default and text is entered', fakeAsync(() => {\r\n    let fixture = createComponent(MatInputWithDynamicLabel);\r\n    fixture.detectChanges();\r\n\r\n    let inputEl = fixture.debugElement.query(By.css('input')).nativeElement;\r\n    let formFieldEl = fixture.debugElement.query(By.css('.mat-form-field')).nativeElement;\r\n\r\n    expect(formFieldEl.classList).toContain('mat-form-field-can-float');\r\n    expect(formFieldEl.classList).toContain('mat-form-field-should-float');\r\n\r\n    fixture.componentInstance.shouldFloat = 'auto';\r\n    fixture.detectChanges();\r\n\r\n    expect(formFieldEl.classList).toContain('mat-form-field-can-float');\r\n    expect(formFieldEl.classList).not.toContain('mat-form-field-should-float');\r\n\r\n    // Update the value of the input.\r\n    inputEl.value = 'Text';\r\n\r\n    // Fake behavior of the `(input)` event which should trigger a change detection.\r\n    fixture.detectChanges();\r\n\r\n    expect(formFieldEl.classList).toContain('mat-form-field-can-float');\r\n    expect(formFieldEl.classList).toContain('mat-form-field-should-float');\r\n  }));\r\n\r\n  it('should always float the label when floatLabel is set to true', fakeAsync(() => {\r\n    let fixture = createComponent(MatInputWithDynamicLabel);\r\n    fixture.detectChanges();\r\n\r\n    let inputEl = fixture.debugElement.query(By.css('input')).nativeElement;\r\n    let formFieldEl = fixture.debugElement.query(By.css('.mat-form-field')).nativeElement;\r\n\r\n    expect(formFieldEl.classList).toContain('mat-form-field-can-float');\r\n    expect(formFieldEl.classList).toContain('mat-form-field-should-float');\r\n\r\n    fixture.detectChanges();\r\n\r\n    // Update the value of the input.\r\n    inputEl.value = 'Text';\r\n\r\n    // Fake behavior of the `(input)` event which should trigger a change detection.\r\n    fixture.detectChanges();\r\n\r\n    expect(formFieldEl.classList).toContain('mat-form-field-can-float');\r\n    expect(formFieldEl.classList).toContain('mat-form-field-should-float');\r\n  }));\r\n\r\n\r\n  it('should never float the label when floatLabel is set to false', fakeAsync(() => {\r\n    let fixture = createComponent(MatInputWithDynamicLabel);\r\n\r\n    fixture.componentInstance.shouldFloat = 'never';\r\n    fixture.detectChanges();\r\n\r\n    let inputEl = fixture.debugElement.query(By.css('input')).nativeElement;\r\n    let labelEl = fixture.debugElement.query(By.css('label')).nativeElement;\r\n\r\n    expect(labelEl.classList).toContain('mat-form-field-empty');\r\n    expect(labelEl.classList).not.toContain('mat-form-field-float');\r\n\r\n    // Update the value of the input.\r\n    inputEl.value = 'Text';\r\n\r\n    // Fake behavior of the `(input)` event which should trigger a change detection.\r\n    fixture.detectChanges();\r\n\r\n    expect(labelEl.classList).not.toContain('mat-form-field-empty');\r\n    expect(labelEl.classList).not.toContain('mat-form-field-float');\r\n  }));\r\n\r\n  it('should be able to toggle the floating label programmatically', fakeAsync(() => {\r\n    const fixture = createComponent(MatInputWithId);\r\n\r\n    fixture.detectChanges();\r\n\r\n    const formField = fixture.debugElement.query(By.directive(MatFormField));\r\n    const containerInstance = formField.componentInstance as MatFormField;\r\n    const label = formField.nativeElement.querySelector('.mat-form-field-label');\r\n\r\n    expect(containerInstance.floatLabel).toBe('auto');\r\n    expect(label.classList)\r\n        .toContain('mat-form-field-empty', 'Expected input to be considered empty.');\r\n\r\n    containerInstance.floatLabel = 'always';\r\n    fixture.detectChanges();\r\n\r\n    expect(label.classList)\r\n        .not.toContain('mat-form-field-empty', 'Expected input to be considered not empty.');\r\n  }));\r\n\r\n  it('should not have prefix and suffix elements when none are specified', fakeAsync(() => {\r\n    let fixture = createComponent(MatInputWithId);\r\n    fixture.detectChanges();\r\n\r\n    let prefixEl = fixture.debugElement.query(By.css('.mat-form-field-prefix'));\r\n    let suffixEl = fixture.debugElement.query(By.css('.mat-form-field-suffix'));\r\n\r\n    expect(prefixEl).toBeNull();\r\n    expect(suffixEl).toBeNull();\r\n  }));\r\n\r\n  it('should add prefix and suffix elements when specified', fakeAsync(() => {\r\n    const fixture = createComponent(MatInputWithPrefixAndSuffix);\r\n    fixture.detectChanges();\r\n\r\n    const prefixEl = fixture.debugElement.query(By.css('.mat-form-field-prefix'));\r\n    const suffixEl = fixture.debugElement.query(By.css('.mat-form-field-suffix'));\r\n\r\n    expect(prefixEl).not.toBeNull();\r\n    expect(suffixEl).not.toBeNull();\r\n    expect(prefixEl.nativeElement.innerText.trim()).toEqual('Prefix');\r\n    expect(suffixEl.nativeElement.innerText.trim()).toEqual('Suffix');\r\n  }));\r\n\r\n  it('should update empty class when value changes programmatically and OnPush', fakeAsync(() => {\r\n    let fixture = createComponent(MatInputOnPush);\r\n    fixture.detectChanges();\r\n\r\n    let component = fixture.componentInstance;\r\n    let label = fixture.debugElement.query(By.css('.mat-form-field-label')).nativeElement;\r\n\r\n    expect(label.classList).toContain('mat-form-field-empty', 'Input initially empty');\r\n\r\n    component.formControl.setValue('something');\r\n    fixture.detectChanges();\r\n\r\n    expect(label.classList).not.toContain('mat-form-field-empty', 'Input no longer empty');\r\n  }));\r\n\r\n  it('should set the focused class when the input is focused', fakeAsync(() => {\r\n    let fixture = createComponent(MatInputTextTestController);\r\n    fixture.detectChanges();\r\n\r\n    let input = fixture.debugElement.query(By.directive(MatInput))\r\n      .injector.get<MatInput>(MatInput);\r\n    let container = fixture.debugElement.query(By.css('mat-form-field')).nativeElement;\r\n\r\n    // Call the focus handler directly to avoid flakyness where\r\n    // browsers don't focus elements if the window is minimized.\r\n    input._focusChanged(true);\r\n    fixture.detectChanges();\r\n\r\n    expect(container.classList).toContain('mat-focused');\r\n  }));\r\n\r\n  it('should remove the focused class if the input becomes disabled while focused',\r\n    fakeAsync(() => {\r\n      const fixture = createComponent(MatInputTextTestController);\r\n      fixture.detectChanges();\r\n\r\n      const input = fixture.debugElement.query(By.directive(MatInput)).injector.get(MatInput);\r\n      const container = fixture.debugElement.query(By.css('mat-form-field')).nativeElement;\r\n\r\n      // Call the focus handler directly to avoid flakyness where\r\n      // browsers don't focus elements if the window is minimized.\r\n      input._focusChanged(true);\r\n      fixture.detectChanges();\r\n\r\n      expect(container.classList).toContain('mat-focused');\r\n\r\n      input.disabled = true;\r\n      fixture.detectChanges();\r\n\r\n      expect(container.classList).not.toContain('mat-focused');\r\n    }));\r\n\r\n  it('should be able to animate the label up and lock it in position', fakeAsync(() => {\r\n    let fixture = createComponent(MatInputTextTestController);\r\n    fixture.detectChanges();\r\n\r\n    let inputContainer = fixture.debugElement.query(By.directive(MatFormField))\r\n        .componentInstance as MatFormField;\r\n    let label = fixture.debugElement.query(By.css('.mat-form-field-label')).nativeElement;\r\n\r\n    expect(inputContainer.floatLabel).toBe('auto');\r\n\r\n    inputContainer._animateAndLockLabel();\r\n    fixture.detectChanges();\r\n\r\n    expect(inputContainer._shouldAlwaysFloat).toBe(false);\r\n    expect(inputContainer.floatLabel).toBe('always');\r\n\r\n    const fakeEvent = Object.assign(createFakeEvent('transitionend'), {propertyName: 'transform'});\r\n\r\n    label.dispatchEvent(fakeEvent);\r\n    fixture.detectChanges();\r\n\r\n    expect(inputContainer._shouldAlwaysFloat).toBe(true);\r\n    expect(inputContainer.floatLabel).toBe('always');\r\n  }));\r\n\r\n  it('should not highlight when focusing a readonly input', fakeAsync(() => {\r\n    let fixture = createComponent(MatInputWithReadonlyInput);\r\n    fixture.detectChanges();\r\n\r\n    let input = fixture.debugElement.query(By.directive(MatInput)).injector.get<MatInput>(MatInput);\r\n    let container = fixture.debugElement.query(By.css('mat-form-field')).nativeElement;\r\n\r\n    // Call the focus handler directly to avoid flakyness where\r\n    // browsers don't focus elements if the window is minimized.\r\n    input._focusChanged(true);\r\n    fixture.detectChanges();\r\n\r\n    expect(input.focused).toBe(false);\r\n    expect(container.classList).not.toContain('mat-focused');\r\n  }));\r\n\r\n  it('should only show the native placeholder, when there is a label, on focus', () => {\r\n    const fixture = createComponent(MatInputWithLabelAndPlaceholder);\r\n    fixture.detectChanges();\r\n\r\n    const container = fixture.debugElement.query(By.css('mat-form-field')).nativeElement;\r\n    const label = fixture.debugElement.query(By.css('.mat-form-field-label')).nativeElement;\r\n    const input = fixture.debugElement.query(By.css('input')).nativeElement;\r\n\r\n    expect(container.classList).toContain('mat-form-field-hide-placeholder');\r\n    expect(container.classList).not.toContain('mat-form-field-should-float');\r\n    expect(label.textContent.trim()).toBe('Label');\r\n    expect(input.getAttribute('placeholder')).toBe('Placeholder');\r\n\r\n    input.value = 'Value';\r\n    fixture.detectChanges();\r\n\r\n    expect(container.classList).not.toContain('mat-form-field-hide-placeholder');\r\n    expect(container.classList).toContain('mat-form-field-should-float');\r\n  });\r\n\r\n  it('should always show the native placeholder when floatLabel is set to \"always\"', () => {\r\n    const fixture = createComponent(MatInputWithLabelAndPlaceholder);\r\n\r\n    fixture.componentInstance.floatLabel = 'always';\r\n    fixture.detectChanges();\r\n\r\n    const container = fixture.debugElement.query(By.css('mat-form-field')).nativeElement;\r\n\r\n    expect(container.classList).not.toContain('mat-form-field-hide-placeholder');\r\n  });\r\n\r\n  it('should not add the `placeholder` attribute if there is no placeholder', () => {\r\n    const fixture = createComponent(MatInputWithoutPlaceholder);\r\n    fixture.detectChanges();\r\n    const input = fixture.debugElement.query(By.css('input')).nativeElement;\r\n\r\n    expect(input.hasAttribute('placeholder')).toBe(false);\r\n  });\r\n\r\n  it('should not show the native placeholder when floatLabel is set to \"never\"', () => {\r\n    const fixture = createComponent(MatInputWithLabelAndPlaceholder);\r\n\r\n    fixture.componentInstance.floatLabel = 'never';\r\n    fixture.detectChanges();\r\n\r\n    const container = fixture.debugElement.query(By.css('mat-form-field')).nativeElement;\r\n    const input = fixture.debugElement.query(By.css('input')).nativeElement;\r\n\r\n    expect(container.classList).toContain('mat-form-field-hide-placeholder');\r\n    expect(container.classList).not.toContain('mat-form-field-should-float');\r\n\r\n    input.value = 'Value';\r\n    fixture.detectChanges();\r\n\r\n    expect(container.classList).toContain('mat-form-field-hide-placeholder');\r\n    expect(container.classList).not.toContain('mat-form-field-should-float');\r\n  });\r\n\r\n});\r\n\r\ndescribe('MatInput with forms', () => {\r\n  describe('error messages', () => {\r\n    let fixture: ComponentFixture<MatInputWithFormErrorMessages>;\r\n    let testComponent: MatInputWithFormErrorMessages;\r\n    let containerEl: HTMLElement;\r\n    let inputEl: HTMLElement;\r\n\r\n    beforeEach(fakeAsync(() => {\r\n      fixture = createComponent(MatInputWithFormErrorMessages);\r\n      fixture.detectChanges();\r\n      testComponent = fixture.componentInstance;\r\n      containerEl = fixture.debugElement.query(By.css('mat-form-field')).nativeElement;\r\n      inputEl = fixture.debugElement.query(By.css('input')).nativeElement;\r\n    }));\r\n\r\n    it('should not show any errors if the user has not interacted', fakeAsync(() => {\r\n      expect(testComponent.formControl.untouched).toBe(true, 'Expected untouched form control');\r\n      expect(containerEl.querySelectorAll('mat-error').length).toBe(0, 'Expected no error message');\r\n      expect(inputEl.getAttribute('aria-invalid'))\r\n        .toBe('false', 'Expected aria-invalid to be set to \"false\".');\r\n    }));\r\n\r\n    it('should display an error message when the input is touched and invalid', fakeAsync(() => {\r\n      expect(testComponent.formControl.invalid).toBe(true, 'Expected form control to be invalid');\r\n      expect(containerEl.querySelectorAll('mat-error').length).toBe(0, 'Expected no error message');\r\n\r\n      testComponent.formControl.markAsTouched();\r\n      fixture.detectChanges();\r\n      flush();\r\n\r\n      expect(containerEl.classList)\r\n        .toContain('mat-form-field-invalid', 'Expected container to have the invalid CSS class.');\r\n      expect(containerEl.querySelectorAll('mat-error').length)\r\n        .toBe(1, 'Expected one error message to have been rendered.');\r\n      expect(inputEl.getAttribute('aria-invalid'))\r\n        .toBe('true', 'Expected aria-invalid to be set to \"true\".');\r\n    }));\r\n\r\n    it('should display an error message when the parent form is submitted', fakeAsync(() => {\r\n      expect(testComponent.form.submitted).toBe(false, 'Expected form not to have been submitted');\r\n      expect(testComponent.formControl.invalid).toBe(true, 'Expected form control to be invalid');\r\n      expect(containerEl.querySelectorAll('mat-error').length).toBe(0, 'Expected no error message');\r\n\r\n      dispatchFakeEvent(fixture.debugElement.query(By.css('form')).nativeElement, 'submit');\r\n      fixture.detectChanges();\r\n      flush();\r\n\r\n      expect(testComponent.form.submitted).toBe(true, 'Expected form to have been submitted');\r\n      expect(containerEl.classList)\r\n        .toContain('mat-form-field-invalid', 'Expected container to have the invalid CSS class.');\r\n      expect(containerEl.querySelectorAll('mat-error').length)\r\n        .toBe(1, 'Expected one error message to have been rendered.');\r\n      expect(inputEl.getAttribute('aria-invalid'))\r\n        .toBe('true', 'Expected aria-invalid to be set to \"true\".');\r\n    }));\r\n\r\n    it('should display an error message when the parent form group is submitted', fakeAsync(() => {\r\n      fixture.destroy();\r\n      TestBed.resetTestingModule();\r\n\r\n      let groupFixture = createComponent(MatInputWithFormGroupErrorMessages);\r\n      let component: MatInputWithFormGroupErrorMessages;\r\n\r\n      groupFixture.detectChanges();\r\n      component = groupFixture.componentInstance;\r\n      containerEl = groupFixture.debugElement.query(By.css('mat-form-field')).nativeElement;\r\n      inputEl = groupFixture.debugElement.query(By.css('input')).nativeElement;\r\n\r\n      expect(component.formGroup.invalid).toBe(true, 'Expected form control to be invalid');\r\n      expect(containerEl.querySelectorAll('mat-error').length).toBe(0, 'Expected no error message');\r\n      expect(inputEl.getAttribute('aria-invalid'))\r\n        .toBe('false', 'Expected aria-invalid to be set to \"false\".');\r\n      expect(component.formGroupDirective.submitted)\r\n        .toBe(false, 'Expected form not to have been submitted');\r\n\r\n      dispatchFakeEvent(groupFixture.debugElement.query(By.css('form')).nativeElement, 'submit');\r\n      groupFixture.detectChanges();\r\n      flush();\r\n\r\n      expect(component.formGroupDirective.submitted)\r\n        .toBe(true, 'Expected form to have been submitted');\r\n      expect(containerEl.classList)\r\n        .toContain('mat-form-field-invalid', 'Expected container to have the invalid CSS class.');\r\n      expect(containerEl.querySelectorAll('mat-error').length)\r\n        .toBe(1, 'Expected one error message to have been rendered.');\r\n      expect(inputEl.getAttribute('aria-invalid'))\r\n        .toBe('true', 'Expected aria-invalid to be set to \"true\".');\r\n    }));\r\n\r\n    it('should hide the errors and show the hints once the input becomes valid', fakeAsync(() => {\r\n      testComponent.formControl.markAsTouched();\r\n      fixture.detectChanges();\r\n      flush();\r\n\r\n      expect(containerEl.classList)\r\n        .toContain('mat-form-field-invalid', 'Expected container to have the invalid CSS class.');\r\n      expect(containerEl.querySelectorAll('mat-error').length)\r\n        .toBe(1, 'Expected one error message to have been rendered.');\r\n      expect(containerEl.querySelectorAll('mat-hint').length)\r\n        .toBe(0, 'Expected no hints to be shown.');\r\n\r\n      testComponent.formControl.setValue('something');\r\n      fixture.detectChanges();\r\n      flush();\r\n\r\n      expect(containerEl.classList).not.toContain('mat-form-field-invalid',\r\n        'Expected container not to have the invalid class when valid.');\r\n      expect(containerEl.querySelectorAll('mat-error').length)\r\n        .toBe(0, 'Expected no error messages when the input is valid.');\r\n      expect(containerEl.querySelectorAll('mat-hint').length)\r\n        .toBe(1, 'Expected one hint to be shown once the input is valid.');\r\n    }));\r\n\r\n    it('should not hide the hint if there are no error messages', fakeAsync(() => {\r\n      testComponent.renderError = false;\r\n      fixture.detectChanges();\r\n\r\n      expect(containerEl.querySelectorAll('mat-hint').length)\r\n        .toBe(1, 'Expected one hint to be shown on load.');\r\n\r\n      testComponent.formControl.markAsTouched();\r\n      fixture.detectChanges();\r\n      flush();\r\n\r\n      expect(containerEl.querySelectorAll('mat-hint').length)\r\n        .toBe(1, 'Expected one hint to still be shown.');\r\n    }));\r\n\r\n    it('should set the proper role on the error messages', fakeAsync(() => {\r\n      testComponent.formControl.markAsTouched();\r\n      fixture.detectChanges();\r\n\r\n      expect(containerEl.querySelector('mat-error')!.getAttribute('role')).toBe('alert');\r\n    }));\r\n\r\n    it('sets the aria-describedby to reference errors when in error state', fakeAsync(() => {\r\n      let hintId = fixture.debugElement.query(By.css('.mat-hint')).nativeElement.getAttribute('id');\r\n      let describedBy = inputEl.getAttribute('aria-describedby');\r\n\r\n      expect(hintId).toBeTruthy('hint should be shown');\r\n      expect(describedBy).toBe(hintId);\r\n\r\n      fixture.componentInstance.formControl.markAsTouched();\r\n      fixture.detectChanges();\r\n\r\n      let errorIds = fixture.debugElement.queryAll(By.css('.mat-error'))\r\n          .map(el => el.nativeElement.getAttribute('id')).join(' ');\r\n      describedBy = inputEl.getAttribute('aria-describedby');\r\n\r\n      expect(errorIds).toBeTruthy('errors should be shown');\r\n      expect(describedBy).toBe(errorIds);\r\n    }));\r\n  });\r\n\r\n  describe('custom error behavior', () => {\r\n\r\n    it('should display an error message when a custom error matcher returns true', fakeAsync(() => {\r\n      let fixture = createComponent(MatInputWithCustomErrorStateMatcher);\r\n      fixture.detectChanges();\r\n\r\n      let component = fixture.componentInstance;\r\n      let containerEl = fixture.debugElement.query(By.css('mat-form-field')).nativeElement;\r\n\r\n      const control = component.formGroup.get('name')!;\r\n\r\n      expect(control.invalid).toBe(true, 'Expected form control to be invalid');\r\n      expect(containerEl.querySelectorAll('mat-error').length)\r\n        .toBe(0, 'Expected no error messages');\r\n\r\n      control.markAsTouched();\r\n      fixture.detectChanges();\r\n\r\n      expect(containerEl.querySelectorAll('mat-error').length)\r\n        .toBe(0, 'Expected no error messages after being touched.');\r\n\r\n      component.errorState = true;\r\n      fixture.detectChanges();\r\n\r\n      expect(containerEl.querySelectorAll('mat-error').length)\r\n        .toBe(1, 'Expected one error messages to have been rendered.');\r\n    }));\r\n\r\n    it('should display an error message when global error matcher returns true', fakeAsync(() => {\r\n      let fixture = createComponent(MatInputWithFormErrorMessages, [{\r\n        provide: ErrorStateMatcher, useValue: {isErrorState: () => true}}\r\n      ]);\r\n\r\n      fixture.detectChanges();\r\n\r\n      let containerEl = fixture.debugElement.query(By.css('mat-form-field')).nativeElement;\r\n      let testComponent = fixture.componentInstance;\r\n\r\n      // Expect the control to still be untouched but the error to show due to the global setting\r\n      expect(testComponent.formControl.untouched).toBe(true, 'Expected untouched form control');\r\n      expect(containerEl.querySelectorAll('mat-error').length).toBe(1, 'Expected an error message');\r\n    }));\r\n\r\n    it('should display an error message when using ShowOnDirtyErrorStateMatcher', fakeAsync(() => {\r\n      let fixture = createComponent(MatInputWithFormErrorMessages, [{\r\n        provide: ErrorStateMatcher, useClass: ShowOnDirtyErrorStateMatcher\r\n      }]);\r\n      fixture.detectChanges();\r\n\r\n      let containerEl = fixture.debugElement.query(By.css('mat-form-field')).nativeElement;\r\n      let testComponent = fixture.componentInstance;\r\n\r\n      expect(testComponent.formControl.invalid).toBe(true, 'Expected form control to be invalid');\r\n      expect(containerEl.querySelectorAll('mat-error').length).toBe(0, 'Expected no error message');\r\n\r\n      testComponent.formControl.markAsTouched();\r\n      fixture.detectChanges();\r\n\r\n      expect(containerEl.querySelectorAll('mat-error').length)\r\n        .toBe(0, 'Expected no error messages when touched');\r\n\r\n      testComponent.formControl.markAsDirty();\r\n      fixture.detectChanges();\r\n\r\n      expect(containerEl.querySelectorAll('mat-error').length)\r\n        .toBe(1, 'Expected one error message when dirty');\r\n    }));\r\n  });\r\n\r\n  it('should update the value when using FormControl.setValue', fakeAsync(() => {\r\n    let fixture = createComponent(MatInputWithFormControl);\r\n    fixture.detectChanges();\r\n\r\n    let input = fixture.debugElement.query(By.directive(MatInput))\r\n      .injector.get<MatInput>(MatInput);\r\n\r\n    expect(input.value).toBeFalsy();\r\n\r\n    fixture.componentInstance.formControl.setValue('something');\r\n\r\n    expect(input.value).toBe('something');\r\n  }));\r\n\r\n  it('should display disabled styles when using FormControl.disable()', fakeAsync(() => {\r\n    const fixture = createComponent(MatInputWithFormControl);\r\n    fixture.detectChanges();\r\n\r\n    const formFieldEl =\r\n        fixture.debugElement.query(By.css('.mat-form-field')).nativeElement;\r\n    const inputEl = fixture.debugElement.query(By.css('input')).nativeElement;\r\n\r\n    expect(formFieldEl.classList)\r\n      .not.toContain('mat-form-field-disabled', `Expected form field not to start out disabled.`);\r\n    expect(inputEl.disabled).toBe(false);\r\n\r\n    fixture.componentInstance.formControl.disable();\r\n    fixture.detectChanges();\r\n\r\n    expect(formFieldEl.classList).toContain('mat-form-field-disabled',\r\n      `Expected form field to look disabled after disable() is called.`);\r\n    expect(inputEl.disabled).toBe(true);\r\n  }));\r\n\r\n  it('should not treat the number 0 as empty', fakeAsync(() => {\r\n    let fixture = createComponent(MatInputZeroTestController);\r\n    fixture.detectChanges();\r\n    flush();\r\n\r\n    fixture.detectChanges();\r\n\r\n    let el = fixture.debugElement.query(By.css('label')).nativeElement;\r\n    expect(el).not.toBeNull();\r\n    expect(el.classList.contains('mat-form-field-empty')).toBe(false);\r\n  }));\r\n\r\n  it('should update when the form field value is patched without emitting', fakeAsync(() => {\r\n    const fixture = createComponent(MatInputWithFormControl);\r\n    fixture.detectChanges();\r\n\r\n    const el = fixture.debugElement.query(By.css('label')).nativeElement;\r\n\r\n    expect(el.classList).toContain('mat-form-field-empty');\r\n\r\n    fixture.componentInstance.formControl.patchValue('value', {emitEvent: false});\r\n    fixture.detectChanges();\r\n\r\n    expect(el.classList).not.toContain('mat-form-field-empty');\r\n  }));\r\n\r\n});\r\n\r\ndescribe('MatInput with appearance', () => {\r\n  const nonLegacyAppearances: MatFormFieldAppearance[] = ['standard', 'fill'];\r\n  let fixture: ComponentFixture<MatInputWithAppearance>;\r\n  let testComponent: MatInputWithAppearance;\r\n  let containerEl: HTMLElement;\r\n\r\n  beforeEach(fakeAsync(() => {\r\n    fixture = createComponent(MatInputWithAppearance);\r\n    fixture.detectChanges();\r\n    testComponent = fixture.componentInstance;\r\n    containerEl = fixture.debugElement.query(By.css('mat-form-field')).nativeElement;\r\n  }));\r\n\r\n  it('legacy appearance should promote placeholder to label', fakeAsync(() => {\r\n    testComponent.appearance = 'legacy';\r\n    fixture.detectChanges();\r\n\r\n    expect(containerEl.classList).toContain('mat-form-field-appearance-legacy');\r\n    expect(testComponent.formField._hasFloatingLabel()).toBe(true);\r\n    expect(testComponent.formField._hideControlPlaceholder()).toBe(true);\r\n  }));\r\n\r\n  it('non-legacy appearances should not promote placeholder to label', fakeAsync(() => {\r\n    for (let appearance of nonLegacyAppearances) {\r\n      testComponent.appearance = appearance;\r\n      fixture.detectChanges();\r\n\r\n      expect(containerEl.classList).toContain(`mat-form-field-appearance-${appearance}`);\r\n      expect(testComponent.formField._hasFloatingLabel()).toBe(false);\r\n      expect(testComponent.formField._hideControlPlaceholder()).toBe(false);\r\n    }\r\n  }));\r\n\r\n  it('legacy appearance should respect float never', fakeAsync(() => {\r\n    testComponent.appearance = 'legacy';\r\n    fixture.detectChanges();\r\n\r\n    expect(containerEl.classList).toContain('mat-form-field-appearance-legacy');\r\n    expect(testComponent.formField.floatLabel).toBe('never');\r\n  }));\r\n\r\n  it('non-legacy appearances should not respect float never', fakeAsync(() => {\r\n    for (let appearance of nonLegacyAppearances) {\r\n      testComponent.appearance = appearance;\r\n      fixture.detectChanges();\r\n\r\n      expect(containerEl.classList).toContain(`mat-form-field-appearance-${appearance}`);\r\n      expect(testComponent.formField.floatLabel).toBe('auto');\r\n    }\r\n  }));\r\n\r\n  it('should recalculate gaps when switching to outline appearance after init', fakeAsync(() => {\r\n    fixture.destroy();\r\n    TestBed.resetTestingModule();\r\n\r\n    const outlineFixture = createComponent(MatInputWithAppearanceAndLabel);\r\n\r\n    outlineFixture.detectChanges();\r\n    outlineFixture.componentInstance.appearance = 'legacy';\r\n    outlineFixture.detectChanges();\r\n    flush();\r\n\r\n    outlineFixture.componentInstance.appearance = 'outline';\r\n    outlineFixture.detectChanges();\r\n    flush();\r\n    outlineFixture.detectChanges();\r\n\r\n    const wrapperElement = outlineFixture.nativeElement;\r\n    const outlineStart = wrapperElement.querySelector('.mat-form-field-outline-start');\r\n    const outlineGap = wrapperElement.querySelector('.mat-form-field-outline-gap');\r\n\r\n    expect(parseInt(outlineStart.style.width)).toBeGreaterThan(0);\r\n    expect(parseInt(outlineGap.style.width)).toBeGreaterThan(0);\r\n  }));\r\n});\r\n\r\ndescribe('MatFormField default options', () => {\r\n  it('should be legacy appearance if no default options provided', fakeAsync(() => {\r\n    const fixture = createComponent(MatInputWithAppearance);\r\n    fixture.detectChanges();\r\n    flush();\r\n    expect(fixture.componentInstance.formField.appearance).toBe('legacy');\r\n  }));\r\n\r\n  it('should be legacy appearance if empty default options provided', fakeAsync(() => {\r\n    const fixture = createComponent(MatInputWithAppearance, [{\r\n      provide: MAT_FORM_FIELD_DEFAULT_OPTIONS, useValue: {}}\r\n    ]);\r\n\r\n    fixture.detectChanges();\r\n    flush();\r\n    expect(fixture.componentInstance.formField.appearance).toBe('legacy');\r\n  }));\r\n\r\n  it('should be custom default appearance if custom appearance specified in default options',\r\n      fakeAsync(() => {\r\n        const fixture = createComponent(MatInputWithAppearance, [{\r\n          provide: MAT_FORM_FIELD_DEFAULT_OPTIONS, useValue: {appearance: 'fill'}}\r\n        ]);\r\n        fixture.detectChanges();\r\n        flush();\r\n        expect(fixture.componentInstance.formField.appearance).toBe('fill');\r\n      }));\r\n});\r\n\r\ndescribe('MatInput with textarea autosize', () => {\r\n  it('should not calculate wrong content height due to long placeholders', () => {\r\n    const fixture = createComponent(AutosizeTextareaWithLongPlaceholder);\r\n    fixture.detectChanges();\r\n\r\n    const textarea = fixture.nativeElement.querySelector('textarea');\r\n    const autosize = fixture.componentInstance.autosize;\r\n\r\n    autosize.resizeToFitContent(true);\r\n\r\n    const heightWithLongPlaceholder = textarea.clientHeight;\r\n\r\n    fixture.componentInstance.placeholder = 'Short';\r\n    fixture.detectChanges();\r\n\r\n    autosize.resizeToFitContent(true);\r\n\r\n    expect(textarea.clientHeight).toBe(heightWithLongPlaceholder,\r\n        'Expected the textarea height to be the same with a long placeholder.');\r\n  });\r\n\r\n  it('should work in a tab', () => {\r\n    const fixture = createComponent(AutosizeTextareaInATab, [], [MatTabsModule]);\r\n    fixture.detectChanges();\r\n    const textarea = fixture.nativeElement.querySelector('textarea');\r\n    expect(textarea.getBoundingClientRect().height).toBeGreaterThan(1);\r\n  });\r\n\r\n  it('should work in a step', () => {\r\n    const fixture = createComponent(AutosizeTextareaInAStep, [], [MatStepperModule]);\r\n    fixture.detectChanges();\r\n    const textarea = fixture.nativeElement.querySelector('textarea');\r\n    expect(textarea.getBoundingClientRect().height).toBeGreaterThan(1);\r\n  });\r\n});\r\n\r\n\r\nfunction createComponent<T>(component: Type<T>,\r\n                            providers: Provider[] = [],\r\n                            imports: any[] = []): ComponentFixture<T> {\r\n  TestBed.configureTestingModule({\r\n    imports: [\r\n      FormsModule,\r\n      MatFormFieldModule,\r\n      MatInputModule,\r\n      BrowserAnimationsModule,\r\n      PlatformModule,\r\n      ReactiveFormsModule,\r\n      ...imports\r\n    ],\r\n    declarations: [component],\r\n    providers,\r\n  }).compileComponents();\r\n\r\n  return TestBed.createComponent<T>(component);\r\n}\r\n\r\n\r\n@Component({\r\n  template: `\r\n    <mat-form-field>\r\n      <input matInput id=\"test-id\" placeholder=\"test\">\r\n    </mat-form-field>`\r\n})\r\nclass MatInputWithId {}\r\n\r\n@Component({\r\n  template: `<mat-form-field><input matInput [disabled]=\"disabled\"></mat-form-field>`\r\n})\r\nclass MatInputWithDisabled {\r\n  disabled: boolean;\r\n}\r\n\r\n@Component({\r\n  template: `<mat-form-field><input matInput [required]=\"required\"></mat-form-field>`\r\n})\r\nclass MatInputWithRequired {\r\n  required: boolean;\r\n}\r\n\r\n@Component({\r\n  template: `<mat-form-field><input matInput [type]=\"type\"></mat-form-field>`\r\n})\r\nclass MatInputWithType {\r\n  type: string;\r\n}\r\n\r\n@Component({\r\n  template: `<mat-form-field [hideRequiredMarker]=\"hideRequiredMarker\">\r\n                <input matInput required [disabled]=\"disabled\" placeholder=\"hello\">\r\n             </mat-form-field>`\r\n})\r\nclass MatInputPlaceholderRequiredTestComponent {\r\n  hideRequiredMarker: boolean = false;\r\n  disabled: boolean = false;\r\n}\r\n\r\n@Component({\r\n  template: `\r\n    <mat-form-field>\r\n      <input matInput>\r\n      <mat-placeholder>{{placeholder}}</mat-placeholder>\r\n    </mat-form-field>`\r\n})\r\nclass MatInputPlaceholderElementTestComponent {\r\n  placeholder: string = 'Default Placeholder';\r\n}\r\n\r\n@Component({\r\n  template: `\r\n    <mat-form-field>\r\n      <input matInput placeholder=\"Hello\" [formControl]=\"formControl\">\r\n    </mat-form-field>`\r\n})\r\nclass MatInputWithFormControl {\r\n  formControl = new FormControl();\r\n}\r\n\r\n@Component({\r\n  template: `<mat-form-field><input matInput [placeholder]=\"placeholder\"></mat-form-field>`\r\n})\r\nclass MatInputPlaceholderAttrTestComponent {\r\n  placeholder: string = '';\r\n}\r\n\r\n@Component({\r\n  template: `<mat-form-field><input matInput><mat-hint>{{label}}</mat-hint></mat-form-field>`\r\n})\r\nclass MatInputHintLabel2TestController {\r\n  label: string = '';\r\n}\r\n\r\n@Component({\r\n  template: `<mat-form-field [hintLabel]=\"label\"><input matInput></mat-form-field>`\r\n})\r\nclass MatInputHintLabelTestController {\r\n  label: string = '';\r\n}\r\n\r\n@Component({\r\n  template: `<mat-form-field><input matInput type=\"file\"></mat-form-field>`\r\n})\r\nclass MatInputInvalidTypeTestController {}\r\n\r\n@Component({\r\n  template: `\r\n    <mat-form-field>\r\n      <input matInput placeholder=\"Hello\">\r\n      <mat-placeholder>World</mat-placeholder>\r\n    </mat-form-field>`\r\n})\r\nclass MatInputInvalidPlaceholderTestController {}\r\n\r\n@Component({\r\n  template: `\r\n    <mat-form-field hintLabel=\"Hello\">\r\n      <input matInput>\r\n      <mat-hint>World</mat-hint>\r\n    </mat-form-field>`\r\n})\r\nclass MatInputInvalidHint2TestController {}\r\n\r\n@Component({\r\n  template: `\r\n    <mat-form-field>\r\n      <input matInput>\r\n      <mat-hint>Hello</mat-hint>\r\n      <mat-hint>World</mat-hint>\r\n    </mat-form-field>`\r\n})\r\nclass MatInputInvalidHintTestController {}\r\n\r\n@Component({\r\n  template: `\r\n    <mat-form-field>\r\n      <input matInput>\r\n      <mat-hint align=\"start\" [id]=\"startId\">Hello</mat-hint>\r\n      <mat-hint align=\"end\" [id]=\"endId\">World</mat-hint>\r\n    </mat-form-field>`\r\n})\r\nclass MatInputMultipleHintTestController {\r\n  startId: string;\r\n  endId: string;\r\n}\r\n\r\n@Component({\r\n  template: `\r\n    <mat-form-field hintLabel=\"Hello\">\r\n      <input matInput>\r\n      <mat-hint align=\"end\">World</mat-hint>\r\n    </mat-form-field>`\r\n})\r\nclass MatInputMultipleHintMixedTestController {}\r\n\r\n@Component({\r\n  template: `\r\n    <mat-form-field>\r\n      <input matInput type=\"date\" placeholder=\"Placeholder\">\r\n    </mat-form-field>`\r\n})\r\nclass MatInputDateTestController {}\r\n\r\n@Component({\r\n  template: `\r\n    <mat-form-field>\r\n      <input matInput type=\"text\" placeholder=\"Placeholder\">\r\n    </mat-form-field>`\r\n})\r\nclass MatInputTextTestController {}\r\n\r\n@Component({\r\n  template: `\r\n    <mat-form-field>\r\n      <input matInput type=\"password\" placeholder=\"Placeholder\">\r\n    </mat-form-field>`\r\n})\r\nclass MatInputPasswordTestController {}\r\n\r\n@Component({\r\n  template: `\r\n    <mat-form-field>\r\n      <input matInput type=\"number\" placeholder=\"Placeholder\">\r\n    </mat-form-field>`\r\n})\r\nclass MatInputNumberTestController {}\r\n\r\n@Component({\r\n  template: `\r\n    <mat-form-field>\r\n      <input matInput type=\"number\" placeholder=\"Placeholder\" [(ngModel)]=\"value\">\r\n    </mat-form-field>`\r\n})\r\nclass MatInputZeroTestController {\r\n  value = 0;\r\n}\r\n\r\n@Component({\r\n  template: `\r\n    <mat-form-field>\r\n      <input matInput placeholder=\"Label\" [value]=\"value\">\r\n    </mat-form-field>`\r\n})\r\nclass MatInputWithValueBinding {\r\n  value: string = 'Initial';\r\n}\r\n\r\n@Component({\r\n  template: `\r\n    <mat-form-field floatLabel=\"never\">\r\n      <input matInput placeholder=\"Label\">\r\n    </mat-form-field>\r\n  `\r\n})\r\nclass MatInputWithStaticLabel {}\r\n\r\n@Component({\r\n  template: `\r\n    <mat-form-field [floatLabel]=\"shouldFloat\">\r\n      <input matInput placeholder=\"Label\">\r\n    </mat-form-field>`\r\n})\r\nclass MatInputWithDynamicLabel {\r\n  shouldFloat: string = 'always';\r\n}\r\n\r\n@Component({\r\n  template: `\r\n    <mat-form-field>\r\n      <textarea matInput [rows]=\"rows\" [cols]=\"cols\" [wrap]=\"wrap\" placeholder=\"Snacks\"></textarea>\r\n    </mat-form-field>`\r\n})\r\nclass MatInputTextareaWithBindings {\r\n  rows: number = 4;\r\n  cols: number = 8;\r\n  wrap: string = 'hard';\r\n}\r\n\r\n@Component({\r\n  template: `<mat-form-field><input></mat-form-field>`\r\n})\r\nclass MatInputMissingMatInputTestController {}\r\n\r\n@Component({\r\n  template: `\r\n    <form #form=\"ngForm\" novalidate>\r\n      <mat-form-field>\r\n        <input matInput [formControl]=\"formControl\">\r\n        <mat-hint>Please type something</mat-hint>\r\n        <mat-error *ngIf=\"renderError\">This field is required</mat-error>\r\n      </mat-form-field>\r\n    </form>\r\n  `\r\n})\r\nclass MatInputWithFormErrorMessages {\r\n  @ViewChild('form') form: NgForm;\r\n  formControl = new FormControl('', Validators.required);\r\n  renderError = true;\r\n}\r\n\r\n@Component({\r\n  template: `\r\n    <form [formGroup]=\"formGroup\">\r\n      <mat-form-field>\r\n        <input matInput\r\n            formControlName=\"name\"\r\n            [errorStateMatcher]=\"customErrorStateMatcher\">\r\n        <mat-hint>Please type something</mat-hint>\r\n        <mat-error>This field is required</mat-error>\r\n      </mat-form-field>\r\n    </form>\r\n  `\r\n})\r\nclass MatInputWithCustomErrorStateMatcher {\r\n  formGroup = new FormGroup({\r\n    name: new FormControl('', Validators.required)\r\n  });\r\n\r\n  errorState = false;\r\n\r\n  customErrorStateMatcher = {\r\n    isErrorState: () => this.errorState\r\n  };\r\n}\r\n\r\n@Component({\r\n  template: `\r\n    <form [formGroup]=\"formGroup\" novalidate>\r\n      <mat-form-field>\r\n        <input matInput formControlName=\"name\">\r\n        <mat-hint>Please type something</mat-hint>\r\n        <mat-error>This field is required</mat-error>\r\n      </mat-form-field>\r\n    </form>\r\n  `\r\n})\r\nclass MatInputWithFormGroupErrorMessages {\r\n  @ViewChild(FormGroupDirective) formGroupDirective: FormGroupDirective;\r\n  formGroup = new FormGroup({\r\n    name: new FormControl('', Validators.required)\r\n  });\r\n}\r\n\r\n@Component({\r\n  template: `\r\n    <mat-form-field>\r\n      <div matPrefix>Prefix</div>\r\n      <input matInput>\r\n      <div matSuffix>Suffix</div>\r\n    </mat-form-field>\r\n  `\r\n})\r\nclass MatInputWithPrefixAndSuffix {}\r\n\r\n@Component({\r\n  template: `\r\n    <mat-form-field>\r\n      <input matInput *ngIf=\"renderInput\">\r\n    </mat-form-field>\r\n  `\r\n})\r\nclass MatInputWithNgIf {\r\n  renderInput = true;\r\n}\r\n\r\n@Component({\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  template: `\r\n    <mat-form-field>\r\n      <input matInput placeholder=\"Label\" [formControl]=\"formControl\">\r\n    </mat-form-field>\r\n  `\r\n})\r\nclass MatInputOnPush {\r\n  formControl = new FormControl('');\r\n}\r\n\r\n@Component({\r\n  template: `\r\n    <mat-form-field>\r\n      <input matInput readonly value=\"Only for reading\">\r\n    </mat-form-field>\r\n  `\r\n})\r\nclass MatInputWithReadonlyInput {}\r\n\r\n@Component({\r\n  template: `\r\n    <mat-form-field [floatLabel]=\"floatLabel\">\r\n      <mat-label>Label</mat-label>\r\n      <input matInput placeholder=\"Placeholder\">\r\n    </mat-form-field>\r\n  `\r\n})\r\nclass MatInputWithLabelAndPlaceholder {\r\n  floatLabel: FloatLabelType;\r\n}\r\n\r\n@Component({\r\n  template: `\r\n    <mat-form-field [appearance]=\"appearance\" floatLabel=\"never\">\r\n      <input matInput placeholder=\"Placeholder\">\r\n    </mat-form-field>\r\n  `\r\n})\r\nclass MatInputWithAppearance {\r\n  @ViewChild(MatFormField) formField: MatFormField;\r\n  appearance: MatFormFieldAppearance;\r\n}\r\n\r\n@Component({\r\n  template: `\r\n    <mat-form-field [appearance]=\"appearance\">\r\n      <mat-label>Label</mat-label>\r\n      <input matInput>\r\n    </mat-form-field>\r\n  `\r\n})\r\nclass MatInputWithAppearanceAndLabel {\r\n  appearance: MatFormFieldAppearance;\r\n}\r\n\r\n@Component({\r\n  template: `\r\n    <mat-form-field>\r\n      <input matInput>\r\n    </mat-form-field>\r\n  `\r\n})\r\nclass MatInputWithoutPlaceholder {\r\n}\r\n\r\n// Styles to reset padding and border to make measurement comparisons easier.\r\nconst textareaStyleReset = `\r\n    textarea {\r\n      padding: 0;\r\n      border: none;\r\n      overflow: auto;\r\n    }`;\r\n\r\n@Component({\r\n  template: `\r\n    <mat-form-field style=\"width: 100px\">\r\n      <textarea matInput matTextareaAutosize [placeholder]=\"placeholder\"></textarea>\r\n    </mat-form-field>`,\r\n  styles: [textareaStyleReset],\r\n})\r\nclass AutosizeTextareaWithLongPlaceholder {\r\n  placeholder = 'Long Long Long Long Long Long Long Long Placeholder';\r\n  @ViewChild(MatTextareaAutosize) autosize: MatTextareaAutosize;\r\n}\r\n\r\n@Component({\r\n  template: `\r\n    <mat-tab-group>\r\n      <mat-tab label=\"Tab 1\">\r\n        <mat-form-field>\r\n          <textarea matInput matTextareaAutosize>\r\n            Blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah\r\n          </textarea>\r\n        </mat-form-field>\r\n      </mat-tab>\r\n    </mat-tab-group>\r\n  `\r\n})\r\nclass AutosizeTextareaInATab {}\r\n\r\n@Component({\r\n  template: `\r\n    <mat-horizontal-stepper>\r\n      <mat-step label=\"Step 1\">\r\n        <mat-form-field>\r\n          <textarea matInput matTextareaAautosize>\r\n            Blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah blah\r\n          </textarea>\r\n        </mat-form-field>\r\n      </mat-step>\r\n    </mat-horizontal-stepper>\r\n  `\r\n})\r\nclass AutosizeTextareaInAStep {}\r\n"]}