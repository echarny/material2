{"version":3,"file":"bottom-sheet.js","sourceRoot":"","sources":["../../../../src/lib/bottom-sheet/bottom-sheet.ts"],"names":[],"mappings":"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","sourcesContent":["/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {Directionality} from '@angular/cdk/bidi';\r\nimport {Overlay, OverlayConfig, OverlayRef} from '@angular/cdk/overlay';\r\nimport {ComponentPortal, ComponentType, PortalInjector, TemplatePortal} from '@angular/cdk/portal';\r\nimport {ComponentRef, Injectable, Injector, Optional, SkipSelf, TemplateRef} from '@angular/core';\r\nimport {Location} from '@angular/common';\r\nimport {of as observableOf} from 'rxjs';\r\nimport {MAT_BOTTOM_SHEET_DATA, MatBottomSheetConfig} from './bottom-sheet-config';\r\nimport {MatBottomSheetContainer} from './bottom-sheet-container';\r\nimport {MatBottomSheetModule} from './bottom-sheet-module';\r\nimport {MatBottomSheetRef} from './bottom-sheet-ref';\r\n\r\n\r\n/**\r\n * Service to trigger Material Design bottom sheets.\r\n */\r\n@Injectable({providedIn: MatBottomSheetModule})\r\nexport class MatBottomSheet {\r\n  private _bottomSheetRefAtThisLevel: MatBottomSheetRef<any> | null = null;\r\n\r\n  /** Reference to the currently opened bottom sheet. */\r\n  get _openedBottomSheetRef(): MatBottomSheetRef<any> | null {\r\n    const parent = this._parentBottomSheet;\r\n    return parent ? parent._openedBottomSheetRef : this._bottomSheetRefAtThisLevel;\r\n  }\r\n\r\n  set _openedBottomSheetRef(value: MatBottomSheetRef<any> | null) {\r\n    if (this._parentBottomSheet) {\r\n      this._parentBottomSheet._openedBottomSheetRef = value;\r\n    } else {\r\n      this._bottomSheetRefAtThisLevel = value;\r\n    }\r\n  }\r\n\r\n  constructor(\r\n      private _overlay: Overlay,\r\n      private _injector: Injector,\r\n      @Optional() @SkipSelf() private _parentBottomSheet: MatBottomSheet,\r\n      @Optional() private _location?: Location) {}\r\n\r\n  open<T, D = any, R = any>(component: ComponentType<T>,\r\n                   config?: MatBottomSheetConfig<D>): MatBottomSheetRef<T, R>;\r\n  open<T, D = any, R = any>(template: TemplateRef<T>,\r\n                   config?: MatBottomSheetConfig<D>): MatBottomSheetRef<T, R>;\r\n\r\n  open<T, D = any, R = any>(componentOrTemplateRef: ComponentType<T> | TemplateRef<T>,\r\n                   config?: MatBottomSheetConfig<D>): MatBottomSheetRef<T, R> {\r\n\r\n    const _config = _applyConfigDefaults(config);\r\n    const overlayRef = this._createOverlay(_config);\r\n    const container = this._attachContainer(overlayRef, _config);\r\n    const ref = new MatBottomSheetRef<T, R>(container, overlayRef, this._location);\r\n\r\n    if (componentOrTemplateRef instanceof TemplateRef) {\r\n      container.attachTemplatePortal(new TemplatePortal<T>(componentOrTemplateRef, null!, {\r\n        $implicit: _config.data,\r\n        bottomSheetRef: ref\r\n      } as any));\r\n    } else {\r\n      const portal = new ComponentPortal(componentOrTemplateRef, undefined,\r\n            this._createInjector(_config, ref));\r\n      const contentRef = container.attachComponentPortal(portal);\r\n      ref.instance = contentRef.instance;\r\n    }\r\n\r\n    // When the bottom sheet is dismissed, clear the reference to it.\r\n    ref.afterDismissed().subscribe(() => {\r\n      // Clear the bottom sheet ref if it hasn't already been replaced by a newer one.\r\n      if (this._openedBottomSheetRef == ref) {\r\n        this._openedBottomSheetRef = null;\r\n      }\r\n    });\r\n\r\n    if (this._openedBottomSheetRef) {\r\n      // If a bottom sheet is already in view, dismiss it and enter the\r\n      // new bottom sheet after exit animation is complete.\r\n      this._openedBottomSheetRef.afterDismissed().subscribe(() => ref.containerInstance.enter());\r\n      this._openedBottomSheetRef.dismiss();\r\n    } else {\r\n      // If no bottom sheet is in view, enter the new bottom sheet.\r\n      ref.containerInstance.enter();\r\n    }\r\n\r\n    this._openedBottomSheetRef = ref;\r\n\r\n    return ref;\r\n  }\r\n\r\n  /**\r\n   * Dismisses the currently-visible bottom sheet.\r\n   */\r\n  dismiss(): void {\r\n    if (this._openedBottomSheetRef) {\r\n      this._openedBottomSheetRef.dismiss();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Attaches the bottom sheet container component to the overlay.\r\n   */\r\n  private _attachContainer(overlayRef: OverlayRef,\r\n                           config: MatBottomSheetConfig): MatBottomSheetContainer {\r\n\r\n    const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\r\n    const injector = new PortalInjector(userInjector || this._injector, new WeakMap([\r\n      [MatBottomSheetConfig, config]\r\n    ]));\r\n\r\n    const containerPortal =\r\n        new ComponentPortal(MatBottomSheetContainer, config.viewContainerRef, injector);\r\n    const containerRef: ComponentRef<MatBottomSheetContainer> = overlayRef.attach(containerPortal);\r\n    return containerRef.instance;\r\n  }\r\n\r\n  /**\r\n   * Creates a new overlay and places it in the correct location.\r\n   * @param config The user-specified bottom sheet config.\r\n   */\r\n  private _createOverlay(config: MatBottomSheetConfig): OverlayRef {\r\n    const overlayConfig = new OverlayConfig({\r\n      direction: config.direction,\r\n      hasBackdrop: config.hasBackdrop,\r\n      maxWidth: '100%',\r\n      scrollStrategy: this._overlay.scrollStrategies.block(),\r\n      positionStrategy: this._overlay.position()\r\n        .global()\r\n        .centerHorizontally()\r\n        .bottom('0')\r\n    });\r\n\r\n    if (config.backdropClass) {\r\n      overlayConfig.backdropClass = config.backdropClass;\r\n    }\r\n\r\n    return this._overlay.create(overlayConfig);\r\n  }\r\n\r\n  /**\r\n   * Creates an injector to be used inside of a bottom sheet component.\r\n   * @param config Config that was used to create the bottom sheet.\r\n   * @param bottomSheetRef Reference to the bottom sheet.\r\n   */\r\n  private _createInjector<T>(config: MatBottomSheetConfig,\r\n                             bottomSheetRef: MatBottomSheetRef<T>): PortalInjector {\r\n\r\n    const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\r\n    const injectionTokens = new WeakMap<any, any>([\r\n      [MatBottomSheetRef, bottomSheetRef],\r\n      [MAT_BOTTOM_SHEET_DATA, config.data]\r\n    ]);\r\n\r\n    if (config.direction &&\r\n        (!userInjector || !userInjector.get<Directionality | null>(Directionality, null))) {\r\n      injectionTokens.set(Directionality, {\r\n        value: config.direction,\r\n        change: observableOf()\r\n      });\r\n    }\r\n\r\n    return new PortalInjector(userInjector || this._injector, injectionTokens);\r\n  }\r\n}\r\n\r\n/**\r\n * Applies default options to the bottom sheet config.\r\n * @param config The configuration to which the defaults will be applied.\r\n * @returns The new configuration object with defaults applied.\r\n */\r\nfunction _applyConfigDefaults(config?: MatBottomSheetConfig): MatBottomSheetConfig {\r\n  return {...new MatBottomSheetConfig(), ...config};\r\n}\r\n"]}