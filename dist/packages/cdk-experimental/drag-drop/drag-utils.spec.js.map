{"version":3,"file":"drag-utils.spec.js","sourceRoot":"","sources":["../../../../src/cdk-experimental/drag-drop/drag-utils.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import {moveItemInArray, transferArrayItem} from './drag-utils';\r\n\r\ndescribe('dragging utilities', () => {\r\n  describe('moveItemInArray', () => {\r\n    let array: number[];\r\n\r\n    beforeEach(() => array = [0, 1, 2, 3]);\r\n\r\n    it('should be able to move an item inside an array', () => {\r\n      moveItemInArray(array, 1, 3);\r\n      expect(array).toEqual([0, 2, 3, 1]);\r\n    });\r\n\r\n    it('should not do anything if the index is the same', () => {\r\n      moveItemInArray(array, 2, 2);\r\n      expect(array).toEqual([0, 1, 2, 3]);\r\n    });\r\n\r\n    it('should handle an index greater than the length', () => {\r\n      moveItemInArray(array, 0, 7);\r\n      expect(array).toEqual([1, 2, 3, 0]);\r\n    });\r\n\r\n    it('should handle an index less than zero', () => {\r\n      moveItemInArray(array, 3, -1);\r\n      expect(array).toEqual([3, 0, 1, 2]);\r\n    });\r\n  });\r\n\r\n  describe('transferArrayItem', () => {\r\n    it('should be able to move an item from one array to another', () => {\r\n      const a = [0, 1, 2];\r\n      const b = [3, 4, 5];\r\n\r\n      transferArrayItem(a, b, 1, 2);\r\n      expect(a).toEqual([0, 2]);\r\n      expect(b).toEqual([3, 4, 1, 5]);\r\n    });\r\n\r\n    it('should handle an index greater than the target array length', () => {\r\n      const a = [0, 1, 2];\r\n      const b = [3, 4, 5];\r\n\r\n      transferArrayItem(a, b, 0, 7);\r\n\r\n      expect(a).toEqual([1, 2]);\r\n      expect(b).toEqual([3, 4, 5, 0]);\r\n    });\r\n\r\n    it('should handle an index less than zero', () => {\r\n      const a = [0, 1, 2];\r\n      const b = [3, 4, 5];\r\n\r\n      transferArrayItem(a, b, 2, -1);\r\n      expect(a).toEqual([0, 1]);\r\n      expect(b).toEqual([2, 3, 4, 5]);\r\n    });\r\n\r\n    it('should not do anything if the source array is empty', () => {\r\n      const a = [];\r\n      const b = [3, 4, 5];\r\n\r\n      transferArrayItem(a, b, 0, 0);\r\n      expect(a).toEqual([]);\r\n      expect(b).toEqual([3, 4, 5]);\r\n    });\r\n\r\n  });\r\n});\r\n"]}