{"version":3,"file":"drag-drop-registry.spec.js","sourceRoot":"","sources":["../../../../src/cdk-experimental/drag-drop/drag-drop-registry.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import {QueryList, ViewChildren, Component} from '@angular/core';\r\nimport {fakeAsync, TestBed, ComponentFixture, inject} from '@angular/core/testing';\r\nimport {\r\n  createMouseEvent,\r\n  dispatchMouseEvent,\r\n  createTouchEvent,\r\n  dispatchTouchEvent,\r\n} from '@angular/cdk/testing';\r\nimport {DragDropRegistry} from './drag-drop-registry';\r\nimport {DragDropModule} from './drag-drop-module';\r\nimport {CdkDrag} from './drag';\r\nimport {CdkDrop} from './drop';\r\n\r\ndescribe('DragDropRegistry', () => {\r\n  let fixture: ComponentFixture<SimpleDropZone>;\r\n  let testComponent: SimpleDropZone;\r\n  let registry: DragDropRegistry<CdkDrag, CdkDrop>;\r\n\r\n  beforeEach(fakeAsync(() => {\r\n    TestBed.configureTestingModule({\r\n      imports: [DragDropModule],\r\n      declarations: [SimpleDropZone],\r\n    }).compileComponents();\r\n\r\n    fixture = TestBed.createComponent(SimpleDropZone);\r\n    testComponent = fixture.componentInstance;\r\n    fixture.detectChanges();\r\n\r\n    inject([DragDropRegistry], (c: DragDropRegistry<CdkDrag, CdkDrop>) => {\r\n      registry = c;\r\n    })();\r\n  }));\r\n\r\n  afterEach(() => {\r\n    registry.ngOnDestroy();\r\n  });\r\n\r\n  it('should be able to start dragging an item', () => {\r\n    const firstItem = testComponent.dragItems.first;\r\n\r\n    expect(registry.isDragging(firstItem)).toBe(false);\r\n    registry.startDragging(firstItem, createMouseEvent('mousedown'));\r\n    expect(registry.isDragging(firstItem)).toBe(true);\r\n  });\r\n\r\n  it('should be able to stop dragging an item', () => {\r\n    const firstItem = testComponent.dragItems.first;\r\n\r\n    registry.startDragging(firstItem, createMouseEvent('mousedown'));\r\n    expect(registry.isDragging(firstItem)).toBe(true);\r\n\r\n    registry.stopDragging(firstItem);\r\n    expect(registry.isDragging(firstItem)).toBe(false);\r\n  });\r\n\r\n  it('should stop dragging an item if it is removed', () => {\r\n    const firstItem = testComponent.dragItems.first;\r\n\r\n    registry.startDragging(firstItem, createMouseEvent('mousedown'));\r\n    expect(registry.isDragging(firstItem)).toBe(true);\r\n\r\n    registry.removeDragItem(firstItem);\r\n    expect(registry.isDragging(firstItem)).toBe(false);\r\n  });\r\n\r\n  it('should dispatch `mousemove` events after starting to drag via the mouse', () => {\r\n    const spy = jasmine.createSpy('pointerMove spy');\r\n    const subscription = registry.pointerMove.subscribe(spy);\r\n\r\n    registry.startDragging(testComponent.dragItems.first, createMouseEvent('mousedown'));\r\n    dispatchMouseEvent(document, 'mousemove');\r\n\r\n    expect(spy).toHaveBeenCalled();\r\n\r\n    subscription.unsubscribe();\r\n  });\r\n\r\n  it('should dispatch `touchmove` events after starting to drag via touch', () => {\r\n    const spy = jasmine.createSpy('pointerMove spy');\r\n    const subscription = registry.pointerMove.subscribe(spy);\r\n\r\n    registry.startDragging(testComponent.dragItems.first,\r\n        createTouchEvent('touchstart') as TouchEvent);\r\n    dispatchTouchEvent(document, 'touchmove');\r\n\r\n    expect(spy).toHaveBeenCalled();\r\n\r\n    subscription.unsubscribe();\r\n  });\r\n\r\n  it('should dispatch `mouseup` events after ending the drag via the mouse', () => {\r\n    const spy = jasmine.createSpy('pointerUp spy');\r\n    const subscription = registry.pointerUp.subscribe(spy);\r\n\r\n    registry.startDragging(testComponent.dragItems.first, createMouseEvent('mousedown'));\r\n    dispatchMouseEvent(document, 'mouseup');\r\n\r\n    expect(spy).toHaveBeenCalled();\r\n\r\n    subscription.unsubscribe();\r\n  });\r\n\r\n  it('should dispatch `touchend` events after ending the drag via touch', () => {\r\n    const spy = jasmine.createSpy('pointerUp spy');\r\n    const subscription = registry.pointerUp.subscribe(spy);\r\n\r\n    registry.startDragging(testComponent.dragItems.first,\r\n        createTouchEvent('touchstart') as TouchEvent);\r\n    dispatchTouchEvent(document, 'touchend');\r\n\r\n    expect(spy).toHaveBeenCalled();\r\n\r\n    subscription.unsubscribe();\r\n  });\r\n\r\n  it('should complete the pointer event streams on destroy', () => {\r\n    const pointerUpSpy = jasmine.createSpy('pointerUp complete spy');\r\n    const pointerMoveSpy = jasmine.createSpy('pointerMove complete spy');\r\n    const pointerUpSubscription = registry.pointerUp.subscribe(undefined, undefined, pointerUpSpy);\r\n    const pointerMoveSubscription =\r\n        registry.pointerMove.subscribe(undefined, undefined, pointerMoveSpy);\r\n\r\n    registry.ngOnDestroy();\r\n\r\n    expect(pointerUpSpy).toHaveBeenCalled();\r\n    expect(pointerMoveSpy).toHaveBeenCalled();\r\n\r\n    pointerUpSubscription.unsubscribe();\r\n    pointerMoveSubscription.unsubscribe();\r\n  });\r\n\r\n  it('should not throw when trying to register the same container again', () => {\r\n    expect(() => registry.registerDropContainer(testComponent.dropInstances.first)).not.toThrow();\r\n  });\r\n\r\n  it('should throw when trying to register a different container with the same id', () => {\r\n    expect(() => {\r\n      testComponent.showDuplicateContainer = true;\r\n      fixture.detectChanges();\r\n    }).toThrowError(/Drop instance with id \\\"items\\\" has already been registered/);\r\n  });\r\n\r\n  it('should be able to get a drop container by its id', () => {\r\n    expect(registry.getDropContainer('items')).toBe(testComponent.dropInstances.first);\r\n    expect(registry.getDropContainer('does-not-exist')).toBeFalsy();\r\n  });\r\n\r\n  it('should not prevent the default `touchmove` actions when nothing is being dragged', () => {\r\n    expect(dispatchTouchEvent(document, 'touchmove').defaultPrevented).toBe(false);\r\n  });\r\n\r\n  it('should prevent the default `touchmove` action when an item is being dragged', () => {\r\n    registry.startDragging(testComponent.dragItems.first,\r\n      createTouchEvent('touchstart') as TouchEvent);\r\n    expect(dispatchTouchEvent(document, 'touchmove').defaultPrevented).toBe(true);\r\n  });\r\n\r\n});\r\n\r\n@Component({\r\n  template: `\r\n    <cdk-drop id=\"items\" [data]=\"items\">\r\n      <div *ngFor=\"let item of items\" cdkDrag>{{item}}</div>\r\n    </cdk-drop>\r\n\r\n    <cdk-drop id=\"items\" *ngIf=\"showDuplicateContainer\"></cdk-drop>\r\n  `\r\n})\r\nexport class SimpleDropZone {\r\n  @ViewChildren(CdkDrag) dragItems: QueryList<CdkDrag>;\r\n  @ViewChildren(CdkDrop) dropInstances: QueryList<CdkDrop>;\r\n  items = ['Zero', 'One', 'Two', 'Three'];\r\n  showDuplicateContainer = false;\r\n}\r\n"]}