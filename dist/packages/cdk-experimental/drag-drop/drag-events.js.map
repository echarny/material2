{"version":3,"file":"drag-events.js","sourceRoot":"","sources":["../../../../src/cdk-experimental/drag-drop/drag-events.ts"],"names":[],"mappings":"","sourcesContent":["/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {CdkDrag} from './drag';\r\nimport {CdkDropContainer} from './drop-container';\r\n\r\n/** Event emitted when the user starts dragging a draggable. */\r\nexport interface CdkDragStart {\r\n  /** Draggable that emitted the event. */\r\n  source: CdkDrag;\r\n}\r\n\r\n\r\n/** Event emitted when the user stops dragging a draggable. */\r\nexport interface CdkDragEnd {\r\n  /** Draggable that emitted the event. */\r\n  source: CdkDrag;\r\n}\r\n\r\n/** Event emitted when the user moves an item into a new drop container. */\r\nexport interface CdkDragEnter<T> {\r\n  /** Container into which the user has moved the item. */\r\n  container: CdkDropContainer<T>;\r\n  /** Item that was removed from the container. */\r\n  item: CdkDrag;\r\n}\r\n\r\n/**\r\n * Event emitted when the user removes an item from a\r\n * drop container by moving it into another one.\r\n */\r\nexport interface CdkDragExit<T> {\r\n  /** Container from which the user has a removed an item. */\r\n  container: CdkDropContainer<T>;\r\n  /** Item that was removed from the container. */\r\n  item: CdkDrag;\r\n}\r\n\r\n\r\n/** Event emitted when the user drops a draggable item inside a drop container. */\r\nexport interface CdkDragDrop<T, O = T> {\r\n  /** Index of the item when it was picked up. */\r\n  previousIndex: number;\r\n  /** Current index of the item. */\r\n  currentIndex: number;\r\n  /** Item that is being dropped. */\r\n  item: CdkDrag;\r\n  /** Container in which the item was dropped. */\r\n  container: CdkDropContainer<T>;\r\n  /** Container from which the item was picked up. Can be the same as the `container`. */\r\n  previousContainer: CdkDropContainer<O>;\r\n}\r\n\r\n/** Event emitted as the user is dragging a draggable item. */\r\nexport interface CdkDragMove<T = any> {\r\n  /** Item that is being dragged. */\r\n  source: CdkDrag<T>;\r\n  /** Position of the user's pointer on the page. */\r\n  pointerPosition: {x: number, y: number};\r\n  /** Native event that is causing the dragging. */\r\n  event: MouseEvent | TouchEvent;\r\n}\r\n"]}