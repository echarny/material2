{"version":3,"file":"dialog-injectors.js","sourceRoot":"","sources":["../../../../../src/cdk-experimental/dialog/dialog-injectors.ts"],"names":[],"mappings":";;;;;;;;;;;AAQA,OAAO,EAAC,cAAc,EAAC,MAAM,eAAe,CAAC;AAC7C,OAAO,EAAgB,OAAO,EAAsC,MAAM,sBAAsB,CAAC;;;;AAMjG,MAAM,CAAC,qBAAM,sBAAsB,GAC/B,IAAI,cAAc,CAAuB,sBAAsB,CAAC,CAAC;;;;AAGrE,MAAM,CAAC,qBAAM,WAAW,GAAG,IAAI,cAAc,CAAM,YAAY,CAAC,CAAC;;;;AAGjE,MAAM,CAAC,qBAAM,UAAU,GAAG,IAAI,cAAc,CAAiB,WAAW,CAAC,CAAC;;;;AAG1E,MAAM,CAAC,qBAAM,aAAa,GAAG,IAAI,cAAc,CAAe,cAAc,CAAC,CAAC;;;;AAG9E,MAAM,CAAC,qBAAM,gBAAgB,GACzB,IAAI,cAAc,CAAoC,iBAAiB,CAAC,CAAC;;;;;;AAG7E,MAAM,sDAAsD,OAAgB;IAE1E,MAAM,CAAC,cAAM,OAAA,OAAO,CAAC,gBAAgB,CAAC,KAAK,EAAE,EAAhC,CAAgC,CAAC;CAC/C;;;;AAGD,MAAM,CAAC,qBAAM,mCAAmC,GAAG;IACjD,OAAO,EAAE,sBAAsB;IAC/B,IAAI,EAAE,CAAC,OAAO,CAAC;IACf,UAAU,EAAE,2CAA2C;CACxD,CAAC","sourcesContent":["/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {InjectionToken} from '@angular/core';\r\nimport {ComponentType, Overlay, ScrollStrategy, BlockScrollStrategy} from '@angular/cdk/overlay';\r\nimport {DialogRef} from './dialog-ref';\r\nimport {CdkDialogContainer} from './dialog-container';\r\nimport {DialogConfig} from './dialog-config';\r\n\r\n/** Injection token for the Dialog's ScrollStrategy. */\r\nexport const DIALOG_SCROLL_STRATEGY =\r\n    new InjectionToken<() => ScrollStrategy>('DialogScrollStrategy');\r\n\r\n/** Injection token for the Dialog's Data. */\r\nexport const DIALOG_DATA = new InjectionToken<any>('DialogData');\r\n\r\n/** Injection token for the DialogRef constructor. */\r\nexport const DIALOG_REF = new InjectionToken<DialogRef<any>>('DialogRef');\r\n\r\n/** Injection token for the DialogConfig. */\r\nexport const DIALOG_CONFIG = new InjectionToken<DialogConfig>('DialogConfig');\r\n\r\n/** Injection token for the Dialog's DialogContainer component. */\r\nexport const DIALOG_CONTAINER =\r\n    new InjectionToken<ComponentType<CdkDialogContainer>>('DialogContainer');\r\n\r\n/** @docs-private */\r\nexport function MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay: Overlay):\r\n    () => BlockScrollStrategy {\r\n  return () => overlay.scrollStrategies.block();\r\n}\r\n\r\n/** @docs-private */\r\nexport const MAT_DIALOG_SCROLL_STRATEGY_PROVIDER = {\r\n  provide: DIALOG_SCROLL_STRATEGY,\r\n  deps: [Overlay],\r\n  useFactory: MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY,\r\n};\r\n"]}