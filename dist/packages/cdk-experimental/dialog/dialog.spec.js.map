{"version":3,"file":"dialog.spec.js","sourceRoot":"","sources":["../../../../src/cdk-experimental/dialog/dialog.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import {\r\n  ComponentFixture,\r\n  fakeAsync,\r\n  flushMicrotasks,\r\n  inject,\r\n  TestBed,\r\n  tick,\r\n  flush,\r\n} from '@angular/core/testing';\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  Directive,\r\n  Inject,\r\n  Injector,\r\n  NgModule,\r\n  TemplateRef,\r\n  ViewChild,\r\n  ViewContainerRef\r\n} from '@angular/core';\r\nimport {By} from '@angular/platform-browser';\r\nimport {NoopAnimationsModule} from '@angular/platform-browser/animations';\r\nimport {Location} from '@angular/common';\r\nimport {SpyLocation} from '@angular/common/testing';\r\nimport {Directionality} from '@angular/cdk/bidi';\r\nimport {CdkDialogContainer} from './dialog-container';\r\nimport {OverlayContainer} from '@angular/cdk/overlay';\r\nimport {A, ESCAPE} from '@angular/cdk/keycodes';\r\nimport {dispatchKeyboardEvent} from '@angular/cdk/testing';\r\nimport {DIALOG_DATA, Dialog, DialogModule, DialogRef} from './index';\r\n\r\ndescribe('Dialog', () => {\r\n  let dialog: Dialog;\r\n  let overlayContainerElement: HTMLElement;\r\n\r\n  let testViewContainerRef: ViewContainerRef;\r\n  let viewContainerFixture: ComponentFixture<ComponentWithChildViewContainer>;\r\n  let mockLocation: SpyLocation;\r\n\r\n  beforeEach(fakeAsync(() => {\r\n    TestBed.configureTestingModule({\r\n      imports: [DialogModule, DialogTestModule],\r\n      providers: [\r\n        {provide: OverlayContainer, useFactory: () => {\r\n          overlayContainerElement = document.createElement('div');\r\n          return {getContainerElement: () => overlayContainerElement};\r\n        }},\r\n        {provide: Location, useClass: SpyLocation}\r\n      ],\r\n    });\r\n\r\n    TestBed.compileComponents();\r\n  }));\r\n\r\n  beforeEach(inject([Dialog, Location], (d: Dialog, l: Location) => {\r\n    dialog = d;\r\n    mockLocation = l as SpyLocation;\r\n  }));\r\n\r\n  beforeEach(() => {\r\n    viewContainerFixture = TestBed.createComponent(ComponentWithChildViewContainer);\r\n\r\n    viewContainerFixture.detectChanges();\r\n    testViewContainerRef = viewContainerFixture.componentInstance.childViewContainer;\r\n  });\r\n\r\n  it('should open a dialog with a component', () => {\r\n    let dialogRef = dialog.openFromComponent(PizzaMsg, {\r\n      viewContainerRef: testViewContainerRef\r\n    });\r\n\r\n    viewContainerFixture.detectChanges();\r\n\r\n    expect(overlayContainerElement.textContent).toContain('Pizza');\r\n    expect(dialogRef.componentInstance instanceof PizzaMsg).toBe(true);\r\n    expect(dialogRef.componentInstance.dialogRef).toBe(dialogRef);\r\n\r\n    viewContainerFixture.detectChanges();\r\n    viewContainerFixture.detectChanges();\r\n    let dialogContainerElement = overlayContainerElement.querySelector('cdk-dialog-container')!;\r\n    expect(dialogContainerElement.getAttribute('role')).toBe('dialog');\r\n  });\r\n\r\n  it('should open a dialog with a template', () => {\r\n    const templateRefFixture = TestBed.createComponent(ComponentWithTemplateRef);\r\n    templateRefFixture.componentInstance.localValue = 'Bees';\r\n    templateRefFixture.detectChanges();\r\n\r\n    const data = {value: 'Knees'};\r\n\r\n    let dialogRef = dialog.openFromTemplate(\r\n      templateRefFixture.componentInstance.templateRef, { data });\r\n\r\n    viewContainerFixture.detectChanges();\r\n\r\n    expect(overlayContainerElement.textContent).toContain('Cheese Bees Knees');\r\n    expect(templateRefFixture.componentInstance.dialogRef).toBe(dialogRef);\r\n\r\n    viewContainerFixture.detectChanges();\r\n\r\n    let dialogContainerElement = overlayContainerElement.querySelector('cdk-dialog-container')!;\r\n    expect(dialogContainerElement.getAttribute('role')).toBe('dialog');\r\n\r\n    dialogRef.close();\r\n  });\r\n\r\n  it('should emit when dialog opening animation is complete', fakeAsync(() => {\r\n    const dialogRef = dialog.openFromComponent(PizzaMsg, {viewContainerRef: testViewContainerRef});\r\n    const spy = jasmine.createSpy('afterOpen spy');\r\n\r\n    dialogRef.afterOpened().subscribe(spy);\r\n\r\n    viewContainerFixture.detectChanges();\r\n\r\n    // callback should not be called before animation is complete\r\n    expect(spy).not.toHaveBeenCalled();\r\n\r\n    flushMicrotasks();\r\n    expect(spy).toHaveBeenCalled();\r\n  }));\r\n\r\n  it('should use injector from viewContainerRef for DialogInjector', () => {\r\n    let dialogRef = dialog.openFromComponent(PizzaMsg, {\r\n      viewContainerRef: testViewContainerRef\r\n    });\r\n\r\n    viewContainerFixture.detectChanges();\r\n\r\n    let dialogInjector = dialogRef.componentInstance.dialogInjector as Injector;\r\n\r\n    expect(dialogRef.componentInstance.dialogRef).toBe(dialogRef);\r\n    expect(dialogInjector.get<DirectiveWithViewContainer>(DirectiveWithViewContainer)).toBeTruthy(\r\n      'Expected the dialog component to be created with the injector from the viewContainerRef.'\r\n    );\r\n  });\r\n\r\n  it('should open a dialog with a component and no ViewContainerRef', () => {\r\n    let dialogRef = dialog.openFromComponent(PizzaMsg);\r\n\r\n    viewContainerFixture.detectChanges();\r\n\r\n    expect(overlayContainerElement.textContent).toContain('Pizza');\r\n    expect(dialogRef.componentInstance instanceof PizzaMsg).toBe(true);\r\n    expect(dialogRef.componentInstance.dialogRef).toBe(dialogRef);\r\n\r\n    viewContainerFixture.detectChanges();\r\n    let dialogContainerElement = overlayContainerElement.querySelector('cdk-dialog-container')!;\r\n    expect(dialogContainerElement.getAttribute('role')).toBe('dialog');\r\n  });\r\n\r\n  it('should apply the configured role to the dialog element', () => {\r\n    dialog.openFromComponent(PizzaMsg, { role: 'alertdialog' });\r\n\r\n    viewContainerFixture.detectChanges();\r\n\r\n    let dialogContainerElement = overlayContainerElement.querySelector('cdk-dialog-container')!;\r\n    expect(dialogContainerElement.getAttribute('role')).toBe('alertdialog');\r\n  });\r\n\r\n  it('should apply the specified `aria-describedby`', () => {\r\n    dialog.openFromComponent(PizzaMsg, { ariaDescribedBy: 'description-element' });\r\n\r\n    viewContainerFixture.detectChanges();\r\n\r\n    let dialogContainerElement = overlayContainerElement.querySelector('cdk-dialog-container')!;\r\n    expect(dialogContainerElement.getAttribute('aria-describedby')).toBe('description-element');\r\n  });\r\n\r\n  it('should close a dialog and get back a result', fakeAsync(() => {\r\n    let dialogRef = dialog.openFromComponent(PizzaMsg, { viewContainerRef: testViewContainerRef });\r\n    let afterCloseCallback = jasmine.createSpy('afterClose callback');\r\n\r\n    viewContainerFixture.detectChanges();\r\n    dialogRef.afterClosed().subscribe(afterCloseCallback);\r\n    dialogRef.close('Charmander');\r\n    viewContainerFixture.detectChanges();\r\n    flush();\r\n\r\n    expect(afterCloseCallback).toHaveBeenCalledWith('Charmander');\r\n    expect(overlayContainerElement.querySelector('cdk-dialog-container')).toBeNull();\r\n  }));\r\n\r\n  it('should only emit the afterCloseEvent once when closed', fakeAsync(() => {\r\n    let dialogRef = dialog.openFromComponent(PizzaMsg, { viewContainerRef: testViewContainerRef });\r\n    let afterCloseCallback = jasmine.createSpy('afterClose callback');\r\n\r\n    viewContainerFixture.detectChanges();\r\n    dialogRef.afterClosed().subscribe(afterCloseCallback);\r\n    dialogRef.close();\r\n    viewContainerFixture.detectChanges();\r\n    flush();\r\n\r\n    expect(afterCloseCallback).toHaveBeenCalledTimes(1);\r\n  }));\r\n\r\n  it('should close a dialog and get back a result before it is closed', fakeAsync(() => {\r\n    const dialogRef = dialog.openFromComponent(PizzaMsg, {viewContainerRef: testViewContainerRef});\r\n    viewContainerFixture.detectChanges();\r\n\r\n    // beforeClose should emit before dialog container is destroyed\r\n    const beforeCloseHandler = jasmine.createSpy('beforeClose callback').and.callFake(() => {\r\n      expect(overlayContainerElement.querySelector('cdk-dialog-container'))\r\n          .not.toBeNull('dialog container exists when beforeClose is called');\r\n    });\r\n\r\n    dialogRef.beforeClosed().subscribe(beforeCloseHandler);\r\n    dialogRef.close('Bulbasaur');\r\n    viewContainerFixture.detectChanges();\r\n    flush();\r\n\r\n    expect(beforeCloseHandler).toHaveBeenCalledWith('Bulbasaur');\r\n    expect(overlayContainerElement.querySelector('cdk-dialog-container')).toBeNull();\r\n  }));\r\n\r\n  it('should close a dialog via the escape key', fakeAsync(() => {\r\n    dialog.openFromComponent(PizzaMsg, {viewContainerRef: testViewContainerRef});\r\n\r\n    viewContainerFixture.detectChanges();\r\n    dispatchKeyboardEvent(document.body, 'keydown', ESCAPE);\r\n    viewContainerFixture.detectChanges();\r\n    flush();\r\n\r\n    expect(overlayContainerElement.querySelector('cdk-dialog-container')).toBeNull();\r\n  }));\r\n\r\n  it('should close from a ViewContainerRef with OnPush change detection', fakeAsync(() => {\r\n    const onPushFixture = TestBed.createComponent(ComponentWithOnPushViewContainer);\r\n\r\n    onPushFixture.detectChanges();\r\n\r\n    const dialogRef = dialog.openFromComponent(PizzaMsg, {\r\n      viewContainerRef: onPushFixture.componentInstance.viewContainerRef\r\n    });\r\n\r\n    flushMicrotasks();\r\n    onPushFixture.detectChanges();\r\n    flushMicrotasks();\r\n\r\n    expect(overlayContainerElement.querySelectorAll('cdk-dialog-container').length)\r\n        .toBe(1, 'Expected one open dialog.');\r\n\r\n    dialogRef.close();\r\n    flushMicrotasks();\r\n    onPushFixture.detectChanges();\r\n    tick(500);\r\n\r\n    expect(overlayContainerElement.querySelectorAll('cdk-dialog-container').length)\r\n        .toBe(0, 'Expected no open dialogs.');\r\n  }));\r\n\r\n  it('should close when clicking on the overlay backdrop', fakeAsync(() => {\r\n    dialog.openFromComponent(PizzaMsg, {viewContainerRef: testViewContainerRef});\r\n    viewContainerFixture.detectChanges();\r\n\r\n    const backdrop = overlayContainerElement.querySelector('.cdk-overlay-backdrop') as HTMLElement;\r\n\r\n    backdrop.click();\r\n    viewContainerFixture.detectChanges();\r\n    flush();\r\n\r\n    expect(overlayContainerElement.querySelector('cdk-dialog-container')).toBeFalsy();\r\n  }));\r\n\r\n  it('should emit the backdropClick stream when clicking on the overlay backdrop', fakeAsync(() => {\r\n    const dialogRef = dialog.openFromComponent(PizzaMsg, {viewContainerRef: testViewContainerRef});\r\n    const spy = jasmine.createSpy('backdropClick spy');\r\n    dialogRef.backdropClick().subscribe(spy);\r\n    viewContainerFixture.detectChanges();\r\n\r\n    const backdrop = overlayContainerElement.querySelector('.cdk-overlay-backdrop') as HTMLElement;\r\n\r\n    backdrop.click();\r\n    expect(spy).toHaveBeenCalledTimes(1);\r\n\r\n    viewContainerFixture.detectChanges();\r\n    flush();\r\n\r\n    // Additional clicks after the dialog has closed should not be emitted\r\n    backdrop.click();\r\n    expect(spy).toHaveBeenCalledTimes(1);\r\n  }));\r\n\r\n  it('should emit the keyboardEvent stream when key events target the overlay', fakeAsync(() => {\r\n    const dialogRef = dialog.openFromComponent(PizzaMsg, {viewContainerRef: testViewContainerRef});\r\n\r\n    const spy = jasmine.createSpy('keyboardEvent spy');\r\n    dialogRef.keydownEvents().subscribe(spy);\r\n\r\n    viewContainerFixture.detectChanges();\r\n\r\n    let backdrop = overlayContainerElement.querySelector('.cdk-overlay-backdrop') as HTMLElement;\r\n    let container = overlayContainerElement.querySelector('cdk-dialog-container') as HTMLElement;\r\n    dispatchKeyboardEvent(document.body, 'keydown', A);\r\n    dispatchKeyboardEvent(document.body, 'keydown', A, backdrop);\r\n    dispatchKeyboardEvent(document.body, 'keydown', A, container);\r\n\r\n    expect(spy).toHaveBeenCalledTimes(3);\r\n  }));\r\n\r\n  it('should notify the observers if a dialog has been opened', () => {\r\n    dialog.afterOpened.subscribe(ref => {\r\n      expect(dialog.openFromComponent(PizzaMsg, {\r\n        viewContainerRef: testViewContainerRef\r\n      })).toBe(ref);\r\n    });\r\n  });\r\n\r\n  it('should notify the observers if all open dialogs have finished closing', fakeAsync(() => {\r\n    const ref1 = dialog.openFromComponent(PizzaMsg, { viewContainerRef: testViewContainerRef });\r\n    const ref2 = dialog.openFromComponent(\r\n      ContentElementDialog, { viewContainerRef: testViewContainerRef });\r\n    const spy = jasmine.createSpy('afterAllClosed spy');\r\n\r\n    viewContainerFixture.detectChanges();\r\n    dialog.afterAllClosed.subscribe(spy);\r\n\r\n    ref1.close();\r\n    viewContainerFixture.detectChanges();\r\n    flush();\r\n\r\n    expect(spy).not.toHaveBeenCalled();\r\n\r\n    ref2.close();\r\n    viewContainerFixture.detectChanges();\r\n    flush();\r\n    viewContainerFixture.detectChanges();\r\n    expect(spy).toHaveBeenCalled();\r\n  }));\r\n\r\n  it('should emit the afterAllClosed stream on subscribe if there are no open dialogs', () => {\r\n    const spy = jasmine.createSpy('afterAllClosed spy');\r\n\r\n    dialog.afterAllClosed.subscribe(spy);\r\n\r\n    expect(spy).toHaveBeenCalled();\r\n  });\r\n\r\n  it('should should override the width of the overlay pane', () => {\r\n    dialog.openFromComponent(PizzaMsg, {\r\n      width: '500px'\r\n    });\r\n\r\n    viewContainerFixture.detectChanges();\r\n\r\n    let overlayPane = overlayContainerElement.querySelector('.cdk-overlay-pane') as HTMLElement;\r\n\r\n    expect(overlayPane.style.width).toBe('500px');\r\n  });\r\n\r\n  it('should should override the height of the overlay pane', () => {\r\n    dialog.openFromComponent(PizzaMsg, {\r\n      height: '100px'\r\n    });\r\n\r\n    viewContainerFixture.detectChanges();\r\n\r\n    let overlayPane = overlayContainerElement.querySelector('.cdk-overlay-pane') as HTMLElement;\r\n\r\n    expect(overlayPane.style.height).toBe('100px');\r\n  });\r\n\r\n  it('should should override the min-width of the overlay pane', () => {\r\n    dialog.openFromComponent(PizzaMsg, {\r\n      minWidth: '500px'\r\n    });\r\n\r\n    viewContainerFixture.detectChanges();\r\n\r\n    let overlayPane = overlayContainerElement.querySelector('.cdk-overlay-pane') as HTMLElement;\r\n\r\n    expect(overlayPane.style.minWidth).toBe('500px');\r\n  });\r\n\r\n  it('should should override the max-width of the overlay pane', fakeAsync(() => {\r\n    let dialogRef = dialog.openFromComponent(PizzaMsg);\r\n\r\n    viewContainerFixture.detectChanges();\r\n\r\n    let overlayPane = overlayContainerElement.querySelector('.cdk-overlay-pane') as HTMLElement;\r\n\r\n    expect(overlayPane.style.maxWidth).toBe('80vw',\r\n      'Expected dialog to set a default max-width on overlay pane');\r\n\r\n    dialogRef.close();\r\n\r\n    tick(500);\r\n    viewContainerFixture.detectChanges();\r\n    flushMicrotasks();\r\n\r\n    dialogRef = dialog.openFromComponent(PizzaMsg, {\r\n      maxWidth: '100px'\r\n    });\r\n\r\n    tick(500);\r\n    viewContainerFixture.detectChanges();\r\n    flushMicrotasks();\r\n\r\n    overlayPane = overlayContainerElement.querySelector('.cdk-overlay-pane') as HTMLElement;\r\n    expect(overlayPane.style.maxWidth).toBe('100px');\r\n  }));\r\n\r\n  it('should should override the min-height of the overlay pane', () => {\r\n    dialog.openFromComponent(PizzaMsg, {\r\n      minHeight: '300px'\r\n    });\r\n\r\n    viewContainerFixture.detectChanges();\r\n\r\n    let overlayPane = overlayContainerElement.querySelector('.cdk-overlay-pane') as HTMLElement;\r\n\r\n    expect(overlayPane.style.minHeight).toBe('300px');\r\n  });\r\n\r\n  it('should should override the max-height of the overlay pane', () => {\r\n    dialog.openFromComponent(PizzaMsg, {\r\n      maxHeight: '100px'\r\n    });\r\n\r\n    viewContainerFixture.detectChanges();\r\n\r\n    let overlayPane = overlayContainerElement.querySelector('.cdk-overlay-pane') as HTMLElement;\r\n\r\n    expect(overlayPane.style.maxHeight).toBe('100px');\r\n  });\r\n\r\n  it('should should override the top offset of the overlay pane', () => {\r\n    dialog.openFromComponent(PizzaMsg, {\r\n      position: {\r\n        top: '100px'\r\n      }\r\n    });\r\n\r\n    viewContainerFixture.detectChanges();\r\n\r\n    let overlayPane = overlayContainerElement.querySelector('.cdk-overlay-pane') as HTMLElement;\r\n\r\n    expect(overlayPane.style.marginTop).toBe('100px');\r\n  });\r\n\r\n  it('should should override the bottom offset of the overlay pane', () => {\r\n    dialog.openFromComponent(PizzaMsg, {\r\n      position: {\r\n        bottom: '200px'\r\n      }\r\n    });\r\n\r\n    viewContainerFixture.detectChanges();\r\n\r\n    let overlayPane = overlayContainerElement.querySelector('.cdk-overlay-pane') as HTMLElement;\r\n\r\n    expect(overlayPane.style.marginBottom).toBe('200px');\r\n  });\r\n\r\n  it('should should override the left offset of the overlay pane', () => {\r\n    dialog.openFromComponent(PizzaMsg, {\r\n      position: {\r\n        left: '250px'\r\n      }\r\n    });\r\n\r\n    viewContainerFixture.detectChanges();\r\n\r\n    let overlayPane = overlayContainerElement.querySelector('.cdk-overlay-pane') as HTMLElement;\r\n\r\n    expect(overlayPane.style.marginLeft).toBe('250px');\r\n  });\r\n\r\n  it('should should override the right offset of the overlay pane', () => {\r\n    dialog.openFromComponent(PizzaMsg, {\r\n      position: {\r\n        right: '125px'\r\n      }\r\n    });\r\n\r\n    viewContainerFixture.detectChanges();\r\n\r\n    let overlayPane = overlayContainerElement.querySelector('.cdk-overlay-pane') as HTMLElement;\r\n\r\n    expect(overlayPane.style.marginRight).toBe('125px');\r\n  });\r\n\r\n  it('should allow for the position to be updated', () => {\r\n    let dialogRef = dialog.openFromComponent(PizzaMsg, {\r\n      position: {\r\n        left: '250px'\r\n      }\r\n    });\r\n\r\n    viewContainerFixture.detectChanges();\r\n\r\n    let overlayPane = overlayContainerElement.querySelector('.cdk-overlay-pane') as HTMLElement;\r\n\r\n    expect(overlayPane.style.marginLeft).toBe('250px');\r\n\r\n    dialogRef.updatePosition({ left: '500px' });\r\n\r\n    expect(overlayPane.style.marginLeft).toBe('500px');\r\n  });\r\n\r\n  it('should allow for the dimensions to be updated', () => {\r\n    let dialogRef = dialog.openFromComponent(PizzaMsg, { width: '100px' });\r\n\r\n    viewContainerFixture.detectChanges();\r\n\r\n    let overlayPane = overlayContainerElement.querySelector('.cdk-overlay-pane') as HTMLElement;\r\n\r\n    expect(overlayPane.style.width).toBe('100px');\r\n\r\n    dialogRef.updateSize({width: '200px'});\r\n\r\n    expect(overlayPane.style.width).toBe('200px');\r\n  });\r\n\r\n  it('should allow setting the layout direction', () => {\r\n    dialog.openFromComponent(PizzaMsg, { direction: 'rtl' });\r\n\r\n    viewContainerFixture.detectChanges();\r\n\r\n    let overlayPane = overlayContainerElement.querySelector('.cdk-global-overlay-wrapper')!;\r\n\r\n    expect(overlayPane.getAttribute('dir')).toBe('rtl');\r\n  });\r\n\r\n  it('should inject the correct layout direction in the component instance', () => {\r\n    const dialogRef = dialog.openFromComponent(PizzaMsg, { direction: 'rtl' });\r\n\r\n    viewContainerFixture.detectChanges();\r\n\r\n    expect(dialogRef.componentInstance.directionality.value).toBe('rtl');\r\n  });\r\n\r\n  it('should fall back to injecting the global direction if none is passed by the config', () => {\r\n    const dialogRef = dialog.openFromComponent(PizzaMsg, {});\r\n\r\n    viewContainerFixture.detectChanges();\r\n\r\n    expect(dialogRef.componentInstance.directionality.value).toBe('ltr');\r\n  });\r\n\r\n  it('should close all of the dialogs', fakeAsync(() => {\r\n    dialog.openFromComponent(PizzaMsg);\r\n    viewContainerFixture.detectChanges();\r\n    dialog.openFromComponent(PizzaMsg);\r\n    viewContainerFixture.detectChanges();\r\n    dialog.openFromComponent(PizzaMsg);\r\n    viewContainerFixture.detectChanges();\r\n\r\n    expect(overlayContainerElement.querySelectorAll('cdk-dialog-container').length).toBe(3);\r\n\r\n    dialog.closeAll();\r\n    viewContainerFixture.detectChanges();\r\n    flush();\r\n\r\n    expect(overlayContainerElement.querySelectorAll('cdk-dialog-container').length).toBe(0);\r\n  }));\r\n\r\n  it('should set the proper animation states', () => {\r\n    let dialogRef = dialog.openFromComponent(PizzaMsg, { viewContainerRef: testViewContainerRef });\r\n    let dialogContainer: CdkDialogContainer =\r\n        viewContainerFixture.debugElement.query(By.directive(CdkDialogContainer)).componentInstance;\r\n\r\n    expect(dialogContainer._state).toBe('enter');\r\n\r\n    dialogRef.close();\r\n\r\n    expect(dialogContainer._state).toBe('exit');\r\n  });\r\n\r\n  it('should close all dialogs when the user goes forwards/backwards in history', fakeAsync(() => {\r\n    dialog.openFromComponent(PizzaMsg);\r\n    viewContainerFixture.detectChanges();\r\n    dialog.openFromComponent(PizzaMsg);\r\n    viewContainerFixture.detectChanges();\r\n\r\n    expect(overlayContainerElement.querySelectorAll('cdk-dialog-container').length).toBe(2);\r\n\r\n    mockLocation.simulateUrlPop('');\r\n    viewContainerFixture.detectChanges();\r\n    flush();\r\n\r\n    expect(overlayContainerElement.querySelectorAll('cdk-dialog-container').length).toBe(0);\r\n  }));\r\n\r\n  it('should close all open dialogs when the location hash changes', fakeAsync(() => {\r\n    dialog.openFromComponent(PizzaMsg);\r\n    viewContainerFixture.detectChanges();\r\n    dialog.openFromComponent(PizzaMsg);\r\n    viewContainerFixture.detectChanges();\r\n\r\n    expect(overlayContainerElement.querySelectorAll('cdk-dialog-container').length).toBe(2);\r\n\r\n    mockLocation.simulateHashChange('');\r\n    viewContainerFixture.detectChanges();\r\n    flush();\r\n\r\n    expect(overlayContainerElement.querySelectorAll('cdk-dialog-container').length).toBe(0);\r\n  }));\r\n\r\n  it('should have the componentInstance available in the afterClosed callback', fakeAsync(() => {\r\n    let dialogRef = dialog.openFromComponent(PizzaMsg);\r\n    let spy = jasmine.createSpy('afterClosed spy');\r\n\r\n    flushMicrotasks();\r\n    viewContainerFixture.detectChanges();\r\n    flushMicrotasks();\r\n\r\n    dialogRef.afterClosed().subscribe(() => {\r\n      spy();\r\n    });\r\n\r\n    dialogRef.close();\r\n\r\n    flushMicrotasks();\r\n    viewContainerFixture.detectChanges();\r\n    tick(500);\r\n\r\n    // Ensure that the callback actually fires.\r\n    expect(spy).toHaveBeenCalled();\r\n  }));\r\n\r\n  describe('passing in data', () => {\r\n    it('should be able to pass in data', () => {\r\n      let config = {\r\n        data: {\r\n          stringParam: 'hello',\r\n          dateParam: new Date()\r\n        }\r\n      };\r\n\r\n      let instance = dialog.openFromComponent(DialogWithInjectedData, config).componentInstance;\r\n\r\n      expect(instance.data.stringParam).toBe(config.data.stringParam);\r\n      expect(instance.data.dateParam).toBe(config.data.dateParam);\r\n    });\r\n\r\n    it('should default to null if no data is passed', () => {\r\n      expect(() => {\r\n        let dialogRef = dialog.openFromComponent(DialogWithInjectedData);\r\n        viewContainerFixture.detectChanges();\r\n        expect(dialogRef.componentInstance.data).toBeNull();\r\n      }).not.toThrow();\r\n    });\r\n  });\r\n\r\n  it('should not keep a reference to the component after the dialog is closed', fakeAsync(() => {\r\n    let dialogRef = dialog.openFromComponent(PizzaMsg);\r\n    viewContainerFixture.detectChanges();\r\n\r\n    expect(dialogRef.componentInstance).toBeTruthy();\r\n\r\n    dialogRef.close();\r\n    flush();\r\n    viewContainerFixture.detectChanges();\r\n    flush();\r\n\r\n    expect(dialogRef.componentInstance).toBeFalsy('Expected reference to have been cleared.');\r\n  }));\r\n\r\n  it('should assign a unique id to each dialog', () => {\r\n    const one = dialog.openFromComponent(PizzaMsg);\r\n    const two = dialog.openFromComponent(PizzaMsg);\r\n\r\n    expect(one.id).toBeTruthy();\r\n    expect(two.id).toBeTruthy();\r\n    expect(one.id).not.toBe(two.id);\r\n  });\r\n\r\n  it('should allow for the id to be overwritten', () => {\r\n    const dialogRef = dialog.openFromComponent(PizzaMsg, { id: 'pizza' });\r\n    expect(dialogRef.id).toBe('pizza');\r\n  });\r\n\r\n  it('should throw when trying to open a dialog with the same id as another dialog', () => {\r\n    dialog.openFromComponent(PizzaMsg, { id: 'pizza' });\r\n    expect(() => dialog.openFromComponent(PizzaMsg, { id: 'pizza' }))\r\n        .toThrowError(/must be unique/g);\r\n  });\r\n\r\n  it('should be able to find a dialog by id', () => {\r\n    const dialogRef = dialog.openFromComponent(PizzaMsg, { id: 'pizza' });\r\n    expect(dialog.getById('pizza')).toBe(dialogRef);\r\n  });\r\n\r\n  describe('disableClose option', () => {\r\n    it('should prevent closing via clicks on the backdrop', () => {\r\n      dialog.openFromComponent(PizzaMsg, {\r\n        disableClose: true,\r\n        viewContainerRef: testViewContainerRef\r\n      });\r\n\r\n      viewContainerFixture.detectChanges();\r\n\r\n      let backdrop = overlayContainerElement.querySelector('.cdk-overlay-backdrop') as HTMLElement;\r\n      backdrop.click();\r\n\r\n      expect(overlayContainerElement.querySelector('cdk-dialog-container')).toBeTruthy();\r\n    });\r\n\r\n    it('should prevent closing via the escape key', () => {\r\n      dialog.openFromComponent(PizzaMsg, {\r\n        disableClose: true,\r\n        viewContainerRef: testViewContainerRef\r\n      });\r\n\r\n      viewContainerFixture.detectChanges();\r\n      dispatchKeyboardEvent(document.body, 'keydown', ESCAPE);\r\n\r\n      expect(overlayContainerElement.querySelector('cdk-dialog-container')).toBeTruthy();\r\n    });\r\n\r\n    it('should allow for the disableClose option to be updated while open', fakeAsync(() => {\r\n      let dialogRef = dialog.openFromComponent(PizzaMsg, {\r\n        disableClose: true,\r\n        viewContainerRef: testViewContainerRef\r\n      });\r\n\r\n      viewContainerFixture.detectChanges();\r\n\r\n      let backdrop = overlayContainerElement.querySelector('.cdk-overlay-backdrop') as HTMLElement;\r\n      backdrop.click();\r\n\r\n      expect(overlayContainerElement.querySelector('cdk-dialog-container')).toBeTruthy();\r\n\r\n      dialogRef.disableClose = false;\r\n      backdrop.click();\r\n      viewContainerFixture.detectChanges();\r\n      flush();\r\n\r\n      expect(overlayContainerElement.querySelector('cdk-dialog-container')).toBeFalsy();\r\n    }));\r\n  });\r\n\r\n  describe('hasBackdrop option', () => {\r\n    it('should have a backdrop', () => {\r\n      dialog.openFromComponent(PizzaMsg, {\r\n        hasBackdrop: true,\r\n        viewContainerRef: testViewContainerRef\r\n      });\r\n\r\n      viewContainerFixture.detectChanges();\r\n\r\n      expect(overlayContainerElement.querySelector('.cdk-overlay-backdrop')).toBeTruthy();\r\n    });\r\n\r\n    it('should not have a backdrop', () => {\r\n      dialog.openFromComponent(PizzaMsg, {\r\n        hasBackdrop: false,\r\n        viewContainerRef: testViewContainerRef\r\n      });\r\n\r\n      viewContainerFixture.detectChanges();\r\n\r\n      expect(overlayContainerElement.querySelector('.cdk-overlay-backdrop')).toBeFalsy();\r\n    });\r\n  });\r\n\r\n  describe('panelClass option', () => {\r\n    it('should have custom panel class', () => {\r\n      dialog.openFromComponent(PizzaMsg, {\r\n        panelClass: 'custom-panel-class',\r\n        viewContainerRef: testViewContainerRef\r\n      });\r\n\r\n      viewContainerFixture.detectChanges();\r\n\r\n      expect(overlayContainerElement.querySelector('.custom-panel-class')).toBeTruthy();\r\n    });\r\n  });\r\n\r\n  describe('backdropClass option', () => {\r\n    it('should have default backdrop class', () => {\r\n      dialog.openFromComponent(PizzaMsg, {\r\n        backdropClass: '',\r\n        viewContainerRef: testViewContainerRef\r\n      });\r\n\r\n      viewContainerFixture.detectChanges();\r\n\r\n      expect(overlayContainerElement.querySelector('.cdk-overlay-dark-backdrop')).toBeTruthy();\r\n    });\r\n\r\n    it('should have custom backdrop class', () => {\r\n      dialog.openFromComponent(PizzaMsg, {\r\n        backdropClass: 'custom-backdrop-class',\r\n        viewContainerRef: testViewContainerRef\r\n      });\r\n\r\n      viewContainerFixture.detectChanges();\r\n\r\n      expect(overlayContainerElement.querySelector('.custom-backdrop-class')).toBeTruthy();\r\n    });\r\n  });\r\n\r\n  describe('focus management', () => {\r\n    // When testing focus, all of the elements must be in the DOM.\r\n    beforeEach(() => document.body.appendChild(overlayContainerElement));\r\n    afterEach(() => document.body.removeChild(overlayContainerElement));\r\n\r\n    it('should focus the first tabbable element of the dialog on open', fakeAsync(() => {\r\n      dialog.openFromComponent(PizzaMsg, {\r\n        viewContainerRef: testViewContainerRef\r\n      });\r\n\r\n      viewContainerFixture.detectChanges();\r\n      flushMicrotasks();\r\n\r\n      expect(document.activeElement.tagName)\r\n          .toBe('INPUT', 'Expected first tabbable element (input) in the dialog to be focused.');\r\n    }));\r\n\r\n    it('should allow disabling focus of the first tabbable element', fakeAsync(() => {\r\n      dialog.openFromComponent(PizzaMsg, {\r\n        viewContainerRef: testViewContainerRef,\r\n        autoFocus: false\r\n      });\r\n\r\n      viewContainerFixture.detectChanges();\r\n      flushMicrotasks();\r\n\r\n      expect(document.activeElement.tagName).not.toBe('INPUT');\r\n    }));\r\n\r\n    it('should re-focus trigger element when dialog closes', fakeAsync(() => {\r\n      // Create a element that has focus before the dialog is opened.\r\n      let button = document.createElement('button');\r\n      button.id = 'dialog-trigger';\r\n      document.body.appendChild(button);\r\n      button.focus();\r\n\r\n      let dialogRef = dialog.openFromComponent(\r\n        PizzaMsg, { viewContainerRef: testViewContainerRef });\r\n\r\n      flushMicrotasks();\r\n      viewContainerFixture.detectChanges();\r\n      flushMicrotasks();\r\n\r\n      expect(document.activeElement.id)\r\n          .not.toBe('dialog-trigger', 'Expected the focus to change when dialog was opened.');\r\n\r\n      dialogRef.close();\r\n      expect(document.activeElement.id).not.toBe('dialog-trigger',\r\n          'Expcted the focus not to have changed before the animation finishes.');\r\n\r\n      flushMicrotasks();\r\n      viewContainerFixture.detectChanges();\r\n      flush();\r\n\r\n      expect(document.activeElement.id).toBe('dialog-trigger',\r\n          'Expected that the trigger was refocused after the dialog is closed.');\r\n\r\n      document.body.removeChild(button);\r\n    }));\r\n\r\n    it('should allow the consumer to shift focus in afterClosed', fakeAsync(() => {\r\n      // Create a element that has focus before the dialog is opened.\r\n      let button = document.createElement('button');\r\n      let input = document.createElement('input');\r\n\r\n      button.id = 'dialog-trigger';\r\n      input.id = 'input-to-be-focused';\r\n\r\n      document.body.appendChild(button);\r\n      document.body.appendChild(input);\r\n      button.focus();\r\n\r\n      let dialogRef = dialog.openFromComponent(\r\n        PizzaMsg, { viewContainerRef: testViewContainerRef });\r\n\r\n      tick(500);\r\n      viewContainerFixture.detectChanges();\r\n\r\n      dialogRef.afterClosed().subscribe(() => input.focus());\r\n      dialogRef.close();\r\n\r\n      tick(500);\r\n      viewContainerFixture.detectChanges();\r\n      flushMicrotasks();\r\n\r\n      expect(document.activeElement.id).toBe('input-to-be-focused',\r\n          'Expected that the trigger was refocused after the dialog is closed.');\r\n\r\n      document.body.removeChild(button);\r\n      document.body.removeChild(input);\r\n      flush();\r\n    }));\r\n\r\n    it('should move focus to the container if there are no focusable elements in the dialog',\r\n      fakeAsync(() => {\r\n        dialog.openFromComponent(DialogWithoutFocusableElements);\r\n\r\n        viewContainerFixture.detectChanges();\r\n        flushMicrotasks();\r\n\r\n        expect(document.activeElement.tagName.toLowerCase())\r\n            .toBe('cdk-dialog-container', 'Expected dialog container to be focused.');\r\n      }));\r\n\r\n  });\r\n\r\n  describe('aria-label', () => {\r\n    it('should be able to set a custom aria-label', () => {\r\n      dialog.openFromComponent(PizzaMsg, {\r\n        ariaLabel: 'Hello there',\r\n        viewContainerRef: testViewContainerRef\r\n      });\r\n      viewContainerFixture.detectChanges();\r\n\r\n      const container = overlayContainerElement.querySelector('cdk-dialog-container')!;\r\n      expect(container.getAttribute('aria-label')).toBe('Hello there');\r\n    });\r\n\r\n    it('should not set the aria-labelledby automatically if it has an aria-label', fakeAsync(() => {\r\n      dialog.openFromComponent(ContentElementDialog, {\r\n        ariaLabel: 'Hello there',\r\n        viewContainerRef: testViewContainerRef\r\n      });\r\n      viewContainerFixture.detectChanges();\r\n      tick();\r\n      viewContainerFixture.detectChanges();\r\n\r\n      const container = overlayContainerElement.querySelector('cdk-dialog-container')!;\r\n      expect(container.hasAttribute('aria-labelledby')).toBe(false);\r\n    }));\r\n  });\r\n});\r\n\r\ndescribe('Dialog with a parent Dialog', () => {\r\n  let parentDialog: Dialog;\r\n  let childDialog: Dialog;\r\n  let overlayContainerElement: HTMLElement;\r\n  let fixture: ComponentFixture<ComponentThatProvidesMatDialog>;\r\n\r\n  beforeEach(fakeAsync(() => {\r\n    TestBed.configureTestingModule({\r\n      imports: [DialogModule, DialogTestModule],\r\n      declarations: [ComponentThatProvidesMatDialog],\r\n      providers: [\r\n        {provide: OverlayContainer, useFactory: () => {\r\n          overlayContainerElement = document.createElement('div');\r\n          return {getContainerElement: () => overlayContainerElement};\r\n        }},\r\n        {provide: Location, useClass: SpyLocation}\r\n      ],\r\n    });\r\n\r\n    TestBed.compileComponents();\r\n  }));\r\n\r\n  beforeEach(inject([Dialog], (d: Dialog) => {\r\n    parentDialog = d;\r\n\r\n    fixture = TestBed.createComponent(ComponentThatProvidesMatDialog);\r\n    childDialog = fixture.componentInstance.dialog;\r\n    fixture.detectChanges();\r\n  }));\r\n\r\n  afterEach(() => {\r\n    overlayContainerElement.innerHTML = '';\r\n  });\r\n\r\n  it('should close dialogs opened by a parent when calling closeAll on a child Dialog',\r\n    fakeAsync(() => {\r\n      parentDialog.openFromComponent(PizzaMsg);\r\n      fixture.detectChanges();\r\n      flush();\r\n\r\n      expect(overlayContainerElement.textContent)\r\n          .toContain('Pizza', 'Expected a dialog to be opened');\r\n\r\n      childDialog.closeAll();\r\n      fixture.detectChanges();\r\n      flush();\r\n\r\n      expect(overlayContainerElement.textContent!.trim())\r\n          .toBe('', 'Expected closeAll on child Dialog to close dialog opened by parent');\r\n    }));\r\n\r\n  it('should close dialogs opened by a child when calling closeAll on a parent Dialog',\r\n    fakeAsync(() => {\r\n      childDialog.openFromComponent(PizzaMsg);\r\n      fixture.detectChanges();\r\n\r\n      expect(overlayContainerElement.textContent)\r\n          .toContain('Pizza', 'Expected a dialog to be opened');\r\n\r\n      parentDialog.closeAll();\r\n      fixture.detectChanges();\r\n      flush();\r\n\r\n      expect(overlayContainerElement.textContent!.trim())\r\n          .toBe('', 'Expected closeAll on parent Dialog to close dialog opened by child');\r\n    }));\r\n\r\n  it('should close the top dialog via the escape key', fakeAsync(() => {\r\n    childDialog.openFromComponent(PizzaMsg);\r\n    fixture.detectChanges();\r\n\r\n    dispatchKeyboardEvent(document.body, 'keydown', ESCAPE);\r\n    fixture.detectChanges();\r\n    flush();\r\n\r\n    expect(overlayContainerElement.querySelector('cdk-dialog-container')).toBeNull();\r\n  }));\r\n});\r\n\r\n\r\n@Directive({selector: 'dir-with-view-container'})\r\nclass DirectiveWithViewContainer {\r\n  constructor(public viewContainerRef: ViewContainerRef) { }\r\n}\r\n\r\n@Component({\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  template: 'hello',\r\n})\r\nclass ComponentWithOnPushViewContainer {\r\n  constructor(public viewContainerRef: ViewContainerRef) { }\r\n}\r\n\r\n@Component({\r\n  selector: 'arbitrary-component',\r\n  template: `<dir-with-view-container></dir-with-view-container>`,\r\n})\r\nclass ComponentWithChildViewContainer {\r\n  @ViewChild(DirectiveWithViewContainer) childWithViewContainer: DirectiveWithViewContainer;\r\n\r\n  get childViewContainer() {\r\n    return this.childWithViewContainer.viewContainerRef;\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'arbitrary-component-with-template-ref',\r\n  template: `<ng-template let-data let-dialogRef=\"dialogRef\">\r\n      Cheese {{localValue}} {{data?.value}}{{setDialogRef(dialogRef)}}</ng-template>`,\r\n})\r\nclass ComponentWithTemplateRef {\r\n  localValue: string;\r\n  dialogRef: DialogRef<any>;\r\n\r\n  @ViewChild(TemplateRef) templateRef: TemplateRef<any>;\r\n\r\n  setDialogRef(dialogRef: DialogRef<any>): string {\r\n    this.dialogRef = dialogRef;\r\n    return '';\r\n  }\r\n}\r\n\r\n/** Simple component for testing ComponentPortal. */\r\n@Component({template: '<p>Pizza</p> <input> <button>Close</button>'})\r\nclass PizzaMsg {\r\n  constructor(public dialogRef: DialogRef<PizzaMsg>,\r\n              public dialogInjector: Injector,\r\n              public directionality: Directionality) {}\r\n}\r\n\r\n@Component({\r\n  template: `\r\n    <h1>This is the title</h1>\r\n  `\r\n})\r\nclass ContentElementDialog {\r\n  closeButtonAriaLabel: string;\r\n}\r\n\r\n@Component({\r\n  template: '',\r\n  providers: [Dialog]\r\n})\r\nclass ComponentThatProvidesMatDialog {\r\n  constructor(public dialog: Dialog) {}\r\n}\r\n\r\n/** Simple component for testing ComponentPortal. */\r\n@Component({template: ''})\r\nclass DialogWithInjectedData {\r\n  constructor(@Inject(DIALOG_DATA) public data: any) { }\r\n}\r\n\r\n@Component({template: '<p>Pasta</p>'})\r\nclass DialogWithoutFocusableElements {}\r\n\r\n// Create a real (non-test) NgModule as a workaround for\r\n// https://github.com/angular/angular/issues/10760\r\nconst TEST_DIRECTIVES = [\r\n  ComponentWithChildViewContainer,\r\n  ComponentWithTemplateRef,\r\n  PizzaMsg,\r\n  DirectiveWithViewContainer,\r\n  ComponentWithOnPushViewContainer,\r\n  ContentElementDialog,\r\n  DialogWithInjectedData,\r\n  DialogWithoutFocusableElements\r\n];\r\n\r\n@NgModule({\r\n  imports: [DialogModule, NoopAnimationsModule],\r\n  exports: TEST_DIRECTIVES,\r\n  declarations: TEST_DIRECTIVES,\r\n  entryComponents: [\r\n    ComponentWithChildViewContainer,\r\n    ComponentWithTemplateRef,\r\n    PizzaMsg,\r\n    ContentElementDialog,\r\n    DialogWithInjectedData,\r\n    DialogWithoutFocusableElements,\r\n  ],\r\n})\r\nclass DialogTestModule { }\r\n"]}