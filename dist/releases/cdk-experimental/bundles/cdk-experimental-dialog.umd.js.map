{"version":3,"file":"cdk-experimental-dialog.umd.js","sources":["../../src/cdk-experimental/dialog/dialog-module.ts","../../src/cdk-experimental/dialog/dialog.ts","../../src/cdk-experimental/dialog/dialog-injectors.ts","../../src/cdk-experimental/dialog/dialog-ref.ts","../../src/cdk-experimental/dialog/dialog-container.ts","../../src/cdk-experimental/dialog/dialog-config.ts","../../node_modules/tslib/tslib.es6.js"],"sourcesContent":["/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\nimport {OverlayModule} from '@angular/cdk/overlay';\r\nimport {PortalModule} from '@angular/cdk/portal';\r\nimport {A11yModule} from '@angular/cdk/a11y';\r\nimport {Dialog} from './dialog';\r\nimport {CdkDialogContainer} from './dialog-container';\r\nimport {DialogConfig} from './dialog-config';\r\nimport {DialogRef} from './dialog-ref';\r\nimport {\r\n  DIALOG_CONFIG,\r\n  DIALOG_CONTAINER,\r\n  DIALOG_REF,\r\n  MAT_DIALOG_SCROLL_STRATEGY_PROVIDER\r\n} from './dialog-injectors';\r\n\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    OverlayModule,\r\n    PortalModule,\r\n    A11yModule,\r\n  ],\r\n  exports: [\r\n    CdkDialogContainer,\r\n  ],\r\n  declarations: [\r\n    CdkDialogContainer,\r\n  ],\r\n  providers: [\r\n    Dialog,\r\n    MAT_DIALOG_SCROLL_STRATEGY_PROVIDER,\r\n    {provide: DIALOG_REF, useValue: DialogRef},\r\n    {provide: DIALOG_CONTAINER, useValue: CdkDialogContainer},\r\n    {provide: DIALOG_CONFIG, useValue: DialogConfig},\r\n  ],\r\n  entryComponents: [CdkDialogContainer],\r\n})\r\nexport class DialogModule {}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {\r\n  TemplateRef,\r\n  SkipSelf,\r\n  Optional,\r\n  Injectable,\r\n  Injector,\r\n  Inject,\r\n  ComponentRef\r\n} from '@angular/core';\r\nimport {ComponentPortal, PortalInjector, TemplatePortal} from '@angular/cdk/portal';\r\nimport {of as observableOf, Observable, Subject, defer} from 'rxjs';\r\nimport {DialogRef} from './dialog-ref';\r\nimport {Location} from '@angular/common';\r\nimport {DialogConfig} from './dialog-config';\r\nimport {Directionality} from '@angular/cdk/bidi';\r\nimport {CdkDialogContainer} from './dialog-container';\r\nimport {\r\n  ComponentType,\r\n  Overlay,\r\n  OverlayRef,\r\n  OverlayConfig,\r\n} from '@angular/cdk/overlay';\r\nimport {startWith} from 'rxjs/operators';\r\n\r\nimport {\r\n  DIALOG_SCROLL_STRATEGY,\r\n  DIALOG_DATA,\r\n  DIALOG_REF,\r\n  DIALOG_CONTAINER,\r\n  DIALOG_CONFIG,\r\n} from './dialog-injectors';\r\n\r\n\r\n/**\r\n * Service to open modal dialogs.\r\n */\r\n@Injectable()\r\nexport class Dialog {\r\n  /** Stream that emits when all dialogs are closed. */\r\n  get _afterAllClosed(): Observable<void> {\r\n    return this._parentDialog ? this._parentDialog.afterAllClosed : this._afterAllClosedBase;\r\n  }\r\n  _afterAllClosedBase = new Subject<void>();\r\n  afterAllClosed: Observable<void> = defer<void>(() => this.openDialogs.length ?\r\n      this._afterAllClosed : this._afterAllClosed.pipe(startWith(undefined)));\r\n\r\n  /** Stream that emits when a dialog is opened. */\r\n  get afterOpened(): Subject<DialogRef<any>> {\r\n    return this._parentDialog ? this._parentDialog.afterOpened : this._afterOpened;\r\n  }\r\n  _afterOpened: Subject<DialogRef<any>> = new Subject();\r\n\r\n  /** Stream that emits when a dialog is opened. */\r\n  get openDialogs(): DialogRef<any>[] {\r\n    return this._parentDialog ? this._parentDialog.openDialogs : this._openDialogs;\r\n  }\r\n  _openDialogs: DialogRef<any>[] = [];\r\n\r\n  constructor(\r\n      private overlay: Overlay,\r\n      private injector: Injector,\r\n      @Inject(DIALOG_REF) private dialogRefConstructor,\r\n      @Inject(DIALOG_SCROLL_STRATEGY) private _scrollStrategy,\r\n      @Optional() @SkipSelf() private _parentDialog: Dialog,\r\n      @Optional() location: Location) {\r\n\r\n    // Close all of the dialogs when the user goes forwards/backwards in history or when the\r\n    // location hash changes. Note that this usually doesn't include clicking on links (unless\r\n    // the user is using the `HashLocationStrategy`).\r\n    if (!_parentDialog && location) {\r\n      location.subscribe(() => this.closeAll());\r\n    }\r\n  }\r\n\r\n  /** Gets an open dialog by id. */\r\n  getById(id: string): DialogRef<any> | undefined {\r\n    return this._openDialogs.find(ref  => ref.id === id);\r\n  }\r\n\r\n  /** Closes all open dialogs. */\r\n  closeAll(): void {\r\n    this.openDialogs.forEach(ref => ref.close());\r\n  }\r\n\r\n  /** Opens a dialog from a component. */\r\n  openFromComponent<T>(component: ComponentType<T>, config?: DialogConfig): DialogRef<any> {\r\n    config = this._applyConfigDefaults(config);\r\n\r\n    if (config.id && this.getById(config.id)) {\r\n      throw Error(`Dialog with id \"${config.id}\" exists already. The dialog id must be unique.`);\r\n    }\r\n\r\n    const overlayRef = this._createOverlay(config);\r\n    const dialogContainer = this._attachDialogContainer(overlayRef, config);\r\n    const dialogRef = this._attachDialogContentForComponent(component, dialogContainer,\r\n      overlayRef, config);\r\n\r\n    this.registerDialogRef(dialogRef);\r\n    return dialogRef;\r\n  }\r\n\r\n  /** Opens a dialog from a template. */\r\n  openFromTemplate<T>(template: TemplateRef<T>, config?: DialogConfig): DialogRef<any> {\r\n    config = this._applyConfigDefaults(config);\r\n\r\n    if (config.id && this.getById(config.id)) {\r\n      throw Error(`Dialog with id \"${config.id}\" exists already. The dialog id must be unique.`);\r\n    }\r\n\r\n    const overlayRef = this._createOverlay(config);\r\n    const dialogContainer = this._attachDialogContainer(overlayRef, config);\r\n    const dialogRef = this._attachDialogContentForTemplate(template, dialogContainer,\r\n      overlayRef, config);\r\n\r\n    this.registerDialogRef(dialogRef);\r\n    return dialogRef;\r\n  }\r\n\r\n  /**\r\n   * Forwards emitting events for when dialogs are opened and all dialogs are closed.\r\n   */\r\n  private registerDialogRef(dialogRef: DialogRef<any>): void {\r\n    this.openDialogs.push(dialogRef);\r\n\r\n    const dialogOpenSub = dialogRef.afterOpened().subscribe(() => {\r\n      this.afterOpened.next(dialogRef);\r\n      dialogOpenSub.unsubscribe();\r\n    });\r\n\r\n    const dialogCloseSub = dialogRef.afterClosed().subscribe(() => {\r\n      let dialogIndex = this._openDialogs.indexOf(dialogRef);\r\n\r\n      if (dialogIndex > -1) {\r\n        this._openDialogs.splice(dialogIndex, 1);\r\n      }\r\n\r\n      if (!this._openDialogs.length) {\r\n        this._afterAllClosedBase.next();\r\n        dialogCloseSub.unsubscribe();\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Creates an overlay config from a dialog config.\r\n   * @param config The dialog configuration.\r\n   * @returns The overlay configuration.\r\n   */\r\n  protected _createOverlay(config: DialogConfig): OverlayRef {\r\n    const overlayConfig = new OverlayConfig({\r\n      positionStrategy: this.overlay.position().global(),\r\n      scrollStrategy: this._scrollStrategy(),\r\n      panelClass: config.panelClass,\r\n      hasBackdrop: config.hasBackdrop,\r\n      direction: config.direction,\r\n      minWidth: config.minWidth,\r\n      minHeight: config.minHeight,\r\n      maxWidth: config.maxWidth,\r\n      maxHeight: config.maxHeight\r\n    });\r\n\r\n    if (config.backdropClass) {\r\n      overlayConfig.backdropClass = config.backdropClass;\r\n    }\r\n    return this.overlay.create(overlayConfig);\r\n  }\r\n\r\n  /**\r\n   * Attaches an MatDialogContainer to a dialog's already-created overlay.\r\n   * @param overlay Reference to the dialog's underlying overlay.\r\n   * @param config The dialog configuration.\r\n   * @returns A promise resolving to a ComponentRef for the attached container.\r\n   */\r\n  protected _attachDialogContainer(overlay: OverlayRef, config: DialogConfig): CdkDialogContainer {\r\n    const container = config.containerComponent || this.injector.get(DIALOG_CONTAINER);\r\n    const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\r\n    const injector = new PortalInjector(userInjector || this.injector, new WeakMap([\r\n      [DialogConfig, config]\r\n    ]));\r\n    const containerPortal = new ComponentPortal(container, config.viewContainerRef, injector);\r\n    const containerRef: ComponentRef<CdkDialogContainer> = overlay.attach(containerPortal);\r\n    containerRef.instance._config = config;\r\n\r\n    return containerRef.instance;\r\n  }\r\n\r\n\r\n  /**\r\n   * Attaches the user-provided component to the already-created MatDialogContainer.\r\n   * @param componentOrTemplateRef The type of component being loaded into the dialog,\r\n   *     or a TemplateRef to instantiate as the content.\r\n   * @param dialogContainer Reference to the wrapping MatDialogContainer.\r\n   * @param overlayRef Reference to the overlay in which the dialog resides.\r\n   * @param config The dialog configuration.\r\n   * @returns A promise resolving to the MatDialogRef that should be returned to the user.\r\n   */\r\n  protected _attachDialogContentForComponent<T>(\r\n      componentOrTemplateRef: ComponentType<T>,\r\n      dialogContainer: CdkDialogContainer,\r\n      overlayRef: OverlayRef,\r\n      config: DialogConfig): DialogRef<any> {\r\n\r\n    // Create a reference to the dialog we're creating in order to give the user a handle\r\n    // to modify and close it.\r\n    const dialogRef = new this.dialogRefConstructor(overlayRef, dialogContainer, config.id);\r\n\r\n    const injector = this._createInjector<T>(config, dialogRef, dialogContainer);\r\n    const contentRef = dialogContainer.attachComponentPortal(\r\n        new ComponentPortal(componentOrTemplateRef, undefined, injector));\r\n    dialogRef.componentInstance = contentRef.instance;\r\n\r\n    dialogRef.updateSize({width: config.width, height: config.height})\r\n             .updatePosition(config.position);\r\n\r\n    return dialogRef;\r\n  }\r\n\r\n  /**\r\n   * Attaches the user-provided component to the already-created MatDialogContainer.\r\n   * @param componentOrTemplateRef The type of component being loaded into the dialog,\r\n   *     or a TemplateRef to instantiate as the content.\r\n   * @param dialogContainer Reference to the wrapping MatDialogContainer.\r\n   * @param overlayRef Reference to the overlay in which the dialog resides.\r\n   * @param config The dialog configuration.\r\n   * @returns A promise resolving to the MatDialogRef that should be returned to the user.\r\n   */\r\n  protected _attachDialogContentForTemplate<T>(\r\n      componentOrTemplateRef: TemplateRef<T>,\r\n      dialogContainer: CdkDialogContainer,\r\n      overlayRef: OverlayRef,\r\n      config: DialogConfig): DialogRef<any> {\r\n\r\n    // Create a reference to the dialog we're creating in order to give the user a handle\r\n    // to modify and close it.\r\n    const dialogRef = new this.dialogRefConstructor(overlayRef, dialogContainer, config.id);\r\n\r\n    dialogContainer.attachTemplatePortal(\r\n      new TemplatePortal<T>(componentOrTemplateRef, null!,\r\n        <any>{$implicit: config.data, dialogRef}));\r\n    dialogRef.updateSize({width: config.width, height: config.height})\r\n             .updatePosition(config.position);\r\n\r\n    return dialogRef;\r\n  }\r\n\r\n\r\n  /**\r\n   * Creates a custom injector to be used inside the dialog. This allows a component loaded inside\r\n   * of a dialog to close itself and, optionally, to return a value.\r\n   * @param config Config object that is used to construct the dialog.\r\n   * @param dialogRef Reference to the dialog.\r\n   * @param container Dialog container element that wraps all of the contents.\r\n   * @returns The custom injector that can be used inside the dialog.\r\n   */\r\n  private _createInjector<T>(\r\n      config: DialogConfig,\r\n      dialogRef: DialogRef<T>,\r\n      dialogContainer: CdkDialogContainer): PortalInjector {\r\n\r\n    const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\r\n    const injectionTokens = new WeakMap<any, any>([\r\n      [this.injector.get(DIALOG_REF), dialogRef],\r\n      [this.injector.get(DIALOG_CONTAINER), dialogContainer],\r\n      [DIALOG_DATA, config.data]\r\n    ]);\r\n\r\n    if (config.direction &&\r\n        (!userInjector || !userInjector.get<Directionality | null>(Directionality, null))) {\r\n      injectionTokens.set(Directionality, {\r\n        value: config.direction,\r\n        change: observableOf()\r\n      });\r\n    }\r\n\r\n    return new PortalInjector(userInjector || this.injector, injectionTokens);\r\n  }\r\n\r\n  /**\r\n   * Expands the provided configuration object to include the default values for properties which\r\n   * are undefined.\r\n   */\r\n  private _applyConfigDefaults(config?: DialogConfig): DialogConfig {\r\n    const dialogConfig = this.injector.get(DIALOG_CONFIG) as typeof DialogConfig;\r\n    return {...new dialogConfig(), ...config};\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {InjectionToken} from '@angular/core';\r\nimport {ComponentType, Overlay, ScrollStrategy, BlockScrollStrategy} from '@angular/cdk/overlay';\r\nimport {DialogRef} from './dialog-ref';\r\nimport {CdkDialogContainer} from './dialog-container';\r\nimport {DialogConfig} from './dialog-config';\r\n\r\n/** Injection token for the Dialog's ScrollStrategy. */\r\nexport const DIALOG_SCROLL_STRATEGY =\r\n    new InjectionToken<() => ScrollStrategy>('DialogScrollStrategy');\r\n\r\n/** Injection token for the Dialog's Data. */\r\nexport const DIALOG_DATA = new InjectionToken<any>('DialogData');\r\n\r\n/** Injection token for the DialogRef constructor. */\r\nexport const DIALOG_REF = new InjectionToken<DialogRef<any>>('DialogRef');\r\n\r\n/** Injection token for the DialogConfig. */\r\nexport const DIALOG_CONFIG = new InjectionToken<DialogConfig>('DialogConfig');\r\n\r\n/** Injection token for the Dialog's DialogContainer component. */\r\nexport const DIALOG_CONTAINER =\r\n    new InjectionToken<ComponentType<CdkDialogContainer>>('DialogContainer');\r\n\r\n/** @docs-private */\r\nexport function MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay: Overlay):\r\n    () => BlockScrollStrategy {\r\n  return () => overlay.scrollStrategies.block();\r\n}\r\n\r\n/** @docs-private */\r\nexport const MAT_DIALOG_SCROLL_STRATEGY_PROVIDER = {\r\n  provide: DIALOG_SCROLL_STRATEGY,\r\n  deps: [Overlay],\r\n  useFactory: MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY,\r\n};\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\n\r\nimport {OverlayRef, GlobalPositionStrategy, OverlaySizeConfig} from '@angular/cdk/overlay';\r\nimport {ESCAPE} from '@angular/cdk/keycodes';\r\nimport {Observable} from 'rxjs';\r\nimport {map, filter} from 'rxjs/operators';\r\nimport {DialogPosition} from './dialog-config';\r\nimport {CdkDialogContainer} from './dialog-container';\r\n\r\n/** Unique id for the created dialog. */\r\nlet uniqueId = 0;\r\n\r\n/**\r\n * Reference to a dialog opened via the Dialog service.\r\n */\r\nexport class DialogRef<T, R = any> {\r\n  /** The instance of the component in the dialog. */\r\n  componentInstance: T;\r\n\r\n  /** Whether the user is allowed to close the dialog. */\r\n  disableClose: boolean | undefined;\r\n\r\n  /** Result to be passed to afterClosed. */\r\n  private _result: R | undefined;\r\n\r\n  constructor(\r\n    public _overlayRef: OverlayRef,\r\n    protected _containerInstance: CdkDialogContainer,\r\n    readonly id: string = `dialog-${uniqueId++}`) {\r\n\r\n    // If the dialog has a backdrop, handle clicks from the backdrop.\r\n    if (_containerInstance._config.hasBackdrop) {\r\n      _overlayRef.backdropClick().subscribe(() => {\r\n        if (!this.disableClose) {\r\n          this.close();\r\n        }\r\n      });\r\n    }\r\n\r\n    this.beforeClosed().subscribe(() => {\r\n      this._overlayRef.detachBackdrop();\r\n    });\r\n\r\n    this.afterClosed().subscribe(() => {\r\n      this._overlayRef.detach();\r\n      this._overlayRef.dispose();\r\n      this.componentInstance = null!;\r\n    });\r\n\r\n    // Close when escape keydown event occurs\r\n    _overlayRef.keydownEvents()\r\n      .pipe(filter(event => event.keyCode === ESCAPE && !this.disableClose))\r\n      .subscribe(() => this.close());\r\n  }\r\n\r\n  /** Gets an observable that emits when the overlay's backdrop has been clicked. */\r\n  backdropClick(): Observable<MouseEvent> {\r\n    return this._overlayRef.backdropClick();\r\n  }\r\n\r\n  /**\r\n   * Close the dialog.\r\n   * @param dialogResult Optional result to return to the dialog opener.\r\n   */\r\n  close(dialogResult?: R): void {\r\n    this._result = dialogResult;\r\n    this._containerInstance._startExiting();\r\n  }\r\n\r\n  /**\r\n   * Updates the dialog's position.\r\n   * @param position New dialog position.\r\n   */\r\n  updatePosition(position?: DialogPosition): this {\r\n    let strategy = this._getPositionStrategy();\r\n\r\n    if (position && (position.left || position.right)) {\r\n      position.left ? strategy.left(position.left) : strategy.right(position.right);\r\n    } else {\r\n      strategy.centerHorizontally();\r\n    }\r\n\r\n    if (position && (position.top || position.bottom)) {\r\n      position.top ? strategy.top(position.top) : strategy.bottom(position.bottom);\r\n    } else {\r\n      strategy.centerVertically();\r\n    }\r\n\r\n    this._overlayRef.updatePosition();\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Gets an observable that emits when keydown events are targeted on the overlay.\r\n   */\r\n  keydownEvents(): Observable<KeyboardEvent> {\r\n    return this._overlayRef.keydownEvents();\r\n  }\r\n\r\n  /**\r\n   * Updates the dialog's width and height, defined, min and max.\r\n   * @param size New size for the overlay.\r\n   */\r\n  updateSize(size: OverlaySizeConfig): this {\r\n    if (size.width) {\r\n      this._getPositionStrategy().width(size.width.toString());\r\n    }\r\n    if (size.height) {\r\n      this._getPositionStrategy().height(size.height.toString());\r\n    }\r\n    this._overlayRef.updateSize(size);\r\n    this._overlayRef.updatePosition();\r\n    return this;\r\n  }\r\n\r\n  /** Fetches the position strategy object from the overlay ref. */\r\n  private _getPositionStrategy(): GlobalPositionStrategy {\r\n    return this._overlayRef.getConfig().positionStrategy as GlobalPositionStrategy;\r\n  }\r\n\r\n  /** Gets an observable that emits when dialog begins opening. */\r\n  beforeOpened(): Observable<void> {\r\n    return this._containerInstance._beforeEnter.asObservable();\r\n  }\r\n\r\n  /** Gets an observable that emits when dialog is finished opening. */\r\n  afterOpened(): Observable<void> {\r\n    return this._containerInstance._afterEnter.asObservable();\r\n  }\r\n\r\n  /** Gets an observable that emits when dialog begins closing. */\r\n  beforeClosed(): Observable<R | undefined> {\r\n    return this._containerInstance._beforeExit.pipe(map(() => this._result));\r\n  }\r\n\r\n  /** Gets an observable that emits when dialog is finished closing. */\r\n  afterClosed(): Observable<R | undefined> {\r\n    return this._containerInstance._afterExit.pipe(map(() => this._result));\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {animate, AnimationEvent, state, style, transition, trigger} from '@angular/animations';\r\nimport {FocusTrapFactory} from '@angular/cdk/a11y';\r\nimport {\r\n  BasePortalOutlet,\r\n  ComponentPortal,\r\n  PortalHostDirective,\r\n  TemplatePortal\r\n} from '@angular/cdk/portal';\r\nimport {DOCUMENT} from '@angular/common';\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ComponentRef,\r\n  ElementRef,\r\n  EmbeddedViewRef,\r\n  HostBinding,\r\n  Inject,\r\n  OnDestroy,\r\n  Optional,\r\n  ViewChild,\r\n  ViewEncapsulation,\r\n} from '@angular/core';\r\nimport {Subject} from 'rxjs';\r\nimport {DialogConfig} from './dialog-config';\r\n\r\n\r\nexport function throwDialogContentAlreadyAttachedError() {\r\n  throw Error('Attempting to attach dialog content after content is already attached');\r\n}\r\n\r\n\r\n/**\r\n * Internal component that wraps user-provided dialog content.\r\n * @docs-private\r\n */\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'cdk-dialog-container',\r\n  templateUrl: './dialog-container.html',\r\n  styleUrls: ['dialog-container.css'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  // Using OnPush for dialogs caused some G3 sync issues. Disabled until we can track them down.\r\n  // tslint:disable-next-line:validate-decorators\r\n  changeDetection: ChangeDetectionStrategy.Default,\r\n  animations: [\r\n    trigger('dialog', [\r\n      state('enter', style({ opacity: 1 })),\r\n      state('exit, void', style({ opacity: 0 })),\r\n      transition('* => *', animate(225)),\r\n    ])\r\n  ],\r\n  host: {\r\n    '[@dialog]': '_state',\r\n    '(@dialog.start)': '_onAnimationStart($event)',\r\n    '(@dialog.done)': '_onAnimationDone($event)',\r\n  },\r\n})\r\nexport class CdkDialogContainer extends BasePortalOutlet implements OnDestroy {\r\n  /** State of the dialog animation. */\r\n  _state: 'void' | 'enter' | 'exit' = 'enter';\r\n\r\n  /** Element that was focused before the dialog was opened. Save this to restore upon close. */\r\n  private _elementFocusedBeforeDialogWasOpened: HTMLElement | null = null;\r\n\r\n   /** The class that traps and manages focus within the dialog. */\r\n  private _focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement, false);\r\n\r\n  // @HostBinding is used in the class as it is expected to be extended.  Since @Component decorator\r\n  // metadata is not inherited by child classes, instead the host binding data is defined in a way\r\n  // that can be inherited.\r\n  // tslint:disable:no-host-decorator-in-concrete\r\n  @HostBinding('attr.aria-label') get _ariaLabel() { return this._config.ariaLabel || null; }\r\n\r\n  @HostBinding('attr.aria-describedby')\r\n  get _ariaDescribedBy() { return this._config.ariaDescribedBy; }\r\n\r\n  @HostBinding('attr.role') get _role() { return this._config.role; }\r\n\r\n  @HostBinding('attr.tabindex') get _tabindex() { return -1; }\r\n  // tslint:disable:no-host-decorator-in-concrete\r\n\r\n  /** The portal host inside of this container into which the dialog content will be loaded. */\r\n  @ViewChild(PortalHostDirective) _portalHost: PortalHostDirective;\r\n\r\n  /** A subject emitting before the dialog enters the view. */\r\n  _beforeEnter: Subject<void> = new Subject();\r\n\r\n  /** A subject emitting after the dialog enters the view. */\r\n  _afterEnter: Subject<void> = new Subject();\r\n\r\n  /** A subject emitting before the dialog exits the view. */\r\n  _beforeExit: Subject<void> = new Subject();\r\n\r\n  /** A subject emitting after the dialog exits the view. */\r\n  _afterExit: Subject<void> = new Subject();\r\n\r\n  constructor(\r\n    private _elementRef: ElementRef,\r\n    private _focusTrapFactory: FocusTrapFactory,\r\n    private _changeDetectorRef: ChangeDetectorRef,\r\n    @Optional() @Inject(DOCUMENT) private _document: any,\r\n    /** The dialog configuration. */\r\n    public _config: DialogConfig) {\r\n    super();\r\n  }\r\n\r\n  /** Destroy focus trap to place focus back to the element focused before the dialog opened. */\r\n  ngOnDestroy() {\r\n    this._focusTrap.destroy();\r\n  }\r\n\r\n  /**\r\n   * Attach a ComponentPortal as content to this dialog container.\r\n   * @param portal Portal to be attached as the dialog content.\r\n   */\r\n  attachComponentPortal<T>(portal: ComponentPortal<T>): ComponentRef<T> {\r\n    if (this._portalHost.hasAttached()) {\r\n      throwDialogContentAlreadyAttachedError();\r\n    }\r\n\r\n    this._savePreviouslyFocusedElement();\r\n    return this._portalHost.attachComponentPortal(portal);\r\n  }\r\n\r\n  /**\r\n   * Attach a TemplatePortal as content to this dialog container.\r\n   * @param portal Portal to be attached as the dialog content.\r\n   */\r\n  attachTemplatePortal<C>(portal: TemplatePortal<C>): EmbeddedViewRef<C> {\r\n    if (this._portalHost.hasAttached()) {\r\n      throwDialogContentAlreadyAttachedError();\r\n    }\r\n\r\n    this._savePreviouslyFocusedElement();\r\n    return this._portalHost.attachTemplatePortal(portal);\r\n  }\r\n\r\n  /** Emit lifecycle events based on animation `start` callback. */\r\n  _onAnimationStart(event: AnimationEvent) {\r\n    if (event.toState === 'enter') {\r\n      this._beforeEnter.next();\r\n    }\r\n    if (event.fromState === 'enter' && (event.toState === 'void' || event.toState === 'exit')) {\r\n      this._beforeExit.next();\r\n    }\r\n  }\r\n\r\n  /** Emit lifecycle events based on animation `done` callback. */\r\n  _onAnimationDone(event: AnimationEvent) {\r\n    if (event.toState === 'enter') {\r\n      this._autoFocusFirstTabbableElement();\r\n      this._afterEnter.next();\r\n    }\r\n\r\n    if (event.fromState === 'enter' && (event.toState === 'void' || event.toState === 'exit')) {\r\n      this._returnFocusAfterDialog();\r\n      this._afterExit.next();\r\n    }\r\n  }\r\n\r\n  /** Starts the dialog exit animation. */\r\n  _startExiting(): void {\r\n    this._state = 'exit';\r\n\r\n    // Mark the container for check so it can react if the\r\n    // view container is using OnPush change detection.\r\n    this._changeDetectorRef.markForCheck();\r\n  }\r\n\r\n  /** Saves a reference to the element that was focused before the dialog was opened. */\r\n  private _savePreviouslyFocusedElement() {\r\n    if (this._document) {\r\n      this._elementFocusedBeforeDialogWasOpened = this._document.activeElement as HTMLElement;\r\n\r\n      // Move focus onto the dialog immediately in order to prevent the user from accidentally\r\n      // opening multiple dialogs at the same time. Needs to be async, because the element\r\n      // may not be focusable immediately.\r\n      Promise.resolve().then(() => this._elementRef.nativeElement.focus());\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Autofocus the first tabbable element inside of the dialog, if there is not a tabbable element,\r\n   * focus the dialog instead.\r\n   */\r\n  private _autoFocusFirstTabbableElement() {\r\n    // If were to attempt to focus immediately, then the content of the dialog would not yet be\r\n    // ready in instances where change detection has to run first. To deal with this, we simply\r\n    // wait for the microtask queue to be empty.\r\n    if (this._config.autoFocus) {\r\n      this._focusTrap.focusInitialElementWhenReady().then(hasMovedFocus => {\r\n        // If we didn't find any focusable elements inside the dialog, focus the\r\n        // container so the user can't tab into other elements behind it.\r\n        if (!hasMovedFocus) {\r\n          this._elementRef.nativeElement.focus();\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  /** Returns the focus to the element focused before the dialog was open. */\r\n  private _returnFocusAfterDialog() {\r\n    const toFocus = this._elementFocusedBeforeDialogWasOpened;\r\n    // We need the extra check, because IE can set the `activeElement` to null in some cases.\r\n    if (toFocus && typeof toFocus.focus === 'function') {\r\n      toFocus.focus();\r\n    }\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nimport {ViewContainerRef} from '@angular/core';\r\nimport {Direction} from '@angular/cdk/bidi';\r\nimport {ComponentType} from '@angular/cdk/overlay';\r\nimport {CdkDialogContainer} from './dialog-container';\r\n\r\n/** Valid ARIA roles for a dialog element. */\r\nexport type DialogRole = 'dialog' | 'alertdialog';\r\n\r\n/** Possible overrides for a dialog's position. */\r\nexport interface DialogPosition {\r\n  top?: string;\r\n  bottom?: string;\r\n  left?: string;\r\n  right?: string;\r\n}\r\n\r\nexport class DialogConfig<D = any> {\r\n  /** Component to use as the container for the dialog. */\r\n  containerComponent?: ComponentType<CdkDialogContainer>;\r\n\r\n  /**\r\n   * Where the attached component should live in Angular's *logical* component tree.\r\n   * This affects what is available for injection and the change detection order for the\r\n   * component instantiated inside of the dialog. This does not affect where the dialog\r\n   * content will be rendered.\r\n   */\r\n  viewContainerRef?: ViewContainerRef;\r\n\r\n  /** The id of the dialog. */\r\n  id?: string;\r\n\r\n  /** The ARIA role of the dialog. */\r\n  role?: DialogRole = 'dialog';\r\n\r\n  /** Custom class(es) for the overlay panel. */\r\n  panelClass?: string | string[] = '';\r\n\r\n  /** Whether the dialog has a background. */\r\n  hasBackdrop?: boolean = true;\r\n\r\n  /** Custom class(es) for the backdrop. */\r\n  backdropClass?: string | undefined = '';\r\n\r\n  /** Whether the dialog can be closed by user interaction. */\r\n  disableClose?: boolean = false;\r\n\r\n  /** The width of the dialog. */\r\n  width?: string = '';\r\n\r\n  /** The height of the dialog. */\r\n  height?: string = '';\r\n\r\n  /** The minimum width of the dialog. */\r\n  minWidth?: string | number = '';\r\n\r\n  /** The minimum height of the dialog. */\r\n  minHeight?: string | number = '';\r\n\r\n  /** The maximum width of the dialog. */\r\n  maxWidth?: string | number = '80vw';\r\n\r\n  /** The maximum height of the dialog. */\r\n  maxHeight?: string | number = '';\r\n\r\n  /** The position of the dialog. */\r\n  position?: DialogPosition;\r\n\r\n  /** Data to be injected into the dialog content. */\r\n  data?: D | null = null;\r\n\r\n  /** The layout direction for the dialog content. */\r\n  direction?: Direction;\r\n\r\n  /** ID of the element that describes the dialog. */\r\n  ariaDescribedBy?: string | null = null;\r\n\r\n  /** Aria label to assign to the dialog element */\r\n  ariaLabel?: string | null = null;\r\n\r\n  /** Whether the dialog should focus the first focusable element on open. */\r\n  autoFocus?: boolean = true;\r\n}\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n"],"names":["A11yModule","PortalModule","OverlayModule","CommonModule","NgModule","Location","Optional","SkipSelf","Inject","Injector","Overlay","Injectable","tslib_1.__assign","PortalInjector","observableOf","Directionality","TemplatePortal","ComponentPortal","overlay","OverlayConfig","Subject","startWith","defer","InjectionToken","map","filter","ESCAPE","ViewChild","PortalHostDirective","HostBinding","DOCUMENT","ChangeDetectorRef","transition","animate","state","style","trigger","ViewEncapsulation","Component","portal","tslib_1.__extends"],"mappings":"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"}