{"version":3,"file":"material-tree.umd.min.js","sources":["../../node_modules/tslib/tslib.es6.js","../../src/lib/tree/outlet.ts","../../src/lib/tree/node.ts","../../src/lib/tree/padding.ts","../../src/lib/tree/tree.ts","../../src/lib/tree/toggle.ts","../../src/lib/tree/tree-module.ts","../../src/lib/tree/data-source/flat-data-source.ts","../../src/lib/tree/data-source/nested-data-source.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nimport {CdkTreeNodeOutlet} from '@angular/cdk/tree';\r\nimport {\r\n  Directive,\r\n  ViewContainerRef,\r\n} from '@angular/core';\r\n\r\n/**\r\n * Outlet for nested CdkNode. Put `[matTreeNodeOutlet]` on a tag to place children dataNodes\r\n * inside the outlet.\r\n */\r\n@Directive({\r\n  selector: '[matTreeNodeOutlet]'\r\n})\r\nexport class MatTreeNodeOutlet implements CdkTreeNodeOutlet {\r\n  constructor(public viewContainer: ViewContainerRef) {}\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {\r\n  CdkNestedTreeNode,\r\n  CdkTree,\r\n  CdkTreeNode,\r\n  CdkTreeNodeDef,\r\n} from '@angular/cdk/tree';\r\nimport {\r\n  AfterContentInit,\r\n  Attribute,\r\n  ContentChildren,\r\n  Directive,\r\n  ElementRef,\r\n  Input,\r\n  IterableDiffers,\r\n  OnDestroy,\r\n  QueryList,\r\n  TemplateRef,\r\n} from '@angular/core';\r\nimport {CanDisable, HasTabIndex, mixinDisabled, mixinTabIndex} from '@angular/material/core';\r\nimport {MatTreeNodeOutlet} from './outlet';\r\n\r\n\r\nexport const _MatTreeNodeMixinBase = mixinTabIndex(mixinDisabled(CdkTreeNode));\r\nexport const _MatNestedTreeNodeMixinBase = mixinTabIndex(mixinDisabled(CdkNestedTreeNode));\r\n\r\n/**\r\n * Wrapper for the CdkTree node with Material design styles.\r\n */\r\n@Directive({\r\n  selector: 'mat-tree-node',\r\n  exportAs: 'matTreeNode',\r\n  inputs: ['disabled', 'tabIndex'],\r\n  host: {\r\n    '[attr.aria-expanded]': 'isExpanded',\r\n    '[attr.aria-level]': 'role === \"treeitem\" ? level : null',\r\n    '[attr.role]': 'role',\r\n    'class': 'mat-tree-node'\r\n  },\r\n  providers: [{provide: CdkTreeNode, useExisting: MatTreeNode}]\r\n})\r\nexport class MatTreeNode<T> extends _MatTreeNodeMixinBase<T>\r\n    implements CanDisable, HasTabIndex {\r\n  @Input() role: 'treeitem' | 'group' = 'treeitem';\r\n\r\n  constructor(protected _elementRef: ElementRef,\r\n              protected _tree: CdkTree<T>,\r\n              @Attribute('tabindex') tabIndex: string) {\r\n    super(_elementRef, _tree);\r\n\r\n    this.tabIndex = Number(tabIndex) || 0;\r\n  }\r\n}\r\n\r\n/**\r\n * Wrapper for the CdkTree node definition with Material design styles.\r\n */\r\n@Directive({\r\n  selector: '[matTreeNodeDef]',\r\n  inputs: [\r\n    'when: matTreeNodeDefWhen'\r\n  ],\r\n  providers: [{provide: CdkTreeNodeDef, useExisting: MatTreeNodeDef}]\r\n})\r\nexport class MatTreeNodeDef<T> extends CdkTreeNodeDef<T> {\r\n  @Input('matTreeNode') data: T;\r\n\r\n  // TODO(andrewseguin): Remove this explicitly set constructor when the compiler knows how to\r\n  // properly build the es6 version of the class. Currently sets ctorParameters to empty due to a\r\n  // fixed bug.\r\n  // https://github.com/angular/tsickle/pull/760 - tsickle PR that fixed this\r\n  // https://github.com/angular/angular/pull/23531 - updates compiler-cli to fixed version\r\n  constructor(template: TemplateRef<any>) {\r\n    super(template);\r\n  }\r\n}\r\n\r\n/**\r\n * Wrapper for the CdkTree nested node with Material design styles.\r\n */\r\n@Directive({\r\n  selector: 'mat-nested-tree-node',\r\n  exportAs: 'matNestedTreeNode',\r\n  host: {\r\n    '[attr.aria-expanded]': 'isExpanded',\r\n    '[attr.role]': 'role',\r\n    'class': 'mat-nested-tree-node',\r\n  },\r\n  inputs: ['disabled', 'tabIndex'],\r\n  providers: [\r\n    {provide: CdkNestedTreeNode, useExisting: MatNestedTreeNode},\r\n    {provide: CdkTreeNode, useExisting: MatNestedTreeNode}\r\n  ]\r\n})\r\nexport class MatNestedTreeNode<T> extends _MatNestedTreeNodeMixinBase<T>\r\n    implements AfterContentInit, CanDisable, HasTabIndex, OnDestroy {\r\n\r\n  @Input('matNestedTreeNode') node: T;\r\n\r\n  @ContentChildren(MatTreeNodeOutlet) nodeOutlet: QueryList<MatTreeNodeOutlet>;\r\n\r\n  constructor(protected _elementRef: ElementRef,\r\n              protected _tree: CdkTree<T>,\r\n              protected _differs: IterableDiffers,\r\n              @Attribute('tabindex') tabIndex: string) {\r\n    super(_elementRef, _tree, _differs);\r\n\r\n    this.tabIndex = Number(tabIndex) || 0;\r\n  }\r\n\r\n  // This is a workaround for https://github.com/angular/angular/issues/23091\r\n  // In aot mode, the lifecycle hooks from parent class are not called.\r\n  // TODO(tinayuangao): Remove when the angular issue #23091 is fixed\r\n  ngAfterContentInit() {\r\n    super.ngAfterContentInit();\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    super.ngOnDestroy();\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\nimport {CdkTreeNodePadding, CdkTreeNode, CdkTree} from '@angular/cdk/tree';\r\nimport {Directionality} from '@angular/cdk/bidi';\r\nimport {Directive, Input, Optional, Renderer2, ElementRef} from '@angular/core';\r\n\r\n\r\n/**\r\n * Wrapper for the CdkTree padding with Material design styles.\r\n */\r\n@Directive({\r\n  selector: '[matTreeNodePadding]',\r\n  providers: [{provide: CdkTreeNodePadding, useExisting: MatTreeNodePadding}]\r\n})\r\nexport class MatTreeNodePadding<T> extends CdkTreeNodePadding<T> {\r\n\r\n  /** The level of depth of the tree node. The padding will be `level * indent` pixels. */\r\n  @Input('matTreeNodePadding') level: number;\r\n\r\n  /** The indent for each level. Default number 40px from material design menu sub-menu spec. */\r\n  @Input('matTreeNodePaddingIndent') indent: number;\r\n\r\n  // TODO(andrewseguin): Remove this explicitly set constructor when the compiler knows how to\r\n  // properly build the es6 version of the class. Currently sets ctorParameters to empty due to a\r\n  // fixed bug.\r\n  // https://github.com/angular/tsickle/pull/760 - tsickle PR that fixed this\r\n  // https://github.com/angular/angular/pull/23531 - updates compiler-cli to fixed version\r\n  constructor(_treeNode: CdkTreeNode<T>,\r\n              _tree: CdkTree<T>,\r\n              _renderer: Renderer2,\r\n              _element: ElementRef,\r\n              @Optional() _dir: Directionality) {\r\n      super(_treeNode, _tree, _renderer, _element, _dir);\r\n    }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {\r\n  ChangeDetectionStrategy,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ViewChild,\r\n  ViewEncapsulation,\r\n  IterableDiffers,\r\n} from '@angular/core';\r\nimport {CdkTree} from '@angular/cdk/tree';\r\nimport {MatTreeNodeOutlet} from './outlet';\r\n\r\n/**\r\n * Wrapper for the CdkTable with Material design styles.\r\n */\r\n@Component({\r\n  moduleId: module.id,\r\n  selector: 'mat-tree',\r\n  exportAs: 'matTree',\r\n  template: `<ng-container matTreeNodeOutlet></ng-container>`,\r\n  host: {\r\n    'class': 'mat-tree',\r\n    'role': 'tree',\r\n  },\r\n  styleUrls: ['tree.css'],\r\n  encapsulation: ViewEncapsulation.None,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  providers: [{provide: CdkTree, useExisting: MatTree}]\r\n})\r\nexport class MatTree<T> extends CdkTree<T> {\r\n  // Outlets within the tree's template where the dataNodes will be inserted.\r\n  @ViewChild(MatTreeNodeOutlet) _nodeOutlet: MatTreeNodeOutlet;\r\n\r\n  // TODO(andrewseguin): Remove this explicitly set constructor when the compiler knows how to\r\n  // properly build the es6 version of the class. Currently sets ctorParameters to empty due to a\r\n  // fixed bug.\r\n  // https://github.com/angular/tsickle/pull/760 - tsickle PR that fixed this\r\n  // https://github.com/angular/angular/pull/23531 - updates compiler-cli to fixed version\r\n  constructor(_differs: IterableDiffers, _changeDetectorRef: ChangeDetectorRef) {\r\n    super(_differs, _changeDetectorRef);\r\n  }\r\n}\r\n\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {Directive, Input} from '@angular/core';\r\nimport {CdkTreeNodeToggle, CdkTree, CdkTreeNode} from '@angular/cdk/tree';\r\n\r\n/**\r\n * Wrapper for the CdkTree's toggle with Material design styles.\r\n */\r\n@Directive({\r\n  selector: '[matTreeNodeToggle]',\r\n  host: {\r\n    '(click)': '_toggle($event)',\r\n  },\r\n  providers: [{provide: CdkTreeNodeToggle, useExisting: MatTreeNodeToggle}]\r\n})\r\nexport class MatTreeNodeToggle<T> extends CdkTreeNodeToggle<T> {\r\n  @Input('matTreeNodeToggleRecursive') recursive: boolean = false;\r\n\r\n  // TODO(andrewseguin): Remove this explicitly set constructor when the compiler knows how to\r\n  // properly build the es6 version of the class. Currently sets ctorParameters to empty due to a\r\n  // fixed bug.\r\n  // https://github.com/angular/tsickle/pull/760 - tsickle PR that fixed this\r\n  // https://github.com/angular/angular/pull/23531 - updates compiler-cli to fixed version\r\n  constructor(_tree: CdkTree<T>, _treeNode: CdkTreeNode<T>) {\r\n    super(_tree, _treeNode);\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {NgModule} from '@angular/core';\r\n\r\nimport {CdkTreeModule} from '@angular/cdk/tree';\r\nimport {CommonModule} from '@angular/common';\r\nimport {MatCommonModule} from '@angular/material/core';\r\nimport {MatNestedTreeNode, MatTreeNodeDef, MatTreeNode} from './node';\r\nimport {MatTree} from './tree';\r\nimport {MatTreeNodeToggle} from './toggle';\r\nimport {MatTreeNodeOutlet} from './outlet';\r\nimport {MatTreeNodePadding} from './padding';\r\n\r\nconst MAT_TREE_DIRECTIVES = [\r\n  MatNestedTreeNode,\r\n  MatTreeNodeDef,\r\n  MatTreeNodePadding,\r\n  MatTreeNodeToggle,\r\n  MatTree,\r\n  MatTreeNode,\r\n  MatTreeNodeOutlet\r\n];\r\n\r\n@NgModule({\r\n  imports: [CdkTreeModule, CommonModule, MatCommonModule],\r\n  exports: MAT_TREE_DIRECTIVES,\r\n  declarations: MAT_TREE_DIRECTIVES,\r\n})\r\nexport class MatTreeModule {}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {CollectionViewer, DataSource} from '@angular/cdk/collections';\r\nimport {FlatTreeControl, TreeControl} from '@angular/cdk/tree';\r\nimport {BehaviorSubject, merge, Observable} from 'rxjs';\r\nimport {map, take} from 'rxjs/operators';\r\n\r\n/**\r\n * Tree flattener to convert a normal type of node to node with children & level information.\r\n * Transform nested nodes of type `T` to flattened nodes of type `F`.\r\n *\r\n * For example, the input data of type `T` is nested, and contains its children data:\r\n *   SomeNode: {\r\n *     key: 'Fruits',\r\n *     children: [\r\n *       NodeOne: {\r\n *         key: 'Apple',\r\n *       },\r\n *       NodeTwo: {\r\n *        key: 'Pear',\r\n *      }\r\n *    ]\r\n *  }\r\n *  After flattener flatten the tree, the structure will become\r\n *  SomeNode: {\r\n *    key: 'Fruits',\r\n *    expandable: true,\r\n *    level: 1\r\n *  },\r\n *  NodeOne: {\r\n *    key: 'Apple',\r\n *    expandable: false,\r\n *    level: 2\r\n *  },\r\n *  NodeTwo: {\r\n *   key: 'Pear',\r\n *   expandable: false,\r\n *   level: 2\r\n * }\r\n * and the output flattened type is `F` with additional information.\r\n */\r\nexport class MatTreeFlattener<T, F> {\r\n\r\n  constructor(public transformFunction: (node: T, level: number) => F,\r\n              public getLevel: (node: F) => number,\r\n              public isExpandable: (node: F) => boolean,\r\n              public getChildren: (node: T) => Observable<T[]> | T[]) {}\r\n\r\n  _flattenNode(node: T, level: number,\r\n               resultNodes: F[], parentMap: boolean[]): F[] {\r\n    const flatNode = this.transformFunction(node, level);\r\n    resultNodes.push(flatNode);\r\n\r\n    if (this.isExpandable(flatNode)) {\r\n      const childrenNodes = this.getChildren(node);\r\n      if (Array.isArray(childrenNodes)) {\r\n        this._flattenChildren(childrenNodes, level, resultNodes, parentMap);\r\n      } else {\r\n        childrenNodes.pipe(take(1)).subscribe(children => {\r\n          this._flattenChildren(children, level, resultNodes, parentMap);\r\n        });\r\n      }\r\n    }\r\n    return resultNodes;\r\n  }\r\n\r\n  _flattenChildren(children: T[], level: number,\r\n                   resultNodes: F[], parentMap: boolean[]): void {\r\n    children.forEach((child, index) => {\r\n      let childParentMap: boolean[] = parentMap.slice();\r\n      childParentMap.push(index != children.length - 1);\r\n      this._flattenNode(child, level + 1, resultNodes, childParentMap);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Flatten a list of node type T to flattened version of node F.\r\n   * Please note that type T may be nested, and the length of `structuredData` may be different\r\n   * from that of returned list `F[]`.\r\n   */\r\n  flattenNodes(structuredData: T[]): F[] {\r\n    let resultNodes: F[] = [];\r\n    structuredData.forEach(node => this._flattenNode(node, 0, resultNodes, []));\r\n    return resultNodes;\r\n  }\r\n\r\n  /**\r\n   * Expand flattened node with current expansion status.\r\n   * The returned list may have different length.\r\n   */\r\n  expandFlattenedNodes(nodes: F[], treeControl: TreeControl<F>): F[] {\r\n    let results: F[] = [];\r\n    let currentExpand: boolean[] = [];\r\n    currentExpand[0] = true;\r\n\r\n    nodes.forEach(node => {\r\n      let expand = true;\r\n      for (let i = 0; i <= this.getLevel(node); i++) {\r\n        expand = expand && currentExpand[i];\r\n      }\r\n      if (expand) {\r\n        results.push(node);\r\n      }\r\n      if (this.isExpandable(node)) {\r\n        currentExpand[this.getLevel(node) + 1] = treeControl.isExpanded(node);\r\n      }\r\n    });\r\n    return results;\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Data source for flat tree.\r\n * The data source need to handle expansion/collapsion of the tree node and change the data feed\r\n * to `MatTree`.\r\n * The nested tree nodes of type `T` are flattened through `MatTreeFlattener`, and converted\r\n * to type `F` for `MatTree` to consume.\r\n */\r\nexport class MatTreeFlatDataSource<T, F> extends DataSource<F> {\r\n  _flattenedData = new BehaviorSubject<F[]>([]);\r\n\r\n  _expandedData = new BehaviorSubject<F[]>([]);\r\n\r\n  _data: BehaviorSubject<T[]>;\r\n  get data() { return this._data.value; }\r\n  set data(value: T[]) {\r\n    this._data.next(value);\r\n    this._flattenedData.next(this.treeFlattener.flattenNodes(this.data));\r\n    this.treeControl.dataNodes = this._flattenedData.value;\r\n  }\r\n\r\n  constructor(private treeControl: FlatTreeControl<F>,\r\n              private treeFlattener: MatTreeFlattener<T, F>,\r\n              initialData: T[] = []) {\r\n    super();\r\n    this._data = new BehaviorSubject<T[]>(initialData);\r\n  }\r\n\r\n  connect(collectionViewer: CollectionViewer): Observable<F[]> {\r\n    const changes = [\r\n      collectionViewer.viewChange,\r\n      this.treeControl.expansionModel.onChange!,\r\n      this._flattenedData\r\n    ];\r\n    return merge(...changes).pipe(map(() => {\r\n      this._expandedData.next(\r\n        this.treeFlattener.expandFlattenedNodes(this._flattenedData.value, this.treeControl));\r\n      return this._expandedData.value;\r\n    }));\r\n  }\r\n\r\n  disconnect() {\r\n    // no op\r\n  }\r\n}\r\n","/**\r\n * @license\r\n * Copyright Google LLC All Rights Reserved.\r\n *\r\n * Use of this source code is governed by an MIT-style license that can be\r\n * found in the LICENSE file at https://angular.io/license\r\n */\r\n\r\nimport {CollectionViewer, DataSource} from '@angular/cdk/collections';\r\nimport {BehaviorSubject, merge, Observable} from 'rxjs';\r\nimport {map} from 'rxjs/operators';\r\n\r\n\r\n/**\r\n * Data source for nested tree.\r\n *\r\n * The data source for nested tree doesn't have to consider node flattener, or the way to expand\r\n * or collapse. The expansion/collapsion will be handled by TreeControl and each non-leaf node.\r\n */\r\nexport class MatTreeNestedDataSource<T> extends DataSource<T> {\r\n  _data = new BehaviorSubject<T[]>([]);\r\n\r\n  /**\r\n   * Data for the nested tree\r\n   */\r\n  get data() { return this._data.value; }\r\n  set data(value: T[]) { this._data.next(value); }\r\n\r\n  connect(collectionViewer: CollectionViewer): Observable<T[]> {\r\n    return merge(...[collectionViewer.viewChange, this._data])\r\n      .pipe(map(() => {\r\n        return this.data;\r\n      }));\r\n  }\r\n\r\n  disconnect() {\r\n    // no op\r\n  }\r\n}\r\n\r\n"],"names":["__extends","d","b","__","this","constructor","extendStatics","prototype","Object","create","setPrototypeOf","__proto__","Array","p","hasOwnProperty","MatTreeNodeOutlet","viewContainer","type","Directive","args","selector","ViewContainerRef","_MatTreeNodeMixinBase","mixinTabIndex","mixinDisabled","CdkTreeNode","_MatNestedTreeNodeMixinBase","CdkNestedTreeNode","MatTreeNode","_elementRef","_tree","tabIndex","_this","_super","call","role","Number","tslib_1.__extends","exportAs","inputs","host","[attr.aria-expanded]","[attr.aria-level]","[attr.role]","class","providers","provide","useExisting","ElementRef","CdkTree","undefined","decorators","Attribute","Input","MatTreeNodeDef","template","CdkTreeNodeDef","TemplateRef","data","MatNestedTreeNode","_differs","ngAfterContentInit","ngOnDestroy","IterableDiffers","node","nodeOutlet","ContentChildren","MatTreeNodePadding","_treeNode","_renderer","_element","_dir","CdkTreeNodePadding","Renderer2","Directionality","Optional","level","indent","MatTree","_changeDetectorRef","Component","styles","encapsulation","ViewEncapsulation","None","changeDetection","ChangeDetectionStrategy","OnPush","propDecorators","MatTreeNodeToggle","recursive","(click)","CdkTreeNodeToggle","MAT_TREE_DIRECTIVES","NgModule","imports","CdkTreeModule","CommonModule","MatCommonModule","exports","declarations","MatTreeModule","MatTreeFlattener","transformFunction","getLevel","isExpandable","getChildren","_flattenNode","resultNodes","parentMap","flatNode","push","childrenNodes","isArray","_flattenChildren","pipe","take","subscribe","children","forEach","child","index","childParentMap","slice","length","flattenNodes","structuredData","expandFlattenedNodes","nodes","treeControl","results","currentExpand","expand","i","isExpanded","MatTreeFlatDataSource","treeFlattener","initialData","_flattenedData","BehaviorSubject","_expandedData","_data","defineProperty","value","next","dataNodes","connect","collectionViewer","changes","viewChange","expansionModel","merge","apply","map","disconnect","DataSource","MatTreeNestedDataSource"],"mappings":"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"}